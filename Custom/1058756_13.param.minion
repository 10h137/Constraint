MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 189
# CSE_active_eliminated_expressions = 1061
# CSE_active_total_size = 567
**VARIABLES**
DISCRETE M_00002_00001 #
{30..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00002_00002 #
{30..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [30,32,34,35])
**VARIABLES**
DISCRETE M_00002_00003 #
{35..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [35,37,49,49])
**VARIABLES**
DISCRETE M_00002_00004 #
{23..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00002_00005 #
{0..23}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [0,0,10,10,12,12,23,23])
**VARIABLES**
DISCRETE M_00002_00006 #
{0..31}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [0,0,10,10,12,12,23,23,28,28,30,31])
**VARIABLES**
DISCRETE M_00002_00007 #
{28..34}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [28,28,30,32,34,34])
**VARIABLES**
DISCRETE M_00002_00008 #
{28..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00002_00009 #
{32..34}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [32,32,34,34])
**VARIABLES**
DISCRETE M_00002_00010 #
{34..37}
DISCRETE M_00002_00011 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00003_00001 #
{23..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00003_00002 #
{30..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00003_00003 #
{23..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00003_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00003_00005 #
{0..31}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [0,0,10,10,12,12,23,23,28,28,30,31])
**VARIABLES**
DISCRETE M_00003_00006 #
{0..34}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,34])
**VARIABLES**
DISCRETE M_00003_00007 #
{28..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00003_00008 #
{28..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00003_00009 #
{32..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [32,32,34,37])
**VARIABLES**
DISCRETE M_00003_00010 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00003_00011 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00001 #
{10..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00004_00002 #
{10..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00004_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00004_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00007 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00008 #
{28..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00009 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00004_00010 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00005_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00005_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00005_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00005_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00005_00007 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00005_00008 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00005_00009 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00006_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00006_00007 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00006_00008 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00007_00007 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00008_00006 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00009_00005 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [0,0,10,10,12,12,23,23,28,28,30,32,34,37])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00010_00004 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00011_00003 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00012_00002 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
DISCRETE M_00013_00001 #
{0..49}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [0,0,10,10,12,12,23,23,28,28,30,32,34,37,49,49])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{2..3}
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..2}
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..2}
BOOL aux22 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux28 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux29 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{1..3}
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..2}
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux34 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux37 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux40 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux41 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
BOOL aux46 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux47 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux48 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux50 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001/13)
{2..3}
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00005/13)
BOOL aux54 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux57 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux58 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux59 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux60 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux62 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux63 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux64 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux65 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux66 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux67 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux68 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux70 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..2}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..3}
BOOL aux76 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux77 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
BOOL aux80 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux81 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..2}
BOOL aux84 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..2}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux89 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux92 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux93 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux94 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux98 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux99 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux100 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux101 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux104 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux105 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux109 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux112 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
BOOL aux116 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..2}
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..2}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{2..3}
DISCRETE aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{1..3}
BOOL aux123 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux124 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux125 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux128 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux131 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..2}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux139 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux140 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux142 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..2}
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux145 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux146 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux147 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux150 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux151 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux154 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux155 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux156 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux157 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux158 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux159 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
DISCRETE aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux162 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux163 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..2}
DISCRETE aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux165 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux166 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux167 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux170 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux171 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux174 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux175 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux176 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux177 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux178 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux179 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux180 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux181 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux182 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux183 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux185 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux186 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
BOOL aux187 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux188 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..2}
DISCRETE aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux192 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
DISCRETE aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..2}
BOOL aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux196 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux197 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux198 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux199 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux200 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux201 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux202 #
{0..3}
DISCRETE aux203 #( - M_00002_00004 + M_00002_00007)
{-21..5}
**CONSTRAINTS**
w-inintervalset(aux203, [-21,-21,-19,-17,-15,-15,-9,5])
**VARIABLES**
DISCRETE aux204 #( - M_00002_00008 + M_00002_00011)
{-27..9}
**CONSTRAINTS**
w-inintervalset(aux204, [-27,-18,-16,-16,-14,-11,-9,9])
**VARIABLES**
DISCRETE aux205 #( - M_00002_00010 + M_00002_00011)
{-27..3}
**CONSTRAINTS**
w-inintervalset(aux205, [-27,-22,-14,-11,-9,3])
**VARIABLES**
DISCRETE aux206 #( - M_00002_00001 + M_00002_00004)
{-26..13}
**CONSTRAINTS**
w-inintervalset(aux206, [-26,-26,-21,-21,-19,-17,-15,-11,-9,7,12,13])
**VARIABLES**
DISCRETE aux207 #( - M_00002_00003 + M_00002_00004)
{-26..14}
**CONSTRAINTS**
w-inintervalset(aux207, [-26,-26,-21,-21,-19,-17,-15,-12,-9,2,12,14])
**VARIABLES**
DISCRETE aux208 #( - M_00002_00004 + M_00002_00005)
{-26..-23}
DISCRETE aux209 #( - M_00002_00006 + M_00002_00007)
{-3..34}
**CONSTRAINTS**
w-inintervalset(aux209, [-3,9,11,11,16,16,18,22,24,24,28,28,30,32,34,34])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00006 + M_00002_00009)
{3..34}
**CONSTRAINTS**
w-inintervalset(aux210, [3,4,6,6,9,9,11,11,20,20,22,22,24,24,32,32,34,34])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00005 + M_00002_00006)
{-23..31}
**CONSTRAINTS**
w-inintervalset(aux211, [-23,-23,-13,-10,-2,-2,0,0,2,2,5,5,7,8,10,13,16,16,18,21,23,23,28,28,30,31])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00011 + 12)
{-25..2}
**CONSTRAINTS**
w-inintervalset(aux212, [-25,-22,-20,-18,-16,-16,-11,-11,0,0,2,2])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00003 + M_00002_00006)
{-35..-4}
**CONSTRAINTS**
w-inintervalset(aux213, [-35,-35,-27,-23,-21,-21,-19,-18,-14,-12,-9,-4])
**VARIABLES**
DISCRETE aux214 #( - M_00002_00002 + M_00002_00003)
{5..14}
**CONSTRAINTS**
w-inintervalset(aux214, [5,7,14,14])
**VARIABLES**
DISCRETE aux215 #( - M_00002_00005 + M_00002_00008)
{5..32}
**CONSTRAINTS**
w-inintervalset(aux215, [5,5,7,9,11,14,16,16,18,28,30,32])
**VARIABLES**
DISCRETE aux216 #( - M_00002_00001 + M_00002_00002)
{-19..5}
**CONSTRAINTS**
w-inintervalset(aux216, [-19,-17,-15,-14,-7,5])
**VARIABLES**
DISCRETE aux217 #( - M_00003_00001 + M_00003_00004)
{-49..19}
**CONSTRAINTS**
w-inintervalset(aux217, [-49,-49,-39,-39,-37,-34,-32,-30,-28,-11,-9,9,11,15,17,19])
**VARIABLES**
DISCRETE aux218 #( - M_00003_00003 + M_00003_00004)
{-49..14}
**CONSTRAINTS**
w-inintervalset(aux218, [-49,-49,-39,-39,-37,-34,-32,-30,-28,-11,-9,9,11,14])
**VARIABLES**
DISCRETE aux219 #( - M_00003_00004 + M_00003_00005)
{-49..31}
**CONSTRAINTS**
w-inintervalset(aux219, [-49,-49,-39,-39,-37,-34,-32,-30,-28,-18,-16,-16,-14,3,5,5,7,8,10,13,16,16,18,21,23,23,28,28,30,31])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00006 + M_00003_00007)
{-6..37}
**CONSTRAINTS**
w-inintervalset(aux220, [-6,-6,-4,9,11,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux221 #( - M_00003_00006 + M_00003_00009)
{0..37}
**CONSTRAINTS**
w-inintervalset(aux221, [0,9,11,14,20,20,22,27,32,32,34,37])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00002 + M_00003_00005)
{-49..1}
**CONSTRAINTS**
w-inintervalset(aux222, [-49,-49,-39,-39,-37,-34,-32,-30,-27,-18,-14,-11,-9,1])
**VARIABLES**
DISCRETE aux223 #( - M_00003_00005 + M_00003_00006)
{-23..34}
**CONSTRAINTS**
w-inintervalset(aux223, [-23,-23,-21,-18,-16,-16,-13,-10,-8,-7,-5,-5,-3,13,16,16,18,24,28,28,30,32,34,34])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00003 + M_00003_00006)
{-49..11}
**CONSTRAINTS**
w-inintervalset(aux224, [-49,-49,-39,-39,-37,-34,-32,-30,-28,-11,-9,9,11,11])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00002 + M_00003_00003)
{-26..19}
**CONSTRAINTS**
w-inintervalset(aux225, [-26,-26,-21,-21,-19,-17,-15,-11,-9,7,12,15,17,19])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00001 + M_00003_00002)
{-19..19}
**CONSTRAINTS**
w-inintervalset(aux226, [-19,-17,-15,-12,-7,9,11,15,17,19])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00004 + M_00003_00007)
{-21..37}
**CONSTRAINTS**
w-inintervalset(aux227, [-21,-21,-19,-17,-15,-12,-9,9,11,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00005 + M_00003_00008)
{1..37}
**CONSTRAINTS**
w-inintervalset(aux228, [1,9,11,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00011 + -1)
{-38..-11}
**CONSTRAINTS**
w-inintervalset(aux229, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00009 + M_00003_00010)
{-27..5}
**CONSTRAINTS**
w-inintervalset(aux230, [-27,-22,-20,-20,-14,-11,-9,5])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00008 + M_00003_00011)
{-27..9}
**CONSTRAINTS**
w-inintervalset(aux231, [-27,-18,-16,-16,-14,-11,-9,9])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00010 + M_00003_00011)
{-27..3}
**CONSTRAINTS**
w-inintervalset(aux232, [-27,-18,-16,-16,-14,-11,-9,3])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00007 + M_00003_00010)
{-27..9}
**CONSTRAINTS**
w-inintervalset(aux233, [-27,-18,-16,-16,-14,-11,-9,9])
**VARIABLES**
DISCRETE aux234 #( - M_00004_00010 + -1)
{-38..-11}
**CONSTRAINTS**
w-inintervalset(aux234, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux235 #( - M_00004_00008 + M_00004_00009)
{-27..9}
**CONSTRAINTS**
w-inintervalset(aux235, [-27,-18,-16,-16,-14,-11,-9,9])
**VARIABLES**
DISCRETE aux236 #( - M_00004_00009 + M_00004_00010)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux236, [-27,-18,-16,-16,-14,-11,-9,9,11,14,16,16,18,27])
**VARIABLES**
DISCRETE aux237 #( - M_00004_00007 + M_00004_00008)
{-9..24}
**CONSTRAINTS**
w-inintervalset(aux237, [-9,9,11,14,16,16,18,24])
**VARIABLES**
DISCRETE aux238 #( - M_00004_00007 + M_00004_00010)
{-27..9}
**CONSTRAINTS**
w-inintervalset(aux238, [-27,-18,-16,-16,-14,-11,-9,9])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00006 + M_00004_00007)
{-24..37}
**CONSTRAINTS**
w-inintervalset(aux239, [-24,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00006 + M_00004_00009)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux240, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00002 + M_00004_00003)
{-49..39}
**CONSTRAINTS**
w-inintervalset(aux241, [-49,-49,-39,-39,-37,-34,-32,-30,-28,9,11,27,37,37,39,39])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00003 + M_00004_00004)
{-49..39}
**CONSTRAINTS**
w-inintervalset(aux242, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00005 + M_00004_00006)
{-36..37}
**CONSTRAINTS**
w-inintervalset(aux243, [-36,-34,-32,-30,-28,-18,-16,-16,-14,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00005 + M_00004_00008)
{-5..37}
**CONSTRAINTS**
w-inintervalset(aux244, [-5,9,11,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00001 + M_00004_00004)
{-49..26}
**CONSTRAINTS**
w-inintervalset(aux245, [-49,-49,-39,-39,-37,-34,-32,-30,-28,9,11,26])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00004 + M_00004_00005)
{-49..34}
**CONSTRAINTS**
w-inintervalset(aux246, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,34])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00002 + M_00004_00005)
{-49..24}
**CONSTRAINTS**
w-inintervalset(aux247, [-49,-49,-39,-39,-37,-34,-32,-30,-28,9,11,14,16,16,18,24])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00001 + M_00004_00002)
{-26..27}
**CONSTRAINTS**
w-inintervalset(aux248, [-26,-11,-9,9,11,27])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00003 + M_00004_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux249, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00004 + M_00004_00007)
{-39..37}
**CONSTRAINTS**
w-inintervalset(aux250, [-39,-39,-37,-37,-27,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux251 #( - M_00005_00003 + M_00005_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux251, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux252 #( - M_00005_00001 + M_00005_00004)
{-49..39}
**CONSTRAINTS**
w-inintervalset(aux252, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39])
**VARIABLES**
DISCRETE aux253 #( - M_00005_00002 + M_00005_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux253, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux254 #( - M_00005_00003 + M_00005_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux254, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux255 #(-1 - M_00005_00009)
{-38..-11}
**CONSTRAINTS**
w-inintervalset(aux255, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00006 + M_00005_00007)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux256, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00007 + M_00005_00008)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux257, [-27,-18,-16,-16,-14,-11,-9,9,11,14,16,16,18,27])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00006 + M_00005_00009)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux258, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux259 #( - M_00005_00008 + M_00005_00009)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux259, [-27,-18,-16,-16,-14,-11,-9,9,11,14,16,16,18,27])
**VARIABLES**
DISCRETE aux260 #( - M_00005_00005 + M_00005_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux260, [-37,-34,-32,-30,-28,-18,-16,-16,-14,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00005 + M_00005_00008)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux261, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00001 + M_00005_00002)
{-49..39}
**CONSTRAINTS**
w-inintervalset(aux262, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00002 + M_00005_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux263, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00004 + M_00005_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux264, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00004 + M_00005_00007)
{-39..37}
**CONSTRAINTS**
w-inintervalset(aux265, [-39,-39,-37,-37,-27,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux266 #( - M_00006_00002 + M_00006_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux266, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux267 #( - M_00006_00001 + M_00006_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux267, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux268 #( - M_00006_00001 + M_00006_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux268, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux269 #( - M_00006_00002 + M_00006_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux269, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux270 #(-1 - M_00006_00008)
{-38..-11}
**CONSTRAINTS**
w-inintervalset(aux270, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00005 + M_00006_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux271, [-37,-34,-32,-30,-28,-18,-16,-16,-14,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux272 #( - M_00006_00006 + M_00006_00007)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux272, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00005 + M_00006_00008)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux273, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00007 + M_00006_00008)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux274, [-27,-18,-16,-16,-14,-11,-9,9,11,14,16,16,18,27])
**VARIABLES**
DISCRETE aux275 #( - M_00006_00004 + M_00006_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux275, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00004 + M_00006_00007)
{-39..37}
**CONSTRAINTS**
w-inintervalset(aux276, [-39,-39,-37,-37,-27,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux277 #( - M_00006_00003 + M_00006_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux277, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00003 + M_00006_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux278, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux279 #( - M_00007_00004 + M_00007_00007)
{-39..37}
**CONSTRAINTS**
w-inintervalset(aux279, [-39,-39,-37,-37,-27,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux280 #( - M_00007_00002 + M_00007_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux280, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux281 #( - M_00007_00004 + M_00007_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux281, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux282 #( - M_00007_00006 + M_00007_00007)
{-27..37}
**CONSTRAINTS**
w-inintervalset(aux282, [-27,-18,-16,-16,-14,-11,-9,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux283 #( - M_00007_00007 + -1)
{-38..-11}
**CONSTRAINTS**
w-inintervalset(aux283, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00003 + M_00007_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux284, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00001 + M_00007_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux285, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00003 + M_00007_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux286, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00005 + M_00007_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux287, [-37,-34,-32,-30,-28,-18,-16,-16,-14,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux288 #( - M_00007_00001 + M_00007_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux288, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux289 #( - M_00007_00002 + M_00007_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux289, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux290 #( - M_00008_00001 + M_00008_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux290, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux291 #( - M_00008_00005 + M_00008_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux291, [-37,-34,-32,-30,-28,-18,-16,-16,-14,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux292 #( - M_00008_00004 + M_00008_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux292, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux293 #( - M_00008_00003 + M_00008_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux293, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux294 #( - M_00008_00002 + M_00008_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux294, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux295 #( - M_00008_00001 + M_00008_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux295, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux296 #( - M_00008_00006 + -1)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux296, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11,-1,-1])
**VARIABLES**
DISCRETE aux297 #( - M_00008_00003 + M_00008_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux297, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux298 #( - M_00008_00002 + M_00008_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux298, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux299 #( - M_00009_00001 + M_00009_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux299, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux300 #(-1 - M_00009_00005)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux300, [-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11,-1,-1])
**VARIABLES**
DISCRETE aux301 #( - M_00009_00001 + M_00009_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux301, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux302 #( - M_00009_00002 + M_00009_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux302, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux303 #( - M_00009_00002 + M_00009_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux303, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux304 #( - M_00009_00003 + M_00009_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux304, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux305 #( - M_00009_00004 + M_00009_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux305, [-49,-49,-39,-39,-37,-34,-32,-30,-28,14,16,16,18,28,30,32,34,37])
**VARIABLES**
DISCRETE aux306 #( - M_00010_00002 + M_00010_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux306, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux307 #( - M_00010_00003 + M_00010_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux307, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux308 #( - M_00010_00001 + M_00010_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux308, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux309 #( - M_00010_00001 + M_00010_00004)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux309, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux310 #( - M_00010_00004 + -1)
{-50..-1}
**CONSTRAINTS**
w-inintervalset(aux310, [-50,-50,-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11,-1,-1])
**VARIABLES**
DISCRETE aux311 #( - M_00011_00001 + M_00011_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux311, [-49,-49,-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39,49,49])
**VARIABLES**
DISCRETE aux312 #( - M_00011_00002 + M_00011_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux312, [-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39])
**VARIABLES**
DISCRETE aux313 #( - M_00011_00003 + -1)
{-50..-1}
**CONSTRAINTS**
w-inintervalset(aux313, [-50,-50,-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11,-1,-1])
**VARIABLES**
DISCRETE aux314 #( - M_00012_00001 + M_00012_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux314, [-39,-39,-37,-34,-32,-30,-28,28,30,32,34,37,39,39])
**VARIABLES**
DISCRETE aux315 #( - M_00012_00002 + -1)
{-50..-1}
**CONSTRAINTS**
w-inintervalset(aux315, [-50,-50,-38,-35,-33,-31,-29,-29,-24,-24,-13,-13,-11,-11,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[36, 30, 35, 49, 23, 0, 31, 28, 32, 34, 37, 10, 12]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux202)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00008, 13, 2)
div(M_00002_00009, 13, 2)
div(M_00002_00003, 13, aux16)
div(M_00002_00010, 13, 2)
div(M_00002_00011, 13, aux18)
reify(gaceq(M_00003_00009,M_00004_00008), aux19)
div(M_00007_00001, 13, aux20)
div(M_00007_00007, 13, aux21)
reify(gaceq(M_00007_00002,M_00006_00002), aux22)
div(M_00010_00004, 13, aux23)
div(M_00010_00001, 13, aux24)
div(M_00010_00003, 13, aux25)
div(M_00010_00002, 13, aux26)
reify(gaceq(M_00008_00004,M_00009_00004), aux27)
reify(gaceq(M_00004_00004,M_00005_00004), aux28)
reify(gaceq(M_00005_00007,M_00006_00006), aux29)
div(M_00002_00004, 13, aux30)
div(M_00002_00006, 13, aux31)
div(M_00002_00007, 13, 2)
reify(gaceq(M_00010_00001,M_00009_00001), aux33)
reify(gaceq(M_00003_00006,M_00004_00006), aux34)
reify(gaceq(M_00004_00005,M_00005_00004), aux35)
reify(gaceq(M_00010_00004,M_00009_00005), aux36)
reify(gaceq(M_00003_00002,M_00004_00002), aux37)
reify(gaceq(M_00010_00004,M_00009_00004), aux38)
reify(gaceq(M_00010_00002,M_00009_00003), aux39)
reify(gaceq(M_00004_00006,M_00005_00005), aux40)
reify(gaceq(M_00002_00004,M_00003_00004), aux41)
div(M_00004_00008, 13, 2)
div(M_00004_00009, 13, aux43)
div(M_00004_00003, 13, aux44)
div(M_00004_00002, 13, aux45)
reify(gaceq(M_00007_00007,M_00006_00008), aux46)
reify(gaceq(M_00005_00004,M_00006_00004), aux47)
reify(gaceq(M_00003_00008,M_00004_00007), aux48)
reify(gaceq(M_00004_00007,M_00005_00007), aux49)
reify(gaceq(M_00004_00010,M_00005_00009), aux50)
div(M_00002_00001, 13, aux51)
div(M_00002_00005, 13, aux52)
div(M_00002_00002, 13, 2)
reify(gaceq(M_00002_00008,M_00003_00007), aux54)
reify(gaceq(M_00011_00003,M_00012_00002), aux55)
reify(gaceq(M_00011_00001,M_00012_00001), aux56)
reify(gaceq(M_00005_00005,M_00006_00005), aux57)
reify(gaceq(M_00002_00009,M_00003_00008), aux58)
reify(gaceq(M_00003_00008,M_00004_00008), aux59)
reify(gaceq(M_00007_00006,M_00008_00005), aux60)
reify(gaceq(M_00008_00004,M_00009_00003), aux61)
reify(gaceq(M_00007_00003,M_00006_00003), aux62)
reify(gaceq(M_00003_00007,M_00004_00006), aux63)
reify(gaceq(M_00002_00001,M_00003_00001), aux64)
reify(gaceq(M_00002_00006,M_00003_00005), aux65)
reify(gaceq(M_00005_00003,M_00006_00003), aux66)
reify(gaceq(M_00002_00002,M_00003_00002), aux67)
reify(gaceq(M_00003_00005,M_00004_00004), aux68)
reify(gaceq(M_00005_00007,M_00006_00007), aux69)
reify(gaceq(M_00003_00011,M_00004_00010), aux70)
reify(gaceq(M_00010_00004,M_00011_00003), aux71)
reify(gaceq(M_00010_00001,M_00011_00001), aux72)
reify(gaceq(M_00010_00002,M_00011_00002), aux73)
div(M_00003_00011, 13, aux74)
div(M_00003_00001, 13, aux75)
reify(gaceq(M_00003_00004,M_00004_00004), aux76)
reify(gaceq(M_00007_00002,M_00008_00002), aux77)
div(M_00005_00001, 13, aux78)
div(M_00005_00009, 13, aux79)
reify(gaceq(M_00002_00010,M_00003_00009), aux80)
reify(gaceq(M_00002_00003,M_00003_00003), aux81)
div(M_00008_00001, 13, aux82)
div(M_00008_00006, 13, aux83)
reify(gaceq(M_00004_00006,M_00005_00006), aux84)
div(M_00006_00007, 13, aux85)
div(M_00006_00006, 13, aux86)
div(M_00006_00003, 13, aux87)
div(M_00006_00002, 13, aux88)
reify(gaceq(M_00005_00009,M_00006_00008), aux89)
reify(gaceq(M_00010_00003,M_00011_00003), aux90)
reify(gaceq(M_00010_00003,M_00011_00002), aux91)
reify(gaceq(M_00002_00005,M_00003_00005), aux92)
reify(gaceq(M_00002_00005,M_00003_00004), aux93)
reify(gaceq(M_00010_00002,M_00009_00002), aux94)
reify(gaceq(M_00010_00003,M_00009_00003), aux95)
reify(gaceq(M_00004_00004,M_00005_00003), aux96)
reify(gaceq(M_00002_00003,M_00003_00002), aux97)
reify(gaceq(M_00002_00009,M_00003_00009), aux98)
reify(gaceq(M_00004_00001,M_00005_00001), aux99)
reify(gaceq(M_00004_00007,M_00005_00006), aux100)
reify(gaceq(M_00007_00001,M_00006_00001), aux101)
div(M_00009_00004, 13, aux102)
div(M_00009_00002, 13, aux103)
reify(gaceq(M_00003_00005,M_00004_00005), aux104)
reify(gaceq(M_00007_00006,M_00006_00007), aux105)
reify(gaceq(M_00007_00006,M_00008_00006), aux106)
reify(gaceq(M_00007_00003,M_00008_00002), aux107)
div(M_00011_00002, 13, aux108)
reify(gaceq(M_00003_00006,M_00004_00005), aux109)
reify(gaceq(M_00008_00003,M_00009_00002), aux110)
reify(gaceq(M_00008_00005,M_00009_00005), aux111)
reify(gaceq(M_00005_00008,M_00006_00007), aux112)
reify(gaceq(M_00010_00003,M_00009_00004), aux113)
div(M_00006_00004, 13, aux114)
div(M_00006_00005, 13, aux115)
reify(gaceq(M_00004_00003,M_00005_00003), aux116)
div(M_00006_00001, 13, aux117)
div(M_00006_00008, 13, aux118)
div(M_00003_00010, 13, aux119)
div(M_00003_00009, 13, 2)
div(M_00003_00002, 13, aux121)
div(M_00003_00003, 13, aux122)
reify(gaceq(M_00004_00002,M_00005_00002), aux123)
reify(gaceq(M_00002_00011,M_00003_00010), aux124)
reify(gaceq(M_00005_00005,M_00006_00004), aux125)
reify(gaceq(M_00003_00010,M_00004_00010), aux126)
reify(gaceq(M_00003_00003,M_00004_00002), aux127)
reify(gaceq(M_00002_00007,M_00003_00006), aux128)
reify(gaceq(M_00005_00003,M_00006_00002), aux129)
reify(gaceq(M_00005_00008,M_00006_00008), aux130)
reify(gaceq(M_00003_00007,M_00004_00007), aux131)
div(M_00005_00007, 13, aux132)
div(M_00005_00008, 13, aux133)
div(M_00005_00002, 13, aux134)
div(M_00005_00003, 13, aux135)
reify(gaceq(M_00005_00006,M_00006_00006), aux136)
reify(gaceq(M_00004_00009,M_00005_00009), aux137)
reify(gaceq(M_00004_00003,M_00005_00002), aux138)
reify(gaceq(M_00005_00002,M_00006_00002), aux139)
reify(gaceq(M_00004_00008,M_00005_00007), aux140)
div(M_00007_00002, 13, aux141)
div(M_00007_00003, 13, aux142)
div(M_00007_00006, 13, aux143)
div(M_00007_00005, 13, aux144)
reify(gaceq(M_00004_00009,M_00005_00008), aux145)
reify(gaceq(M_00008_00003,M_00009_00003), aux146)
reify(gaceq(M_00008_00005,M_00009_00004), aux147)
div(M_00007_00004, 13, aux148)
reify(gaceq(M_00003_00004,M_00004_00003), aux149)
reify(gaceq(M_00007_00004,M_00008_00003), aux150)
reify(gaceq(M_00003_00003,M_00004_00003), aux151)
reify(gaceq(M_00003_00009,M_00004_00009), aux152)
reify(gaceq(M_00005_00004,M_00006_00003), aux153)
div(M_00004_00007, 13, aux154)
reify(gaceq(M_00008_00001,M_00009_00001), aux155)
div(M_00004_00004, 13, aux156)
div(M_00004_00005, 13, aux157)
div(M_00004_00006, 13, aux158)
reify(gaceq(M_00008_00006,M_00009_00005), aux159)
reify(gaceq(M_00007_00003,M_00006_00004), aux160)
div(M_00008_00003, 13, aux161)
div(M_00008_00004, 13, aux162)
div(M_00008_00005, 13, aux163)
div(M_00008_00002, 13, aux164)
reify(gaceq(M_00002_00008,M_00003_00008), aux165)
reify(gaceq(M_00008_00002,M_00009_00002), aux166)
reify(gaceq(M_00007_00005,M_00008_00005), aux167)
reify(gaceq(M_00007_00007,M_00006_00007), aux168)
reify(gaceq(M_00007_00002,M_00006_00003), aux169)
reify(gaceq(M_00002_00006,M_00003_00006), aux170)
reify(gaceq(M_00005_00006,M_00006_00005), aux171)
div(M_00003_00007, 13, 2)
div(M_00003_00008, 13, 2)
reify(gaceq(M_00007_00004,M_00008_00004), aux174)
div(M_00003_00004, 13, aux175)
div(M_00003_00006, 13, aux176)
div(M_00003_00005, 13, aux177)
reify(gaceq(M_00007_00007,M_00008_00006), aux178)
reify(gaceq(M_00007_00005,M_00008_00004), aux179)
reify(gaceq(M_00003_00001,M_00004_00001), aux180)
reify(gaceq(M_00002_00004,M_00003_00003), aux181)
reify(gaceq(M_00002_00010,M_00003_00010), aux182)
reify(gaceq(M_00007_00005,M_00006_00005), aux183)
div(M_00005_00004, 13, aux184)
div(M_00005_00005, 13, aux185)
div(M_00005_00006, 13, aux186)
reify(gaceq(M_00005_00001,M_00006_00001), aux187)
reify(gaceq(M_00007_00005,M_00006_00006), aux188)
div(M_00009_00005, 13, aux189)
div(M_00009_00003, 13, aux190)
div(M_00009_00001, 13, aux191)
reify(gaceq(M_00002_00007,M_00003_00007), aux192)
div(M_00004_00001, 13, aux193)
div(M_00004_00010, 13, aux194)
reify(gaceq(M_00004_00008,M_00005_00008), aux195)
reify(gaceq(M_00007_00004,M_00006_00005), aux196)
reify(gaceq(M_00007_00003,M_00008_00003), aux197)
reify(gaceq(M_00003_00010,M_00004_00009), aux198)
reify(gaceq(M_00007_00001,M_00008_00001), aux199)
reify(gaceq(M_00004_00005,M_00005_00005), aux200)
reify(gaceq(M_00007_00004,M_00006_00004), aux201)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,28),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,31),w-literal(M_00002_00008,28),w-literal(M_00002_00009,32),w-literal(M_00002_00010,34),w-literal(M_00002_00011,37)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,31),w-literal(M_00002_00008,28),w-literal(M_00002_00009,32),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,31),w-literal(M_00002_00008,28),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,31),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,31),w-literal(M_00002_00008,37),w-literal(M_00002_00009,32),w-literal(M_00002_00010,34),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,49),w-literal(M_00002_00005,23),w-literal(M_00002_00006,0),w-literal(M_00002_00007,34),w-literal(M_00002_00008,28),w-literal(M_00002_00009,32),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,30),w-literal(M_00002_00002,35),w-literal(M_00002_00003,49),w-literal(M_00002_00004,23),w-literal(M_00002_00005,0),w-literal(M_00002_00006,31),w-literal(M_00002_00007,28),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,49),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,23),w-literal(M_00002_00005,0),w-literal(M_00002_00006,31),w-literal(M_00002_00007,28),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,35),w-literal(M_00002_00003,49),w-literal(M_00002_00004,23),w-literal(M_00002_00005,0),w-literal(M_00002_00006,31),w-literal(M_00002_00007,28),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)}),watched-and({w-literal(M_00002_00001,36),w-literal(M_00002_00002,30),w-literal(M_00002_00003,35),w-literal(M_00002_00004,23),w-literal(M_00002_00005,0),w-literal(M_00002_00006,31),w-literal(M_00002_00007,28),w-literal(M_00002_00008,32),w-literal(M_00002_00009,34),w-literal(M_00002_00010,37),w-literal(M_00002_00011,10)})})
watched-or({watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux92,1),w-literal(aux170,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux203,13,0),w-literal(aux30,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1)}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux165,1),w-literal(aux80,1),w-literal(aux124,1)}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux98,1),w-literal(aux182,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux204,13,0),w-literal(aux18,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux165,1),w-literal(aux98,1),w-literal(aux124,1),watched-or({modulo(aux205,13,0),w-literal(aux18,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1)}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux165,1),w-literal(aux98,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux124,1)}),watched-and({w-literal(M_00003_00011,12),w-literal(aux67,1),w-literal(aux81,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux93,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux206,13,0),gaceq(aux51,aux30)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux181,1),w-literal(aux93,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux207,13,0),gaceq(aux16,aux30)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux93,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux208,13,0),gaceq(aux30,aux52)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux209,13,0),w-literal(aux31,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux192,1),w-literal(aux165,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux210,13,0),w-literal(aux31,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux211,13,0),gaceq(aux52,aux31)})}),watched-and({w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux165,1),w-literal(aux98,1),w-literal(aux182,1),gaceq(M_00002_00011,M_00003_00011)}),watched-and({w-literal(M_00003_00011,12),watched-or({w-literal(aux18,0),modulo(aux212,13,0)}),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux92,1),w-literal(aux170,1),w-literal(aux192,1),w-literal(aux165,1),w-literal(aux98,1),w-literal(aux182,1)}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux41,1),w-literal(aux92,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux213,13,0),gaceq(aux16,aux31)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux181,1),w-literal(aux93,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux214,13,0),w-literal(aux16,2)})}),watched-and({w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux67,1),w-literal(aux81,1),w-literal(aux41,1),w-literal(aux170,1),w-literal(aux192,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),modulo(aux215,13,0)}),watched-and({w-literal(M_00003_00011,12),gaceq(M_00002_00002,M_00003_00001),w-literal(aux97,1),w-literal(aux181,1),w-literal(aux93,1),w-literal(aux65,1),w-literal(aux128,1),w-literal(aux54,1),w-literal(aux58,1),w-literal(aux80,1),w-literal(aux124,1),watched-or({modulo(aux216,13,0),w-literal(aux51,2)})})})
watched-or({watched-and({w-literal(aux37,1),w-literal(aux151,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux68,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux217,13,0),gaceq(aux75,aux175)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux149,1),w-literal(aux68,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux218,13,0),gaceq(aux122,aux175)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux68,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux219,13,0),gaceq(aux175,aux177)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux220,13,0),w-literal(aux176,2)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux131,1),w-literal(aux59,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux221,13,0),w-literal(aux176,2)})}),watched-and({w-literal(aux180,1),w-literal(aux151,1),w-literal(aux76,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux222,13,0),gaceq(aux121,aux177)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux223,13,0),gaceq(aux177,aux176)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux76,1),w-literal(aux104,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux224,13,0),gaceq(aux122,aux176)})}),watched-and({w-literal(aux180,1),w-literal(aux127,1),w-literal(aux149,1),w-literal(aux68,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux225,13,0),gaceq(aux121,aux122)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux127,1),w-literal(aux149,1),w-literal(aux68,1),w-literal(aux109,1),w-literal(aux63,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux226,13,0),gaceq(aux75,aux121)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux104,1),w-literal(aux34,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux227,13,0),w-literal(aux175,2)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux34,1),w-literal(aux131,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux228,13,0),w-literal(aux177,2)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux131,1),w-literal(aux59,1),w-literal(aux152,1),w-literal(aux126,1),modulo(aux229,13,0)}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux131,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1)}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux131,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux70,1),watched-or({modulo(aux230,13,0),w-literal(aux119,2)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux131,1),w-literal(aux152,1),w-literal(aux126,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux231,13,0),w-literal(aux74,2)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux131,1),w-literal(aux59,1),w-literal(aux152,1),w-literal(aux70,1),watched-or({modulo(aux232,13,0),gaceq(aux119,aux74)})}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux48,1),w-literal(aux19,1),w-literal(aux198,1),w-literal(aux70,1)}),watched-and({w-literal(aux180,1),w-literal(aux37,1),w-literal(aux151,1),w-literal(aux76,1),w-literal(aux104,1),w-literal(aux34,1),w-literal(aux59,1),w-literal(aux152,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux70,1),watched-or({modulo(aux233,13,0),w-literal(aux119,2)})})})
watched-or({watched-and({modulo(aux234,13,0),w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux84,1),w-literal(aux49,1),w-literal(aux195,1),w-literal(aux137,1)}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux84,1),w-literal(aux49,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({w-literal(aux43,2),modulo(aux235,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux84,1),w-literal(aux49,1),w-literal(aux195,1),w-literal(aux50,1),watched-or({gaceq(aux43,aux194),modulo(aux236,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({w-literal(aux154,2),modulo(aux237,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux84,1),w-literal(aux195,1),w-literal(aux137,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux154,aux194),modulo(aux238,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux158,aux154),modulo(aux239,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux200,1),w-literal(aux49,1),w-literal(aux195,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux50,1),watched-or({gaceq(aux158,aux43),modulo(aux240,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux138,1),w-literal(aux96,1),w-literal(aux35,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux45,aux44),modulo(aux241,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux96,1),w-literal(aux35,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux44,aux156),modulo(aux242,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux157,aux158),modulo(aux243,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux28,1),w-literal(aux84,1),w-literal(aux49,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux145,1),w-literal(aux50,1),watched-or({w-literal(aux157,2),modulo(aux244,13,0)})}),watched-and({w-literal(aux123,1),w-literal(aux116,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux35,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux193,aux156),modulo(aux245,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux35,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux156,aux157),modulo(aux246,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux116,1),w-literal(aux28,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux45,aux157),modulo(aux247,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux138,1),w-literal(aux96,1),w-literal(aux35,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux193,aux45),modulo(aux248,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux28,1),w-literal(aux200,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux100,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux44,aux158),modulo(aux249,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux123,1),w-literal(aux116,1),w-literal(aux200,1),w-literal(aux84,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux50,1),watched-or({gaceq(aux156,aux154),modulo(aux250,13,0)})})})
watched-or({watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux153,1),w-literal(aux125,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux251,13,0),gaceq(aux135,aux184)})}),watched-and({w-literal(aux139,1),w-literal(aux66,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux125,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux252,13,0),gaceq(aux78,aux184)})}),watched-and({w-literal(aux187,1),w-literal(aux66,1),w-literal(aux47,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux253,13,0),gaceq(aux134,aux185)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux47,1),w-literal(aux57,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux254,13,0),gaceq(aux135,aux186)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux57,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux130,1),modulo(aux255,13,0)}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux57,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux256,13,0),gaceq(aux186,aux132)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux57,1),w-literal(aux136,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux257,13,0),gaceq(aux132,aux133)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux57,1),w-literal(aux69,1),w-literal(aux130,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux258,13,0),gaceq(aux186,aux79)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux57,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux89,1),watched-or({modulo(aux259,13,0),gaceq(aux133,aux79)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux260,13,0),gaceq(aux185,aux186)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux47,1),w-literal(aux136,1),w-literal(aux69,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux89,1),watched-or({modulo(aux261,13,0),gaceq(aux185,aux133)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux125,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux262,13,0),gaceq(aux78,aux134)})}),watched-and({w-literal(aux187,1),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux125,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux263,13,0),gaceq(aux134,aux135)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux125,1),w-literal(aux171,1),w-literal(aux29,1),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux264,13,0),gaceq(aux184,aux185)})}),watched-and({w-literal(aux187,1),w-literal(aux139,1),w-literal(aux66,1),w-literal(aux57,1),w-literal(aux136,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux112,1),w-literal(aux89,1),watched-or({modulo(aux265,13,0),gaceq(aux184,aux132)})})})
watched-or({watched-and({w-literal(aux101,1),w-literal(aux169,1),w-literal(aux160,1),w-literal(aux196,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux88,aux87),modulo(aux266,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux196,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux117,aux114),modulo(aux267,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux169,1),w-literal(aux160,1),w-literal(aux196,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux117,aux88),modulo(aux268,13,0)})}),watched-and({w-literal(aux101,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux62,1),w-literal(aux201,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux88,aux115),modulo(aux269,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux201,1),w-literal(aux183,1),w-literal(aux13,1),w-literal(aux168,1),modulo(aux270,13,0)}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux201,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux115,aux86),modulo(aux271,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux201,1),w-literal(aux183,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux86,aux85),modulo(aux272,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux201,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux168,1),watched-or({gaceq(aux115,aux118),modulo(aux273,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux201,1),w-literal(aux183,1),w-literal(aux13,1),w-literal(aux46,1),watched-or({gaceq(aux85,aux118),modulo(aux274,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),w-literal(aux196,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux114,aux115),modulo(aux275,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux62,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux183,1),w-literal(aux13,1),w-literal(aux46,1),watched-or({gaceq(aux114,aux85),modulo(aux276,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),w-literal(aux160,1),w-literal(aux196,1),w-literal(aux188,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux87,aux114),modulo(aux277,13,0)})}),watched-and({w-literal(aux101,1),w-literal(aux22,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux201,1),w-literal(aux183,1),w-literal(aux105,1),w-literal(aux46,1),watched-or({gaceq(aux87,aux86),modulo(aux278,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux279,13,0),gaceq(aux148,aux21)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux197,1),w-literal(aux167,1),w-literal(aux106,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux280,13,0),gaceq(aux141,aux142)}),w-literal(aux199,1),w-literal(aux107,1),w-literal(aux150,1),w-literal(aux179,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux281,13,0),gaceq(aux148,aux144)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux197,1),w-literal(aux179,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux282,13,0),gaceq(aux143,aux21)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux197,1),w-literal(aux174,1),w-literal(aux167,1),w-literal(aux178,1)}),watched-and({modulo(aux283,13,0),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux197,1),w-literal(aux174,1),w-literal(aux167,1),w-literal(aux106,1)}),watched-and({watched-or({modulo(aux284,13,0),gaceq(aux142,aux143)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux174,1),w-literal(aux167,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux20,aux148)}),w-literal(aux77,1),w-literal(aux197,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux179,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux142,aux148)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux150,1),w-literal(aux179,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux144,aux143)}),w-literal(aux199,1),w-literal(aux77,1),w-literal(aux197,1),w-literal(aux174,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux288,13,0),gaceq(aux20,aux141)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux107,1),w-literal(aux150,1),w-literal(aux179,1),w-literal(aux60,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux141,aux144)}),w-literal(aux199,1),w-literal(aux197,1),w-literal(aux174,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux60,1),w-literal(aux178,1)})})
watched-or({watched-and({watched-or({gaceq(aux82,aux162),modulo(aux290,13,0)}),w-literal(aux166,1),w-literal(aux146,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux147,1),w-literal(aux159,1)}),watched-and({watched-or({gaceq(aux163,aux83),modulo(aux291,13,0)}),w-literal(aux155,1),w-literal(aux166,1),w-literal(aux146,1),w-literal(aux27,1),w-literal(aux159,1)}),watched-and({watched-or({gaceq(aux162,aux163),modulo(aux292,13,0)}),w-literal(aux155,1),w-literal(aux166,1),w-literal(aux146,1),w-literal(aux147,1),w-literal(aux159,1)}),watched-and({watched-or({gaceq(aux161,aux162),modulo(aux293,13,0)}),w-literal(aux155,1),w-literal(aux166,1),w-literal(aux61,1),w-literal(aux147,1),w-literal(aux159,1)}),watched-and({watched-or({gaceq(aux164,aux161),modulo(aux294,13,0)}),w-literal(aux155,1),w-literal(aux110,1),w-literal(aux61,1),w-literal(aux147,1),w-literal(aux159,1)}),watched-and({watched-or({gaceq(aux82,aux164),modulo(aux295,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux110,1),w-literal(aux61,1),w-literal(aux147,1),w-literal(aux159,1)}),watched-and({w-literal(aux155,1),w-literal(aux166,1),w-literal(aux146,1),w-literal(aux27,1),w-literal(aux111,1),modulo(aux296,13,0)}),watched-and({watched-or({gaceq(aux161,aux83),modulo(aux297,13,0)}),w-literal(aux155,1),w-literal(aux166,1),w-literal(aux27,1),w-literal(aux111,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux164,aux163),modulo(aux298,13,0)}),w-literal(aux155,1),w-literal(aux146,1),w-literal(aux27,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux159,1)})})
watched-or({watched-and({watched-or({modulo(aux299,13,0),gaceq(aux191,aux102)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux36,1)}),watched-and({modulo(aux300,13,0),w-literal(aux33,1),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux38,1)}),watched-and({watched-or({modulo(aux301,13,0),gaceq(aux191,aux103)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux39,1),w-literal(aux113,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux302,13,0),gaceq(aux103,aux189)}),w-literal(aux33,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux95,1),w-literal(aux38,1)}),watched-and({watched-or({modulo(aux303,13,0),gaceq(aux103,aux190)}),w-literal(aux33,1),w-literal(aux39,1),w-literal(aux113,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux304,13,0),gaceq(aux190,aux102)}),w-literal(aux33,1),w-literal(aux94,1),w-literal(aux113,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux305,13,0),gaceq(aux102,aux189)}),w-literal(aux33,1),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux36,1)})})
watched-or({watched-and({w-literal(aux72,1),w-literal(aux91,1),w-literal(aux71,1),watched-or({gaceq(aux26,aux25),modulo(aux306,13,0)})}),watched-and({w-literal(aux72,1),w-literal(aux73,1),w-literal(aux71,1),watched-or({gaceq(aux25,aux23),modulo(aux307,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux91,1),w-literal(aux71,1),watched-or({gaceq(aux24,aux26),modulo(aux308,13,0)})}),watched-and({w-literal(aux73,1),w-literal(aux90,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux24,aux23),modulo(aux309,13,0)})}),watched-and({w-literal(aux72,1),w-literal(aux73,1),w-literal(aux90,1),modulo(aux310,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux108),modulo(aux311,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux55,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux108),modulo(aux312,13,0)}),w-literal(aux56,1),w-literal(aux55,1)}),watched-and({modulo(aux313,13,0),w-literal(aux56,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux202),modulo(aux314,13,0)})}),watched-and({modulo(aux315,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux203)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux203)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux204)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux204)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux205)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux205)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux206)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux206)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux207)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux207)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux208)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux208)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux209)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux209)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux210)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux210)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux211)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux211)
weightedsumleq([-1,1],[M_00002_00011,12],aux212)
weightedsumgeq([-1,1],[M_00002_00011,12],aux212)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux213)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux213)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux214)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux214)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux215)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux215)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux216)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux216)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux217)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux217)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux218)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux218)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux219)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux219)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux220)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux220)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux221)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux221)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux222)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux222)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux223)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux223)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux224)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux224)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux225)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux225)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux226)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux226)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux227)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux227)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux228)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux228)
weightedsumleq([-1,1],[M_00003_00011,-1],aux229)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux229)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux230)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux230)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux231)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux231)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux232)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux232)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux233)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux233)
weightedsumleq([-1,1],[M_00004_00010,-1],aux234)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux234)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux235)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux235)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux236)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux236)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux237)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux237)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux238)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux238)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux239)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux239)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux240)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux240)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux241)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux241)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux242)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux242)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux243)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux243)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux244)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux244)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux245)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux245)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux246)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux246)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux247)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux247)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux248)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux248)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux249)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux249)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux250)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux250)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux251)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux251)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux252)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux252)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux253)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux253)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux254)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux254)
weightedsumleq([1,-1],[-1,M_00005_00009],aux255)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux255)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux256)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux256)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux257)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux257)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux258)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux258)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux259)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux259)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux260)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux260)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux261)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux261)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux262)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux262)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux263)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux263)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux264)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux264)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux265)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux265)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux266)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux266)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux267)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux267)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux268)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux268)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux269)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux269)
weightedsumleq([1,-1],[-1,M_00006_00008],aux270)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux270)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux271)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux271)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux272)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux272)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux273)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux273)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux274)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux274)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux275)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux275)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux276)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux276)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux277)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux277)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux278)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux278)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux279)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux279)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux280)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux280)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux281)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux281)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux282)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux282)
weightedsumleq([-1,1],[M_00007_00007,-1],aux283)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux283)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux284)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux284)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux285)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux285)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux286)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux286)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux287)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux287)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux288)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux288)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux289)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux289)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux290)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux290)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux291)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux291)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux292)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux292)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux293)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux293)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux294)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux294)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux295)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux295)
weightedsumleq([-1,1],[M_00008_00006,-1],aux296)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux296)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux297)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux297)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux298)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux298)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux299)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux299)
weightedsumleq([1,-1],[-1,M_00009_00005],aux300)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux300)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux301)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux301)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux302)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux302)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux303)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux303)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux304)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux304)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux305)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux305)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux306)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux306)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux307)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux307)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux308)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux308)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux309)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux309)
weightedsumleq([-1,1],[M_00010_00004,-1],aux310)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux310)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux311)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux311)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux312)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux312)
weightedsumleq([-1,1],[M_00011_00003,-1],aux313)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux313)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux314)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux314)
weightedsumleq([-1,1],[M_00012_00002,-1],aux315)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux315)
**EOF**
