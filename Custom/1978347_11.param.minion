MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 121
# CSE_active_eliminated_expressions = 556
# CSE_active_total_size = 363
**VARIABLES**
DISCRETE M_00002_00001 #
{19..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [19,19,21,21])
**VARIABLES**
DISCRETE M_00002_00002 #
{4..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [4,4,9,10])
**VARIABLES**
DISCRETE M_00002_00003 #
{10..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [10,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00002_00004 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00002_00005 #
{4..11}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [4,4,9,11])
**VARIABLES**
DISCRETE M_00002_00006 #
{11..15}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [11,11,15,15])
**VARIABLES**
DISCRETE M_00002_00007 #
{15..18}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [15,15,18,18])
**VARIABLES**
DISCRETE M_00002_00008 #
{18..32}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00003_00001 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00003_00002 #
{4..15}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [4,4,9,11,15,15])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00003_00004 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..15}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,9,11,15,15])
**VARIABLES**
DISCRETE M_00003_00006 #
{11..18}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [11,11,15,15,18,18])
**VARIABLES**
DISCRETE M_00003_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00003_00008 #
{18..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [18,19,21,21,29,29])
**VARIABLES**
DISCRETE M_00003_00009 #
{2..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [2,2,4,4,9,11,15,15,18,19,21,21,29,29])
**VARIABLES**
DISCRETE M_00004_00001 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..18}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,9,11,15,15,18,18])
**VARIABLES**
DISCRETE M_00004_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00004_00008 #
{2..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [2,2,4,4,9,11,15,15,18,19,21,21,29,29])
**VARIABLES**
DISCRETE M_00005_00001 #
{4..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..21}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,9,11,15,15,18,19,21,21])
**VARIABLES**
DISCRETE M_00005_00003 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00005_00004 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00005_00005 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00002 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,4,4,9,11,15,15,18,19,21,21,29,29,32,32])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
BOOL aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..2}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..2}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux22 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux25 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux26 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux27 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux28 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux31 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux34 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux39 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux40 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux41 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..2}
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux48 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux50 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux51 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux52 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..2}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..2}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..2}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
BOOL aux65 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux68 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux70 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux71 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux72 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux73 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux76 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux79 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
BOOL aux82 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
BOOL aux87 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux88 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux91 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
BOOL aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux100 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
BOOL aux103 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux107 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux108 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
BOOL aux109 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
BOOL aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux111 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux113 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux117 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux118 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
BOOL aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
BOOL aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
BOOL aux122 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux124 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
BOOL aux126 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux127 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..2}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
BOOL aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux132 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux133 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux134 #
{0..2}
DISCRETE aux135 #( - M_00002_00001 + M_00002_00004)
{-17..2}
**CONSTRAINTS**
w-inintervalset(aux135, [-17,-17,-15,-15,-12,-8,-6,-6,-4,0,2,2])
**VARIABLES**
DISCRETE aux136 #( - M_00002_00008 + 29)
{-3..11}
**CONSTRAINTS**
w-inintervalset(aux136, [-3,-3,0,0,8,8,10,11])
**VARIABLES**
DISCRETE aux137 #( - M_00002_00005 + M_00002_00006)
{4..11}
**CONSTRAINTS**
w-inintervalset(aux137, [4,7,11,11])
**VARIABLES**
DISCRETE aux138 #( - M_00002_00006 + M_00002_00007)
{3..7}
**CONSTRAINTS**
w-inintervalset(aux138, [3,4,7,7])
**VARIABLES**
DISCRETE aux139 #( - M_00002_00007 + M_00002_00008)
{3..14}
**CONSTRAINTS**
w-inintervalset(aux139, [3,4,6,6,11,11,14,14])
**VARIABLES**
DISCRETE aux140 #( - M_00002_00004 + M_00002_00005)
{-17..7}
**CONSTRAINTS**
w-inintervalset(aux140, [-17,-17,-15,-14,-12,-4,-2,2,5,7])
**VARIABLES**
DISCRETE aux141 #( - M_00002_00004 + M_00002_00007)
{-6..14}
**CONSTRAINTS**
w-inintervalset(aux141, [-6,-6,-4,-3,-1,0,3,9,11,11,14,14])
**VARIABLES**
DISCRETE aux142 #( - M_00002_00001 + M_00002_00002)
{-15..-9}
**CONSTRAINTS**
w-inintervalset(aux142, [-15,-15,-12,-9])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00003 + M_00002_00004)
{-17..11}
**CONSTRAINTS**
w-inintervalset(aux143, [-17,-17,-15,-14,-12,11])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00003 + M_00002_00006)
{-6..5}
**CONSTRAINTS**
w-inintervalset(aux144, [-6,-6,-4,-3,0,1,4,5])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00007 + 2)
{-16..-13}
**CONSTRAINTS**
w-inintervalset(aux145, [-16,-16,-13,-13])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00002 + M_00002_00003)
{1..11}
**CONSTRAINTS**
w-inintervalset(aux146, [1,2,5,11])
**VARIABLES**
DISCRETE aux147 #( - M_00003_00003 + M_00003_00004)
{-17..11}
**CONSTRAINTS**
w-inintervalset(aux147, [-17,-17,-15,-14,-12,11])
**VARIABLES**
DISCRETE aux148 #( - M_00003_00001 + M_00003_00004)
{-17..7}
**CONSTRAINTS**
w-inintervalset(aux148, [-17,-17,-15,-14,-12,7])
**VARIABLES**
DISCRETE aux149 #( - M_00003_00002 + M_00003_00005)
{-6..11}
**CONSTRAINTS**
w-inintervalset(aux149, [-6,-4,-2,2,4,7,11,11])
**VARIABLES**
DISCRETE aux150 #( - M_00003_00003 + M_00003_00006)
{-10..14}
**CONSTRAINTS**
w-inintervalset(aux150, [-10,-10,-8,-6,-4,-3,-1,9,11,11,14,14])
**VARIABLES**
DISCRETE aux151 #( - M_00003_00009 + -1)
{-30..-3}
**CONSTRAINTS**
w-inintervalset(aux151, [-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux152 #( - M_00003_00006 + M_00003_00007)
{-9..21}
**CONSTRAINTS**
w-inintervalset(aux152, [-9,1,3,4,6,8,10,11,14,14,17,18,21,21])
**VARIABLES**
DISCRETE aux153 #( - M_00003_00007 + M_00003_00008)
{-3..16}
**CONSTRAINTS**
w-inintervalset(aux153, [-3,4,6,12,14,16])
**VARIABLES**
DISCRETE aux154 #( - M_00003_00006 + M_00003_00009)
{-16..18}
**CONSTRAINTS**
w-inintervalset(aux154, [-16,-16,-14,-13,-11,-11,-9,1,3,4,6,8,10,11,14,14,18,18])
**VARIABLES**
DISCRETE aux155 #( - M_00003_00008 + M_00003_00009)
{-27..11}
**CONSTRAINTS**
w-inintervalset(aux155, [-27,-27,-25,-25,-20,-14,-12,-6,-4,3,8,8,10,11])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00005 + M_00003_00006)
{0..14}
**CONSTRAINTS**
w-inintervalset(aux156, [0,9,11,11,14,14])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00005 + M_00003_00008)
{14..25}
**CONSTRAINTS**
w-inintervalset(aux157, [14,15,17,20,25,25])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00001 + M_00003_00002)
{-17..6}
**CONSTRAINTS**
w-inintervalset(aux158, [-17,-17,-15,-14,-12,2,4,6])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00002 + M_00003_00003)
{-11..17}
**CONSTRAINTS**
w-inintervalset(aux159, [-11,-11,-7,-4,-2,12,14,15,17,17])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00004 + M_00003_00005)
{-17..11}
**CONSTRAINTS**
w-inintervalset(aux160, [-17,-17,-15,-14,-12,2,4,7,11,11])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00004 + M_00003_00007)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux161, [-19,-19,-17,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux162 #( - M_00004_00002 + M_00004_00003)
{-17..17}
**CONSTRAINTS**
w-inintervalset(aux162, [-17,-17,-15,-14,-12,12,14,15,17,17])
**VARIABLES**
DISCRETE aux163 #( - M_00004_00001 + M_00004_00004)
{-17..17}
**CONSTRAINTS**
w-inintervalset(aux163, [-17,-17,-15,-14,-12,15,17,17])
**VARIABLES**
DISCRETE aux164 #( - M_00004_00002 + M_00004_00005)
{-11..14}
**CONSTRAINTS**
w-inintervalset(aux164, [-11,9,11,11,14,14])
**VARIABLES**
DISCRETE aux165 #( - M_00004_00008 + -1)
{-30..-3}
**CONSTRAINTS**
w-inintervalset(aux165, [-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux166 #( - M_00004_00006 + M_00004_00007)
{-16..30}
**CONSTRAINTS**
w-inintervalset(aux166, [-16,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux167 #( - M_00004_00007 + M_00004_00008)
{-30..27}
**CONSTRAINTS**
w-inintervalset(aux167, [-30,-30,-28,-27,-25,-25,-23,20,25,25,27,27])
**VARIABLES**
DISCRETE aux168 #( - M_00004_00005 + M_00004_00006)
{-16..28}
**CONSTRAINTS**
w-inintervalset(aux168, [-16,-16,-14,-13,-11,-11,-9,12,14,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux169 #( - M_00004_00005 + M_00004_00008)
{-16..25}
**CONSTRAINTS**
w-inintervalset(aux169, [-16,-16,-14,-13,-11,-11,-9,12,14,15,17,20,25,25])
**VARIABLES**
DISCRETE aux170 #( - M_00004_00004 + M_00004_00005)
{-28..14}
**CONSTRAINTS**
w-inintervalset(aux170, [-28,-28,-25,-25,-23,-17,-15,-14,-12,9,11,11,14,14])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00004 + M_00004_00007)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux171, [-19,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00001 + M_00004_00002)
{-17..17}
**CONSTRAINTS**
w-inintervalset(aux172, [-17,-17,-15,-14,-12,12,14,15,17,17])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00003 + M_00004_00004)
{-17..22}
**CONSTRAINTS**
w-inintervalset(aux173, [-17,-17,-15,-14,-12,15,17,22])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00003 + M_00004_00006)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux174, [-19,-19,-17,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux175 #(-1 - M_00005_00007)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux175, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux176 #( - M_00005_00004 + M_00005_00005)
{-30..28}
**CONSTRAINTS**
w-inintervalset(aux176, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28])
**VARIABLES**
DISCRETE aux177 #( - M_00005_00005 + M_00005_00006)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux177, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux178 #( - M_00005_00004 + M_00005_00007)
{-30..28}
**CONSTRAINTS**
w-inintervalset(aux178, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28])
**VARIABLES**
DISCRETE aux179 #( - M_00005_00006 + M_00005_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux179, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux180 #( - M_00005_00003 + M_00005_00004)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux180, [-28,-27,-25,-25,-23,23,25,25,27,28])
**VARIABLES**
DISCRETE aux181 #( - M_00005_00003 + M_00005_00006)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux181, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux182 #( - M_00005_00002 + M_00005_00003)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux182, [-19,-19,-17,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux183 #( - M_00005_00002 + M_00005_00005)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux183, [-19,-19,-17,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux184 #( - M_00005_00001 + M_00005_00002)
{-28..17}
**CONSTRAINTS**
w-inintervalset(aux184, [-28,-28,-25,-25,-23,-17,-15,12,14,15,17,17])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00001 + M_00005_00004)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux185, [-28,-27,-25,-25,-23,15,17,23,25,25,28,28])
**VARIABLES**
DISCRETE aux186 #( - M_00006_00003 + M_00006_00004)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux186, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux187 #( - M_00006_00004 + M_00006_00005)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux187, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux188 #( - M_00006_00003 + M_00006_00006)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux188, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux189 #(-1 - M_00006_00006)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux189, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux190 #( - M_00006_00005 + M_00006_00006)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux190, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux191 #( - M_00006_00002 + M_00006_00003)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux191, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux192 #( - M_00006_00002 + M_00006_00005)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux192, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux193 #( - M_00006_00001 + M_00006_00002)
{-30..28}
**CONSTRAINTS**
w-inintervalset(aux193, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28])
**VARIABLES**
DISCRETE aux194 #( - M_00006_00001 + M_00006_00004)
{-30..28}
**CONSTRAINTS**
w-inintervalset(aux194, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28])
**VARIABLES**
DISCRETE aux195 #( - M_00007_00001 + M_00007_00004)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux195, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux196 #( - M_00007_00005 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux196, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux197 #( - M_00007_00001 + M_00007_00002)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux197, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux198 #( - M_00007_00002 + M_00007_00005)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux198, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux199 #( - M_00007_00002 + M_00007_00003)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux199, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux200 #( - M_00007_00003 + M_00007_00004)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux200, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux201 #( - M_00007_00004 + M_00007_00005)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux201, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux202 #( - M_00008_00003 + M_00008_00004)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux202, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux203 #( - M_00008_00001 + M_00008_00002)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux203, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux204 #( - M_00008_00001 + M_00008_00004)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux204, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux205 #( - M_00008_00002 + M_00008_00003)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux205, [-30,-30,-28,-27,-25,-25,-23,23,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux206 #( - M_00008_00004 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux206, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux207 #( - M_00009_00001 + M_00009_00002)
{-30..19}
**CONSTRAINTS**
w-inintervalset(aux207, [-30,-30,-28,-27,-25,-25,-23,19])
**VARIABLES**
DISCRETE aux208 #( - M_00009_00002 + M_00009_00003)
{-17..17}
DISCRETE aux209 #(-1 - M_00009_00003)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux209, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux210 #( - M_00010_00001 + M_00010_00002)
{-17..13}
DISCRETE aux211 #( - M_00010_00002 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux211, [-33,-33,-30,-30,-22,-22,-20,-19,-16,-16,-12,-10,-5,-5,-3,-3])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[19, 9, 10, 21, 4, 11, 15, 18, 32, 29, 2]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux134)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00006, 13, aux14)
div(M_00002_00007, 13, 1)
div(M_00002_00005, 13, 0)
div(M_00002_00003, 13, aux17)
reify(gaceq(M_00003_00009,M_00004_00008), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00003, 13, aux20)
div(M_00007_00005, 13, aux21)
reify(gaceq(M_00005_00002,M_00006_00002), aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00007_00002,M_00006_00002), aux24)
reify(gaceq(M_00003_00002,M_00004_00002), aux25)
reify(gaceq(M_00002_00008,M_00003_00007), aux26)
reify(gaceq(M_00005_00003,M_00006_00003), aux27)
reify(gaceq(M_00005_00007,M_00006_00006), aux28)
div(M_00002_00004, 13, aux29)
reify(gaceq(M_00004_00005,M_00005_00005), aux30)
reify(gaceq(M_00004_00005,M_00005_00004), aux31)
reify(gaceq(M_00010_00001,M_00009_00001), aux32)
reify(gaceq(M_00010_00002,M_00009_00003), aux33)
reify(gaceq(M_00004_00006,M_00005_00005), aux34)
div(M_00004_00003, 13, aux35)
div(M_00004_00002, 13, aux36)
div(M_00004_00006, 13, aux37)
div(M_00004_00007, 13, aux38)
reify(gaceq(M_00004_00003,M_00005_00003), aux39)
reify(gaceq(M_00005_00001,M_00006_00001), aux40)
reify(gaceq(M_00004_00002,M_00005_00002), aux41)
reify(gaceq(M_00003_00008,M_00004_00007), aux42)
div(M_00002_00008, 13, aux43)
div(M_00002_00002, 13, 0)
reify(gaceq(M_00008_00004,M_00009_00003), aux45)
reify(gaceq(M_00008_00002,M_00009_00002), aux46)
reify(gaceq(M_00008_00001,M_00009_00001), aux47)
reify(gaceq(M_00003_00007,M_00004_00006), aux48)
reify(gaceq(M_00003_00006,M_00004_00006), aux49)
reify(gaceq(M_00003_00005,M_00004_00004), aux50)
reify(gaceq(M_00005_00005,M_00006_00005), aux51)
reify(gaceq(M_00002_00002,M_00003_00002), aux52)
div(M_00003_00009, 13, aux53)
div(M_00003_00001, 13, aux54)
div(M_00005_00007, 13, aux55)
div(M_00005_00001, 13, aux56)
div(M_00008_00003, 13, aux57)
div(M_00008_00002, 13, aux58)
div(M_00008_00001, 13, aux59)
div(M_00008_00004, 13, aux60)
div(M_00006_00005, 13, aux61)
div(M_00006_00004, 13, aux62)
div(M_00006_00003, 13, aux63)
div(M_00006_00002, 13, aux64)
reify(gaceq(M_00002_00005,M_00003_00004), aux65)
reify(gaceq(M_00004_00004,M_00005_00003), aux66)
reify(gaceq(M_00002_00003,M_00003_00002), aux67)
reify(gaceq(M_00003_00004,M_00004_00004), aux68)
reify(gaceq(M_00002_00006,M_00003_00006), aux69)
reify(gaceq(M_00002_00004,M_00003_00004), aux70)
reify(gaceq(M_00007_00001,M_00006_00001), aux71)
reify(gaceq(M_00004_00007,M_00005_00006), aux72)
reify(gaceq(M_00003_00003,M_00004_00003), aux73)
reify(gaceq(M_00007_00004,M_00008_00004), aux74)
reify(gaceq(M_00007_00003,M_00008_00002), aux75)
reify(gaceq(M_00003_00006,M_00004_00005), aux76)
reify(gaceq(M_00008_00003,M_00009_00002), aux77)
reify(gaceq(M_00008_00003,M_00009_00003), aux78)
reify(gaceq(M_00003_00001,M_00004_00001), aux79)
div(M_00006_00001, 13, aux80)
div(M_00006_00006, 13, aux81)
reify(gaceq(M_00004_00004,M_00005_00004), aux82)
div(M_00003_00007, 13, aux83)
div(M_00003_00008, 13, aux84)
div(M_00003_00002, 13, aux85)
div(M_00003_00003, 13, aux86)
reify(gaceq(M_00002_00005,M_00003_00005), aux87)
reify(gaceq(M_00005_00005,M_00006_00004), aux88)
reify(gaceq(M_00003_00003,M_00004_00002), aux89)
reify(gaceq(M_00003_00008,M_00004_00008), aux90)
reify(gaceq(M_00005_00004,M_00006_00004), aux91)
reify(gaceq(M_00005_00003,M_00006_00002), aux92)
reify(gaceq(M_00005_00006,M_00006_00006), aux93)
div(M_00005_00006, 13, aux94)
div(M_00005_00002, 13, aux95)
div(M_00005_00005, 13, aux96)
div(M_00005_00003, 13, aux97)
reify(gaceq(M_00004_00007,M_00005_00007), aux98)
reify(gaceq(M_00004_00003,M_00005_00002), aux99)
reify(gaceq(M_00004_00008,M_00005_00007), aux100)
div(M_00007_00002, 13, aux101)
div(M_00007_00004, 13, aux102)
reify(gaceq(M_00002_00007,M_00003_00006), aux103)
reify(gaceq(M_00003_00004,M_00004_00003), aux104)
reify(gaceq(M_00007_00004,M_00008_00003), aux105)
reify(gaceq(M_00005_00004,M_00006_00003), aux106)
reify(gaceq(M_00003_00007,M_00004_00007), aux107)
div(M_00004_00004, 13, aux108)
div(M_00004_00005, 13, aux109)
reify(gaceq(M_00007_00003,M_00006_00004), aux110)
reify(gaceq(M_00002_00001,M_00003_00001), aux111)
reify(gaceq(M_00007_00001,M_00008_00001), aux112)
reify(gaceq(M_00007_00002,M_00008_00002), aux113)
reify(gaceq(M_00007_00003,M_00008_00003), aux114)
reify(gaceq(M_00007_00005,M_00006_00005), aux115)
reify(gaceq(M_00007_00002,M_00006_00003), aux116)
reify(gaceq(M_00005_00006,M_00006_00005), aux117)
reify(gaceq(M_00003_00005,M_00004_00005), aux118)
div(M_00003_00004, 13, aux119)
div(M_00003_00006, 13, aux120)
div(M_00003_00005, 13, aux121)
reify(gaceq(M_00007_00005,M_00008_00004), aux122)
reify(gaceq(M_00002_00004,M_00003_00003), aux123)
reify(gaceq(M_00002_00003,M_00003_00003), aux124)
div(M_00005_00004, 13, aux125)
reify(gaceq(M_00004_00001,M_00005_00001), aux126)
reify(gaceq(M_00007_00005,M_00006_00006), aux127)
div(M_00009_00002, 13, aux128)
div(M_00004_00008, 13, aux129)
div(M_00004_00001, 13, aux130)
reify(gaceq(M_00004_00006,M_00005_00006), aux131)
reify(gaceq(M_00007_00004,M_00006_00005), aux132)
reify(gaceq(M_00007_00003,M_00006_00003), aux133)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,21),w-literal(M_00002_00002,9),w-literal(M_00002_00003,10),w-literal(M_00002_00004,4),w-literal(M_00002_00005,11),w-literal(M_00002_00006,15),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,4),w-literal(M_00002_00003,10),w-literal(M_00002_00004,21),w-literal(M_00002_00005,11),w-literal(M_00002_00006,15),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,9),w-literal(M_00002_00003,10),w-literal(M_00002_00004,15),w-literal(M_00002_00005,4),w-literal(M_00002_00006,11),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,9),w-literal(M_00002_00003,10),w-literal(M_00002_00004,21),w-literal(M_00002_00005,4),w-literal(M_00002_00006,11),w-literal(M_00002_00007,15),w-literal(M_00002_00008,18)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,9),w-literal(M_00002_00003,10),w-literal(M_00002_00004,21),w-literal(M_00002_00005,4),w-literal(M_00002_00006,11),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,9),w-literal(M_00002_00003,10),w-literal(M_00002_00004,21),w-literal(M_00002_00005,11),w-literal(M_00002_00006,15),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,9),w-literal(M_00002_00003,11),w-literal(M_00002_00004,21),w-literal(M_00002_00005,4),w-literal(M_00002_00006,15),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,10),w-literal(M_00002_00003,21),w-literal(M_00002_00004,4),w-literal(M_00002_00005,11),w-literal(M_00002_00006,15),w-literal(M_00002_00007,18),w-literal(M_00002_00008,32)})})
watched-or({watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux52,1),w-literal(aux124,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux135,13,0),div(M_00002_00001, 13, aux29)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux124,1),w-literal(aux70,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1)}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),watched-or({w-literal(aux43,2),modulo(aux136,13,0)}),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux70,1),w-literal(aux87,1),w-literal(aux69,1),gaceq(M_00002_00007,M_00003_00007)}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux70,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux137,13,0),w-literal(aux14,0)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux70,1),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux138,13,0),w-literal(aux14,1)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux70,1),w-literal(aux87,1),w-literal(aux69,1),w-literal(aux26,1),watched-or({modulo(aux139,13,0),w-literal(aux43,1)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux140,13,0),w-literal(aux29,0)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux87,1),w-literal(aux69,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux26,1),watched-or({modulo(aux141,13,0),w-literal(aux29,1)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),gaceq(M_00002_00002,M_00003_00001),w-literal(aux67,1),w-literal(aux123,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),modulo(aux142,13,0)}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux123,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux143,13,0),gaceq(aux17,aux29)})}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux70,1),w-literal(aux87,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux144,13,0),gaceq(aux17,aux14)})}),watched-and({w-literal(M_00003_00007,2),w-literal(M_00003_00009,29),modulo(aux145,13,0),w-literal(aux111,1),w-literal(aux52,1),w-literal(aux124,1),w-literal(aux70,1),w-literal(aux87,1),w-literal(aux69,1),gaceq(M_00002_00008,M_00003_00008)}),watched-and({w-literal(M_00003_00008,29),w-literal(M_00003_00009,2),w-literal(aux111,1),w-literal(aux67,1),w-literal(aux123,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux103,1),w-literal(aux26,1),watched-or({modulo(aux146,13,0),w-literal(aux17,0)})})})
watched-or({watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux147,13,0),gaceq(aux86,aux119)})}),watched-and({w-literal(aux25,1),w-literal(aux73,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux148,13,0),gaceq(aux54,aux119)})}),watched-and({w-literal(aux79,1),w-literal(aux73,1),w-literal(aux68,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux149,13,0),gaceq(aux85,aux121)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux68,1),w-literal(aux118,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux150,13,0),gaceq(aux86,aux120)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux107,1),w-literal(aux90,1),modulo(aux151,13,0)}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux118,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux152,13,0),gaceq(aux120,aux83)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux153,13,0),gaceq(aux83,aux84)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux118,1),w-literal(aux107,1),w-literal(aux90,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux154,13,0),gaceq(aux120,aux53)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux107,1),w-literal(aux18,1),watched-or({modulo(aux155,13,0),gaceq(aux84,aux53)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux156,13,0),gaceq(aux121,aux120)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux68,1),w-literal(aux49,1),w-literal(aux107,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux18,1),watched-or({modulo(aux157,13,0),gaceq(aux121,aux84)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux89,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux158,13,0),gaceq(aux54,aux85)})}),watched-and({w-literal(aux79,1),w-literal(aux89,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux159,13,0),gaceq(aux85,aux86)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux160,13,0),gaceq(aux119,aux121)})}),watched-and({w-literal(aux79,1),w-literal(aux25,1),w-literal(aux73,1),w-literal(aux118,1),w-literal(aux49,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux161,13,0),gaceq(aux119,aux83)})})})
watched-or({watched-and({w-literal(aux126,1),w-literal(aux99,1),w-literal(aux66,1),w-literal(aux31,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux36,aux35),modulo(aux162,13,0)})}),watched-and({w-literal(aux41,1),w-literal(aux39,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux31,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux130,aux108),modulo(aux163,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux39,1),w-literal(aux82,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux36,aux109),modulo(aux164,13,0)})}),watched-and({modulo(aux165,13,0),w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux82,1),w-literal(aux30,1),w-literal(aux131,1),w-literal(aux98,1)}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux82,1),w-literal(aux30,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux37,aux38),modulo(aux166,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux82,1),w-literal(aux30,1),w-literal(aux131,1),w-literal(aux100,1),watched-or({gaceq(aux38,aux129),modulo(aux167,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux82,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux109,aux37),modulo(aux168,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux82,1),w-literal(aux131,1),w-literal(aux98,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux109,aux129),modulo(aux169,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux31,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux108,aux109),modulo(aux170,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux30,1),w-literal(aux131,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux100,1),watched-or({gaceq(aux108,aux38),modulo(aux171,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux99,1),w-literal(aux66,1),w-literal(aux31,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux130,aux36),modulo(aux172,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux66,1),w-literal(aux31,1),w-literal(aux34,1),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux35,aux108),modulo(aux173,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux41,1),w-literal(aux82,1),w-literal(aux30,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux72,1),w-literal(aux100,1),watched-or({gaceq(aux35,aux37),modulo(aux174,13,0)})})})
watched-or({watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux27,1),w-literal(aux91,1),w-literal(aux51,1),w-literal(aux93,1),modulo(aux175,13,0)}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux27,1),w-literal(aux88,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux176,13,0),gaceq(aux125,aux96)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux27,1),w-literal(aux91,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux177,13,0),gaceq(aux96,aux94)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux27,1),w-literal(aux51,1),w-literal(aux93,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux178,13,0),gaceq(aux125,aux55)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux27,1),w-literal(aux91,1),w-literal(aux51,1),w-literal(aux28,1),watched-or({modulo(aux179,13,0),gaceq(aux94,aux55)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux106,1),w-literal(aux88,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux180,13,0),gaceq(aux97,aux125)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux91,1),w-literal(aux51,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux28,1),watched-or({modulo(aux181,13,0),gaceq(aux97,aux94)})}),watched-and({w-literal(aux40,1),w-literal(aux92,1),w-literal(aux106,1),w-literal(aux88,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux182,13,0),gaceq(aux95,aux97)})}),watched-and({w-literal(aux40,1),w-literal(aux27,1),w-literal(aux91,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux183,13,0),gaceq(aux95,aux96)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux92,1),w-literal(aux106,1),w-literal(aux88,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux184,13,0),gaceq(aux56,aux95)})}),watched-and({w-literal(aux22,1),w-literal(aux27,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux88,1),w-literal(aux117,1),w-literal(aux28,1),watched-or({modulo(aux185,13,0),gaceq(aux56,aux125)})})})
watched-or({watched-and({w-literal(aux71,1),w-literal(aux24,1),w-literal(aux110,1),w-literal(aux132,1),w-literal(aux127,1),watched-or({gaceq(aux63,aux62),modulo(aux186,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux24,1),w-literal(aux133,1),w-literal(aux132,1),w-literal(aux127,1),watched-or({gaceq(aux62,aux61),modulo(aux187,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux24,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux115,1),watched-or({gaceq(aux63,aux81),modulo(aux188,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux24,1),w-literal(aux133,1),w-literal(aux13,1),w-literal(aux115,1),modulo(aux189,13,0)}),watched-and({w-literal(aux71,1),w-literal(aux24,1),w-literal(aux133,1),w-literal(aux13,1),w-literal(aux127,1),watched-or({gaceq(aux61,aux81),modulo(aux190,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux116,1),w-literal(aux110,1),w-literal(aux132,1),w-literal(aux127,1),watched-or({gaceq(aux64,aux63),modulo(aux191,13,0)})}),watched-and({w-literal(aux71,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux133,1),w-literal(aux13,1),w-literal(aux127,1),watched-or({gaceq(aux64,aux61),modulo(aux192,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux116,1),w-literal(aux110,1),w-literal(aux132,1),w-literal(aux127,1),watched-or({gaceq(aux80,aux64),modulo(aux193,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux24,1),w-literal(aux133,1),w-literal(aux132,1),w-literal(aux127,1),watched-or({gaceq(aux80,aux62),modulo(aux194,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux195,13,0),gaceq(aux19,aux102)}),w-literal(aux113,1),w-literal(aux114,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux122,1)}),watched-and({modulo(aux196,13,0),w-literal(aux112,1),w-literal(aux113,1),w-literal(aux114,1),w-literal(aux74,1)}),watched-and({watched-or({modulo(aux197,13,0),gaceq(aux19,aux101)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux75,1),w-literal(aux105,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux198,13,0),gaceq(aux101,aux21)}),w-literal(aux112,1),w-literal(aux114,1),w-literal(aux74,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux199,13,0),gaceq(aux101,aux20)}),w-literal(aux112,1),w-literal(aux75,1),w-literal(aux105,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux200,13,0),gaceq(aux20,aux102)}),w-literal(aux112,1),w-literal(aux113,1),w-literal(aux105,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux201,13,0),gaceq(aux102,aux21)}),w-literal(aux112,1),w-literal(aux113,1),w-literal(aux114,1),w-literal(aux122,1)})})
watched-or({watched-and({watched-or({gaceq(aux57,aux60),modulo(aux202,13,0)}),w-literal(aux47,1),w-literal(aux46,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux59,aux58),modulo(aux203,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux77,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux59,aux60),modulo(aux204,13,0)}),w-literal(aux46,1),w-literal(aux78,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux58,aux57),modulo(aux205,13,0)}),w-literal(aux47,1),w-literal(aux77,1),w-literal(aux45,1)}),watched-and({w-literal(aux47,1),w-literal(aux46,1),w-literal(aux78,1),modulo(aux206,13,0)})})
watched-or({watched-and({watched-or({modulo(aux207,13,0),div(M_00009_00001, 13, aux128)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux33,1)}),watched-and({watched-or({modulo(aux208,13,0),div(M_00009_00003, 13, aux128)}),w-literal(aux32,1),w-literal(aux33,1)}),watched-and({modulo(aux209,13,0),w-literal(aux32,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux134),modulo(aux210,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux211,13,0)})})
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux135)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux135)
weightedsumleq([-1,1],[M_00002_00008,29],aux136)
weightedsumgeq([-1,1],[M_00002_00008,29],aux136)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux137)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux137)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux138)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux138)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux139)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux139)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux140)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux140)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux141)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux141)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux142)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux142)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux144)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux144)
weightedsumleq([-1,1],[M_00002_00007,2],aux145)
weightedsumgeq([-1,1],[M_00002_00007,2],aux145)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux146)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux146)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux147)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux147)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux148)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux148)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux149)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux149)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux150)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux150)
weightedsumleq([-1,1],[M_00003_00009,-1],aux151)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux151)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux152)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux152)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux153)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux153)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux154)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux154)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux155)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux155)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux156)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux156)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux157)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux157)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux158)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux158)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux159)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux159)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux160)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux160)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux161)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux161)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux162)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux162)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux163)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux163)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux164)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux164)
weightedsumleq([-1,1],[M_00004_00008,-1],aux165)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux165)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux166)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux166)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux167)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux167)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux168)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux168)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux169)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux169)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux170)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux170)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux171)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux171)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux172)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux172)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux173)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux173)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux174)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux174)
weightedsumleq([1,-1],[-1,M_00005_00007],aux175)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux175)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux176)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux176)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux177)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux177)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux178)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux178)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux179)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux179)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux180)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux180)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux181)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux181)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux182)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux182)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux183)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux183)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux184)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux184)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux185)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux185)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux186)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux186)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux187)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux187)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux188)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux188)
weightedsumleq([1,-1],[-1,M_00006_00006],aux189)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux189)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux190)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux190)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux191)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux191)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux192)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux192)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux193)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux193)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux194)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux194)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux195)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux195)
weightedsumleq([-1,1],[M_00007_00005,-1],aux196)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux196)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux197)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux197)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux198)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux198)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux199)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux199)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux200)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux200)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux201)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux201)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux202)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux202)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux203)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux203)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux204)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux204)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux205)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux205)
weightedsumleq([-1,1],[M_00008_00004,-1],aux206)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux206)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux207)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux207)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux208)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux208)
weightedsumleq([1,-1],[-1,M_00009_00003],aux209)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux209)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux210)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux210)
weightedsumleq([-1,1],[M_00010_00002,-1],aux211)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux211)
**EOF**
