MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 95
# CSE_active_eliminated_expressions = 347
# CSE_active_total_size = 285
**VARIABLES**
DISCRETE M_00002_00004 #
{33..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00006 #
{41..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00007 #
{30..41}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00002_00008 #
{9..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [9,11,14,14,30,30])
**VARIABLES**
DISCRETE M_00003_00003 #
{11..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [11,11,30,30,33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00004 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00006 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00007 #
{9..41}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [9,11,14,14,30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00004_00001 #
{2..41}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00004_00003 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00006 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00007 #
{9..41}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [9,11,14,14,30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00005_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00002 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00003 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00005 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00006 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00002 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00003 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00005 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00006 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00002 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00003 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00005 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00002 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00003 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00002 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00003 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00002 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,9,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
BOOL aux13 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
{2..3}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005/13)
{2..3}
BOOL aux18 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux22 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux27 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux28 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
DISCRETE aux29 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux32 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux37 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux38 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux39, [0,0,2,2])
**VARIABLES**
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux53 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux54 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux55 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux56 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux57 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux58 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
{2..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004/13)
{2..3}
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005/13)
{2..3}
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
DISCRETE aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux77 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux89 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux90 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux91 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux92 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux96 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux97 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
DISCRETE aux99 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
BOOL aux100 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux101 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00005/13)
{2..3}
BOOL aux105 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux106 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux107 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux108 #
{0..3}
DISCRETE aux109 #( - M_00002_00008 + 35)
{5..26}
**CONSTRAINTS**
w-inintervalset(aux109, [5,5,21,21,24,26])
**VARIABLES**
DISCRETE aux110 #(M_00002_00004 + -11)
{22..26}
**CONSTRAINTS**
w-inintervalset(aux110, [22,22,24,24,26,26])
**VARIABLES**
DISCRETE aux111 #( - M_00002_00005 + M_00002_00006)
{-2..13}
**CONSTRAINTS**
w-inintervalset(aux111, [-2,-2,0,0,2,2,4,4,6,6,8,8,10,11,13,13])
**VARIABLES**
DISCRETE aux112 #( - M_00002_00006 + M_00002_00007)
{-11..-2}
**CONSTRAINTS**
w-inintervalset(aux112, [-11,-10,-8,-8,-6,-6,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux113 #( - M_00002_00005 + M_00002_00008)
{-34..-7}
**CONSTRAINTS**
w-inintervalset(aux113, [-34,-19,-16,-16,-13,-13,-11,-11,-7,-7])
**VARIABLES**
DISCRETE aux114 #( - M_00002_00007 + M_00002_00008)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux114, [-32,-30,-28,-19,-16,-16,-11,-11])
**VARIABLES**
DISCRETE aux115 #( - M_00002_00004 + M_00002_00005)
{-3..6}
**CONSTRAINTS**
w-inintervalset(aux115, [-3,-2,0,0,2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux116 #( - M_00002_00004 + M_00002_00007)
{-7..8}
**CONSTRAINTS**
w-inintervalset(aux116, [-7,-7,-5,-2,0,0,2,2,4,4,6,6,8,8])
**VARIABLES**
DISCRETE aux117 #( - M_00003_00003 + M_00003_00006)
{-7..32}
**CONSTRAINTS**
w-inintervalset(aux117, [-7,-7,-5,-2,0,0,2,8,10,11,13,13,19,19,22,22,24,24,26,26,30,30,32,32])
**VARIABLES**
DISCRETE aux118 #(M_00003_00004 + -2)
{28..41}
**CONSTRAINTS**
w-inintervalset(aux118, [28,28,31,31,33,33,35,35,39,39,41,41])
**VARIABLES**
DISCRETE aux119 #( - M_00003_00007 + 35)
{-6..26}
**CONSTRAINTS**
w-inintervalset(aux119, [-6,-6,-2,-2,0,0,2,2,5,5,21,21,24,26])
**VARIABLES**
DISCRETE aux120 #( - M_00003_00005 + 35)
{-8..5}
**CONSTRAINTS**
w-inintervalset(aux120, [-8,-8,-6,-6,-2,-2,0,0,2,2,5,5])
**VARIABLES**
DISCRETE aux121 #( - M_00003_00004 + M_00003_00005)
{-7..13}
**CONSTRAINTS**
w-inintervalset(aux121, [-7,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux122 #( - M_00003_00005 + M_00003_00006)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux122, [-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux123 #( - M_00003_00004 + M_00003_00007)
{-34..8}
**CONSTRAINTS**
w-inintervalset(aux123, [-34,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,0,2,8])
**VARIABLES**
DISCRETE aux124 #( - M_00003_00003 + M_00003_00004)
{6..30}
**CONSTRAINTS**
w-inintervalset(aux124, [6,8,10,11,13,13,19,19,22,22,24,24,26,26,30,30])
**VARIABLES**
DISCRETE aux125 #( - M_00003_00006 + M_00003_00007)
{-34..0}
**CONSTRAINTS**
w-inintervalset(aux125, [-34,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,0])
**VARIABLES**
DISCRETE aux126 #(M_00004_00003 + -14)
{-3..29}
**CONSTRAINTS**
w-inintervalset(aux126, [-3,-3,0,0,16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux127 #( - M_00004_00001 + 14)
{-27..12}
**CONSTRAINTS**
w-inintervalset(aux127, [-27,-27,-23,-23,-21,-21,-19,-19,-16,-16,0,0,3,5,12,12])
**VARIABLES**
DISCRETE aux128 #( - M_00004_00005 + M_00004_00006)
{-34..13}
**CONSTRAINTS**
w-inintervalset(aux128, [-34,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux129 #( - M_00004_00006 + M_00004_00007)
{-34..26}
**CONSTRAINTS**
w-inintervalset(aux129, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,11,11,16,16,19,26])
**VARIABLES**
DISCRETE aux130 #( - M_00004_00004 + M_00004_00005)
{-13..34}
**CONSTRAINTS**
w-inintervalset(aux130, [-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux131 #( - M_00004_00004 + M_00004_00007)
{-32..26}
**CONSTRAINTS**
w-inintervalset(aux131, [-32,-19,-16,-16,-13,-13,-11,-10,-8,8,11,11,16,16,19,26])
**VARIABLES**
DISCRETE aux132 #( - M_00004_00003 + M_00004_00004)
{-13..32}
**CONSTRAINTS**
w-inintervalset(aux132, [-13,-13,-11,-10,-8,0,2,8,10,11,13,13,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux133 #( - M_00004_00003 + M_00004_00006)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux133, [-34,-19,-16,-16,-13,-13,-11,-10,-8,0,2,8,10,11,13,13,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux134 #( - M_00004_00005 + 10)
{-33..-20}
**CONSTRAINTS**
w-inintervalset(aux134, [-33,-33,-31,-31,-27,-27,-25,-25,-23,-23,-20,-20])
**VARIABLES**
DISCRETE aux135 #(M_00004_00005 + -14)
{16..29}
**CONSTRAINTS**
w-inintervalset(aux135, [16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux136 #( - M_00004_00001 + M_00004_00004)
{0..41}
**CONSTRAINTS**
w-inintervalset(aux136, [0,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux137 #( - M_00004_00007 + 10)
{-31..1}
**CONSTRAINTS**
w-inintervalset(aux137, [-31,-31,-27,-27,-25,-25,-23,-23,-20,-20,-4,-4,-1,1])
**VARIABLES**
DISCRETE aux138 #(10 - M_00005_00004)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux138, [-33,-33,-31,-31,-27,-27,-25,-25,-23,-23,-20,-20,-4,-4,-1,1])
**VARIABLES**
DISCRETE aux139 #( - M_00005_00001 + M_00005_00002)
{-29..41}
**CONSTRAINTS**
w-inintervalset(aux139, [-29,-29,-27,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux140 #(10 - M_00005_00006)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux140, [-33,-33,-31,-31,-27,-27,-25,-25,-23,-23,-20,-20,-4,-4,-1,1])
**VARIABLES**
DISCRETE aux141 #( - M_00005_00001 + M_00005_00004)
{-32..41}
**CONSTRAINTS**
w-inintervalset(aux141, [-32,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux142 #( - M_00005_00003 + M_00005_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux142, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux143 #( - M_00005_00004 + M_00005_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux143, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux144 #( - M_00005_00003 + M_00005_00006)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux144, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,32])
**VARIABLES**
DISCRETE aux145 #( - M_00005_00005 + M_00005_00006)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux145, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,32])
**VARIABLES**
DISCRETE aux146 #( - M_00005_00002 + M_00005_00003)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux146, [-34,-19,-16,-16,-13,-13,-11,-10,-8,0,2,8,10,11,13,13,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux147 #( - M_00005_00002 + M_00005_00005)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux147, [-34,-19,-16,-16,-13,-13,-11,-10,-8,0,2,8,10,11,13,13,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux148 #( - M_00006_00003 + M_00006_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux148, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux149 #( - M_00006_00004 + M_00006_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux149, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux150 #( - M_00006_00003 + M_00006_00006)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux150, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,32])
**VARIABLES**
DISCRETE aux151 #(-1 - M_00006_00006)
{-44..-10}
**CONSTRAINTS**
w-inintervalset(aux151, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-10])
**VARIABLES**
DISCRETE aux152 #( - M_00006_00005 + M_00006_00006)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux152, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,32])
**VARIABLES**
DISCRETE aux153 #( - M_00006_00002 + M_00006_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux153, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux154 #( - M_00006_00002 + M_00006_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux154, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux155 #( - M_00006_00001 + M_00006_00002)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux155, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux156 #( - M_00006_00001 + M_00006_00004)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux156, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux157 #( - M_00007_00001 + M_00007_00004)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux157, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux158 #( - M_00007_00005 + -1)
{-44..-10}
**CONSTRAINTS**
w-inintervalset(aux158, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-10])
**VARIABLES**
DISCRETE aux159 #( - M_00007_00001 + M_00007_00002)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux159, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux160 #( - M_00007_00002 + M_00007_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux160, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux161 #( - M_00007_00002 + M_00007_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux161, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux162 #( - M_00007_00003 + M_00007_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux162, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux163 #( - M_00007_00004 + M_00007_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux163, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux164 #( - M_00008_00003 + M_00008_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux164, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux165 #( - M_00008_00001 + M_00008_00002)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux165, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux166 #( - M_00008_00001 + M_00008_00004)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux166, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux167 #( - M_00008_00002 + M_00008_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux167, [-34,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,34])
**VARIABLES**
DISCRETE aux168 #( - M_00008_00004 + -1)
{-44..-10}
**CONSTRAINTS**
w-inintervalset(aux168, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-10])
**VARIABLES**
DISCRETE aux169 #( - M_00009_00001 + M_00009_00002)
{-34..41}
**CONSTRAINTS**
w-inintervalset(aux169, [-34,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39,41,41])
**VARIABLES**
DISCRETE aux170 #( - M_00009_00002 + M_00009_00003)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux170, [-27,-19,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,19,27])
**VARIABLES**
DISCRETE aux171 #(-1 - M_00009_00003)
{-44..-10}
**CONSTRAINTS**
w-inintervalset(aux171, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-10])
**VARIABLES**
DISCRETE aux172 #( - M_00010_00001 + M_00010_00002)
{-27..39}
**CONSTRAINTS**
w-inintervalset(aux172, [-27,-19,-16,-16,-13,-13,-11,-10,-8,13,16,16,19,35,39,39])
**VARIABLES**
DISCRETE aux173 #( - M_00010_00002 + -1)
{-44..-10}
**CONSTRAINTS**
w-inintervalset(aux173, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-10])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[2, 14, 11, 33, 37, 43, 41, 30, 9, 35, 10]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00004_00001],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux108)
reify(gaceq(M_00005_00003,M_00006_00003), aux13)
reify(gaceq(M_00007_00004,M_00006_00004), aux14)
div(M_00002_00008, 13, aux15)
div(M_00002_00007, 13, aux16)
div(M_00002_00005, 13, aux17)
reify(gaceq(M_00004_00001,M_00005_00001), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00003, 13, aux20)
div(M_00007_00005, 13, aux21)
reify(gaceq(M_00007_00002,M_00006_00002), aux22)
reify(gaceq(M_00004_00005,M_00005_00004), aux23)
reify(gaceq(M_00010_00001,M_00009_00001), aux24)
reify(gaceq(M_00010_00002,M_00009_00003), aux25)
reify(gaceq(M_00004_00006,M_00005_00005), aux26)
div(M_00004_00003, 13, aux27)
div(M_00004_00006, 13, aux28)
div(M_00004_00007, 13, aux29)
div(M_00002_00006, 13, 3)
div(M_00002_00004, 13, 2)
reify(gaceq(M_00005_00001,M_00006_00001), aux32)
reify(gaceq(M_00008_00004,M_00009_00003), aux33)
reify(gaceq(M_00008_00002,M_00009_00002), aux34)
reify(gaceq(M_00008_00001,M_00009_00001), aux35)
reify(gaceq(M_00003_00004,M_00004_00004), aux36)
reify(gaceq(M_00003_00003,M_00004_00003), aux37)
reify(gaceq(M_00005_00004,M_00006_00004), aux38)
div(M_00003_00003, 13, aux39)
div(M_00005_00001, 13, aux40)
div(M_00008_00003, 13, aux41)
div(M_00008_00002, 13, aux42)
div(M_00008_00001, 13, aux43)
div(M_00008_00004, 13, aux44)
div(M_00006_00005, 13, aux45)
div(M_00006_00004, 13, aux46)
div(M_00006_00003, 13, aux47)
div(M_00006_00002, 13, aux48)
reify(gaceq(M_00004_00004,M_00005_00003), aux49)
reify(gaceq(M_00004_00006,M_00005_00006), aux50)
reify(gaceq(M_00002_00005,M_00003_00004), aux51)
reify(gaceq(M_00002_00007,M_00003_00007), aux52)
reify(gaceq(M_00002_00007,M_00003_00006), aux53)
reify(gaceq(M_00002_00005,M_00003_00005), aux54)
reify(gaceq(M_00002_00006,M_00003_00006), aux55)
reify(gaceq(M_00004_00003,M_00005_00003), aux56)
reify(gaceq(M_00007_00001,M_00006_00001), aux57)
reify(gaceq(M_00004_00007,M_00005_00006), aux58)
reify(gaceq(M_00007_00004,M_00008_00004), aux59)
reify(gaceq(M_00007_00003,M_00008_00002), aux60)
reify(gaceq(M_00008_00003,M_00009_00002), aux61)
reify(gaceq(M_00008_00003,M_00009_00003), aux62)
div(M_00006_00001, 13, aux63)
div(M_00006_00006, 13, aux64)
div(M_00003_00006, 13, aux65)
div(M_00003_00007, 13, aux66)
div(M_00003_00004, 13, aux67)
div(M_00003_00005, 13, aux68)
reify(gaceq(M_00002_00004,M_00003_00004), aux69)
reify(gaceq(M_00005_00005,M_00006_00004), aux70)
reify(gaceq(M_00005_00003,M_00006_00002), aux71)
div(M_00005_00006, 13, aux72)
div(M_00005_00002, 13, aux73)
div(M_00005_00005, 13, aux74)
div(M_00005_00003, 13, aux75)
reify(gaceq(M_00004_00003,M_00005_00002), aux76)
reify(gaceq(M_00003_00007,M_00004_00006), aux77)
div(M_00007_00002, 13, aux78)
div(M_00007_00004, 13, aux79)
reify(gaceq(M_00003_00005,M_00004_00004), aux80)
reify(gaceq(M_00003_00006,M_00004_00006), aux81)
reify(gaceq(M_00007_00004,M_00008_00003), aux82)
reify(gaceq(M_00005_00004,M_00006_00003), aux83)
reify(gaceq(M_00005_00005,M_00006_00005), aux84)
reify(gaceq(M_00003_00006,M_00004_00005), aux85)
reify(gaceq(M_00003_00005,M_00004_00005), aux86)
div(M_00004_00004, 13, aux87)
reify(gaceq(M_00007_00003,M_00006_00004), aux88)
reify(gaceq(M_00005_00002,M_00006_00002), aux89)
reify(gaceq(M_00002_00008,M_00003_00007), aux90)
reify(gaceq(M_00007_00001,M_00008_00001), aux91)
reify(gaceq(M_00007_00002,M_00008_00002), aux92)
reify(gaceq(M_00007_00003,M_00008_00003), aux93)
reify(gaceq(M_00007_00005,M_00006_00005), aux94)
reify(gaceq(M_00007_00002,M_00006_00003), aux95)
reify(gaceq(M_00005_00006,M_00006_00005), aux96)
reify(gaceq(M_00007_00005,M_00008_00004), aux97)
reify(gaceq(M_00002_00006,M_00003_00005), aux98)
div(M_00005_00004, 13, aux99)
reify(gaceq(M_00004_00004,M_00005_00004), aux100)
reify(gaceq(M_00007_00005,M_00006_00006), aux101)
div(M_00009_00002, 13, aux102)
div(M_00004_00001, 13, aux103)
div(M_00004_00005, 13, aux104)
reify(gaceq(M_00004_00005,M_00005_00005), aux105)
reify(gaceq(M_00007_00004,M_00006_00005), aux106)
reify(gaceq(M_00007_00003,M_00006_00003), aux107)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007],[-1],[0])
gccweak([M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,30),w-literal(M_00002_00006,43),w-literal(M_00002_00008,9),w-literal(M_00002_00007,41)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30)}),watched-and({w-literal(M_00002_00004,37),w-literal(M_00002_00005,43),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9)})})
watched-or({watched-and({w-literal(M_00003_00003,11),watched-or({w-literal(aux15,2),modulo(aux109,13,0)}),w-literal(aux69,1),w-literal(aux54,1),w-literal(aux55,1),w-literal(aux52,1)}),watched-and({modulo(aux110,13,0),gaceq(M_00002_00004,M_00003_00003),w-literal(aux51,1),w-literal(aux98,1),w-literal(aux53,1),w-literal(aux90,1)}),watched-and({w-literal(M_00003_00003,11),w-literal(aux69,1),w-literal(aux98,1),w-literal(aux53,1),w-literal(aux90,1),watched-or({modulo(aux111,13,0),w-literal(aux17,3)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux69,1),w-literal(aux54,1),w-literal(aux53,1),w-literal(aux90,1),watched-or({modulo(aux112,13,0),w-literal(aux16,3)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux69,1),w-literal(aux55,1),w-literal(aux52,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux113,13,0),gaceq(aux17,aux15)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux69,1),w-literal(aux54,1),w-literal(aux55,1),w-literal(aux90,1),watched-or({modulo(aux114,13,0),gaceq(aux16,aux15)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux51,1),w-literal(aux98,1),w-literal(aux53,1),w-literal(aux90,1),watched-or({modulo(aux115,13,0),w-literal(aux17,2)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux54,1),w-literal(aux55,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux90,1),watched-or({modulo(aux116,13,0),w-literal(aux16,2)})})})
watched-or({watched-and({w-literal(aux36,1),w-literal(aux86,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux77,1),watched-or({modulo(aux117,13,0),gaceq(aux39,aux65)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({w-literal(aux37,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux80,1),w-literal(aux85,1),w-literal(aux77,1),modulo(aux118,13,0),w-literal(M_00004_00007,35)}),watched-and({watched-or({modulo(aux119,13,0),w-literal(aux66,2)}),w-literal(aux37,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux81,1),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({watched-or({modulo(aux120,13,0),w-literal(aux68,2)}),w-literal(aux37,1),w-literal(aux36,1),w-literal(aux81,1),gaceq(M_00003_00007,M_00004_00007),w-literal(M_00004_00001,2),w-literal(M_00004_00005,35)}),watched-and({w-literal(aux37,1),w-literal(aux80,1),w-literal(aux85,1),w-literal(aux77,1),watched-or({modulo(aux121,13,0),gaceq(aux67,aux68)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({w-literal(aux37,1),w-literal(aux36,1),w-literal(aux85,1),w-literal(aux77,1),watched-or({modulo(aux122,13,0),gaceq(aux68,aux65)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({w-literal(aux37,1),w-literal(aux86,1),w-literal(aux81,1),gaceq(M_00003_00007,M_00004_00004),watched-or({modulo(aux123,13,0),gaceq(aux67,aux66)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux80,1),w-literal(aux85,1),w-literal(aux77,1),watched-or({modulo(aux124,13,0),gaceq(aux39,aux67)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)}),watched-and({w-literal(aux37,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux77,1),watched-or({modulo(aux125,13,0),gaceq(aux65,aux66)}),w-literal(M_00004_00001,2),w-literal(M_00004_00007,35)})})
watched-or({watched-and({watched-or({modulo(aux126,13,0),w-literal(aux27,1)}),w-literal(aux18,1),w-literal(aux76,1),w-literal(aux49,1),w-literal(aux23,1),w-literal(aux26,1),w-literal(aux58,1)}),watched-and({w-literal(M_00005_00001,14),watched-or({modulo(aux127,13,0),w-literal(aux103,1)}),w-literal(aux76,1),w-literal(aux49,1),w-literal(aux23,1),w-literal(aux26,1),w-literal(aux58,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux100,1),w-literal(aux26,1),w-literal(aux58,1),watched-or({gaceq(aux104,aux28),modulo(aux128,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux100,1),w-literal(aux105,1),w-literal(aux58,1),watched-or({gaceq(aux28,aux29),modulo(aux129,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux23,1),w-literal(aux26,1),w-literal(aux58,1),watched-or({gaceq(aux87,aux104),modulo(aux130,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux105,1),w-literal(aux50,1),gaceq(M_00004_00007,M_00005_00004),watched-or({gaceq(aux87,aux29),modulo(aux131,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux49,1),w-literal(aux23,1),w-literal(aux26,1),w-literal(aux58,1),watched-or({gaceq(aux27,aux87),modulo(aux132,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux18,1),w-literal(aux100,1),w-literal(aux105,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux58,1),watched-or({gaceq(aux27,aux28),modulo(aux133,13,0)})}),watched-and({w-literal(M_00005_00005,10),w-literal(M_00005_00002,14),modulo(aux134,13,0),w-literal(M_00004_00007,10),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux100,1),w-literal(aux50,1)}),watched-and({modulo(aux135,13,0),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux100,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux26,1),w-literal(aux58,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux56,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux23,1),w-literal(aux26,1),w-literal(aux58,1),watched-or({gaceq(aux103,aux87),modulo(aux136,13,0)})}),watched-and({w-literal(M_00005_00002,14),watched-or({modulo(aux137,13,0),w-literal(aux29,0)}),w-literal(aux18,1),w-literal(aux56,1),w-literal(aux100,1),w-literal(aux105,1),w-literal(aux50,1)})})
watched-or({watched-and({watched-or({w-literal(aux99,0),modulo(aux138,13,0)}),w-literal(aux32,1),w-literal(aux89,1),w-literal(aux13,1),w-literal(aux84,1),gaceq(M_00005_00006,M_00006_00006),w-literal(M_00006_00004,10)}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux71,1),w-literal(aux83,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux139,13,0),gaceq(aux40,aux73)}),w-literal(M_00006_00006,10)}),watched-and({watched-or({w-literal(aux72,0),modulo(aux140,13,0)}),w-literal(aux32,1),w-literal(aux89,1),w-literal(aux13,1),w-literal(aux38,1),w-literal(aux84,1),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux89,1),w-literal(aux13,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux141,13,0),gaceq(aux40,aux99)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux89,1),w-literal(aux83,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux142,13,0),gaceq(aux75,aux99)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux89,1),w-literal(aux13,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux143,13,0),gaceq(aux99,aux74)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux89,1),w-literal(aux38,1),w-literal(aux84,1),gaceq(M_00005_00006,M_00006_00003),watched-or({modulo(aux144,13,0),gaceq(aux75,aux72)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux89,1),w-literal(aux13,1),w-literal(aux38,1),w-literal(aux96,1),watched-or({modulo(aux145,13,0),gaceq(aux74,aux72)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux71,1),w-literal(aux83,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux146,13,0),gaceq(aux73,aux75)}),w-literal(M_00006_00006,10)}),watched-and({w-literal(aux32,1),w-literal(aux13,1),w-literal(aux38,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux96,1),watched-or({modulo(aux147,13,0),gaceq(aux73,aux74)}),w-literal(M_00006_00006,10)})})
watched-or({watched-and({w-literal(aux57,1),w-literal(aux22,1),w-literal(aux88,1),w-literal(aux106,1),w-literal(aux101,1),watched-or({gaceq(aux47,aux46),modulo(aux148,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux22,1),w-literal(aux107,1),w-literal(aux106,1),w-literal(aux101,1),watched-or({gaceq(aux46,aux45),modulo(aux149,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux22,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux14,1),w-literal(aux94,1),watched-or({gaceq(aux47,aux64),modulo(aux150,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux22,1),w-literal(aux107,1),w-literal(aux14,1),w-literal(aux94,1),modulo(aux151,13,0)}),watched-and({w-literal(aux57,1),w-literal(aux22,1),w-literal(aux107,1),w-literal(aux14,1),w-literal(aux101,1),watched-or({gaceq(aux45,aux64),modulo(aux152,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux95,1),w-literal(aux88,1),w-literal(aux106,1),w-literal(aux101,1),watched-or({gaceq(aux48,aux47),modulo(aux153,13,0)})}),watched-and({w-literal(aux57,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux107,1),w-literal(aux14,1),w-literal(aux101,1),watched-or({gaceq(aux48,aux45),modulo(aux154,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux95,1),w-literal(aux88,1),w-literal(aux106,1),w-literal(aux101,1),watched-or({gaceq(aux63,aux48),modulo(aux155,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux22,1),w-literal(aux107,1),w-literal(aux106,1),w-literal(aux101,1),watched-or({gaceq(aux63,aux46),modulo(aux156,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux157,13,0),gaceq(aux19,aux79)}),w-literal(aux92,1),w-literal(aux93,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux97,1)}),watched-and({modulo(aux158,13,0),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux59,1)}),watched-and({watched-or({modulo(aux159,13,0),gaceq(aux19,aux78)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux60,1),w-literal(aux82,1),w-literal(aux97,1)}),watched-and({watched-or({modulo(aux160,13,0),gaceq(aux78,aux21)}),w-literal(aux91,1),w-literal(aux93,1),w-literal(aux59,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux161,13,0),gaceq(aux78,aux20)}),w-literal(aux91,1),w-literal(aux60,1),w-literal(aux82,1),w-literal(aux97,1)}),watched-and({watched-or({modulo(aux162,13,0),gaceq(aux20,aux79)}),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux82,1),w-literal(aux97,1)}),watched-and({watched-or({modulo(aux163,13,0),gaceq(aux79,aux21)}),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux97,1)})})
watched-or({watched-and({watched-or({gaceq(aux41,aux44),modulo(aux164,13,0)}),w-literal(aux35,1),w-literal(aux34,1),w-literal(aux33,1)}),watched-and({watched-or({gaceq(aux43,aux42),modulo(aux165,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux61,1),w-literal(aux33,1)}),watched-and({watched-or({gaceq(aux43,aux44),modulo(aux166,13,0)}),w-literal(aux34,1),w-literal(aux62,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux42,aux41),modulo(aux167,13,0)}),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux33,1)}),watched-and({w-literal(aux35,1),w-literal(aux34,1),w-literal(aux62,1),modulo(aux168,13,0)})})
watched-or({watched-and({watched-or({modulo(aux169,13,0),div(M_00009_00001, 13, aux102)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux25,1)}),watched-and({watched-or({modulo(aux170,13,0),div(M_00009_00003, 13, aux102)}),w-literal(aux24,1),w-literal(aux25,1)}),watched-and({modulo(aux171,13,0),w-literal(aux24,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux108),modulo(aux172,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux173,13,0)})})
weightedsumleq([-1,1],[M_00002_00008,35],aux109)
weightedsumgeq([-1,1],[M_00002_00008,35],aux109)
sumleq([M_00002_00004,-11],aux110)
sumgeq([M_00002_00004,-11],aux110)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux111)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux111)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux112)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux112)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux113)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux113)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux114)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux114)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux115)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux115)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux116)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux116)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux117)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux117)
sumleq([M_00003_00004,-2],aux118)
sumgeq([M_00003_00004,-2],aux118)
weightedsumleq([-1,1],[M_00003_00007,35],aux119)
weightedsumgeq([-1,1],[M_00003_00007,35],aux119)
weightedsumleq([-1,1],[M_00003_00005,35],aux120)
weightedsumgeq([-1,1],[M_00003_00005,35],aux120)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux121)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux121)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux122)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux122)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux123)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux123)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux124)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux124)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux125)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux125)
sumleq([M_00004_00003,-14],aux126)
sumgeq([M_00004_00003,-14],aux126)
weightedsumleq([-1,1],[M_00004_00001,14],aux127)
weightedsumgeq([-1,1],[M_00004_00001,14],aux127)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux128)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux128)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux129)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux129)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux130)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux130)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux131)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux131)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux132)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux132)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux133)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux133)
weightedsumleq([-1,1],[M_00004_00005,10],aux134)
weightedsumgeq([-1,1],[M_00004_00005,10],aux134)
sumleq([M_00004_00005,-14],aux135)
sumgeq([M_00004_00005,-14],aux135)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux136)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux136)
weightedsumleq([-1,1],[M_00004_00007,10],aux137)
weightedsumgeq([-1,1],[M_00004_00007,10],aux137)
weightedsumleq([1,-1],[10,M_00005_00004],aux138)
weightedsumgeq([1,-1],[10,M_00005_00004],aux138)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux139)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux139)
weightedsumleq([1,-1],[10,M_00005_00006],aux140)
weightedsumgeq([1,-1],[10,M_00005_00006],aux140)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux141)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux141)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux145)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux145)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux146)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux146)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux147)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux147)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux148)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux148)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux149)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux149)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux150)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux150)
weightedsumleq([1,-1],[-1,M_00006_00006],aux151)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux151)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux152)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux152)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux153)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux153)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux154)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux154)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux155)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux155)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux156)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux156)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux157)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux157)
weightedsumleq([-1,1],[M_00007_00005,-1],aux158)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux158)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux159)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux159)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux160)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux160)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux161)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux161)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux162)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux162)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux163)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux163)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux164)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux164)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux165)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux165)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux166)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux166)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux167)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux167)
weightedsumleq([-1,1],[M_00008_00004,-1],aux168)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux168)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux169)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux169)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux170)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux170)
weightedsumleq([1,-1],[-1,M_00009_00003],aux171)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux171)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux172)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux172)
weightedsumleq([-1,1],[M_00010_00002,-1],aux173)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux173)
**EOF**
