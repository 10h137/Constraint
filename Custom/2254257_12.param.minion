MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 143
# CSE_active_eliminated_expressions = 668
# CSE_active_total_size = 429
**VARIABLES**
DISCRETE M_00002_00004 #
{33..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00006 #
{41..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00007 #
{30..41}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00002_00008 #
{9..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [9,9,11,11,14,14,30,30])
**VARIABLES**
DISCRETE M_00002_00009 #
{0..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35])
**VARIABLES**
DISCRETE M_00002_00010 #
{35..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00002_00011 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00003 #
{11..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [11,11,30,30,33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00004 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00006 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00007 #
{9..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00008 #
{0..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35])
**VARIABLES**
DISCRETE M_00003_00009 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00010 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00001 #
{2..41}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00004_00003 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00006 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00007 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00008 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00002 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00003 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00007 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00002 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,2,2,9,9,11,11,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005/13)
{2..3}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{2..3}
BOOL aux16 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux19 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux20 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux21 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux24 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux25 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{2..3}
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
BOOL aux28 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux31 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux32 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..3}
BOOL aux41 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux43 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux44 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux45 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux47 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux48 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux49 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux50, [0,0,2,2])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux54 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux65 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux68 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux70 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux71 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux72 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux77 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux81 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004/13)
{2..3}
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005/13)
{2..3}
BOOL aux88 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux93 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux100 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux101 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux102 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux103 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux108 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux110 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux113 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux115 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux118 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux123 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux125 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux126 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux127 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux130 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux133 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux135 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux136 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{2..3}
BOOL aux137 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux138 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux139 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
DISCRETE aux140 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux141 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux142 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux143 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux144 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
BOOL aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux152 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux153 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux154 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux155 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux156 #
{0..3}
DISCRETE aux157 #( - M_00002_00005 + M_00002_00006)
{-2..13}
**CONSTRAINTS**
w-inintervalset(aux157, [-2,-2,0,0,2,2,4,4,6,6,8,8,10,11,13,13])
**VARIABLES**
DISCRETE aux158 #(M_00002_00004 + -11)
{22..26}
**CONSTRAINTS**
w-inintervalset(aux158, [22,22,24,24,26,26])
**VARIABLES**
DISCRETE aux159 #( - M_00002_00004 + M_00002_00007)
{-7..8}
**CONSTRAINTS**
w-inintervalset(aux159, [-7,-7,-5,-2,0,0,2,2,4,4,6,6,8,8])
**VARIABLES**
DISCRETE aux160 #( - M_00002_00005 + M_00002_00008)
{-34..-7}
**CONSTRAINTS**
w-inintervalset(aux160, [-34,-34,-32,-32,-30,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-11,-7,-7])
**VARIABLES**
DISCRETE aux161 #( - M_00002_00008 + M_00002_00009)
{-30..26}
**CONSTRAINTS**
w-inintervalset(aux161, [-30,-30,-28,-28,-21,-21,-19,-19,-16,-16,-14,-14,-12,-11,-9,-9,-7,-7,-5,-5,-3,-2,0,0,2,3,5,5,16,16,19,19,21,22,24,24,26,26])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00009 + M_00002_00010)
{9..35}
**CONSTRAINTS**
w-inintervalset(aux162, [9,11,13,14,21,21,23,24,26,30,32,35])
**VARIABLES**
DISCRETE aux163 #( - M_00002_00008 + M_00002_00011)
{-30..14}
**CONSTRAINTS**
w-inintervalset(aux163, [-30,-30,-28,-28,-21,-21,-19,-19,-16,-16,-14,-14,-12,-11,-9,-9,-7,-7,-5,-5,-3,-2,0,0,2,3,5,5,7,7,11,11,13,14])
**VARIABLES**
DISCRETE aux164 #( - M_00002_00010 + M_00002_00011)
{-44..9}
**CONSTRAINTS**
w-inintervalset(aux164, [-44,-41,-39,-39,-37,-37,-35,-32,-30,-26,-24,-23,-21,-21,-14,-13,-11,4,6,9])
**VARIABLES**
DISCRETE aux165 #( - M_00002_00007 + M_00002_00008)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux165, [-32,-32,-30,-30,-28,-26,-24,-21,-19,-19,-16,-16,-11,-11])
**VARIABLES**
DISCRETE aux166 #( - M_00002_00007 + M_00002_00010)
{-6..14}
**CONSTRAINTS**
w-inintervalset(aux166, [-6,-6,-4,-4,-2,-2,0,0,2,11,13,14])
**VARIABLES**
DISCRETE aux167 #( - M_00002_00006 + M_00002_00009)
{-43..-6}
**CONSTRAINTS**
w-inintervalset(aux167, [-43,-43,-41,-41,-39,-39,-34,-34,-32,-32,-30,-29,-27,-27,-13,-13,-11,-10,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux168 #( - M_00002_00004 + M_00002_00005)
{-3..6}
**CONSTRAINTS**
w-inintervalset(aux168, [-3,-2,0,0,2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux169 #( - M_00002_00006 + M_00002_00007)
{-11..-2}
**CONSTRAINTS**
w-inintervalset(aux169, [-11,-10,-8,-8,-6,-6,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux170 #( - M_00002_00011 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux170, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux171 #( - M_00003_00010 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux171, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux172 #( - M_00003_00005 + M_00003_00006)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux172, [-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00003 + M_00003_00006)
{-7..32}
**CONSTRAINTS**
w-inintervalset(aux173, [-7,-7,-5,-2,0,0,2,8,10,11,13,13,19,19,22,22,24,24,26,26,30,30,32,32])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00004 + M_00003_00007)
{-34..11}
**CONSTRAINTS**
w-inintervalset(aux174, [-34,-34,-32,-32,-30,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,11])
**VARIABLES**
DISCRETE aux175 #( - M_00003_00005 + M_00003_00008)
{-43..5}
**CONSTRAINTS**
w-inintervalset(aux175, [-43,-43,-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,0,2,3,5,5])
**VARIABLES**
DISCRETE aux176 #(M_00003_00004 + -2)
{28..41}
**CONSTRAINTS**
w-inintervalset(aux176, [28,28,31,31,33,33,35,35,39,39,41,41])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00007 + M_00003_00008)
{-41..26}
**CONSTRAINTS**
w-inintervalset(aux177, [-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,-2,0,0,2,3,5,5,16,16,19,19,21,22,24,24,26,26])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00008 + M_00003_00009)
{-30..44}
**CONSTRAINTS**
w-inintervalset(aux178, [-30,-30,-28,-28,-26,-26,-24,-24,-22,-21,-19,-19,-16,-16,-14,-14,-12,-11,-9,-9,-7,-7,-5,-5,-3,-2,0,0,2,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00007 + M_00003_00010)
{-44..35}
**CONSTRAINTS**
w-inintervalset(aux179, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,11,13,14,16,16,19,19,21,24,26,30,32,35])
**VARIABLES**
DISCRETE aux180 #( - M_00003_00009 + M_00003_00010)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux180, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux181 #( - M_00003_00003 + M_00003_00004)
{6..30}
**CONSTRAINTS**
w-inintervalset(aux181, [6,8,10,11,13,13,19,19,22,22,24,24,26,26,30,30])
**VARIABLES**
DISCRETE aux182 #( - M_00003_00004 + M_00003_00005)
{-7..13}
**CONSTRAINTS**
w-inintervalset(aux182, [-7,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux183 #( - M_00003_00006 + M_00003_00007)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux183, [-34,-34,-32,-32,-30,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,3])
**VARIABLES**
DISCRETE aux184 #( - M_00003_00006 + M_00003_00009)
{-43..14}
**CONSTRAINTS**
w-inintervalset(aux184, [-43,-43,-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,11,13,14])
**VARIABLES**
DISCRETE aux185 #( - M_00004_00001 + 14)
{-27..12}
**CONSTRAINTS**
w-inintervalset(aux185, [-27,-27,-23,-23,-21,-21,-19,-19,-16,-16,0,0,3,3,5,5,12,12])
**VARIABLES**
DISCRETE aux186 #(M_00004_00003 + -14)
{-3..29}
**CONSTRAINTS**
w-inintervalset(aux186, [-3,-3,0,0,16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux187 #( - M_00004_00003 + M_00004_00004)
{-13..32}
**CONSTRAINTS**
w-inintervalset(aux187, [-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00003 + M_00004_00006)
{-34..33}
**CONSTRAINTS**
w-inintervalset(aux188, [-34,-26,-24,-21,-19,-19,-16,-16,-13,-2,0,11,13,14,16,16,19,19,21,24,26,27,29,30,32,33])
**VARIABLES**
DISCRETE aux189 #(M_00004_00005 + -14)
{-12..29}
**CONSTRAINTS**
w-inintervalset(aux189, [-12,-12,-5,-5,-3,-3,0,0,16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00007 + M_00004_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux190, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00008 + M_00004_00009)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux191, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00006 + M_00004_00007)
{-44..39}
**CONSTRAINTS**
w-inintervalset(aux192, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,39,39])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00006 + M_00004_00009)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux193, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,39,39,41,42])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00005 + M_00004_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux194, [-41,-41,-39,-39,-35,-26,-24,-21,-19,-19,-16,-16,-13,-2,0,14,16,16,19,19,21,24,26,35,39,39,41,41])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00005 + M_00004_00008)
{-43..42}
**CONSTRAINTS**
w-inintervalset(aux195, [-43,-43,-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,-2,0,14,16,16,19,19,21,24,26,35,39,39,41,42])
**VARIABLES**
DISCRETE aux196 #( - M_00004_00009 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux196, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux197 #( - M_00004_00001 + M_00004_00004)
{0..41}
**CONSTRAINTS**
w-inintervalset(aux197, [0,0,2,13,16,16,19,19,21,24,26,35,39,39,41,41])
**VARIABLES**
DISCRETE aux198 #( - M_00004_00004 + M_00004_00005)
{-39..34}
**CONSTRAINTS**
w-inintervalset(aux198, [-39,-39,-35,-26,-24,-21,-19,-19,-16,-16,-13,-2,0,0,2,8,10,11,13,13,16,16,19,19,21,24,26,30,32,32,34,34])
**VARIABLES**
DISCRETE aux199 #( - M_00004_00004 + M_00004_00007)
{-43..26}
**CONSTRAINTS**
w-inintervalset(aux199, [-43,-43,-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,-2,0,11,13,14,16,16,19,19,21,24,26,26])
**VARIABLES**
DISCRETE aux200 #( - M_00005_00002 + M_00005_00003)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux200, [-34,-26,-24,-21,-19,-19,-16,-16,-13,-2,0,11,13,14,16,16,19,19,21,24,26,27,29,30,32,32])
**VARIABLES**
DISCRETE aux201 #( - M_00005_00001 + M_00005_00004)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux201, [-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,-2,0,14,16,16,19,19,21,24,26,35,39,39,41,42])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00002 + M_00005_00005)
{-41..33}
**CONSTRAINTS**
w-inintervalset(aux202, [-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,-2,0,11,13,14,16,16,19,19,21,24,26,27,29,30,32,33])
**VARIABLES**
DISCRETE aux203 #(-1 - M_00005_00008)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux203, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00005 + M_00005_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux204, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00006 + M_00005_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux205, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00005 + M_00005_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux206, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux207 #( - M_00005_00007 + M_00005_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux207, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00004 + M_00005_00005)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux208, [-43,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,43])
**VARIABLES**
DISCRETE aux209 #( - M_00005_00004 + M_00005_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux209, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux210 #( - M_00005_00001 + M_00005_00002)
{-30..41}
**CONSTRAINTS**
w-inintervalset(aux210, [-30,-29,-27,-26,-24,-21,-19,-19,-16,-16,-13,-13,-11,-10,-8,-2,0,0,2,13,16,16,19,19,21,24,26,35,39,39,41,41])
**VARIABLES**
DISCRETE aux211 #( - M_00005_00003 + M_00005_00004)
{-41..35}
**CONSTRAINTS**
w-inintervalset(aux211, [-41,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35])
**VARIABLES**
DISCRETE aux212 #( - M_00005_00003 + M_00005_00006)
{-44..39}
**CONSTRAINTS**
w-inintervalset(aux212, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,39,39])
**VARIABLES**
DISCRETE aux213 #( - M_00006_00001 + M_00006_00004)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux213, [-43,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,43])
**VARIABLES**
DISCRETE aux214 #( - M_00006_00004 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux214, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux215 #(-1 - M_00006_00007)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux215, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux216 #( - M_00006_00005 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux216, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00004 + M_00006_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux217, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00006 + M_00006_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux218, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux219 #( - M_00006_00003 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux219, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux220 #( - M_00006_00003 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux220, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux221 #( - M_00006_00002 + M_00006_00003)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux221, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,39,39,41,42])
**VARIABLES**
DISCRETE aux222 #( - M_00006_00002 + M_00006_00005)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux222, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,39,39,41,42])
**VARIABLES**
DISCRETE aux223 #( - M_00006_00001 + M_00006_00002)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux223, [-41,-41,-39,-39,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,42])
**VARIABLES**
DISCRETE aux224 #( - M_00007_00004 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux224, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux225 #( - M_00007_00001 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux225, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux226 #( - M_00007_00005 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux226, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux227 #( - M_00007_00002 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux227, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux228 #( - M_00007_00003 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux228, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux229 #( - M_00007_00001 + M_00007_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux229, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux230 #( - M_00007_00002 + M_00007_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux230, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux231 #( - M_00007_00006 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux231, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux232 #( - M_00007_00003 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux232, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux233 #( - M_00008_00001 + M_00008_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux233, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux234 #( - M_00008_00002 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux234, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux235 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux235, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux236 #( - M_00008_00003 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux236, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux237 #( - M_00008_00005 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux237, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux238 #( - M_00008_00004 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux238, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux239 #( - M_00008_00001 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux239, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux240 #( - M_00009_00003 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux240, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux241 #( - M_00009_00001 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux241, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux242 #( - M_00009_00002 + M_00009_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux242, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux243 #(-1 - M_00009_00004)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux243, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux244 #( - M_00009_00001 + M_00009_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux244, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux245 #( - M_00010_00001 + M_00010_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux245, [-44,-41,-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39,41,44])
**VARIABLES**
DISCRETE aux246 #( - M_00010_00002 + M_00010_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux246, [-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39])
**VARIABLES**
DISCRETE aux247 #( - M_00010_00003 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux247, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux248 #( - M_00011_00001 + M_00011_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux248, [-39,-39,-37,-37,-35,-26,-24,-21,-19,-19,-16,-16,-14,14,16,16,19,19,21,24,26,35,37,37,39,39])
**VARIABLES**
DISCRETE aux249 #( - M_00011_00002 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux249, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-12,-12,-10,-10,-3,-3,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[2, 14, 11, 33, 37, 43, 41, 30, 9, 35, 44, 0]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00001],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux156)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00005, 13, aux14)
div(M_00002_00010, 13, aux15)
reify(gaceq(M_00007_00002,M_00008_00002), aux16)
div(M_00007_00001, 13, aux17)
div(M_00007_00006, 13, aux18)
reify(gaceq(M_00003_00008,M_00004_00007), aux19)
reify(gaceq(M_00007_00003,M_00006_00003), aux20)
reify(gaceq(M_00005_00002,M_00006_00002), aux21)
div(M_00010_00002, 13, aux22)
reify(gaceq(M_00008_00002,M_00009_00002), aux23)
reify(gaceq(M_00008_00003,M_00009_00003), aux24)
reify(gaceq(M_00005_00007,M_00006_00006), aux25)
div(M_00002_00007, 13, aux26)
div(M_00002_00008, 13, aux27)
reify(gaceq(M_00004_00005,M_00005_00004), aux28)
reify(gaceq(M_00010_00003,M_00009_00003), aux29)
reify(gaceq(M_00010_00002,M_00009_00003), aux30)
reify(gaceq(M_00004_00006,M_00005_00005), aux31)
reify(gaceq(M_00004_00001,M_00005_00001), aux32)
div(M_00004_00008, 13, aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00007, 13, aux35)
reify(gaceq(M_00004_00006,M_00005_00006), aux36)
div(M_00002_00006, 13, 3)
div(M_00002_00009, 13, aux38)
div(M_00002_00011, 13, aux39)
div(M_00002_00004, 13, 2)
reify(gaceq(M_00007_00006,M_00008_00005), aux41)
reify(gaceq(M_00008_00004,M_00009_00003), aux42)
reify(gaceq(M_00003_00007,M_00004_00007), aux43)
reify(gaceq(M_00005_00001,M_00006_00001), aux44)
reify(gaceq(M_00005_00006,M_00006_00006), aux45)
reify(gaceq(M_00007_00001,M_00008_00001), aux46)
reify(gaceq(M_00004_00004,M_00005_00004), aux47)
reify(gaceq(M_00004_00005,M_00005_00005), aux48)
reify(gaceq(M_00002_00004,M_00003_00004), aux49)
div(M_00003_00003, 13, aux50)
div(M_00003_00010, 13, aux51)
div(M_00005_00008, 13, aux52)
div(M_00005_00001, 13, aux53)
reify(gaceq(M_00005_00003,M_00006_00003), aux54)
div(M_00008_00003, 13, aux55)
div(M_00008_00001, 13, aux56)
div(M_00008_00005, 13, aux57)
div(M_00006_00006, 13, aux58)
div(M_00006_00005, 13, aux59)
div(M_00006_00003, 13, aux60)
div(M_00006_00002, 13, aux61)
reify(gaceq(M_00010_00003,M_00011_00002), aux62)
reify(gaceq(M_00010_00001,M_00011_00001), aux63)
reify(gaceq(M_00004_00004,M_00005_00003), aux64)
reify(gaceq(M_00005_00004,M_00006_00004), aux65)
reify(gaceq(M_00002_00005,M_00003_00004), aux66)
reify(gaceq(M_00002_00010,M_00003_00010), aux67)
reify(gaceq(M_00002_00008,M_00003_00008), aux68)
reify(gaceq(M_00002_00007,M_00003_00006), aux69)
reify(gaceq(M_00002_00009,M_00003_00009), aux70)
reify(gaceq(M_00004_00007,M_00005_00006), aux71)
reify(gaceq(M_00007_00006,M_00006_00007), aux72)
reify(gaceq(M_00007_00005,M_00008_00005), aux73)
reify(gaceq(M_00007_00003,M_00008_00002), aux74)
reify(gaceq(M_00008_00003,M_00009_00002), aux75)
reify(gaceq(M_00008_00004,M_00009_00004), aux76)
reify(gaceq(M_00005_00008,M_00006_00007), aux77)
reify(gaceq(M_00010_00001,M_00009_00001), aux78)
reify(gaceq(M_00010_00002,M_00009_00002), aux79)
reify(gaceq(M_00010_00003,M_00009_00004), aux80)
div(M_00006_00004, 13, aux81)
div(M_00006_00001, 13, aux82)
div(M_00006_00007, 13, aux83)
div(M_00003_00008, 13, aux84)
div(M_00003_00009, 13, aux85)
div(M_00003_00004, 13, aux86)
div(M_00003_00005, 13, aux87)
reify(gaceq(M_00005_00005,M_00006_00004), aux88)
reify(gaceq(M_00005_00005,M_00006_00005), aux89)
reify(gaceq(M_00003_00009,M_00004_00009), aux90)
reify(gaceq(M_00005_00003,M_00006_00002), aux91)
reify(gaceq(M_00005_00007,M_00006_00007), aux92)
reify(gaceq(M_00003_00003,M_00004_00003), aux93)
div(M_00005_00007, 13, aux94)
div(M_00005_00006, 13, aux95)
div(M_00005_00002, 13, aux96)
div(M_00005_00003, 13, aux97)
reify(gaceq(M_00004_00008,M_00005_00008), aux98)
reify(gaceq(M_00004_00003,M_00005_00002), aux99)
reify(gaceq(M_00003_00007,M_00004_00006), aux100)
reify(gaceq(M_00003_00010,M_00004_00009), aux101)
reify(gaceq(M_00004_00008,M_00005_00007), aux102)
reify(gaceq(M_00003_00004,M_00004_00004), aux103)
div(M_00007_00002, 13, aux104)
div(M_00007_00004, 13, aux105)
div(M_00007_00003, 13, aux106)
div(M_00007_00005, 13, aux107)
reify(gaceq(M_00007_00002,M_00006_00002), aux108)
reify(gaceq(M_00004_00009,M_00005_00008), aux109)
reify(gaceq(M_00007_00001,M_00006_00001), aux110)
reify(gaceq(M_00008_00005,M_00009_00004), aux111)
reify(gaceq(M_00008_00001,M_00009_00001), aux112)
reify(gaceq(M_00002_00011,M_00003_00010), aux113)
reify(gaceq(M_00003_00005,M_00004_00004), aux114)
reify(gaceq(M_00002_00005,M_00003_00005), aux115)
reify(gaceq(M_00007_00004,M_00008_00003), aux116)
reify(gaceq(M_00005_00004,M_00006_00003), aux117)
reify(gaceq(M_00003_00008,M_00004_00008), aux118)
reify(gaceq(M_00003_00006,M_00004_00005), aux119)
div(M_00004_00004, 13, aux120)
div(M_00004_00005, 13, aux121)
div(M_00004_00006, 13, aux122)
reify(gaceq(M_00003_00005,M_00004_00005), aux123)
reify(gaceq(M_00007_00003,M_00006_00004), aux124)
reify(gaceq(M_00003_00006,M_00004_00006), aux125)
reify(gaceq(M_00002_00006,M_00003_00006), aux126)
reify(gaceq(M_00002_00008,M_00003_00007), aux127)
div(M_00008_00004, 13, aux128)
div(M_00008_00002, 13, aux129)
reify(gaceq(M_00007_00004,M_00008_00004), aux130)
reify(gaceq(M_00007_00006,M_00006_00006), aux131)
reify(gaceq(M_00007_00002,M_00006_00003), aux132)
reify(gaceq(M_00005_00006,M_00006_00005), aux133)
reify(gaceq(M_00007_00003,M_00008_00003), aux134)
div(M_00003_00007, 13, aux135)
div(M_00003_00006, 13, aux136)
reify(gaceq(M_00003_00009,M_00004_00008), aux137)
reify(gaceq(M_00007_00005,M_00008_00004), aux138)
reify(gaceq(M_00002_00006,M_00003_00005), aux139)
div(M_00005_00004, 13, aux140)
div(M_00005_00005, 13, aux141)
reify(gaceq(M_00004_00003,M_00005_00003), aux142)
reify(gaceq(M_00007_00005,M_00006_00006), aux143)
reify(gaceq(M_00002_00010,M_00003_00009), aux144)
div(M_00009_00003, 13, aux145)
div(M_00009_00004, 13, aux146)
div(M_00009_00001, 13, aux147)
div(M_00009_00002, 13, aux148)
div(M_00004_00009, 13, aux149)
div(M_00004_00001, 13, aux150)
reify(gaceq(M_00004_00007,M_00005_00007), aux151)
reify(gaceq(M_00007_00004,M_00006_00004), aux152)
reify(gaceq(M_00002_00009,M_00003_00008), aux153)
reify(gaceq(M_00007_00004,M_00006_00005), aux154)
reify(gaceq(M_00002_00007,M_00003_00007), aux155)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,30),w-literal(M_00002_00006,43),w-literal(M_00002_00008,9),w-literal(M_00002_00007,41),w-literal(M_00002_00009,35),w-literal(M_00002_00011,0),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,37),w-literal(M_00002_00005,43),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9),w-literal(M_00002_00009,35),w-literal(M_00002_00011,0),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9),w-literal(M_00002_00009,35),w-literal(M_00002_00011,0),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,0),w-literal(M_00002_00010,35),w-literal(M_00002_00011,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,35),w-literal(M_00002_00011,0),w-literal(M_00002_00010,44)})})
watched-or({watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux139,1),w-literal(aux69,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux157,13,0),w-literal(aux14,3)})}),watched-and({modulo(aux158,13,0),gaceq(M_00002_00004,M_00003_00003),w-literal(aux66,1),w-literal(aux139,1),w-literal(aux69,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1)}),watched-and({w-literal(M_00003_00003,11),w-literal(aux115,1),w-literal(aux126,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux159,13,0),w-literal(aux26,2)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux126,1),w-literal(aux155,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux160,13,0),gaceq(aux14,aux27)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux155,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux161,13,0),gaceq(aux27,aux38)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux155,1),w-literal(aux68,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux162,13,0),gaceq(aux38,aux15)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux155,1),w-literal(aux70,1),w-literal(aux67,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux163,13,0),gaceq(aux27,aux39)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux155,1),w-literal(aux68,1),w-literal(aux70,1),w-literal(aux113,1),watched-or({modulo(aux164,13,0),gaceq(aux15,aux39)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux165,13,0),gaceq(aux26,aux27)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux68,1),w-literal(aux70,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux113,1),watched-or({modulo(aux166,13,0),gaceq(aux26,aux15)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux155,1),w-literal(aux68,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux144,1),w-literal(aux113,1),modulo(aux167,13,0)}),watched-and({w-literal(M_00003_00003,11),w-literal(aux66,1),w-literal(aux139,1),w-literal(aux69,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux168,13,0),w-literal(aux14,2)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux69,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux144,1),w-literal(aux113,1),watched-or({modulo(aux169,13,0),w-literal(aux26,3)})}),watched-and({w-literal(M_00003_00003,11),modulo(aux170,13,0),w-literal(aux49,1),w-literal(aux115,1),w-literal(aux126,1),w-literal(aux155,1),w-literal(aux68,1),w-literal(aux70,1),w-literal(aux67,1)})})
watched-or({watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux125,1),w-literal(aux43,1),w-literal(aux118,1),w-literal(aux90,1),modulo(aux171,13,0),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux119,1),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux172,13,0),gaceq(aux87,aux136)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux103,1),w-literal(aux123,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux173,13,0),gaceq(aux50,aux136)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux123,1),w-literal(aux125,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux174,13,0),gaceq(aux86,aux135)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux125,1),w-literal(aux43,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux175,13,0),gaceq(aux87,aux84)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux114,1),w-literal(aux119,1),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),modulo(aux176,13,0)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux125,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux177,13,0),gaceq(aux135,aux84)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux125,1),w-literal(aux43,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux178,13,0),gaceq(aux84,aux85)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux125,1),w-literal(aux118,1),w-literal(aux90,1),gaceq(M_00003_00010,M_00004_00007),watched-or({modulo(aux179,13,0),gaceq(aux135,aux51)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux125,1),w-literal(aux43,1),w-literal(aux118,1),w-literal(aux101,1),watched-or({modulo(aux180,13,0),gaceq(aux85,aux51)}),w-literal(M_00004_00001,2)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux114,1),w-literal(aux119,1),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux181,13,0),gaceq(aux50,aux86)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux114,1),w-literal(aux119,1),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux182,13,0),gaceq(aux86,aux87)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux100,1),w-literal(aux19,1),w-literal(aux137,1),w-literal(aux101,1),watched-or({modulo(aux183,13,0),gaceq(aux136,aux135)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux93,1),w-literal(aux103,1),w-literal(aux123,1),w-literal(aux43,1),w-literal(aux118,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux101,1),watched-or({modulo(aux184,13,0),gaceq(aux136,aux85)}),w-literal(M_00004_00001,2)})})
watched-or({watched-and({w-literal(M_00005_00001,14),watched-or({modulo(aux185,13,0),w-literal(aux150,1)}),w-literal(aux99,1),w-literal(aux64,1),w-literal(aux28,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1)}),watched-and({watched-or({modulo(aux186,13,0),w-literal(aux34,1)}),w-literal(aux32,1),w-literal(aux99,1),w-literal(aux64,1),w-literal(aux28,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux64,1),w-literal(aux28,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux34,aux120),modulo(aux187,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux47,1),w-literal(aux48,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux34,aux122),modulo(aux188,13,0)})}),watched-and({watched-or({modulo(aux189,13,0),w-literal(aux121,1)}),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux36,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux35,aux33),modulo(aux190,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux109,1),watched-or({gaceq(aux33,aux149),modulo(aux191,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux122,aux35),modulo(aux192,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux151,1),w-literal(aux98,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux122,aux149),modulo(aux193,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux121,aux122),modulo(aux194,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux36,1),w-literal(aux151,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux109,1),watched-or({gaceq(aux121,aux33),modulo(aux195,13,0)})}),watched-and({w-literal(M_00005_00002,14),modulo(aux196,13,0),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux98,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux142,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux28,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux150,aux120),modulo(aux197,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux28,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux120,aux121),modulo(aux198,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux32,1),w-literal(aux142,1),w-literal(aux48,1),w-literal(aux36,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux120,aux35),modulo(aux199,13,0)})})})
watched-or({watched-and({w-literal(aux44,1),w-literal(aux91,1),w-literal(aux117,1),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux200,13,0),gaceq(aux96,aux97)})}),watched-and({w-literal(aux21,1),w-literal(aux54,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux201,13,0),gaceq(aux53,aux140)})}),watched-and({w-literal(aux44,1),w-literal(aux54,1),w-literal(aux65,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux202,13,0),gaceq(aux96,aux141)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux65,1),w-literal(aux89,1),w-literal(aux45,1),w-literal(aux92,1),modulo(aux203,13,0)}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux65,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux204,13,0),gaceq(aux141,aux95)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux65,1),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux205,13,0),gaceq(aux95,aux94)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux65,1),w-literal(aux45,1),w-literal(aux92,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux206,13,0),gaceq(aux141,aux52)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux65,1),w-literal(aux89,1),w-literal(aux45,1),w-literal(aux77,1),watched-or({modulo(aux207,13,0),gaceq(aux94,aux52)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux208,13,0),gaceq(aux140,aux141)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux54,1),w-literal(aux89,1),w-literal(aux45,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux77,1),watched-or({modulo(aux209,13,0),gaceq(aux140,aux94)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux91,1),w-literal(aux117,1),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux210,13,0),gaceq(aux53,aux96)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux117,1),w-literal(aux88,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux211,13,0),gaceq(aux97,aux140)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux65,1),w-literal(aux89,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux25,1),w-literal(aux77,1),watched-or({modulo(aux212,13,0),gaceq(aux97,aux95)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux108,1),w-literal(aux20,1),w-literal(aux154,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux82,aux81),modulo(aux213,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux20,1),w-literal(aux154,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux81,aux59),modulo(aux214,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux20,1),w-literal(aux152,1),w-literal(aux13,1),w-literal(aux131,1),modulo(aux215,13,0)}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux20,1),w-literal(aux152,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux59,aux58),modulo(aux216,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux20,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux131,1),watched-or({gaceq(aux81,aux83),modulo(aux217,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux20,1),w-literal(aux152,1),w-literal(aux13,1),w-literal(aux72,1),watched-or({gaceq(aux58,aux83),modulo(aux218,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux124,1),w-literal(aux154,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux60,aux81),modulo(aux219,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux152,1),w-literal(aux13,1),w-literal(aux72,1),watched-or({gaceq(aux60,aux58),modulo(aux220,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux132,1),w-literal(aux124,1),w-literal(aux154,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux61,aux60),modulo(aux221,13,0)})}),watched-and({w-literal(aux110,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux20,1),w-literal(aux152,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux61,aux59),modulo(aux222,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux132,1),w-literal(aux124,1),w-literal(aux154,1),w-literal(aux143,1),w-literal(aux72,1),watched-or({gaceq(aux82,aux61),modulo(aux223,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux224,13,0),gaceq(aux105,aux107)}),w-literal(aux46,1),w-literal(aux16,1),w-literal(aux134,1),w-literal(aux138,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux225,13,0),gaceq(aux17,aux105)}),w-literal(aux16,1),w-literal(aux134,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux138,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux226,13,0),gaceq(aux107,aux18)}),w-literal(aux46,1),w-literal(aux16,1),w-literal(aux134,1),w-literal(aux130,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux227,13,0),gaceq(aux104,aux107)}),w-literal(aux46,1),w-literal(aux134,1),w-literal(aux130,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux228,13,0),gaceq(aux106,aux18)}),w-literal(aux46,1),w-literal(aux16,1),w-literal(aux130,1),w-literal(aux73,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux229,13,0),gaceq(aux17,aux104)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux74,1),w-literal(aux116,1),w-literal(aux138,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux230,13,0),gaceq(aux104,aux106)}),w-literal(aux46,1),w-literal(aux74,1),w-literal(aux116,1),w-literal(aux138,1),w-literal(aux41,1)}),watched-and({modulo(aux231,13,0),w-literal(aux46,1),w-literal(aux16,1),w-literal(aux134,1),w-literal(aux130,1),w-literal(aux73,1)}),watched-and({watched-or({modulo(aux232,13,0),gaceq(aux106,aux105)}),w-literal(aux46,1),w-literal(aux16,1),w-literal(aux116,1),w-literal(aux138,1),w-literal(aux41,1)})})
watched-or({watched-and({watched-or({gaceq(aux56,aux129),modulo(aux233,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux75,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux129,aux57),modulo(aux234,13,0)}),w-literal(aux112,1),w-literal(aux24,1),w-literal(aux76,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux129,aux55),modulo(aux235,13,0)}),w-literal(aux112,1),w-literal(aux75,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux55,aux128),modulo(aux236,13,0)}),w-literal(aux112,1),w-literal(aux23,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({w-literal(aux112,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux76,1),modulo(aux237,13,0)}),watched-and({watched-or({gaceq(aux128,aux57),modulo(aux238,13,0)}),w-literal(aux112,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux56,aux128),modulo(aux239,13,0)}),w-literal(aux23,1),w-literal(aux24,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux111,1)})})
watched-or({watched-and({watched-or({modulo(aux240,13,0),gaceq(aux145,aux146)}),w-literal(aux78,1),w-literal(aux79,1),w-literal(aux80,1)}),watched-and({watched-or({modulo(aux241,13,0),gaceq(aux147,aux146)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux79,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux242,13,0),gaceq(aux148,aux145)}),w-literal(aux78,1),w-literal(aux30,1),w-literal(aux80,1)}),watched-and({modulo(aux243,13,0),w-literal(aux78,1),w-literal(aux79,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux244,13,0),gaceq(aux147,aux148)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux30,1),w-literal(aux80,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux62,1),watched-or({div(M_00010_00001, 13, aux22),modulo(aux245,13,0)})}),watched-and({w-literal(aux63,1),w-literal(aux62,1),watched-or({div(M_00010_00003, 13, aux22),modulo(aux246,13,0)})}),watched-and({w-literal(aux63,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux247,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux156),modulo(aux248,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux249,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux157)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux157)
sumleq([M_00002_00004,-11],aux158)
sumgeq([M_00002_00004,-11],aux158)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux159)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux159)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux160)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux160)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux161)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux161)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux162)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux162)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux163)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux163)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux164)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux164)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux165)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux165)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux166)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux166)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux167)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux167)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux168)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux168)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux169)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux169)
weightedsumleq([-1,1],[M_00002_00011,-1],aux170)
weightedsumgeq([-1,1],[M_00002_00011,-1],aux170)
weightedsumleq([-1,1],[M_00003_00010,-1],aux171)
weightedsumgeq([-1,1],[M_00003_00010,-1],aux171)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux172)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux172)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux173)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux173)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux174)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux174)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux175)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux175)
sumleq([M_00003_00004,-2],aux176)
sumgeq([M_00003_00004,-2],aux176)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux177)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux177)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux178)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux178)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux179)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux179)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux180)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux180)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux181)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux181)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux182)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux182)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux183)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux183)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux184)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux184)
weightedsumleq([-1,1],[M_00004_00001,14],aux185)
weightedsumgeq([-1,1],[M_00004_00001,14],aux185)
sumleq([M_00004_00003,-14],aux186)
sumgeq([M_00004_00003,-14],aux186)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux187)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux187)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux188)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux188)
sumleq([M_00004_00005,-14],aux189)
sumgeq([M_00004_00005,-14],aux189)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux190)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux190)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux191)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux191)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux192)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux192)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux193)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux193)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux194)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux194)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux195)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux195)
weightedsumleq([-1,1],[M_00004_00009,-1],aux196)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux196)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux197)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux197)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux198)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux198)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux199)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux199)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux200)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux200)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux201)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux201)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux202)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux202)
weightedsumleq([1,-1],[-1,M_00005_00008],aux203)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux203)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux204)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux204)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux205)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux205)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux206)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux206)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux207)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux207)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux208)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux208)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux209)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux209)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux210)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux210)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux211)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux211)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux212)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux212)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux213)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux213)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux214)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux214)
weightedsumleq([1,-1],[-1,M_00006_00007],aux215)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux215)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux216)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux216)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux217)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux217)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux218)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux218)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux219)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux219)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux220)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux220)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux221)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux221)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux222)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux222)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux223)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux223)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux224)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux224)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux225)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux225)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux226)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux226)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux227)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux227)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux228)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux228)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux229)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux229)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux230)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux230)
weightedsumleq([-1,1],[M_00007_00006,-1],aux231)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux231)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux232)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux232)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux233)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux233)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux234)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux234)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux235)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux235)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux236)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux236)
weightedsumleq([-1,1],[M_00008_00005,-1],aux237)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux237)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux238)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux238)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux239)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux239)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux240)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux240)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux241)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux241)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux242)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux242)
weightedsumleq([1,-1],[-1,M_00009_00004],aux243)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux243)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux244)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux244)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux245)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux245)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux246)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux246)
weightedsumleq([-1,1],[M_00010_00003,-1],aux247)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux247)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux248)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux248)
weightedsumleq([-1,1],[M_00011_00002,-1],aux249)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux249)
**EOF**
