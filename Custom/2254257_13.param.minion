MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 174
# CSE_active_eliminated_expressions = 893
# CSE_active_total_size = 522
**VARIABLES**
DISCRETE M_00002_00004 #
{33..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00006 #
{41..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00007 #
{30..41}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00002_00008 #
{9..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [9,9,11,12,14,14,30,30])
**VARIABLES**
DISCRETE M_00002_00009 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [5,5,9,9,11,12,14,14,30,30,33,33,35,35])
**VARIABLES**
DISCRETE M_00002_00010 #
{35..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00002_00011 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00003 #
{11..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [11,12,30,30,33,33,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00004 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00005 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00006 #
{30..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00007 #
{9..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00008 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [5,5,9,9,11,12,14,14,30,30,33,33,35,35])
**VARIABLES**
DISCRETE M_00003_00009 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00010 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00003_00011 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00001 #
{2..41}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41])
**VARIABLES**
DISCRETE M_00004_00003 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00004 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00005 #
{9..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00006 #
{9..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00007 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00008 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00009 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00004_00010 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00002 #
{11..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00003 #
{9..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00005 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00006 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00007 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00008 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00005_00009 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00002 #
{9..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00005 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00006 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00007 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00006_00008 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00005 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00006 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00007_00007 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00005 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00008_00006 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00009_00005 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00010_00004 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00011_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00011_00003 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00012_00002 #
{5..44}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
DISCRETE M_00013_00001 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [2,2,5,5,9,9,11,12,14,14,30,30,33,33,35,35,37,37,41,41,43,44])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005/13)
{2..3}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{2..3}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..3}
BOOL aux18 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux21 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux22 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux28 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux29 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{2..3}
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux33 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux34 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux36 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux39 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux40 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
BOOL aux44 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux45 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux46 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux47 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux52 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux54 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux56 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux57 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux58 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux62 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux64, [0,0,2,2])
**VARIABLES**
BOOL aux65 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux70 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux75 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux78 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux79 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux80 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux84 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux87 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux88 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux89 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux92 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux93 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux99 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux101 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux102 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux103 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux104 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004/13)
{2..3}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005/13)
{2..3}
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux113 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux116 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux121 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux124 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux125 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux126 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux127 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux132 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux133 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux135 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux136 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux139 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux141 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
DISCRETE aux142 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux143 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux144 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux145 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux146 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux147 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux149 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux151 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux152 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux155 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux156 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux159 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux160 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux161 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
BOOL aux162 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{2..3}
BOOL aux164 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux165 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux166 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux167 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux168 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux169 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux171 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux172 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux173 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux174 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux175 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
DISCRETE aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux181 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux182 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux183 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux184 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux185 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux186 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux187 #
{0..3}
DISCRETE aux188 #( - M_00002_00005 + M_00002_00006)
{-2..13}
**CONSTRAINTS**
w-inintervalset(aux188, [-2,-2,0,0,2,2,4,4,6,6,8,8,10,11,13,13])
**VARIABLES**
DISCRETE aux189 #( - M_00002_00004 + M_00002_00007)
{-7..8}
**CONSTRAINTS**
w-inintervalset(aux189, [-7,-7,-5,-2,0,0,2,2,4,4,6,6,8,8])
**VARIABLES**
DISCRETE aux190 #( - M_00002_00005 + M_00002_00008)
{-34..-7}
**CONSTRAINTS**
w-inintervalset(aux190, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-11,-7,-7])
**VARIABLES**
DISCRETE aux191 #( - M_00002_00008 + M_00002_00009)
{-25..26}
**CONSTRAINTS**
w-inintervalset(aux191, [-25,-25,-21,-21,-19,-18,-16,-16,-9,-9,-7,3,5,5,16,16,18,19,21,24,26,26])
**VARIABLES**
DISCRETE aux192 #( - M_00002_00009 + M_00002_00010)
{9..30}
**CONSTRAINTS**
w-inintervalset(aux192, [9,11,13,14,21,21,23,30])
**VARIABLES**
DISCRETE aux193 #( - M_00002_00008 + M_00002_00011)
{-25..14}
**CONSTRAINTS**
w-inintervalset(aux193, [-25,-25,-21,-21,-19,-18,-16,-16,-9,-9,-7,3,5,5,7,7,11,11,13,14])
**VARIABLES**
DISCRETE aux194 #( - M_00002_00010 + M_00002_00011)
{-39..9}
**CONSTRAINTS**
w-inintervalset(aux194, [-39,-38,-36,-23,-21,-21,-14,-13,-11,4,6,9])
**VARIABLES**
DISCRETE aux195 #( - M_00002_00007 + M_00002_00008)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux195, [-32,-32,-30,-21,-19,-18,-16,-16,-11,-11])
**VARIABLES**
DISCRETE aux196 #( - M_00002_00007 + M_00002_00010)
{-6..14}
**CONSTRAINTS**
w-inintervalset(aux196, [-6,-6,-4,-4,-2,-2,0,0,2,11,13,14])
**VARIABLES**
DISCRETE aux197 #( - M_00002_00011 + 12)
{-32..7}
**CONSTRAINTS**
w-inintervalset(aux197, [-32,-31,-29,-29,-25,-25,-23,-23,-21,-21,-18,-18,-2,-2,0,1,3,3,7,7])
**VARIABLES**
DISCRETE aux198 #( - M_00002_00006 + M_00002_00009)
{-38..-6}
**CONSTRAINTS**
w-inintervalset(aux198, [-38,-38,-36,-36,-34,-34,-32,-29,-27,-27,-13,-13,-11,-10,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux199 #( - M_00002_00009 + 12)
{-23..7}
**CONSTRAINTS**
w-inintervalset(aux199, [-23,-23,-21,-21,-18,-18,-2,-2,0,1,3,3,7,7])
**VARIABLES**
DISCRETE aux200 #( - M_00002_00004 + M_00002_00005)
{-3..6}
**CONSTRAINTS**
w-inintervalset(aux200, [-3,-2,0,0,2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux201 #( - M_00002_00006 + M_00002_00007)
{-11..-2}
**CONSTRAINTS**
w-inintervalset(aux201, [-11,-10,-8,-8,-6,-6,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux202 #(M_00002_00004 + -11)
{22..26}
**CONSTRAINTS**
w-inintervalset(aux202, [22,22,24,24,26,26])
**VARIABLES**
DISCRETE aux203 #( - M_00003_00011 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux203, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux204 #( - M_00003_00003 + M_00003_00006)
{-7..32}
**CONSTRAINTS**
w-inintervalset(aux204, [-7,-7,-5,-2,0,0,2,8,10,11,13,13,18,19,21,26,29,32])
**VARIABLES**
DISCRETE aux205 #( - M_00003_00006 + M_00003_00007)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux205, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,-2,0,3])
**VARIABLES**
DISCRETE aux206 #( - M_00003_00004 + M_00003_00007)
{-34..11}
**CONSTRAINTS**
w-inintervalset(aux206, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,-2,0,11])
**VARIABLES**
DISCRETE aux207 #( - M_00003_00003 + M_00003_00004)
{6..30}
**CONSTRAINTS**
w-inintervalset(aux207, [6,8,10,11,13,13,18,19,21,26,29,30])
**VARIABLES**
DISCRETE aux208 #( - M_00003_00005 + M_00003_00008)
{-38..5}
**CONSTRAINTS**
w-inintervalset(aux208, [-38,-38,-36,-36,-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,-2,0,0,2,3,5,5])
**VARIABLES**
DISCRETE aux209 #( - M_00003_00006 + M_00003_00009)
{-38..14}
**CONSTRAINTS**
w-inintervalset(aux209, [-38,-38,-36,-36,-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,-2,0,11,13,14])
**VARIABLES**
DISCRETE aux210 #( - M_00003_00008 + M_00003_00009)
{-25..39}
**CONSTRAINTS**
w-inintervalset(aux210, [-25,-21,-19,-18,-16,-16,-9,-9,-7,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux211 #( - M_00003_00009 + M_00003_00010)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux211, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux212 #( - M_00003_00008 + M_00003_00011)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux212, [-25,-21,-19,-18,-16,-16,-9,-9,-7,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux213 #(M_00003_00004 + -2)
{28..41}
**CONSTRAINTS**
w-inintervalset(aux213, [28,28,31,31,33,33,35,35,39,39,41,41])
**VARIABLES**
DISCRETE aux214 #( - M_00003_00004 + M_00003_00005)
{-7..13}
**CONSTRAINTS**
w-inintervalset(aux214, [-7,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux215 #( - M_00003_00010 + M_00003_00011)
{-39..9}
**CONSTRAINTS**
w-inintervalset(aux215, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,9])
**VARIABLES**
DISCRETE aux216 #( - M_00003_00005 + M_00003_00006)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux216, [-13,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,13])
**VARIABLES**
DISCRETE aux217 #( - M_00003_00007 + M_00003_00008)
{-36..26}
**CONSTRAINTS**
w-inintervalset(aux217, [-36,-21,-19,-18,-16,-16,-14,-13,-11,3,5,5,16,16,18,19,21,24,26,26])
**VARIABLES**
DISCRETE aux218 #( - M_00003_00007 + M_00003_00010)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux218, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux219 #( - M_00004_00003 + M_00004_00006)
{-34..33}
**CONSTRAINTS**
w-inintervalset(aux219, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,11,13,14,16,16,18,19,21,27,29,33])
**VARIABLES**
DISCRETE aux220 #( - M_00004_00004 + M_00004_00007)
{-38..26}
**CONSTRAINTS**
w-inintervalset(aux220, [-38,-38,-36,-36,-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,11,13,14,16,16,18,19,21,26])
**VARIABLES**
DISCRETE aux221 #(M_00004_00005 + -14)
{-5..29}
**CONSTRAINTS**
w-inintervalset(aux221, [-5,-5,-3,-2,0,0,16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux222 #( - M_00004_00008 + M_00004_00009)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux222, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux223 #( - M_00004_00009 + M_00004_00010)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux223, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux224 #( - M_00004_00007 + M_00004_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux224, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux225 #( - M_00004_00007 + M_00004_00010)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux225, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux226 #( - M_00004_00006 + M_00004_00007)
{-39..26}
**CONSTRAINTS**
w-inintervalset(aux226, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,26])
**VARIABLES**
DISCRETE aux227 #( - M_00004_00006 + M_00004_00009)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux227, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux228 #( - M_00004_00003 + M_00004_00004)
{-13..32}
**CONSTRAINTS**
w-inintervalset(aux228, [-13,-13,-11,-10,-8,8,10,11,13,13,16,16,18,19,21,27,29,32])
**VARIABLES**
DISCRETE aux229 #( - M_00004_00005 + M_00004_00006)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux229, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,11,13,14,16,16,18,19,21,34])
**VARIABLES**
DISCRETE aux230 #( - M_00004_00005 + M_00004_00008)
{-38..35}
**CONSTRAINTS**
w-inintervalset(aux230, [-38,-38,-36,-36,-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux231 #( - M_00004_00010 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux231, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux232 #( - M_00004_00001 + 14)
{-27..12}
**CONSTRAINTS**
w-inintervalset(aux232, [-27,-27,-23,-23,-21,-21,-19,-19,-16,-16,0,0,2,3,5,5,9,9,12,12])
**VARIABLES**
DISCRETE aux233 #(M_00004_00003 + -14)
{-3..29}
**CONSTRAINTS**
w-inintervalset(aux233, [-3,-2,0,0,16,16,19,19,21,21,23,23,27,27,29,29])
**VARIABLES**
DISCRETE aux234 #( - M_00004_00001 + M_00004_00004)
{0..41}
**CONSTRAINTS**
w-inintervalset(aux234, [0,13,16,16,18,19,21,36,38,39,41,41])
**VARIABLES**
DISCRETE aux235 #( - M_00004_00004 + M_00004_00005)
{-28..34}
**CONSTRAINTS**
w-inintervalset(aux235, [-28,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,8,10,11,13,13,16,16,18,19,21,32,34,34])
**VARIABLES**
DISCRETE aux236 #( - M_00005_00003 + M_00005_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux236, [-34,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,34])
**VARIABLES**
DISCRETE aux237 #( - M_00005_00001 + M_00005_00004)
{-32..42}
**CONSTRAINTS**
w-inintervalset(aux237, [-32,-21,-19,-18,-16,-16,-13,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux238 #( - M_00005_00002 + M_00005_00005)
{-34..33}
**CONSTRAINTS**
w-inintervalset(aux238, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,11,13,14,16,16,18,19,21,27,29,33])
**VARIABLES**
DISCRETE aux239 #( - M_00005_00003 + M_00005_00006)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux239, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux240 #(-1 - M_00005_00009)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux240, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux241 #( - M_00005_00006 + M_00005_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux241, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux242 #( - M_00005_00007 + M_00005_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux242, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux243 #( - M_00005_00006 + M_00005_00009)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux243, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux244 #( - M_00005_00008 + M_00005_00009)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux244, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux245 #( - M_00005_00005 + M_00005_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux245, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux246 #( - M_00005_00005 + M_00005_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux246, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux247 #( - M_00005_00001 + M_00005_00002)
{-30..41}
**CONSTRAINTS**
w-inintervalset(aux247, [-30,-29,-27,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,13,16,16,18,19,21,36,38,39,41,41])
**VARIABLES**
DISCRETE aux248 #( - M_00005_00002 + M_00005_00003)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux248, [-34,-34,-32,-21,-19,-18,-16,-16,-13,-13,-11,-10,-8,11,13,14,16,16,18,19,21,27,29,32])
**VARIABLES**
DISCRETE aux249 #( - M_00005_00004 + M_00005_00005)
{-34..38}
**CONSTRAINTS**
w-inintervalset(aux249, [-34,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,38])
**VARIABLES**
DISCRETE aux250 #( - M_00005_00004 + M_00005_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux250, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux251 #( - M_00006_00002 + M_00006_00003)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux251, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux252 #( - M_00006_00001 + M_00006_00004)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux252, [-38,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux253 #( - M_00006_00001 + M_00006_00002)
{-34..42}
**CONSTRAINTS**
w-inintervalset(aux253, [-34,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux254 #( - M_00006_00002 + M_00006_00005)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux254, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,35])
**VARIABLES**
DISCRETE aux255 #(-1 - M_00006_00008)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux255, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux256 #( - M_00006_00005 + M_00006_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux256, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux257 #( - M_00006_00006 + M_00006_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux257, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux258 #( - M_00006_00005 + M_00006_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux258, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux259 #( - M_00006_00007 + M_00006_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux259, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux260 #( - M_00006_00004 + M_00006_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux260, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux261 #( - M_00006_00004 + M_00006_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux261, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux262 #( - M_00006_00003 + M_00006_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux262, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux263 #( - M_00006_00003 + M_00006_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux263, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux264 #( - M_00007_00004 + M_00007_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux264, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux265 #( - M_00007_00002 + M_00007_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux265, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux266 #( - M_00007_00004 + M_00007_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux266, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux267 #( - M_00007_00006 + M_00007_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux267, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux268 #( - M_00007_00007 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux268, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux269 #( - M_00007_00003 + M_00007_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux269, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux270 #( - M_00007_00001 + M_00007_00004)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux270, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux271 #( - M_00007_00003 + M_00007_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux271, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux272 #( - M_00007_00005 + M_00007_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux272, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux273 #( - M_00007_00001 + M_00007_00002)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux273, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux274 #( - M_00007_00002 + M_00007_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux274, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux275 #( - M_00008_00001 + M_00008_00004)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux275, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux276 #( - M_00008_00005 + M_00008_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux276, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux277 #( - M_00008_00004 + M_00008_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux277, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux278 #( - M_00008_00003 + M_00008_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux278, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux279 #( - M_00008_00002 + M_00008_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux279, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux280 #( - M_00008_00001 + M_00008_00002)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux280, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux281 #( - M_00008_00006 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux281, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux282 #( - M_00008_00003 + M_00008_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux282, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux283 #( - M_00008_00002 + M_00008_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux283, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux284 #( - M_00009_00001 + M_00009_00004)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux284, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux285 #(-1 - M_00009_00005)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux285, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux286 #( - M_00009_00001 + M_00009_00002)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux286, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux287 #( - M_00009_00002 + M_00009_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux287, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux288 #( - M_00009_00002 + M_00009_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux288, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux289 #( - M_00009_00003 + M_00009_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux289, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux290 #( - M_00009_00004 + M_00009_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux290, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux291 #( - M_00010_00002 + M_00010_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux291, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux292 #( - M_00010_00003 + M_00010_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux292, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux293 #( - M_00010_00001 + M_00010_00002)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux293, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux294 #( - M_00010_00001 + M_00010_00004)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux294, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux295 #( - M_00010_00004 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux295, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux296 #( - M_00011_00001 + M_00011_00002)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux296, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39,41,42])
**VARIABLES**
DISCRETE aux297 #( - M_00011_00002 + M_00011_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux297, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,11,13,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux298 #( - M_00011_00003 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux298, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
DISCRETE aux299 #( - M_00012_00001 + M_00012_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux299, [-39,-38,-36,-21,-19,-18,-16,-16,-14,-13,-11,14,16,16,18,19,21,36,38,39])
**VARIABLES**
DISCRETE aux300 #( - M_00012_00002 + -1)
{-45..-6}
**CONSTRAINTS**
w-inintervalset(aux300, [-45,-44,-42,-42,-38,-38,-36,-36,-34,-34,-31,-31,-15,-15,-13,-12,-10,-10,-6,-6])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[2, 14, 11, 33, 37, 43, 41, 30, 9, 35, 44, 5, 12]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux187)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00005, 13, aux15)
div(M_00002_00010, 13, aux16)
div(M_00002_00011, 13, aux17)
reify(gaceq(M_00003_00004,M_00004_00004), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00007, 13, aux20)
reify(gaceq(M_00003_00008,M_00004_00007), aux21)
reify(gaceq(M_00007_00002,M_00006_00002), aux22)
div(M_00010_00004, 13, aux23)
div(M_00010_00001, 13, aux24)
div(M_00010_00003, 13, aux25)
div(M_00010_00002, 13, aux26)
reify(gaceq(M_00008_00004,M_00009_00004), aux27)
reify(gaceq(M_00004_00004,M_00005_00004), aux28)
reify(gaceq(M_00005_00007,M_00006_00006), aux29)
div(M_00002_00007, 13, aux30)
div(M_00002_00008, 13, aux31)
reify(gaceq(M_00010_00001,M_00009_00001), aux32)
reify(gaceq(M_00003_00006,M_00004_00006), aux33)
reify(gaceq(M_00004_00005,M_00005_00004), aux34)
reify(gaceq(M_00010_00004,M_00009_00005), aux35)
reify(gaceq(M_00002_00008,M_00003_00008), aux36)
reify(gaceq(M_00010_00004,M_00009_00004), aux37)
reify(gaceq(M_00010_00002,M_00009_00003), aux38)
reify(gaceq(M_00004_00006,M_00005_00005), aux39)
reify(gaceq(M_00002_00004,M_00003_00004), aux40)
div(M_00004_00008, 13, aux41)
div(M_00004_00009, 13, aux42)
div(M_00004_00003, 13, aux43)
reify(gaceq(M_00007_00007,M_00006_00008), aux44)
reify(gaceq(M_00005_00004,M_00006_00004), aux45)
reify(gaceq(M_00004_00007,M_00005_00007), aux46)
reify(gaceq(M_00004_00010,M_00005_00009), aux47)
div(M_00002_00006, 13, 3)
div(M_00002_00004, 13, 2)
reify(gaceq(M_00011_00003,M_00012_00002), aux50)
reify(gaceq(M_00011_00001,M_00012_00001), aux51)
reify(gaceq(M_00005_00005,M_00006_00005), aux52)
reify(gaceq(M_00003_00008,M_00004_00008), aux53)
reify(gaceq(M_00007_00006,M_00008_00005), aux54)
reify(gaceq(M_00008_00004,M_00009_00003), aux55)
reify(gaceq(M_00007_00003,M_00006_00003), aux56)
reify(gaceq(M_00005_00003,M_00006_00003), aux57)
reify(gaceq(M_00005_00007,M_00006_00007), aux58)
reify(gaceq(M_00010_00004,M_00011_00003), aux59)
reify(gaceq(M_00010_00001,M_00011_00001), aux60)
reify(gaceq(M_00010_00002,M_00011_00002), aux61)
reify(gaceq(M_00002_00006,M_00003_00006), aux62)
div(M_00003_00011, 13, aux63)
div(M_00003_00003, 13, aux64)
reify(gaceq(M_00007_00002,M_00008_00002), aux65)
div(M_00005_00001, 13, aux66)
div(M_00005_00009, 13, aux67)
div(M_00008_00001, 13, aux68)
div(M_00008_00006, 13, aux69)
reify(gaceq(M_00004_00006,M_00005_00006), aux70)
div(M_00006_00007, 13, aux71)
div(M_00006_00006, 13, aux72)
div(M_00006_00003, 13, aux73)
div(M_00006_00002, 13, aux74)
reify(gaceq(M_00005_00009,M_00006_00008), aux75)
reify(gaceq(M_00010_00003,M_00011_00003), aux76)
reify(gaceq(M_00010_00003,M_00011_00002), aux77)
reify(gaceq(M_00002_00005,M_00003_00005), aux78)
reify(gaceq(M_00010_00002,M_00009_00002), aux79)
reify(gaceq(M_00010_00003,M_00009_00003), aux80)
reify(gaceq(M_00004_00004,M_00005_00003), aux81)
reify(gaceq(M_00002_00005,M_00003_00004), aux82)
reify(gaceq(M_00002_00011,M_00003_00011), aux83)
reify(gaceq(M_00002_00009,M_00003_00009), aux84)
reify(gaceq(M_00002_00007,M_00003_00006), aux85)
reify(gaceq(M_00002_00010,M_00003_00010), aux86)
reify(gaceq(M_00004_00001,M_00005_00001), aux87)
reify(gaceq(M_00004_00007,M_00005_00006), aux88)
reify(gaceq(M_00007_00001,M_00006_00001), aux89)
div(M_00009_00004, 13, aux90)
div(M_00009_00002, 13, aux91)
reify(gaceq(M_00003_00005,M_00004_00005), aux92)
reify(gaceq(M_00007_00006,M_00006_00007), aux93)
reify(gaceq(M_00007_00006,M_00008_00006), aux94)
reify(gaceq(M_00007_00003,M_00008_00002), aux95)
div(M_00011_00002, 13, aux96)
reify(gaceq(M_00008_00003,M_00009_00002), aux97)
reify(gaceq(M_00008_00005,M_00009_00005), aux98)
reify(gaceq(M_00005_00008,M_00006_00007), aux99)
reify(gaceq(M_00010_00003,M_00009_00004), aux100)
div(M_00006_00004, 13, aux101)
div(M_00006_00005, 13, aux102)
reify(gaceq(M_00004_00003,M_00005_00003), aux103)
reify(gaceq(M_00002_00007,M_00003_00007), aux104)
div(M_00006_00001, 13, aux105)
div(M_00006_00008, 13, aux106)
div(M_00003_00010, 13, aux107)
div(M_00003_00009, 13, aux108)
div(M_00003_00004, 13, aux109)
div(M_00003_00005, 13, aux110)
reify(gaceq(M_00005_00005,M_00006_00004), aux111)
reify(gaceq(M_00003_00010,M_00004_00010), aux112)
reify(gaceq(M_00003_00003,M_00004_00003), aux113)
reify(gaceq(M_00005_00003,M_00006_00002), aux114)
reify(gaceq(M_00005_00008,M_00006_00008), aux115)
reify(gaceq(M_00003_00007,M_00004_00007), aux116)
div(M_00005_00007, 13, aux117)
div(M_00005_00008, 13, aux118)
div(M_00005_00002, 13, aux119)
div(M_00005_00003, 13, aux120)
reify(gaceq(M_00005_00006,M_00006_00006), aux121)
reify(gaceq(M_00004_00009,M_00005_00009), aux122)
reify(gaceq(M_00004_00003,M_00005_00002), aux123)
reify(gaceq(M_00005_00002,M_00006_00002), aux124)
reify(gaceq(M_00003_00007,M_00004_00006), aux125)
reify(gaceq(M_00003_00010,M_00004_00009), aux126)
reify(gaceq(M_00004_00008,M_00005_00007), aux127)
div(M_00007_00002, 13, aux128)
div(M_00007_00003, 13, aux129)
div(M_00007_00006, 13, aux130)
div(M_00007_00005, 13, aux131)
reify(gaceq(M_00004_00009,M_00005_00008), aux132)
reify(gaceq(M_00008_00003,M_00009_00003), aux133)
reify(gaceq(M_00008_00005,M_00009_00004), aux134)
div(M_00007_00004, 13, aux135)
reify(gaceq(M_00002_00011,M_00003_00010), aux136)
reify(gaceq(M_00003_00005,M_00004_00004), aux137)
reify(gaceq(M_00007_00004,M_00008_00003), aux138)
reify(gaceq(M_00003_00009,M_00004_00009), aux139)
reify(gaceq(M_00005_00004,M_00006_00003), aux140)
reify(gaceq(M_00003_00006,M_00004_00005), aux141)
div(M_00004_00007, 13, aux142)
reify(gaceq(M_00008_00001,M_00009_00001), aux143)
div(M_00004_00004, 13, aux144)
div(M_00004_00005, 13, aux145)
div(M_00004_00006, 13, aux146)
reify(gaceq(M_00008_00006,M_00009_00005), aux147)
reify(gaceq(M_00007_00003,M_00006_00004), aux148)
reify(gaceq(M_00003_00011,M_00004_00010), aux149)
reify(gaceq(M_00002_00008,M_00003_00007), aux150)
div(M_00008_00003, 13, aux151)
div(M_00008_00004, 13, aux152)
div(M_00008_00005, 13, aux153)
div(M_00008_00002, 13, aux154)
reify(gaceq(M_00008_00002,M_00009_00002), aux155)
reify(gaceq(M_00007_00005,M_00008_00005), aux156)
reify(gaceq(M_00007_00007,M_00006_00007), aux157)
reify(gaceq(M_00007_00002,M_00006_00003), aux158)
reify(gaceq(M_00005_00006,M_00006_00005), aux159)
div(M_00003_00007, 13, aux160)
div(M_00003_00008, 13, aux161)
reify(gaceq(M_00007_00004,M_00008_00004), aux162)
div(M_00003_00006, 13, aux163)
reify(gaceq(M_00007_00007,M_00008_00006), aux164)
reify(gaceq(M_00003_00009,M_00004_00008), aux165)
reify(gaceq(M_00007_00005,M_00008_00004), aux166)
reify(gaceq(M_00002_00006,M_00003_00005), aux167)
reify(gaceq(M_00007_00005,M_00006_00005), aux168)
div(M_00005_00004, 13, aux169)
div(M_00005_00005, 13, aux170)
div(M_00005_00006, 13, aux171)
reify(gaceq(M_00005_00001,M_00006_00001), aux172)
reify(gaceq(M_00007_00005,M_00006_00006), aux173)
reify(gaceq(M_00002_00010,M_00003_00009), aux174)
div(M_00009_00005, 13, aux175)
div(M_00009_00003, 13, aux176)
div(M_00009_00001, 13, aux177)
div(M_00004_00001, 13, aux178)
div(M_00004_00010, 13, aux179)
reify(gaceq(M_00004_00008,M_00005_00008), aux180)
reify(gaceq(M_00002_00009,M_00003_00008), aux181)
reify(gaceq(M_00007_00004,M_00006_00005), aux182)
reify(gaceq(M_00007_00003,M_00008_00003), aux183)
reify(gaceq(M_00007_00001,M_00008_00001), aux184)
reify(gaceq(M_00004_00005,M_00005_00005), aux185)
reify(gaceq(M_00007_00004,M_00006_00004), aux186)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,30),w-literal(M_00002_00006,43),w-literal(M_00002_00008,9),w-literal(M_00002_00007,41),w-literal(M_00002_00009,35),w-literal(M_00002_00011,5),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,37),w-literal(M_00002_00005,43),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9),w-literal(M_00002_00009,35),w-literal(M_00002_00011,5),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,41),w-literal(M_00002_00007,30),w-literal(M_00002_00008,9),w-literal(M_00002_00009,35),w-literal(M_00002_00011,5),w-literal(M_00002_00010,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,5),w-literal(M_00002_00010,35),w-literal(M_00002_00011,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,9),w-literal(M_00002_00010,35),w-literal(M_00002_00011,5)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,9),w-literal(M_00002_00010,35),w-literal(M_00002_00011,44)}),watched-and({w-literal(M_00002_00004,33),w-literal(M_00002_00005,37),w-literal(M_00002_00006,43),w-literal(M_00002_00007,41),w-literal(M_00002_00008,30),w-literal(M_00002_00009,35),w-literal(M_00002_00011,5),w-literal(M_00002_00010,44)})})
watched-or({watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux188,13,0),w-literal(aux15,3)})}),watched-and({w-literal(M_00003_00003,11),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux36,1),w-literal(aux84,1),w-literal(aux86,1),w-literal(aux83,1)}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux78,1),w-literal(aux62,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux189,13,0),w-literal(aux30,2)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux62,1),w-literal(aux104,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux190,13,0),gaceq(aux15,aux31)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux191,13,0),gaceq(aux31,aux14)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux36,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux192,13,0),gaceq(aux14,aux16)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux84,1),w-literal(aux86,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux193,13,0),gaceq(aux31,aux17)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux36,1),w-literal(aux84,1),w-literal(aux136,1),watched-or({modulo(aux194,13,0),gaceq(aux16,aux17)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux195,13,0),gaceq(aux30,aux31)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux36,1),w-literal(aux84,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux136,1),watched-or({modulo(aux196,13,0),gaceq(aux30,aux16)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),watched-or({w-literal(aux17,0),modulo(aux197,13,0)}),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux36,1),w-literal(aux84,1),w-literal(aux86,1)}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux104,1),w-literal(aux36,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux174,1),w-literal(aux136,1),modulo(aux198,13,0)}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00009,12),watched-or({w-literal(aux14,0),modulo(aux199,13,0)}),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux104,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux83,1)}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux82,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux200,13,0),w-literal(aux15,2)})}),watched-and({w-literal(M_00003_00003,11),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux78,1),w-literal(aux85,1),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1),watched-or({modulo(aux201,13,0),w-literal(aux30,3)})}),watched-and({w-literal(M_00003_00011,12),modulo(aux202,13,0),gaceq(M_00002_00004,M_00003_00003),w-literal(aux82,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux150,1),w-literal(aux181,1),w-literal(aux174,1),w-literal(aux136,1)})})
watched-or({watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux116,1),w-literal(aux53,1),w-literal(aux139,1),w-literal(aux112,1),modulo(aux203,13,0),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux18,1),w-literal(aux92,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux204,13,0),gaceq(aux64,aux163)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux205,13,0),gaceq(aux163,aux160)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux92,1),w-literal(aux33,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux206,13,0),gaceq(aux109,aux160)}),w-literal(M_00004_00001,2)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux137,1),w-literal(aux141,1),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux207,13,0),gaceq(aux64,aux109)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux33,1),w-literal(aux116,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux208,13,0),gaceq(aux110,aux161)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux116,1),w-literal(aux53,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux209,13,0),gaceq(aux163,aux108)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux116,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux210,13,0),gaceq(aux161,aux108)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux116,1),w-literal(aux53,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux211,13,0),gaceq(aux108,aux107)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux116,1),w-literal(aux139,1),w-literal(aux112,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux212,13,0),gaceq(aux161,aux63)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux137,1),w-literal(aux141,1),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),modulo(aux213,13,0)}),watched-and({w-literal(aux113,1),w-literal(aux137,1),w-literal(aux141,1),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux214,13,0),gaceq(aux109,aux110)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux116,1),w-literal(aux53,1),w-literal(aux139,1),w-literal(aux149,1),watched-or({modulo(aux215,13,0),gaceq(aux107,aux63)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux141,1),w-literal(aux125,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux216,13,0),gaceq(aux110,aux163)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux126,1),w-literal(aux149,1),watched-or({modulo(aux217,13,0),gaceq(aux160,aux161)}),w-literal(M_00004_00001,2)}),watched-and({w-literal(aux113,1),w-literal(aux18,1),w-literal(aux92,1),w-literal(aux33,1),w-literal(aux53,1),w-literal(aux139,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux149,1),watched-or({modulo(aux218,13,0),gaceq(aux160,aux107)}),w-literal(M_00004_00001,2)})})
watched-or({watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux28,1),w-literal(aux185,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux43,aux146),modulo(aux219,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux185,1),w-literal(aux70,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux144,aux142),modulo(aux220,13,0)})}),watched-and({watched-or({modulo(aux221,13,0),w-literal(aux145,1)}),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux70,1),w-literal(aux46,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux41,aux42),modulo(aux222,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux70,1),w-literal(aux46,1),w-literal(aux180,1),w-literal(aux47,1),watched-or({gaceq(aux42,aux179),modulo(aux223,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux70,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux142,aux41),modulo(aux224,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux70,1),w-literal(aux180,1),w-literal(aux122,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux142,aux179),modulo(aux225,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux146,aux142),modulo(aux226,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux46,1),w-literal(aux180,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux47,1),watched-or({gaceq(aux146,aux42),modulo(aux227,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux81,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux43,aux144),modulo(aux228,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux145,aux146),modulo(aux229,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux70,1),w-literal(aux46,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux145,aux41),modulo(aux230,13,0)})}),watched-and({w-literal(M_00005_00002,14),modulo(aux231,13,0),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux185,1),w-literal(aux70,1),w-literal(aux46,1),w-literal(aux180,1),w-literal(aux122,1)}),watched-and({w-literal(M_00005_00001,14),watched-or({modulo(aux232,13,0),w-literal(aux178,1)}),w-literal(aux123,1),w-literal(aux81,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1)}),watched-and({watched-or({modulo(aux233,13,0),w-literal(aux43,1)}),w-literal(aux87,1),w-literal(aux123,1),w-literal(aux81,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1)}),watched-and({w-literal(M_00005_00002,14),w-literal(aux103,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux178,aux144),modulo(aux234,13,0)})}),watched-and({w-literal(M_00005_00002,14),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux127,1),w-literal(aux132,1),w-literal(aux47,1),watched-or({gaceq(aux144,aux145),modulo(aux235,13,0)})})})
watched-or({watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux140,1),w-literal(aux111,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux236,13,0),gaceq(aux120,aux169)})}),watched-and({w-literal(aux124,1),w-literal(aux57,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux111,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux237,13,0),gaceq(aux66,aux169)})}),watched-and({w-literal(aux172,1),w-literal(aux57,1),w-literal(aux45,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux238,13,0),gaceq(aux119,aux170)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux45,1),w-literal(aux52,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux239,13,0),gaceq(aux120,aux171)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux121,1),w-literal(aux58,1),w-literal(aux115,1),modulo(aux240,13,0)}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux241,13,0),gaceq(aux171,aux117)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux121,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux242,13,0),gaceq(aux117,aux118)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux58,1),w-literal(aux115,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux243,13,0),gaceq(aux171,aux67)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux121,1),w-literal(aux58,1),w-literal(aux75,1),watched-or({modulo(aux244,13,0),gaceq(aux118,aux67)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux245,13,0),gaceq(aux170,aux171)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux121,1),w-literal(aux58,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux75,1),watched-or({modulo(aux246,13,0),gaceq(aux170,aux118)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux114,1),w-literal(aux140,1),w-literal(aux111,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux247,13,0),gaceq(aux66,aux119)})}),watched-and({w-literal(aux172,1),w-literal(aux114,1),w-literal(aux140,1),w-literal(aux111,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux248,13,0),gaceq(aux119,aux120)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux111,1),w-literal(aux159,1),w-literal(aux29,1),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux249,13,0),gaceq(aux169,aux170)})}),watched-and({w-literal(aux172,1),w-literal(aux124,1),w-literal(aux57,1),w-literal(aux52,1),w-literal(aux121,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux99,1),w-literal(aux75,1),watched-or({modulo(aux250,13,0),gaceq(aux169,aux117)})})})
watched-or({watched-and({w-literal(aux89,1),w-literal(aux158,1),w-literal(aux148,1),w-literal(aux182,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux74,aux73),modulo(aux251,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux182,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux105,aux101),modulo(aux252,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux158,1),w-literal(aux148,1),w-literal(aux182,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux105,aux74),modulo(aux253,13,0)})}),watched-and({w-literal(aux89,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux74,aux102),modulo(aux254,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux168,1),w-literal(aux13,1),w-literal(aux157,1),modulo(aux255,13,0)}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux102,aux72),modulo(aux256,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux168,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux72,aux71),modulo(aux257,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux186,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux157,1),watched-or({gaceq(aux102,aux106),modulo(aux258,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux168,1),w-literal(aux13,1),w-literal(aux44,1),watched-or({gaceq(aux71,aux106),modulo(aux259,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),w-literal(aux182,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux101,aux102),modulo(aux260,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux56,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux168,1),w-literal(aux13,1),w-literal(aux44,1),watched-or({gaceq(aux101,aux71),modulo(aux261,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),w-literal(aux148,1),w-literal(aux182,1),w-literal(aux173,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux73,aux101),modulo(aux262,13,0)})}),watched-and({w-literal(aux89,1),w-literal(aux22,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux186,1),w-literal(aux168,1),w-literal(aux93,1),w-literal(aux44,1),watched-or({gaceq(aux73,aux72),modulo(aux263,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux264,13,0),gaceq(aux135,aux20)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux183,1),w-literal(aux156,1),w-literal(aux94,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux265,13,0),gaceq(aux128,aux129)}),w-literal(aux184,1),w-literal(aux95,1),w-literal(aux138,1),w-literal(aux166,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux266,13,0),gaceq(aux135,aux131)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux183,1),w-literal(aux166,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux267,13,0),gaceq(aux130,aux20)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux183,1),w-literal(aux162,1),w-literal(aux156,1),w-literal(aux164,1)}),watched-and({modulo(aux268,13,0),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux183,1),w-literal(aux162,1),w-literal(aux156,1),w-literal(aux94,1)}),watched-and({watched-or({modulo(aux269,13,0),gaceq(aux129,aux130)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux162,1),w-literal(aux156,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux270,13,0),gaceq(aux19,aux135)}),w-literal(aux65,1),w-literal(aux183,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux166,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux271,13,0),gaceq(aux129,aux135)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux138,1),w-literal(aux166,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux272,13,0),gaceq(aux131,aux130)}),w-literal(aux184,1),w-literal(aux65,1),w-literal(aux183,1),w-literal(aux162,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux273,13,0),gaceq(aux19,aux128)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux95,1),w-literal(aux138,1),w-literal(aux166,1),w-literal(aux54,1),w-literal(aux164,1)}),watched-and({watched-or({modulo(aux274,13,0),gaceq(aux128,aux131)}),w-literal(aux184,1),w-literal(aux183,1),w-literal(aux162,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux54,1),w-literal(aux164,1)})})
watched-or({watched-and({watched-or({gaceq(aux68,aux152),modulo(aux275,13,0)}),w-literal(aux155,1),w-literal(aux133,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux134,1),w-literal(aux147,1)}),watched-and({watched-or({gaceq(aux153,aux69),modulo(aux276,13,0)}),w-literal(aux143,1),w-literal(aux155,1),w-literal(aux133,1),w-literal(aux27,1),w-literal(aux147,1)}),watched-and({watched-or({gaceq(aux152,aux153),modulo(aux277,13,0)}),w-literal(aux143,1),w-literal(aux155,1),w-literal(aux133,1),w-literal(aux134,1),w-literal(aux147,1)}),watched-and({watched-or({gaceq(aux151,aux152),modulo(aux278,13,0)}),w-literal(aux143,1),w-literal(aux155,1),w-literal(aux55,1),w-literal(aux134,1),w-literal(aux147,1)}),watched-and({watched-or({gaceq(aux154,aux151),modulo(aux279,13,0)}),w-literal(aux143,1),w-literal(aux97,1),w-literal(aux55,1),w-literal(aux134,1),w-literal(aux147,1)}),watched-and({watched-or({gaceq(aux68,aux154),modulo(aux280,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux97,1),w-literal(aux55,1),w-literal(aux134,1),w-literal(aux147,1)}),watched-and({w-literal(aux143,1),w-literal(aux155,1),w-literal(aux133,1),w-literal(aux27,1),w-literal(aux98,1),modulo(aux281,13,0)}),watched-and({watched-or({gaceq(aux151,aux69),modulo(aux282,13,0)}),w-literal(aux143,1),w-literal(aux155,1),w-literal(aux27,1),w-literal(aux98,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux154,aux153),modulo(aux283,13,0)}),w-literal(aux143,1),w-literal(aux133,1),w-literal(aux27,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux147,1)})})
watched-or({watched-and({watched-or({modulo(aux284,13,0),gaceq(aux177,aux90)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux79,1),w-literal(aux80,1),w-literal(aux35,1)}),watched-and({modulo(aux285,13,0),w-literal(aux32,1),w-literal(aux79,1),w-literal(aux80,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux177,aux91)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux38,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux91,aux175)}),w-literal(aux32,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux80,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux288,13,0),gaceq(aux91,aux176)}),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux176,aux90)}),w-literal(aux32,1),w-literal(aux79,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux290,13,0),gaceq(aux90,aux175)}),w-literal(aux32,1),w-literal(aux79,1),w-literal(aux80,1),w-literal(aux35,1)})})
watched-or({watched-and({w-literal(aux60,1),w-literal(aux77,1),w-literal(aux59,1),watched-or({gaceq(aux26,aux25),modulo(aux291,13,0)})}),watched-and({w-literal(aux60,1),w-literal(aux61,1),w-literal(aux59,1),watched-or({gaceq(aux25,aux23),modulo(aux292,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux77,1),w-literal(aux59,1),watched-or({gaceq(aux24,aux26),modulo(aux293,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux76,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux24,aux23),modulo(aux294,13,0)})}),watched-and({w-literal(aux60,1),w-literal(aux61,1),w-literal(aux76,1),modulo(aux295,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux96),modulo(aux296,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux50,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux96),modulo(aux297,13,0)}),w-literal(aux51,1),w-literal(aux50,1)}),watched-and({modulo(aux298,13,0),w-literal(aux51,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux187),modulo(aux299,13,0)})}),watched-and({modulo(aux300,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux188)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux188)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux189)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux189)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux190)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux190)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux191)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux191)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux192)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux192)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux193)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux193)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux194)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux194)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux195)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux195)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux196)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux196)
weightedsumleq([-1,1],[M_00002_00011,12],aux197)
weightedsumgeq([-1,1],[M_00002_00011,12],aux197)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux198)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux198)
weightedsumleq([-1,1],[M_00002_00009,12],aux199)
weightedsumgeq([-1,1],[M_00002_00009,12],aux199)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux200)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux200)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux201)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux201)
sumleq([M_00002_00004,-11],aux202)
sumgeq([M_00002_00004,-11],aux202)
weightedsumleq([-1,1],[M_00003_00011,-1],aux203)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux203)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux204)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux204)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux205)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux205)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux206)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux206)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux207)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux207)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux208)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux208)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux209)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux209)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux210)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux210)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux211)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux211)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux212)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux212)
sumleq([M_00003_00004,-2],aux213)
sumgeq([M_00003_00004,-2],aux213)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux214)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux214)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux215)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux215)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux216)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux216)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux217)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux217)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux218)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux218)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux219)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux219)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux220)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux220)
sumleq([M_00004_00005,-14],aux221)
sumgeq([M_00004_00005,-14],aux221)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux222)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux222)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux223)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux223)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux224)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux224)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux225)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux225)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux226)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux226)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux227)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux227)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux228)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux228)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux229)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux229)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux230)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux230)
weightedsumleq([-1,1],[M_00004_00010,-1],aux231)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux231)
weightedsumleq([-1,1],[M_00004_00001,14],aux232)
weightedsumgeq([-1,1],[M_00004_00001,14],aux232)
sumleq([M_00004_00003,-14],aux233)
sumgeq([M_00004_00003,-14],aux233)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux234)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux234)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux235)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux235)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux236)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux236)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux237)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux237)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux238)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux238)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux239)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux239)
weightedsumleq([1,-1],[-1,M_00005_00009],aux240)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux240)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux241)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux241)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux242)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux242)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux243)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux243)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux244)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux244)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux245)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux245)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux246)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux246)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux247)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux247)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux248)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux248)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux249)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux249)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux250)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux250)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux251)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux251)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux252)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux252)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux253)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux253)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux254)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux254)
weightedsumleq([1,-1],[-1,M_00006_00008],aux255)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux255)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux256)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux256)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux257)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux257)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux258)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux258)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux259)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux259)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux260)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux260)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux261)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux261)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux262)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux262)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux263)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux263)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux264)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux264)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux265)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux265)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux266)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux266)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux267)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux267)
weightedsumleq([-1,1],[M_00007_00007,-1],aux268)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux268)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux269)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux269)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux270)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux270)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux271)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux271)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux272)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux272)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux273)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux273)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux274)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux274)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux275)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux275)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux276)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux276)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux277)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux277)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux278)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux278)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux279)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux279)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux280)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux280)
weightedsumleq([-1,1],[M_00008_00006,-1],aux281)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux281)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux282)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux282)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux283)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux283)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux284)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux284)
weightedsumleq([1,-1],[-1,M_00009_00005],aux285)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux285)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux286)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux286)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux287)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux287)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux288)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux288)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux289)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux289)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux290)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux290)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux291)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux291)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux292)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux292)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux293)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux293)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux294)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux294)
weightedsumleq([-1,1],[M_00010_00004,-1],aux295)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux295)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux296)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux296)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux297)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux297)
weightedsumleq([-1,1],[M_00011_00003,-1],aux298)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux298)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux299)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux299)
weightedsumleq([-1,1],[M_00012_00002,-1],aux300)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux300)
**EOF**
