MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 219
# CSE_active_eliminated_expressions = 1302
# CSE_active_total_size = 657
**VARIABLES**
DISCRETE M_00002_00001 #
{18..31}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [18,18,20,20,29,29,31,31])
**VARIABLES**
DISCRETE M_00002_00002 #
{5..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,50])
**VARIABLES**
DISCRETE M_00002_00003 #
{50..51}
DISCRETE M_00002_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00002_00005 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00002_00006 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00002_00007 #
{17..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [17,18,20,20])
**VARIABLES**
DISCRETE M_00002_00008 #
{17..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [17,18,20,20,29,29,31,31,33,33])
**VARIABLES**
DISCRETE M_00002_00009 #
{33..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00002_00010 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00003_00001 #
{5..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,50])
**VARIABLES**
DISCRETE M_00003_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00003_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00003_00005 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00003_00006 #
{17..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00003_00007 #
{17..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [17,18,20,20,29,29,31,31,33,33])
**VARIABLES**
DISCRETE M_00003_00008 #
{17..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00003_00009 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00003_00010 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00003_00011 #
{12..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [12,13,17,18,20,20,29,29])
**VARIABLES**
DISCRETE M_00003_00012 #
{13..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [13,13,17,18,20,20,29,29])
**VARIABLES**
DISCRETE M_00004_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00004_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00004_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00004_00005 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00004_00006 #
{13..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [13,13,17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00004_00007 #
{13..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [13,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00004_00008 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00004_00009 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00004_00010 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00004_00011 #
{12..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [12,13,17,18,20,20,29,29])
**VARIABLES**
DISCRETE M_00005_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00005_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00005_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00005_00005 #
{5..35}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE M_00005_00006 #
{13..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [13,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00005_00007 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00005_00008 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00005_00009 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00005_00010 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00006_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00006_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00006_00005 #
{5..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00006_00006 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00006_00007 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00006_00008 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00006_00009 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00007_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00007_00005 #
{5..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00007_00006 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00007_00007 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00007_00008 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00008_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00008_00005 #
{5..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00008_00006 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00008_00007 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00009_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00009_00005 #
{5..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00009_00006 #
{8..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00010_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00010_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00010_00005 #
{5..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00011_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00011_00004 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00012_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00012_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00013_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00013_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
DISCRETE M_00014_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [5,5,8,8,12,13,17,18,20,20,29,29,31,31,33,33,35,35,49,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..2}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002/13)
{0..3}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..3}
BOOL aux22 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux29 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..3}
BOOL aux31 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
DISCRETE aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..2}
DISCRETE aux35 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{2..3}
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux38 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux41 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux42 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux45 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux47 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux48 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux49 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux54 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux55 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux56 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux57 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux58 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux59 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux60 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001/13)
{1..2}
BOOL aux63 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux66 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux68 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux70 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux71 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux77 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00012/13)
{1..2}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{0..3}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
{0..3}
BOOL aux83 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux84 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux85 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
BOOL aux88 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux93 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux94 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux95 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux98 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux99 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux100 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux101 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux102 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux105 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux106 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux107 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux112 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux113 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux120 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux123 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..3}
BOOL aux130 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..2}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux136 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux137 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux140 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux145 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux146 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux147 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux150 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux151 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux154 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux155 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux156 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux157 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux162 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux163 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux164 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux165 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux166 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux167 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux168 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux169 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux170 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux171 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux172 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux173 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux175 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{1..3}
DISCRETE aux176 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux177 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux178 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux179 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{1..2}
BOOL aux180 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux181 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux182 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux183 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux184 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux185 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux186 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux187 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux188 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
DISCRETE aux189 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux191 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux192 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux193 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux194 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux198 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux199 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
DISCRETE aux200 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..2}
DISCRETE aux201 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
DISCRETE aux202 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux203 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..2}
DISCRETE aux204 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux205 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux206 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux207 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux208 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux209 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux210 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux211 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux212 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux215 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux216 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux217 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{1..3}
DISCRETE aux218 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux219 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux220 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux221 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux222 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux223 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux224 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
DISCRETE aux225 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00011/13)
{0..2}
BOOL aux226 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux227 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux228 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux229 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux230 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux231 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux232 #
{0..3}
DISCRETE aux233 #( - M_00002_00010 + 13)
{-36..5}
**CONSTRAINTS**
w-inintervalset(aux233, [-36,-36,-22,-22,-20,-20,-18,-18,-16,-16,-7,-7,-5,-4,0,1,5,5])
**VARIABLES**
DISCRETE aux234 #( - M_00002_00003 + M_00002_00006)
{-31..-15}
**CONSTRAINTS**
w-inintervalset(aux234, [-31,-30,-22,-15])
**VARIABLES**
DISCRETE aux235 #( - M_00002_00002 + M_00002_00005)
{-26..30}
**CONSTRAINTS**
w-inintervalset(aux235, [-26,28,30,30])
**VARIABLES**
DISCRETE aux236 #( - M_00002_00001 + M_00002_00002)
{-13..19}
**CONSTRAINTS**
w-inintervalset(aux236, [-13,-5,-3,0,2,2,4,4,6,6,9,9,11,11,13,13,15,15,17,19])
**VARIABLES**
DISCRETE aux237 #( - M_00002_00004 + M_00002_00007)
{-34..12}
**CONSTRAINTS**
w-inintervalset(aux237, [-34,-29,-18,-11,-9,-9,-3,10,12,12])
**VARIABLES**
DISCRETE aux238 #( - M_00002_00009 + 29)
{-20..-4}
**CONSTRAINTS**
w-inintervalset(aux238, [-20,-20,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux239 #( - M_00002_00007 + M_00002_00008)
{-3..16}
**CONSTRAINTS**
w-inintervalset(aux239, [-3,3,9,9,11,16])
**VARIABLES**
DISCRETE aux240 #( - M_00002_00008 + M_00002_00009)
{16..32}
**CONSTRAINTS**
w-inintervalset(aux240, [16,18,20,20,29,29,31,32])
**VARIABLES**
DISCRETE aux241 #( - M_00002_00007 + M_00002_00010)
{-12..29}
**CONSTRAINTS**
w-inintervalset(aux241, [-12,-12,-10,3,9,9,11,18,29,29])
**VARIABLES**
DISCRETE aux242 #( - M_00002_00009 + M_00002_00010)
{-41..16}
**CONSTRAINTS**
w-inintervalset(aux242, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,-20,-18,-13,-6,-6,-4,-4,-2,-2,0,0,2,2,14,14,16,16])
**VARIABLES**
DISCRETE aux243 #( - M_00002_00006 + M_00002_00007)
{-18..-3}
**CONSTRAINTS**
w-inintervalset(aux243, [-18,-11,-9,-9,-3,-3])
**VARIABLES**
DISCRETE aux244 #( - M_00002_00006 + M_00002_00009)
{-2..29}
**CONSTRAINTS**
w-inintervalset(aux244, [-2,-2,0,0,2,2,4,4,6,6,13,16,18,18,20,20,29,29])
**VARIABLES**
DISCRETE aux245 #( - M_00002_00002 + M_00002_00003)
{1..45}
**CONSTRAINTS**
w-inintervalset(aux245, [1,2,15,22,30,34,37,39,42,43,45,45])
**VARIABLES**
DISCRETE aux246 #( - M_00002_00003 + M_00002_00004)
{-46..1}
**CONSTRAINTS**
w-inintervalset(aux246, [-46,-45,-43,-42,-39,-37,-34,-30,-22,-15,-2,1])
**VARIABLES**
DISCRETE aux247 #( - M_00002_00005 + M_00002_00006)
{-15..30}
**CONSTRAINTS**
w-inintervalset(aux247, [-15,-15,-13,-13,-11,-11,-9,-9,-6,-6,-4,-4,-2,-2,0,0,2,4,6,9,11,28,30,30])
**VARIABLES**
DISCRETE aux248 #( - M_00002_00005 + M_00002_00008)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux248, [-2,21,23,26,28,28])
**VARIABLES**
DISCRETE aux249 #( - M_00002_00010 + 12)
{-37..4}
**CONSTRAINTS**
w-inintervalset(aux249, [-37,-37,-23,-23,-21,-21,-19,-19,-17,-17,-8,-8,-6,-5,-1,0,4,4])
**VARIABLES**
DISCRETE aux250 #( - M_00002_00001 + M_00002_00004)
{-26..33}
**CONSTRAINTS**
w-inintervalset(aux250, [-26,-26,-24,-23,-21,-21,-19,-5,-3,0,2,2,4,4,6,6,9,9,11,11,13,13,15,15,17,22,29,33])
**VARIABLES**
DISCRETE aux251 #( - M_00002_00004 + M_00002_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux251, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux252 #( - M_00003_00001 + M_00003_00004)
{-45..33}
**CONSTRAINTS**
w-inintervalset(aux252, [-45,-44,-42,-41,-38,-36,-33,33])
**VARIABLES**
DISCRETE aux253 #( - M_00003_00003 + M_00003_00006)
{-34..15}
**CONSTRAINTS**
w-inintervalset(aux253, [-34,-29,-22,-11,-9,-9,-6,-6,-4,15])
**VARIABLES**
DISCRETE aux254 #( - M_00003_00006 + M_00003_00007)
{-18..16}
**CONSTRAINTS**
w-inintervalset(aux254, [-18,-11,-9,-9,-6,-6,-4,4,9,9,11,16])
**VARIABLES**
DISCRETE aux255 #( - M_00003_00001 + M_00003_00002)
{-26..45}
**CONSTRAINTS**
w-inintervalset(aux255, [-26,34,36,39,41,45])
**VARIABLES**
DISCRETE aux256 #( - M_00003_00004 + M_00003_00007)
{-34..28}
**CONSTRAINTS**
w-inintervalset(aux256, [-34,-29,-22,-11,-9,-9,-6,-6,-4,21,23,26,28,28])
**VARIABLES**
DISCRETE aux257 #( - M_00003_00003 + M_00003_00004)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux257, [-46,-41,-39,-36,-34,30])
**VARIABLES**
DISCRETE aux258 #( - M_00003_00002 + M_00003_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux258, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux259 #( - M_00003_00005 + M_00003_00008)
{-18..44}
**CONSTRAINTS**
w-inintervalset(aux259, [-18,-11,-9,-9,-6,-6,-4,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux260 #( - M_00003_00006 + M_00003_00009)
{-27..32}
**CONSTRAINTS**
w-inintervalset(aux260, [-27,-27,-25,-25,-23,4,6,6,9,9,11,18,20,20,29,29,31,32])
**VARIABLES**
DISCRETE aux261 #( - M_00003_00012 + -1)
{-30..-14}
**CONSTRAINTS**
w-inintervalset(aux261, [-30,-30,-21,-21,-19,-18,-14,-14])
**VARIABLES**
DISCRETE aux262 #( - M_00003_00009 + M_00003_00010)
{-37..20}
**CONSTRAINTS**
w-inintervalset(aux262, [-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,20])
**VARIABLES**
DISCRETE aux263 #( - M_00003_00010 + M_00003_00011)
{-37..17}
**CONSTRAINTS**
w-inintervalset(aux263, [-37,-36,-32,-31,-29,-29,-23,-11,-9,12,16,17])
**VARIABLES**
DISCRETE aux264 #( - M_00003_00009 + M_00003_00012)
{-36..5}
**CONSTRAINTS**
w-inintervalset(aux264, [-36,-36,-32,-31,-29,-29,-22,-22,-20,-20,-18,-11,-9,-9,-7,5])
**VARIABLES**
DISCRETE aux265 #( - M_00003_00011 + M_00003_00012)
{-16..17}
**CONSTRAINTS**
w-inintervalset(aux265, [-16,-16,-12,-11,-9,-9,-7,-7,-5,9,11,12,16,17])
**VARIABLES**
DISCRETE aux266 #( - M_00003_00008 + M_00003_00009)
{-41..32}
**CONSTRAINTS**
w-inintervalset(aux266, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,4,6,6,9,9,11,18,20,20,29,29,31,32])
**VARIABLES**
DISCRETE aux267 #( - M_00003_00008 + M_00003_00011)
{-21..12}
**CONSTRAINTS**
w-inintervalset(aux267, [-21,-11,-9,3,9,9,11,12])
**VARIABLES**
DISCRETE aux268 #( - M_00003_00002 + M_00003_00005)
{-45..30}
**CONSTRAINTS**
w-inintervalset(aux268, [-45,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux269 #( - M_00003_00004 + M_00003_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux269, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux270 #( - M_00003_00005 + M_00003_00006)
{-18..30}
**CONSTRAINTS**
w-inintervalset(aux270, [-18,-11,-9,-9,-6,-6,-4,28,30,30])
**VARIABLES**
DISCRETE aux271 #( - M_00003_00007 + M_00003_00008)
{-3..32}
**CONSTRAINTS**
w-inintervalset(aux271, [-3,4,6,6,9,9,11,18,20,20,29,29,31,32])
**VARIABLES**
DISCRETE aux272 #( - M_00003_00007 + M_00003_00010)
{-21..29}
**CONSTRAINTS**
w-inintervalset(aux272, [-21,4,6,6,9,9,11,18,20,20,29,29])
**VARIABLES**
DISCRETE aux273 #( - M_00004_00002 + M_00004_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux273, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux274 #( - M_00004_00005 + M_00004_00006)
{-22..30}
**CONSTRAINTS**
w-inintervalset(aux274, [-22,-22,-20,-20,-18,-11,-9,-9,-7,28,30,30])
**VARIABLES**
DISCRETE aux275 #( - M_00004_00003 + M_00004_00006)
{-38..30}
**CONSTRAINTS**
w-inintervalset(aux275, [-38,-36,-34,-29,-22,-11,-9,-9,-7,28,30,30])
**VARIABLES**
DISCRETE aux276 #( - M_00004_00002 + M_00004_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux276, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux277 #( - M_00004_00001 + M_00004_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux277, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux278 #( - M_00004_00004 + M_00004_00007)
{-38..44}
**CONSTRAINTS**
w-inintervalset(aux278, [-38,-36,-34,-29,-22,-11,-9,-9,-7,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux279 #( - M_00004_00005 + M_00004_00008)
{-27..44}
**CONSTRAINTS**
w-inintervalset(aux279, [-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux280 #( - M_00004_00011 + -1)
{-30..-13}
**CONSTRAINTS**
w-inintervalset(aux280, [-30,-30,-21,-21,-19,-18,-14,-13])
**VARIABLES**
DISCRETE aux281 #( - M_00004_00009 + M_00004_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux281, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux282 #( - M_00004_00010 + M_00004_00011)
{-37..21}
**CONSTRAINTS**
w-inintervalset(aux282, [-37,-36,-32,-31,-29,-29,-23,-11,-9,12,16,17,21,21])
**VARIABLES**
DISCRETE aux283 #( - M_00004_00008 + M_00004_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux283, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux284 #( - M_00004_00008 + M_00004_00011)
{-37..21}
**CONSTRAINTS**
w-inintervalset(aux284, [-37,-36,-32,-31,-29,-29,-23,-11,-9,12,16,17,21,21])
**VARIABLES**
DISCRETE aux285 #( - M_00004_00007 + M_00004_00008)
{-41..32}
**CONSTRAINTS**
w-inintervalset(aux285, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,7,9,9,11,18,20,20,22,22,29,29,31,32])
**VARIABLES**
DISCRETE aux286 #( - M_00004_00007 + M_00004_00010)
{-37..32}
**CONSTRAINTS**
w-inintervalset(aux286, [-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,7,9,9,11,18,20,20,22,22,29,29,31,32])
**VARIABLES**
DISCRETE aux287 #( - M_00004_00001 + M_00004_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux287, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux288 #( - M_00004_00003 + M_00004_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux288, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux289 #( - M_00004_00004 + M_00004_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux289, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux290 #( - M_00004_00006 + M_00004_00007)
{-22..32}
**CONSTRAINTS**
w-inintervalset(aux290, [-22,-22,-20,-20,-18,-11,-9,-9,-7,7,9,9,11,18,20,20,22,22,29,29,31,32])
**VARIABLES**
DISCRETE aux291 #( - M_00004_00006 + M_00004_00009)
{-27..32}
**CONSTRAINTS**
w-inintervalset(aux291, [-27,-27,-25,-25,-23,7,9,9,11,18,20,20,22,22,29,29,31,32])
**VARIABLES**
DISCRETE aux292 #( - M_00005_00003 + M_00005_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux292, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux293 #( - M_00005_00005 + M_00005_00006)
{-22..44}
**CONSTRAINTS**
w-inintervalset(aux293, [-22,-22,-20,-20,-18,-11,-9,-9,-7,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux294 #( - M_00005_00005 + M_00005_00008)
{-27..44}
**CONSTRAINTS**
w-inintervalset(aux294, [-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux295 #( - M_00005_00001 + M_00005_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux295, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux296 #( - M_00005_00004 + M_00005_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux296, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux297 #( - M_00005_00002 + M_00005_00005)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux297, [-46,-41,-39,-36,-34,28,30,30])
**VARIABLES**
DISCRETE aux298 #( - M_00005_00001 + M_00005_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux298, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux299 #( - M_00005_00003 + M_00005_00006)
{-38..44}
**CONSTRAINTS**
w-inintervalset(aux299, [-38,-36,-34,-29,-22,-11,-9,-9,-7,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux300 #( - M_00005_00004 + M_00005_00007)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux300, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux301 #(-1 - M_00005_00010)
{-50..-9}
**CONSTRAINTS**
w-inintervalset(aux301, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux302 #( - M_00005_00007 + M_00005_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux302, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux303 #( - M_00005_00008 + M_00005_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux303, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux304 #( - M_00005_00007 + M_00005_00010)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux304, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,36])
**VARIABLES**
DISCRETE aux305 #( - M_00005_00009 + M_00005_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux305, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux306 #( - M_00005_00006 + M_00005_00007)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux306, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,7,9,9,11,18,20,20,22,22,29,29,31,32,36,36])
**VARIABLES**
DISCRETE aux307 #( - M_00005_00006 + M_00005_00009)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux307, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,7,9,9,11,18,20,20,22,22,29,29,31,32,36,36])
**VARIABLES**
DISCRETE aux308 #( - M_00005_00002 + M_00005_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux308, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux309 #( - M_00006_00002 + M_00006_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux309, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux310 #( - M_00006_00003 + M_00006_00006)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux310, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux311 #( - M_00006_00001 + M_00006_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux311, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux312 #(-1 - M_00006_00009)
{-50..-9}
**CONSTRAINTS**
w-inintervalset(aux312, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux313 #( - M_00006_00006 + M_00006_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux313, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux314 #( - M_00006_00007 + M_00006_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux314, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux315 #( - M_00006_00006 + M_00006_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux315, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux316 #( - M_00006_00008 + M_00006_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux316, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux317 #( - M_00006_00005 + M_00006_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux317, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux318 #( - M_00006_00005 + M_00006_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux318, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux319 #( - M_00006_00004 + M_00006_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux319, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux320 #( - M_00006_00004 + M_00006_00007)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux320, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux321 #( - M_00006_00001 + M_00006_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux321, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux322 #( - M_00006_00003 + M_00006_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux322, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux323 #( - M_00006_00002 + M_00006_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux323, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux324 #( - M_00007_00007 + M_00007_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux324, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux325 #( - M_00007_00005 + M_00007_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux325, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux326 #( - M_00007_00008 + -1)
{-50..-9}
**CONSTRAINTS**
w-inintervalset(aux326, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux327 #( - M_00007_00001 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux327, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux328 #( - M_00007_00003 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux328, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux329 #( - M_00007_00002 + M_00007_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux329, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux330 #( - M_00007_00004 + M_00007_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux330, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux331 #( - M_00007_00005 + M_00007_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux331, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux332 #( - M_00007_00003 + M_00007_00006)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux332, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux333 #( - M_00007_00001 + M_00007_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux333, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux334 #( - M_00007_00002 + M_00007_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux334, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux335 #( - M_00007_00006 + M_00007_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux335, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux336 #( - M_00007_00004 + M_00007_00007)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux336, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux337 #( - M_00008_00007 + -1)
{-50..-9}
**CONSTRAINTS**
w-inintervalset(aux337, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux338 #( - M_00008_00002 + M_00008_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux338, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux339 #( - M_00008_00003 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux339, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux340 #( - M_00008_00004 + M_00008_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux340, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux341 #( - M_00008_00001 + M_00008_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux341, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux342 #( - M_00008_00005 + M_00008_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux342, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux343 #( - M_00008_00006 + M_00008_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux343, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,23,25,25,27,27,29,29,31,32,36,37,41,41])
**VARIABLES**
DISCRETE aux344 #( - M_00008_00002 + M_00008_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux344, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux345 #( - M_00008_00003 + M_00008_00006)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux345, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux346 #( - M_00008_00004 + M_00008_00007)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux346, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux347 #( - M_00008_00001 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux347, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux348 #( - M_00009_00004 + M_00009_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux348, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux349 #( - M_00009_00001 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux349, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux350 #( - M_00009_00005 + M_00009_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux350, [-41,-41,-37,-36,-32,-31,-29,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux351 #( - M_00009_00002 + M_00009_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux351, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux352 #( - M_00009_00003 + M_00009_00006)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux352, [-43,-41,-39,-36,-34,-29,-27,-27,-25,-25,-23,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux353 #( - M_00009_00001 + M_00009_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux353, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux354 #(-1 - M_00009_00006)
{-50..-9}
**CONSTRAINTS**
w-inintervalset(aux354, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux355 #( - M_00009_00002 + M_00009_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux355, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux356 #( - M_00009_00003 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux356, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux357 #( - M_00010_00003 + M_00010_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux357, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux358 #( - M_00010_00004 + M_00010_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux358, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux359 #( - M_00010_00002 + M_00010_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux359, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux360 #( - M_00010_00002 + M_00010_00005)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux360, [-46,-41,-39,-36,-34,32,36,37,41,41,44,44])
**VARIABLES**
DISCRETE aux361 #( - M_00010_00001 + M_00010_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux361, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux362 #( - M_00010_00001 + M_00010_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux362, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux363 #( - M_00010_00005 + -1)
{-50..-6}
**CONSTRAINTS**
w-inintervalset(aux363, [-50,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9,-6,-6])
**VARIABLES**
DISCRETE aux364 #( - M_00011_00002 + M_00011_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux364, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux365 #( - M_00011_00003 + M_00011_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux365, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux366 #( - M_00011_00004 + -1)
{-52..-6}
**CONSTRAINTS**
w-inintervalset(aux366, [-52,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9,-6,-6])
**VARIABLES**
DISCRETE aux367 #( - M_00011_00001 + M_00011_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux367, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux368 #( - M_00011_00001 + M_00011_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux368, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux369 #( - M_00012_00001 + M_00012_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux369, [-46,-41,-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux370 #( - M_00012_00002 + M_00012_00003)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux370, [-39,-36,-34,34,36,39,41,46])
**VARIABLES**
DISCRETE aux371 #( - M_00012_00003 + -1)
{-52..-6}
**CONSTRAINTS**
w-inintervalset(aux371, [-52,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9,-6,-6])
**VARIABLES**
DISCRETE aux372 #(-1 - M_00013_00002)
{-52..-6}
**CONSTRAINTS**
w-inintervalset(aux372, [-52,-50,-36,-36,-34,-34,-32,-32,-30,-30,-21,-21,-19,-18,-14,-13,-9,-9,-6,-6])
**VARIABLES**
DISCRETE aux373 #( - M_00013_00001 + M_00013_00002)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux373, [-39,-36,-34,34,36,39,41,46])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[18, 31, 50, 51, 5, 35, 20, 17, 33, 49, 8, 12, 29, 13]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux232)
reify(gaceq(M_00004_00006,M_00005_00006), aux13)
reify(gaceq(M_00007_00007,M_00006_00007), aux14)
div(M_00002_00008, 13, aux15)
div(M_00002_00006, 13, aux16)
div(M_00002_00002, 13, aux17)
reify(gaceq(M_00007_00008,M_00006_00009), aux18)
reify(gaceq(M_00003_00009,M_00004_00008), aux19)
div(M_00007_00001, 13, aux20)
div(M_00007_00008, 13, aux21)
reify(gaceq(M_00002_00006,M_00003_00005), aux22)
reify(gaceq(M_00004_00007,M_00005_00007), aux23)
div(M_00010_00005, 13, aux24)
div(M_00010_00001, 13, aux25)
div(M_00010_00003, 13, aux26)
reify(gaceq(M_00008_00005,M_00009_00005), aux27)
div(M_00012_00002, 13, aux28)
reify(gaceq(M_00002_00008,M_00003_00007), aux29)
div(M_00002_00010, 13, aux30)
reify(gaceq(M_00005_00007,M_00006_00006), aux31)
div(M_00002_00004, 13, aux32)
div(M_00002_00005, 13, aux33)
div(M_00002_00007, 13, 1)
div(M_00002_00009, 13, aux35)
reify(gaceq(M_00010_00005,M_00011_00004), aux36)
reify(gaceq(M_00010_00003,M_00009_00003), aux37)
reify(gaceq(M_00007_00001,M_00008_00001), aux38)
reify(gaceq(M_00004_00005,M_00005_00004), aux39)
reify(gaceq(M_00010_00004,M_00009_00005), aux40)
reify(gaceq(M_00005_00001,M_00006_00001), aux41)
reify(gaceq(M_00002_00010,M_00003_00009), aux42)
reify(gaceq(M_00010_00005,M_00009_00005), aux43)
reify(gaceq(M_00010_00002,M_00009_00003), aux44)
reify(gaceq(M_00003_00002,M_00004_00002), aux45)
reify(gaceq(M_00004_00006,M_00005_00005), aux46)
reify(gaceq(M_00010_00001,M_00009_00001), aux47)
reify(gaceq(M_00002_00004,M_00003_00004), aux48)
reify(gaceq(M_00004_00001,M_00005_00001), aux49)
div(M_00004_00009, 13, aux50)
div(M_00004_00003, 13, aux51)
div(M_00004_00002, 13, aux52)
div(M_00004_00010, 13, aux53)
reify(gaceq(M_00007_00007,M_00006_00008), aux54)
reify(gaceq(M_00007_00002,M_00008_00002), aux55)
reify(gaceq(M_00004_00002,M_00005_00002), aux56)
reify(gaceq(M_00010_00001,M_00011_00001), aux57)
reify(gaceq(M_00003_00008,M_00004_00007), aux58)
reify(gaceq(M_00008_00002,M_00009_00002), aux59)
reify(gaceq(M_00004_00010,M_00005_00009), aux60)
div(M_00002_00001, 13, aux61)
div(M_00002_00003, 13, 3)
reify(gaceq(M_00004_00008,M_00005_00008), aux63)
reify(gaceq(M_00011_00003,M_00012_00002), aux64)
reify(gaceq(M_00011_00003,M_00012_00003), aux65)
reify(gaceq(M_00007_00006,M_00008_00005), aux66)
reify(gaceq(M_00008_00004,M_00009_00003), aux67)
reify(gaceq(M_00003_00007,M_00004_00006), aux68)
reify(gaceq(M_00003_00009,M_00004_00009), aux69)
reify(gaceq(M_00002_00001,M_00003_00001), aux70)
reify(gaceq(M_00003_00005,M_00004_00004), aux71)
reify(gaceq(M_00011_00002,M_00012_00002), aux72)
reify(gaceq(M_00011_00001,M_00012_00001), aux73)
reify(gaceq(M_00011_00004,M_00012_00003), aux74)
reify(gaceq(M_00005_00008,M_00006_00008), aux75)
div(M_00008_00004, 13, aux76)
reify(gaceq(M_00003_00011,M_00004_00010), aux77)
reify(gaceq(M_00010_00004,M_00011_00003), aux78)
div(M_00003_00012, 13, aux79)
div(M_00003_00001, 13, aux80)
div(M_00005_00001, 13, aux81)
div(M_00005_00010, 13, aux82)
reify(gaceq(M_00003_00004,M_00004_00004), aux83)
reify(gaceq(M_00007_00001,M_00006_00001), aux84)
reify(gaceq(M_00002_00003,M_00003_00003), aux85)
div(M_00008_00001, 13, aux86)
div(M_00008_00007, 13, aux87)
reify(gaceq(M_00003_00008,M_00004_00008), aux88)
div(M_00006_00008, 13, aux89)
div(M_00006_00007, 13, aux90)
div(M_00006_00003, 13, aux91)
div(M_00006_00002, 13, aux92)
reify(gaceq(M_00003_00012,M_00004_00011), aux93)
reify(gaceq(M_00005_00002,M_00006_00002), aux94)
reify(gaceq(M_00005_00009,M_00006_00008), aux95)
reify(gaceq(M_00010_00003,M_00011_00002), aux96)
reify(gaceq(M_00010_00004,M_00011_00004), aux97)
reify(gaceq(M_00005_00010,M_00006_00009), aux98)
reify(gaceq(M_00010_00002,M_00011_00002), aux99)
reify(gaceq(M_00010_00003,M_00011_00003), aux100)
reify(gaceq(M_00002_00005,M_00003_00004), aux101)
reify(gaceq(M_00010_00004,M_00009_00004), aux102)
reify(gaceq(M_00004_00004,M_00005_00003), aux103)
reify(gaceq(M_00002_00003,M_00003_00002), aux104)
reify(gaceq(M_00004_00007,M_00005_00006), aux105)
reify(gaceq(M_00007_00003,M_00006_00003), aux106)
reify(gaceq(M_00005_00003,M_00006_00003), aux107)
div(M_00009_00005, 13, aux108)
div(M_00009_00003, 13, aux109)
div(M_00009_00004, 13, aux110)
div(M_00009_00002, 13, aux111)
reify(gaceq(M_00007_00006,M_00006_00007), aux112)
reify(gaceq(M_00002_00009,M_00003_00008), aux113)
reify(gaceq(M_00007_00003,M_00008_00002), aux114)
reify(gaceq(M_00007_00007,M_00008_00007), aux115)
div(M_00011_00001, 13, aux116)
div(M_00011_00002, 13, aux117)
div(M_00011_00003, 13, aux118)
div(M_00011_00004, 13, aux119)
reify(gaceq(M_00003_00006,M_00004_00005), aux120)
reify(gaceq(M_00008_00006,M_00009_00006), aux121)
reify(gaceq(M_00008_00003,M_00009_00002), aux122)
reify(gaceq(M_00005_00008,M_00006_00007), aux123)
reify(gaceq(M_00010_00003,M_00009_00004), aux124)
div(M_00006_00004, 13, aux125)
div(M_00006_00005, 13, aux126)
div(M_00006_00006, 13, aux127)
div(M_00006_00001, 13, aux128)
div(M_00006_00009, 13, aux129)
reify(gaceq(M_00003_00007,M_00004_00007), aux130)
div(M_00003_00010, 13, aux131)
div(M_00003_00011, 13, aux132)
div(M_00003_00002, 13, aux133)
div(M_00003_00003, 13, aux134)
reify(gaceq(M_00005_00005,M_00006_00004), aux135)
reify(gaceq(M_00003_00005,M_00004_00005), aux136)
reify(gaceq(M_00010_00002,M_00009_00002), aux137)
reify(gaceq(M_00003_00011,M_00004_00011), aux138)
reify(gaceq(M_00003_00003,M_00004_00002), aux139)
reify(gaceq(M_00004_00005,M_00005_00005), aux140)
reify(gaceq(M_00005_00003,M_00006_00002), aux141)
reify(gaceq(M_00005_00009,M_00006_00009), aux142)
div(M_00010_00004, 13, aux143)
div(M_00010_00002, 13, aux144)
reify(gaceq(M_00005_00006,M_00006_00006), aux145)
reify(gaceq(M_00008_00003,M_00009_00003), aux146)
reify(gaceq(M_00003_00001,M_00004_00001), aux147)
div(M_00005_00009, 13, aux148)
div(M_00005_00008, 13, aux149)
div(M_00005_00002, 13, aux150)
div(M_00005_00003, 13, aux151)
reify(gaceq(M_00004_00010,M_00005_00010), aux152)
reify(gaceq(M_00004_00003,M_00005_00002), aux153)
reify(gaceq(M_00005_00005,M_00006_00005), aux154)
reify(gaceq(M_00005_00007,M_00006_00007), aux155)
reify(gaceq(M_00004_00008,M_00005_00007), aux156)
reify(gaceq(M_00007_00003,M_00008_00003), aux157)
div(M_00007_00002, 13, aux158)
div(M_00007_00003, 13, aux159)
div(M_00007_00006, 13, aux160)
div(M_00007_00007, 13, aux161)
reify(gaceq(M_00004_00009,M_00005_00008), aux162)
reify(gaceq(M_00008_00004,M_00009_00004), aux163)
reify(gaceq(M_00008_00005,M_00009_00004), aux164)
reify(gaceq(M_00003_00010,M_00004_00010), aux165)
div(M_00007_00004, 13, aux166)
div(M_00007_00005, 13, aux167)
reify(gaceq(M_00004_00011,M_00005_00010), aux168)
reify(gaceq(M_00007_00004,M_00006_00004), aux169)
reify(gaceq(M_00002_00007,M_00003_00006), aux170)
reify(gaceq(M_00003_00004,M_00004_00003), aux171)
reify(gaceq(M_00007_00004,M_00008_00003), aux172)
reify(gaceq(M_00010_00005,M_00009_00006), aux173)
reify(gaceq(M_00005_00004,M_00006_00003), aux174)
div(M_00004_00007, 13, aux175)
div(M_00004_00008, 13, aux176)
div(M_00004_00004, 13, aux177)
div(M_00004_00005, 13, aux178)
div(M_00004_00006, 13, aux179)
reify(gaceq(M_00004_00004,M_00005_00004), aux180)
reify(gaceq(M_00002_00002,M_00003_00002), aux181)
reify(gaceq(M_00005_00004,M_00006_00004), aux182)
reify(gaceq(M_00008_00006,M_00009_00005), aux183)
reify(gaceq(M_00007_00003,M_00006_00004), aux184)
reify(gaceq(M_00007_00004,M_00008_00004), aux185)
reify(gaceq(M_00002_00006,M_00003_00006), aux186)
reify(gaceq(M_00007_00005,M_00006_00005), aux187)
reify(gaceq(M_00002_00005,M_00003_00005), aux188)
div(M_00008_00003, 13, aux189)
div(M_00008_00005, 13, aux190)
div(M_00008_00006, 13, aux191)
div(M_00008_00002, 13, aux192)
reify(gaceq(M_00002_00008,M_00003_00008), aux193)
reify(gaceq(M_00007_00002,M_00006_00002), aux194)
reify(gaceq(M_00007_00008,M_00006_00008), aux195)
reify(gaceq(M_00007_00002,M_00006_00003), aux196)
reify(gaceq(M_00007_00006,M_00008_00006), aux197)
reify(gaceq(M_00005_00006,M_00006_00005), aux198)
div(M_00003_00009, 13, aux199)
div(M_00003_00007, 13, aux200)
div(M_00003_00008, 13, aux201)
div(M_00003_00004, 13, aux202)
div(M_00003_00006, 13, aux203)
div(M_00003_00005, 13, aux204)
reify(gaceq(M_00007_00007,M_00008_00006), aux205)
reify(gaceq(M_00008_00001,M_00009_00001), aux206)
reify(gaceq(M_00007_00006,M_00006_00006), aux207)
reify(gaceq(M_00004_00003,M_00005_00003), aux208)
reify(gaceq(M_00007_00005,M_00008_00004), aux209)
reify(gaceq(M_00007_00005,M_00008_00005), aux210)
reify(gaceq(M_00002_00004,M_00003_00003), aux211)
reify(gaceq(M_00002_00009,M_00003_00009), aux212)
reify(gaceq(M_00012_00001,M_00013_00001), aux213)
reify(gaceq(M_00012_00003,M_00013_00002), aux214)
div(M_00005_00004, 13, aux215)
div(M_00005_00005, 13, aux216)
div(M_00005_00006, 13, aux217)
div(M_00005_00007, 13, aux218)
reify(gaceq(M_00007_00008,M_00008_00007), aux219)
reify(gaceq(M_00007_00005,M_00006_00006), aux220)
div(M_00009_00006, 13, aux221)
div(M_00009_00001, 13, aux222)
reify(gaceq(M_00008_00007,M_00009_00006), aux223)
div(M_00004_00001, 13, aux224)
div(M_00004_00011, 13, aux225)
reify(gaceq(M_00004_00009,M_00005_00009), aux226)
reify(gaceq(M_00007_00004,M_00006_00005), aux227)
reify(gaceq(M_00002_00007,M_00003_00007), aux228)
reify(gaceq(M_00003_00010,M_00004_00009), aux229)
reify(gaceq(M_00003_00003,M_00004_00003), aux230)
reify(gaceq(M_00003_00006,M_00004_00006), aux231)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,31),w-literal(M_00002_00002,50),w-literal(M_00002_00004,5),w-literal(M_00002_00003,51),w-literal(M_00002_00005,35),w-literal(M_00002_00006,20),w-literal(M_00002_00007,17),w-literal(M_00002_00008,33),w-literal(M_00002_00009,49),w-literal(M_00002_00010,8)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,31),w-literal(M_00002_00003,50),w-literal(M_00002_00005,5),w-literal(M_00002_00004,51),w-literal(M_00002_00006,33),w-literal(M_00002_00007,20),w-literal(M_00002_00008,17),w-literal(M_00002_00009,49),w-literal(M_00002_00010,8)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,31),w-literal(M_00002_00003,50),w-literal(M_00002_00005,5),w-literal(M_00002_00004,51),w-literal(M_00002_00006,35),w-literal(M_00002_00007,17),w-literal(M_00002_00008,33),w-literal(M_00002_00009,49),w-literal(M_00002_00010,8)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,31),w-literal(M_00002_00003,50),w-literal(M_00002_00005,5),w-literal(M_00002_00004,51),w-literal(M_00002_00006,35),w-literal(M_00002_00007,20),w-literal(M_00002_00008,17),w-literal(M_00002_00009,33),w-literal(M_00002_00010,49)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,31),w-literal(M_00002_00004,5),w-literal(M_00002_00003,51),w-literal(M_00002_00005,35),w-literal(M_00002_00006,20),w-literal(M_00002_00007,17),w-literal(M_00002_00008,33),w-literal(M_00002_00009,49),w-literal(M_00002_00010,8)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,5),w-literal(M_00002_00003,50),w-literal(M_00002_00004,51),w-literal(M_00002_00005,35),w-literal(M_00002_00006,20),w-literal(M_00002_00007,17),w-literal(M_00002_00008,33),w-literal(M_00002_00009,49),w-literal(M_00002_00010,8)})})
watched-or({watched-and({w-literal(M_00003_00010,13),w-literal(M_00003_00011,12),w-literal(M_00003_00012,29),watched-or({w-literal(aux30,1),modulo(aux233,13,0)}),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux228,1),w-literal(aux193,1),w-literal(aux212,1)}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux48,1),w-literal(aux188,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),modulo(aux234,13,0)}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux85,1),w-literal(aux48,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux235,13,0),gaceq(aux17,aux33)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),gaceq(M_00002_00002,M_00003_00001),w-literal(aux104,1),w-literal(aux211,1),w-literal(aux101,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux236,13,0),gaceq(aux61,aux17)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux188,1),w-literal(aux186,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux237,13,0),w-literal(aux32,1)})}),watched-and({w-literal(M_00003_00009,29),w-literal(M_00003_00011,12),w-literal(M_00003_00012,13),watched-or({w-literal(aux35,2),modulo(aux238,13,0)}),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux228,1),w-literal(aux193,1),gaceq(M_00002_00010,M_00003_00010)}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux239,13,0),w-literal(aux15,1)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux228,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux240,13,0),gaceq(aux15,aux35)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux193,1),w-literal(aux212,1),gaceq(M_00002_00010,M_00003_00007),watched-or({modulo(aux241,13,0),w-literal(aux30,1)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux228,1),w-literal(aux193,1),w-literal(aux42,1),watched-or({modulo(aux242,13,0),gaceq(aux35,aux30)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux243,13,0),w-literal(aux16,1)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux228,1),w-literal(aux193,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux42,1),watched-or({modulo(aux244,13,0),gaceq(aux16,aux35)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux104,1),w-literal(aux211,1),w-literal(aux101,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux245,13,0),w-literal(aux17,3)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux211,1),w-literal(aux101,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux246,13,0),w-literal(aux32,3)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux247,13,0),gaceq(aux33,aux16)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux186,1),w-literal(aux228,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux248,13,0),gaceq(aux33,aux15)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),watched-or({w-literal(aux30,0),modulo(aux249,13,0)}),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux48,1),w-literal(aux188,1),w-literal(aux186,1),w-literal(aux228,1),w-literal(aux193,1),w-literal(aux212,1)}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux181,1),w-literal(aux85,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux101,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux250,13,0),gaceq(aux61,aux32)})}),watched-and({w-literal(M_00003_00010,12),w-literal(M_00003_00011,29),w-literal(M_00003_00012,13),w-literal(aux70,1),w-literal(aux181,1),w-literal(aux85,1),w-literal(aux101,1),w-literal(aux22,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),w-literal(aux42,1),watched-or({modulo(aux251,13,0),gaceq(aux32,aux33)})})})
watched-or({watched-and({w-literal(aux45,1),w-literal(aux230,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux71,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux252,13,0),gaceq(aux80,aux202)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux83,1),w-literal(aux136,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux253,13,0),gaceq(aux134,aux203)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux254,13,0),gaceq(aux203,aux200)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux139,1),w-literal(aux171,1),w-literal(aux71,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux255,13,0),gaceq(aux80,aux133)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux136,1),w-literal(aux231,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux256,13,0),gaceq(aux202,aux200)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux171,1),w-literal(aux71,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux257,13,0),gaceq(aux134,aux202)})}),watched-and({w-literal(aux147,1),w-literal(aux139,1),w-literal(aux171,1),w-literal(aux71,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux258,13,0),gaceq(aux133,aux134)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux231,1),w-literal(aux130,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux259,13,0),gaceq(aux204,aux201)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux130,1),w-literal(aux88,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux260,13,0),gaceq(aux203,aux199)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux165,1),w-literal(aux138,1),modulo(aux261,13,0)}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux88,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux262,13,0),gaceq(aux199,aux131)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux263,13,0),gaceq(aux131,aux132)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux88,1),w-literal(aux165,1),w-literal(aux138,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux264,13,0),gaceq(aux199,aux79)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux165,1),w-literal(aux93,1),watched-or({modulo(aux265,13,0),gaceq(aux132,aux79)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux266,13,0),gaceq(aux201,aux199)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux130,1),w-literal(aux69,1),w-literal(aux165,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux93,1),watched-or({modulo(aux267,13,0),gaceq(aux201,aux132)})}),watched-and({w-literal(aux147,1),w-literal(aux230,1),w-literal(aux83,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux268,13,0),gaceq(aux133,aux204)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux71,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux269,13,0),gaceq(aux202,aux204)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux120,1),w-literal(aux68,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux270,13,0),gaceq(aux204,aux203)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux58,1),w-literal(aux19,1),w-literal(aux229,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux271,13,0),gaceq(aux200,aux201)})}),watched-and({w-literal(aux147,1),w-literal(aux45,1),w-literal(aux230,1),w-literal(aux83,1),w-literal(aux136,1),w-literal(aux231,1),w-literal(aux88,1),w-literal(aux69,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux272,13,0),gaceq(aux200,aux131)})})})
watched-or({watched-and({w-literal(aux49,1),w-literal(aux208,1),w-literal(aux180,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux52,aux178),modulo(aux273,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux178,aux179),modulo(aux274,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux180,1),w-literal(aux140,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux51,aux179),modulo(aux275,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux153,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux52,aux51),modulo(aux276,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux153,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux224,aux52),modulo(aux277,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux140,1),w-literal(aux13,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux177,aux175),modulo(aux278,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux13,1),w-literal(aux23,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux178,aux176),modulo(aux279,13,0)})}),watched-and({modulo(aux280,13,0),w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux23,1),w-literal(aux63,1),w-literal(aux226,1),w-literal(aux152,1)}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux23,1),w-literal(aux63,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux50,aux53),modulo(aux281,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux23,1),w-literal(aux63,1),w-literal(aux226,1),w-literal(aux168,1),watched-or({gaceq(aux53,aux225),modulo(aux282,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux23,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux176,aux50),modulo(aux283,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux23,1),w-literal(aux226,1),w-literal(aux152,1),gaceq(M_00004_00011,M_00005_00008),watched-or({gaceq(aux176,aux225),modulo(aux284,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux175,aux176),modulo(aux285,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux13,1),w-literal(aux63,1),w-literal(aux226,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux168,1),watched-or({gaceq(aux175,aux53),modulo(aux286,13,0)})}),watched-and({w-literal(aux56,1),w-literal(aux208,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux39,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux224,aux177),modulo(aux287,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux51,aux177),modulo(aux288,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux39,1),w-literal(aux46,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux177,aux178),modulo(aux289,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux179,aux175),modulo(aux290,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux56,1),w-literal(aux208,1),w-literal(aux180,1),w-literal(aux140,1),w-literal(aux23,1),w-literal(aux63,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux60,1),w-literal(aux168,1),watched-or({gaceq(aux179,aux50),modulo(aux291,13,0)})})})
watched-or({watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux174,1),w-literal(aux135,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux292,13,0),gaceq(aux151,aux215)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux293,13,0),gaceq(aux216,aux217)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux145,1),w-literal(aux155,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux294,13,0),gaceq(aux216,aux149)})}),watched-and({w-literal(aux94,1),w-literal(aux107,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux135,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux295,13,0),gaceq(aux81,aux215)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux135,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux296,13,0),gaceq(aux215,aux216)})}),watched-and({w-literal(aux41,1),w-literal(aux107,1),w-literal(aux182,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux297,13,0),gaceq(aux150,aux216)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux141,1),w-literal(aux174,1),w-literal(aux135,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux298,13,0),gaceq(aux81,aux150)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux182,1),w-literal(aux154,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux299,13,0),gaceq(aux151,aux217)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux154,1),w-literal(aux145,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux300,13,0),gaceq(aux215,aux218)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux155,1),w-literal(aux75,1),w-literal(aux142,1),modulo(aux301,13,0)}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux302,13,0),gaceq(aux218,aux149)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux155,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux303,13,0),gaceq(aux149,aux148)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux75,1),w-literal(aux142,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux304,13,0),gaceq(aux218,aux82)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux155,1),w-literal(aux75,1),w-literal(aux98,1),watched-or({modulo(aux305,13,0),gaceq(aux148,aux82)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux306,13,0),gaceq(aux217,aux218)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux107,1),w-literal(aux182,1),w-literal(aux154,1),w-literal(aux155,1),w-literal(aux75,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux98,1),watched-or({modulo(aux307,13,0),gaceq(aux217,aux148)})}),watched-and({w-literal(aux41,1),w-literal(aux141,1),w-literal(aux174,1),w-literal(aux135,1),w-literal(aux198,1),w-literal(aux31,1),w-literal(aux123,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux308,13,0),gaceq(aux150,aux151)})})})
watched-or({watched-and({w-literal(aux84,1),w-literal(aux196,1),w-literal(aux184,1),w-literal(aux227,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux92,aux91),modulo(aux309,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux91,aux127),modulo(aux310,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux227,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux128,aux125),modulo(aux311,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux14,1),w-literal(aux195,1),modulo(aux312,13,0)}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux127,aux90),modulo(aux313,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux90,aux89),modulo(aux314,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux187,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux14,1),w-literal(aux195,1),watched-or({gaceq(aux127,aux129),modulo(aux315,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux14,1),w-literal(aux18,1),watched-or({gaceq(aux89,aux129),modulo(aux316,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux126,aux127),modulo(aux317,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux169,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux207,1),w-literal(aux14,1),w-literal(aux18,1),watched-or({gaceq(aux126,aux89),modulo(aux318,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),w-literal(aux227,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux125,aux126),modulo(aux319,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux106,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux125,aux90),modulo(aux320,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux196,1),w-literal(aux184,1),w-literal(aux227,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux128,aux92),modulo(aux321,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux194,1),w-literal(aux184,1),w-literal(aux227,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux91,aux125),modulo(aux322,13,0)})}),watched-and({w-literal(aux84,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux106,1),w-literal(aux169,1),w-literal(aux220,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux18,1),watched-or({gaceq(aux92,aux126),modulo(aux323,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux324,13,0),gaceq(aux161,aux21)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux185,1),w-literal(aux210,1),w-literal(aux197,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux325,13,0),gaceq(aux167,aux21)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux185,1),w-literal(aux197,1),w-literal(aux115,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux326,13,0),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux185,1),w-literal(aux210,1),w-literal(aux197,1),w-literal(aux115,1)}),watched-and({watched-or({modulo(aux327,13,0),gaceq(aux20,aux166)}),w-literal(aux55,1),w-literal(aux157,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux209,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux328,13,0),gaceq(aux159,aux166)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux172,1),w-literal(aux209,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux329,13,0),gaceq(aux158,aux159)}),w-literal(aux38,1),w-literal(aux114,1),w-literal(aux172,1),w-literal(aux209,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux330,13,0),gaceq(aux166,aux167)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux209,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux331,13,0),gaceq(aux167,aux160)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux185,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux332,13,0),gaceq(aux159,aux160)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux185,1),w-literal(aux210,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux333,13,0),gaceq(aux20,aux158)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux114,1),w-literal(aux172,1),w-literal(aux209,1),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux334,13,0),gaceq(aux158,aux167)}),w-literal(aux38,1),w-literal(aux157,1),w-literal(aux185,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux66,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux335,13,0),gaceq(aux160,aux161)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux185,1),w-literal(aux210,1),w-literal(aux205,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux336,13,0),gaceq(aux166,aux161)}),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux157,1),w-literal(aux210,1),w-literal(aux197,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux219,1)})})
watched-or({watched-and({w-literal(aux206,1),w-literal(aux59,1),w-literal(aux146,1),w-literal(aux163,1),w-literal(aux27,1),w-literal(aux121,1),modulo(aux337,13,0)}),watched-and({watched-or({gaceq(aux192,aux189),modulo(aux338,13,0)}),w-literal(aux206,1),w-literal(aux122,1),w-literal(aux67,1),w-literal(aux164,1),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux189,aux76),modulo(aux339,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux67,1),w-literal(aux164,1),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux76,aux190),modulo(aux340,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux146,1),w-literal(aux164,1),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux86,aux192),modulo(aux341,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux122,1),w-literal(aux67,1),w-literal(aux164,1),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux190,aux191),modulo(aux342,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux146,1),w-literal(aux163,1),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux191,aux87),modulo(aux343,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux146,1),w-literal(aux163,1),w-literal(aux27,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux192,aux190),modulo(aux344,13,0)}),w-literal(aux206,1),w-literal(aux146,1),w-literal(aux163,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux183,1),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux189,aux191),modulo(aux345,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux163,1),w-literal(aux27,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux223,1)}),watched-and({watched-or({gaceq(aux76,aux87),modulo(aux346,13,0)}),w-literal(aux206,1),w-literal(aux59,1),w-literal(aux146,1),w-literal(aux27,1),w-literal(aux121,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux86,aux76),modulo(aux347,13,0)}),w-literal(aux59,1),w-literal(aux146,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux164,1),w-literal(aux183,1),w-literal(aux223,1)})})
watched-or({watched-and({watched-or({modulo(aux348,13,0),gaceq(aux110,aux108)}),w-literal(aux47,1),w-literal(aux137,1),w-literal(aux37,1),w-literal(aux40,1),w-literal(aux173,1)}),watched-and({watched-or({modulo(aux349,13,0),gaceq(aux222,aux110)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux137,1),w-literal(aux37,1),w-literal(aux40,1),w-literal(aux173,1)}),watched-and({watched-or({modulo(aux350,13,0),gaceq(aux108,aux221)}),w-literal(aux47,1),w-literal(aux137,1),w-literal(aux37,1),w-literal(aux102,1),w-literal(aux173,1)}),watched-and({watched-or({modulo(aux351,13,0),gaceq(aux111,aux108)}),w-literal(aux47,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux37,1),w-literal(aux102,1),w-literal(aux173,1)}),watched-and({watched-or({modulo(aux352,13,0),gaceq(aux109,aux221)}),w-literal(aux47,1),w-literal(aux137,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux102,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux353,13,0),gaceq(aux222,aux111)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux44,1),w-literal(aux124,1),w-literal(aux40,1),w-literal(aux173,1)}),watched-and({modulo(aux354,13,0),w-literal(aux47,1),w-literal(aux137,1),w-literal(aux37,1),w-literal(aux102,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux355,13,0),gaceq(aux111,aux109)}),w-literal(aux47,1),w-literal(aux44,1),w-literal(aux124,1),w-literal(aux40,1),w-literal(aux173,1)}),watched-and({watched-or({modulo(aux356,13,0),gaceq(aux109,aux110)}),w-literal(aux47,1),w-literal(aux137,1),w-literal(aux124,1),w-literal(aux40,1),w-literal(aux173,1)})})
watched-or({watched-and({w-literal(aux57,1),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux36,1),watched-or({gaceq(aux26,aux143),modulo(aux357,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux99,1),w-literal(aux100,1),w-literal(aux36,1),watched-or({gaceq(aux143,aux24),modulo(aux358,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux96,1),w-literal(aux78,1),w-literal(aux36,1),watched-or({gaceq(aux144,aux26),modulo(aux359,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux100,1),w-literal(aux97,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux144,aux24),modulo(aux360,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux96,1),w-literal(aux78,1),w-literal(aux36,1),watched-or({gaceq(aux25,aux144),modulo(aux361,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux100,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux36,1),watched-or({gaceq(aux25,aux143),modulo(aux362,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux99,1),w-literal(aux100,1),w-literal(aux97,1),modulo(aux363,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux117,aux118),modulo(aux364,13,0)}),w-literal(aux73,1),w-literal(aux64,1),w-literal(aux74,1)}),watched-and({watched-or({gaceq(aux118,aux119),modulo(aux365,13,0)}),w-literal(aux73,1),w-literal(aux72,1),w-literal(aux74,1)}),watched-and({modulo(aux366,13,0),w-literal(aux73,1),w-literal(aux72,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux116,aux117),modulo(aux367,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux64,1),w-literal(aux74,1)}),watched-and({watched-or({gaceq(aux116,aux119),modulo(aux368,13,0)}),w-literal(aux72,1),w-literal(aux65,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux214,1),watched-or({div(M_00012_00001, 13, aux28),modulo(aux369,13,0)})}),watched-and({w-literal(aux213,1),w-literal(aux214,1),watched-or({div(M_00012_00003, 13, aux28),modulo(aux370,13,0)})}),watched-and({modulo(aux371,13,0),w-literal(aux213,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux372,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux232),modulo(aux373,13,0)})})})
weightedsumleq([-1,1],[M_00002_00010,13],aux233)
weightedsumgeq([-1,1],[M_00002_00010,13],aux233)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux234)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux234)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux235)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux235)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux236)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux236)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux237)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux237)
weightedsumleq([-1,1],[M_00002_00009,29],aux238)
weightedsumgeq([-1,1],[M_00002_00009,29],aux238)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux239)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux239)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux240)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux240)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux241)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux241)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux242)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux242)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux243)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux243)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux244)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux244)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux245)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux245)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux246)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux246)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux247)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux247)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux248)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux248)
weightedsumleq([-1,1],[M_00002_00010,12],aux249)
weightedsumgeq([-1,1],[M_00002_00010,12],aux249)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux250)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux250)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux251)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux251)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux252)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux252)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux253)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux253)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux254)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux254)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux255)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux255)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux256)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux256)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux257)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux257)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux258)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux258)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux259)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux259)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux260)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux260)
weightedsumleq([-1,1],[M_00003_00012,-1],aux261)
weightedsumgeq([-1,1],[M_00003_00012,-1],aux261)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux262)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux262)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux263)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux263)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux264)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux264)
weightedsumleq([-1,1],[M_00003_00011,M_00003_00012],aux265)
weightedsumgeq([-1,1],[M_00003_00011,M_00003_00012],aux265)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux266)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux266)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux267)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux267)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux268)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux268)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux269)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux269)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux270)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux270)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux271)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux271)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux272)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux272)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux273)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux273)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux274)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux274)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux275)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux275)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux276)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux276)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux277)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux277)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux278)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux278)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux279)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux279)
weightedsumleq([-1,1],[M_00004_00011,-1],aux280)
weightedsumgeq([-1,1],[M_00004_00011,-1],aux280)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux281)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux281)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux282)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux282)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux283)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux283)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux284)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux284)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux285)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux285)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux286)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux286)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux287)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux287)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux288)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux288)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux289)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux289)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux290)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux290)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux291)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux291)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux292)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux292)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux293)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux293)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux294)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux294)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux295)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux295)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux296)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux296)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux297)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux297)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux298)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux298)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux299)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux299)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux300)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux300)
weightedsumleq([1,-1],[-1,M_00005_00010],aux301)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux301)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux302)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux302)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux303)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux303)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux304)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux304)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux305)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux305)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux306)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux306)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux307)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux307)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux308)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux308)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux309)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux309)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux310)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux310)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux311)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux311)
weightedsumleq([1,-1],[-1,M_00006_00009],aux312)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux312)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux313)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux313)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux314)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux314)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux315)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux315)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux316)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux316)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux317)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux317)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux318)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux318)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux319)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux319)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux320)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux320)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux321)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux321)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux322)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux322)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux323)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux323)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux324)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux324)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux325)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux325)
weightedsumleq([-1,1],[M_00007_00008,-1],aux326)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux326)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux327)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux327)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux328)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux328)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux329)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux329)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux330)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux330)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux331)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux331)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux332)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux332)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux333)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux333)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux334)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux334)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux335)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux335)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux336)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux336)
weightedsumleq([-1,1],[M_00008_00007,-1],aux337)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux337)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux338)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux338)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux339)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux339)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux340)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux340)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux341)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux341)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux342)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux342)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux343)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux343)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux344)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux344)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux345)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux345)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux346)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux346)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux347)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux347)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux348)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux348)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux349)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux349)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux350)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux350)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux351)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux351)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux352)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux352)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux353)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux353)
weightedsumleq([1,-1],[-1,M_00009_00006],aux354)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux354)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux355)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux355)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux356)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux356)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux357)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux357)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux358)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux358)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux359)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux359)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux360)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux360)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux361)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux361)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux362)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux362)
weightedsumleq([-1,1],[M_00010_00005,-1],aux363)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux363)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux364)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux364)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux365)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux365)
weightedsumleq([-1,1],[M_00011_00004,-1],aux366)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux366)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux367)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux367)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux368)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux368)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux369)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux369)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux370)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux370)
weightedsumleq([-1,1],[M_00012_00003,-1],aux371)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux371)
weightedsumleq([1,-1],[-1,M_00013_00002],aux372)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux372)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux373)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux373)
**EOF**
