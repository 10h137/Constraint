MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 122
# CSE_active_eliminated_expressions = 561
# CSE_active_total_size = 366
**VARIABLES**
DISCRETE M_00002_00002 #
{32..33}
DISCRETE M_00002_00003 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{32..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{17..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00006 #
{4..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [4,4,10,10,17,17,19,20])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00001 #
{19..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [19,20,22,22,25,25,32,33])
**VARIABLES**
DISCRETE M_00003_00002 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00004 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00009 #
{10..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [10,10,17,17,19,20,22,22])
**VARIABLES**
DISCRETE M_00004_00001 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00004_00008 #
{10..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00005_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00005_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00006_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00007_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,10,10,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..2}
BOOL aux17 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..2}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..2}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux21 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux22 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux23 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux24 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux25 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux27 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
BOOL aux31 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux35 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
DISCRETE aux39 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux40 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux41 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux42 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux43 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux48 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux50 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux51 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..2}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..2}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..2}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..2}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
DISCRETE aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
BOOL aux64 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux66 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux69 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux70 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux71 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux72 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux75 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux78 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
BOOL aux81 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
BOOL aux86 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux98 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux99 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
BOOL aux102 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux103 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux107 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux108 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux109 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
BOOL aux110 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux112 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux113 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux118 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux119 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{1..2}
DISCRETE aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux123 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
BOOL aux127 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux128 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..2}
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..2}
BOOL aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux133 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux135 #
{0..2}
DISCRETE aux136 #( - M_00002_00003 + M_00002_00004)
{-6..21}
**CONSTRAINTS**
w-inintervalset(aux136, [-6,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux137 #( - M_00002_00003 + M_00002_00006)
{-34..-5}
**CONSTRAINTS**
w-inintervalset(aux137, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-12,-10,-5])
**VARIABLES**
DISCRETE aux138 #( - M_00002_00006 + 22)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux138, [2,3,5,5,12,12,18,18])
**VARIABLES**
DISCRETE aux139 #(M_00002_00002 + -19)
{13..14}
DISCRETE aux140 #( - M_00002_00008 + 22)
{-13..2}
**CONSTRAINTS**
w-inintervalset(aux140, [-13,-13,-11,-10,-3,-3,0,0,2,2])
**VARIABLES**
DISCRETE aux141 #( - M_00002_00002 + M_00002_00003)
{-16..5}
**CONSTRAINTS**
w-inintervalset(aux141, [-16,-10,-8,-7,-1,3,5,5])
**VARIABLES**
DISCRETE aux142 #(M_00002_00004 + -19)
{13..19}
**CONSTRAINTS**
w-inintervalset(aux142, [13,14,16,16,19,19])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00002 + M_00002_00005)
{-16..2}
**CONSTRAINTS**
w-inintervalset(aux143, [-16,-10,-8,-7,-1,2])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00007 + 10)
{-25..6}
**CONSTRAINTS**
w-inintervalset(aux144, [-25,-25,-23,-22,-15,-15,-12,-12,-10,-9,-7,-7,0,0,6,6])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00005 + M_00002_00006)
{-28..-12}
**CONSTRAINTS**
w-inintervalset(aux145, [-28,-28,-25,-25,-23,-21,-18,-18,-16,-12])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00006 + M_00002_00007)
{-16..31}
**CONSTRAINTS**
w-inintervalset(aux146, [-16,-15,-13,-13,-10,-9,-7,-6,-3,3,5,10,12,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00005 + M_00002_00008)
{-15..3}
**CONSTRAINTS**
w-inintervalset(aux147, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00007 + M_00002_00008)
{-15..31}
**CONSTRAINTS**
w-inintervalset(aux148, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux149 #( - M_00002_00004 + M_00002_00005)
{-21..-3}
**CONSTRAINTS**
w-inintervalset(aux149, [-21,-21,-19,-18,-16,-10,-8,-5,-3,-3])
**VARIABLES**
DISCRETE aux150 #( - M_00002_00004 + M_00002_00007)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux150, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-10,-8,-5,-3,3])
**VARIABLES**
DISCRETE aux151 #( - M_00003_00003 + M_00003_00004)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux151, [-21,-21,-19,-18,-16,-10,-8,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux152 #( - M_00003_00001 + M_00003_00004)
{-16..19}
**CONSTRAINTS**
w-inintervalset(aux152, [-16,-10,-8,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux153 #( - M_00003_00002 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux153, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3])
**VARIABLES**
DISCRETE aux154 #( - M_00003_00003 + M_00003_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux154, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux155 #( - M_00003_00009 + -1)
{-23..-11}
**CONSTRAINTS**
w-inintervalset(aux155, [-23,-23,-21,-20,-18,-18,-11,-11])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00006 + M_00003_00007)
{-18..31}
**CONSTRAINTS**
w-inintervalset(aux156, [-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00007 + M_00003_00008)
{-15..31}
**CONSTRAINTS**
w-inintervalset(aux157, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00006 + M_00003_00009)
{-25..18}
**CONSTRAINTS**
w-inintervalset(aux158, [-25,-25,-23,-22,-18,-18,-16,-5,-3,3,5,7,9,10,12,13,15,16,18,18])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00008 + M_00003_00009)
{-25..2}
**CONSTRAINTS**
w-inintervalset(aux159, [-25,-25,-23,-22,-18,-18,-16,-10,-8,-8,-6,-5,-3,0,2,2])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00005 + M_00003_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux160, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00005 + M_00003_00008)
{-15..18}
**CONSTRAINTS**
w-inintervalset(aux161, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,18])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00001 + M_00003_00002)
{-7..19}
**CONSTRAINTS**
w-inintervalset(aux162, [-7,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00002 + M_00003_00003)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux163, [-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux164 #( - M_00003_00004 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux164, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3])
**VARIABLES**
DISCRETE aux165 #( - M_00003_00004 + M_00003_00007)
{-34..18}
**CONSTRAINTS**
w-inintervalset(aux165, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,8,10,16,18,18])
**VARIABLES**
DISCRETE aux166 #( - M_00004_00002 + M_00004_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux166, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux167 #( - M_00004_00001 + M_00004_00004)
{-34..19}
**CONSTRAINTS**
w-inintervalset(aux167, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux168 #( - M_00004_00002 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux168, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux169 #( - M_00004_00008 + -1)
{-36..-11}
**CONSTRAINTS**
w-inintervalset(aux169, [-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11])
**VARIABLES**
DISCRETE aux170 #( - M_00004_00006 + M_00004_00007)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux170, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00007 + M_00004_00008)
{-25..31}
**CONSTRAINTS**
w-inintervalset(aux171, [-25,-25,-23,-22,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00005 + M_00004_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux172, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00005 + M_00004_00008)
{-25..31}
**CONSTRAINTS**
w-inintervalset(aux173, [-25,-25,-23,-22,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00004 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux174, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00004 + M_00004_00007)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux175, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00001 + M_00004_00002)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux176, [-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux177 #( - M_00004_00003 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux177, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux178 #( - M_00004_00003 + M_00004_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux178, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux179 #(-1 - M_00005_00007)
{-36..-5}
**CONSTRAINTS**
w-inintervalset(aux179, [-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux180 #( - M_00005_00004 + M_00005_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux180, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux181 #( - M_00005_00005 + M_00005_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux181, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux182 #( - M_00005_00004 + M_00005_00007)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux182, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux183 #( - M_00005_00006 + M_00005_00007)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux183, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux184 #( - M_00005_00003 + M_00005_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux184, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00003 + M_00005_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux185, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00002 + M_00005_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux186, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00002 + M_00005_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux187, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux188 #( - M_00005_00001 + M_00005_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux188, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux189 #( - M_00005_00001 + M_00005_00004)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux189, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux190 #( - M_00006_00003 + M_00006_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux190, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux191 #( - M_00006_00004 + M_00006_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux191, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux192 #( - M_00006_00003 + M_00006_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux192, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux193 #(-1 - M_00006_00006)
{-36..-5}
**CONSTRAINTS**
w-inintervalset(aux193, [-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux194 #( - M_00006_00005 + M_00006_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux194, [-31,-31,-29,-28,-25,-25,-23,-21,-18,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00002 + M_00006_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux195, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00002 + M_00006_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux196, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux197 #( - M_00006_00001 + M_00006_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux197, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux198 #( - M_00006_00001 + M_00006_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux198, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux199 #( - M_00007_00001 + M_00007_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux199, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux200 #( - M_00007_00005 + -1)
{-36..-5}
**CONSTRAINTS**
w-inintervalset(aux200, [-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux201 #( - M_00007_00001 + M_00007_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux201, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux202 #( - M_00007_00002 + M_00007_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux202, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux203 #( - M_00007_00002 + M_00007_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux203, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux204 #( - M_00007_00003 + M_00007_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux204, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux205 #( - M_00007_00004 + M_00007_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux205, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,18,21,23,25,25,28,29,31,31])
**VARIABLES**
DISCRETE aux206 #( - M_00008_00003 + M_00008_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux206, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux207 #( - M_00008_00001 + M_00008_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux207, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux208 #( - M_00008_00001 + M_00008_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux208, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux209 #( - M_00008_00002 + M_00008_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux209, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux210 #( - M_00008_00004 + -1)
{-39..-5}
**CONSTRAINTS**
w-inintervalset(aux210, [-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux211 #( - M_00009_00001 + M_00009_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux211, [-34,-34,-31,-31,-29,-28,-25,-25,-23,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux212 #( - M_00009_00002 + M_00009_00003)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux212, [-21,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux213 #(-1 - M_00009_00003)
{-39..-5}
**CONSTRAINTS**
w-inintervalset(aux213, [-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux214 #( - M_00010_00001 + M_00010_00002)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux214, [-21,-21,-19,-18,-16,-5,-3,3,5,16,18,19,21,23,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux215 #( - M_00010_00002 + -1)
{-39..-5}
**CONSTRAINTS**
w-inintervalset(aux215, [-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-11,-11,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[19, 33, 25, 38, 32, 17, 4, 35, 20, 22, 10]
**SEARCH**
PRINT[[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux135)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00008, 13, aux14)
div(M_00002_00004, 13, 2)
div(M_00002_00003, 13, aux16)
reify(gaceq(M_00003_00009,M_00004_00008), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00003, 13, aux19)
div(M_00007_00005, 13, aux20)
reify(gaceq(M_00005_00002,M_00006_00002), aux21)
reify(gaceq(M_00002_00006,M_00003_00005), aux22)
reify(gaceq(M_00007_00002,M_00006_00002), aux23)
reify(gaceq(M_00003_00002,M_00004_00002), aux24)
reify(gaceq(M_00002_00008,M_00003_00007), aux25)
reify(gaceq(M_00005_00003,M_00006_00003), aux26)
reify(gaceq(M_00005_00007,M_00006_00006), aux27)
div(M_00002_00005, 13, aux28)
div(M_00002_00006, 13, aux29)
div(M_00002_00007, 13, aux30)
reify(gaceq(M_00004_00005,M_00005_00005), aux31)
reify(gaceq(M_00004_00005,M_00005_00004), aux32)
reify(gaceq(M_00010_00001,M_00009_00001), aux33)
reify(gaceq(M_00010_00002,M_00009_00003), aux34)
reify(gaceq(M_00004_00006,M_00005_00005), aux35)
div(M_00004_00003, 13, aux36)
div(M_00004_00002, 13, aux37)
div(M_00004_00006, 13, aux38)
div(M_00004_00007, 13, aux39)
reify(gaceq(M_00004_00003,M_00005_00003), aux40)
reify(gaceq(M_00005_00001,M_00006_00001), aux41)
reify(gaceq(M_00004_00002,M_00005_00002), aux42)
reify(gaceq(M_00003_00008,M_00004_00007), aux43)
div(M_00002_00002, 13, 2)
reify(gaceq(M_00008_00004,M_00009_00003), aux45)
reify(gaceq(M_00008_00002,M_00009_00002), aux46)
reify(gaceq(M_00008_00001,M_00009_00001), aux47)
reify(gaceq(M_00003_00007,M_00004_00006), aux48)
reify(gaceq(M_00003_00006,M_00004_00006), aux49)
reify(gaceq(M_00003_00005,M_00004_00004), aux50)
reify(gaceq(M_00005_00005,M_00006_00005), aux51)
div(M_00003_00009, 13, aux52)
div(M_00003_00001, 13, aux53)
div(M_00005_00007, 13, aux54)
div(M_00005_00001, 13, aux55)
div(M_00008_00003, 13, aux56)
div(M_00008_00002, 13, aux57)
div(M_00008_00001, 13, aux58)
div(M_00008_00004, 13, aux59)
div(M_00006_00005, 13, aux60)
div(M_00006_00004, 13, aux61)
div(M_00006_00003, 13, aux62)
div(M_00006_00002, 13, aux63)
reify(gaceq(M_00002_00005,M_00003_00004), aux64)
reify(gaceq(M_00004_00004,M_00005_00003), aux65)
reify(gaceq(M_00002_00006,M_00003_00006), aux66)
reify(gaceq(M_00002_00008,M_00003_00008), aux67)
reify(gaceq(M_00002_00003,M_00003_00002), aux68)
reify(gaceq(M_00003_00004,M_00004_00004), aux69)
reify(gaceq(M_00007_00001,M_00006_00001), aux70)
reify(gaceq(M_00004_00007,M_00005_00006), aux71)
reify(gaceq(M_00003_00003,M_00004_00003), aux72)
reify(gaceq(M_00007_00004,M_00008_00004), aux73)
reify(gaceq(M_00007_00003,M_00008_00002), aux74)
reify(gaceq(M_00003_00006,M_00004_00005), aux75)
reify(gaceq(M_00008_00003,M_00009_00002), aux76)
reify(gaceq(M_00008_00003,M_00009_00003), aux77)
reify(gaceq(M_00003_00001,M_00004_00001), aux78)
div(M_00006_00001, 13, aux79)
div(M_00006_00006, 13, aux80)
reify(gaceq(M_00004_00004,M_00005_00004), aux81)
div(M_00003_00007, 13, aux82)
div(M_00003_00008, 13, aux83)
div(M_00003_00002, 13, aux84)
div(M_00003_00003, 13, aux85)
reify(gaceq(M_00005_00005,M_00006_00004), aux86)
reify(gaceq(M_00003_00003,M_00004_00002), aux87)
reify(gaceq(M_00003_00008,M_00004_00008), aux88)
reify(gaceq(M_00005_00004,M_00006_00004), aux89)
reify(gaceq(M_00005_00003,M_00006_00002), aux90)
reify(gaceq(M_00005_00006,M_00006_00006), aux91)
div(M_00005_00006, 13, aux92)
div(M_00005_00002, 13, aux93)
div(M_00005_00005, 13, aux94)
div(M_00005_00003, 13, aux95)
reify(gaceq(M_00004_00007,M_00005_00007), aux96)
reify(gaceq(M_00004_00003,M_00005_00002), aux97)
reify(gaceq(M_00002_00004,M_00003_00004), aux98)
reify(gaceq(M_00004_00008,M_00005_00007), aux99)
div(M_00007_00002, 13, aux100)
div(M_00007_00004, 13, aux101)
reify(gaceq(M_00002_00005,M_00003_00005), aux102)
reify(gaceq(M_00002_00007,M_00003_00006), aux103)
reify(gaceq(M_00003_00004,M_00004_00003), aux104)
reify(gaceq(M_00007_00004,M_00008_00003), aux105)
reify(gaceq(M_00005_00004,M_00006_00003), aux106)
reify(gaceq(M_00003_00007,M_00004_00007), aux107)
div(M_00004_00004, 13, aux108)
div(M_00004_00005, 13, aux109)
reify(gaceq(M_00002_00002,M_00003_00002), aux110)
reify(gaceq(M_00007_00003,M_00006_00004), aux111)
reify(gaceq(M_00002_00003,M_00003_00003), aux112)
reify(gaceq(M_00007_00001,M_00008_00001), aux113)
reify(gaceq(M_00007_00002,M_00008_00002), aux114)
reify(gaceq(M_00007_00003,M_00008_00003), aux115)
reify(gaceq(M_00007_00005,M_00006_00005), aux116)
reify(gaceq(M_00007_00002,M_00006_00003), aux117)
reify(gaceq(M_00005_00006,M_00006_00005), aux118)
reify(gaceq(M_00003_00005,M_00004_00005), aux119)
div(M_00003_00004, 13, aux120)
div(M_00003_00006, 13, aux121)
div(M_00003_00005, 13, aux122)
reify(gaceq(M_00007_00005,M_00008_00004), aux123)
reify(gaceq(M_00002_00004,M_00003_00003), aux124)
reify(gaceq(M_00002_00007,M_00003_00007), aux125)
div(M_00005_00004, 13, aux126)
reify(gaceq(M_00004_00001,M_00005_00001), aux127)
reify(gaceq(M_00007_00005,M_00006_00006), aux128)
div(M_00009_00002, 13, aux129)
div(M_00004_00008, 13, aux130)
div(M_00004_00001, 13, aux131)
reify(gaceq(M_00004_00006,M_00005_00006), aux132)
reify(gaceq(M_00007_00004,M_00006_00005), aux133)
reify(gaceq(M_00007_00003,M_00006_00003), aux134)
gccweak([M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,17),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,20),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,35),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,20)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,38),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20)}),watched-and({w-literal(M_00002_00002,32),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20)})})
watched-or({watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux136,13,0),w-literal(aux16,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux98,1),w-literal(aux102,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux137,13,0),gaceq(aux16,aux29)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00006,22),w-literal(M_00003_00009,10),watched-or({w-literal(aux29,1),modulo(aux138,13,0)}),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux102,1),w-literal(aux125,1),w-literal(aux67,1)}),watched-and({w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),modulo(aux139,13,0),gaceq(M_00002_00002,M_00003_00001),w-literal(aux68,1),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),watched-or({w-literal(aux14,1),modulo(aux140,13,0)}),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux102,1),w-literal(aux66,1),w-literal(aux125,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux68,1),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux141,13,0),w-literal(aux16,2)})}),watched-and({w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),modulo(aux142,13,0),w-literal(aux110,1),w-literal(aux112,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux64,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux112,1),w-literal(aux98,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux143,13,0),w-literal(aux28,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00007,10),w-literal(M_00003_00009,22),watched-or({w-literal(aux30,0),modulo(aux144,13,0)}),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux102,1),w-literal(aux66,1),w-literal(aux67,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux145,13,0),gaceq(aux28,aux29)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux102,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux146,13,0),gaceq(aux29,aux30)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux66,1),w-literal(aux125,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux147,13,0),gaceq(aux28,aux14)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux98,1),w-literal(aux102,1),w-literal(aux66,1),w-literal(aux25,1),watched-or({modulo(aux148,13,0),gaceq(aux30,aux14)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux64,1),w-literal(aux22,1),w-literal(aux103,1),w-literal(aux25,1),watched-or({modulo(aux149,13,0),w-literal(aux28,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00008,22),w-literal(M_00003_00009,10),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux102,1),w-literal(aux66,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux25,1),watched-or({modulo(aux150,13,0),w-literal(aux30,2)})})})
watched-or({watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux151,13,0),gaceq(aux85,aux120)})}),watched-and({w-literal(aux24,1),w-literal(aux72,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux50,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux152,13,0),gaceq(aux53,aux120)})}),watched-and({w-literal(aux78,1),w-literal(aux72,1),w-literal(aux69,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux153,13,0),gaceq(aux84,aux122)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux69,1),w-literal(aux119,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux154,13,0),gaceq(aux85,aux121)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux119,1),w-literal(aux49,1),w-literal(aux107,1),w-literal(aux88,1),modulo(aux155,13,0)}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux119,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux156,13,0),gaceq(aux121,aux82)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux119,1),w-literal(aux49,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux157,13,0),gaceq(aux82,aux83)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux119,1),w-literal(aux107,1),w-literal(aux88,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux158,13,0),gaceq(aux121,aux52)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux119,1),w-literal(aux49,1),w-literal(aux107,1),w-literal(aux17,1),watched-or({modulo(aux159,13,0),gaceq(aux83,aux52)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux160,13,0),gaceq(aux122,aux121)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux69,1),w-literal(aux49,1),w-literal(aux107,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux17,1),watched-or({modulo(aux161,13,0),gaceq(aux122,aux83)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux87,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux162,13,0),gaceq(aux53,aux84)})}),watched-and({w-literal(aux78,1),w-literal(aux87,1),w-literal(aux104,1),w-literal(aux50,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux163,13,0),gaceq(aux84,aux85)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux50,1),w-literal(aux75,1),w-literal(aux48,1),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux164,13,0),gaceq(aux120,aux122)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux119,1),w-literal(aux49,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux43,1),w-literal(aux17,1),watched-or({modulo(aux165,13,0),gaceq(aux120,aux82)})})})
watched-or({watched-and({w-literal(aux127,1),w-literal(aux97,1),w-literal(aux65,1),w-literal(aux32,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux37,aux36),modulo(aux166,13,0)})}),watched-and({w-literal(aux42,1),w-literal(aux40,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux32,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux131,aux108),modulo(aux167,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux40,1),w-literal(aux81,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux37,aux109),modulo(aux168,13,0)})}),watched-and({modulo(aux169,13,0),w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux31,1),w-literal(aux132,1),w-literal(aux96,1)}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux31,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux38,aux39),modulo(aux170,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux31,1),w-literal(aux132,1),w-literal(aux99,1),watched-or({gaceq(aux39,aux130),modulo(aux171,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux109,aux38),modulo(aux172,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux132,1),w-literal(aux96,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux109,aux130),modulo(aux173,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux32,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux108,aux109),modulo(aux174,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux31,1),w-literal(aux132,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux99,1),watched-or({gaceq(aux108,aux39),modulo(aux175,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux97,1),w-literal(aux65,1),w-literal(aux32,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux131,aux37),modulo(aux176,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux65,1),w-literal(aux32,1),w-literal(aux35,1),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux36,aux108),modulo(aux177,13,0)})}),watched-and({w-literal(aux127,1),w-literal(aux42,1),w-literal(aux81,1),w-literal(aux31,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux71,1),w-literal(aux99,1),watched-or({gaceq(aux36,aux38),modulo(aux178,13,0)})})})
watched-or({watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux26,1),w-literal(aux89,1),w-literal(aux51,1),w-literal(aux91,1),modulo(aux179,13,0)}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux26,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux180,13,0),gaceq(aux126,aux94)})}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux26,1),w-literal(aux89,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux181,13,0),gaceq(aux94,aux92)})}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux26,1),w-literal(aux51,1),w-literal(aux91,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux182,13,0),gaceq(aux126,aux54)})}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux26,1),w-literal(aux89,1),w-literal(aux51,1),w-literal(aux27,1),watched-or({modulo(aux183,13,0),gaceq(aux92,aux54)})}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux106,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux184,13,0),gaceq(aux95,aux126)})}),watched-and({w-literal(aux41,1),w-literal(aux21,1),w-literal(aux89,1),w-literal(aux51,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux27,1),watched-or({modulo(aux185,13,0),gaceq(aux95,aux92)})}),watched-and({w-literal(aux41,1),w-literal(aux90,1),w-literal(aux106,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux186,13,0),gaceq(aux93,aux95)})}),watched-and({w-literal(aux41,1),w-literal(aux26,1),w-literal(aux89,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux187,13,0),gaceq(aux93,aux94)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux90,1),w-literal(aux106,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux188,13,0),gaceq(aux55,aux93)})}),watched-and({w-literal(aux21,1),w-literal(aux26,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux27,1),watched-or({modulo(aux189,13,0),gaceq(aux55,aux126)})})})
watched-or({watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux133,1),w-literal(aux128,1),watched-or({gaceq(aux62,aux61),modulo(aux190,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux134,1),w-literal(aux133,1),w-literal(aux128,1),watched-or({gaceq(aux61,aux60),modulo(aux191,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux116,1),watched-or({gaceq(aux62,aux80),modulo(aux192,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux134,1),w-literal(aux13,1),w-literal(aux116,1),modulo(aux193,13,0)}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux134,1),w-literal(aux13,1),w-literal(aux128,1),watched-or({gaceq(aux60,aux80),modulo(aux194,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux117,1),w-literal(aux111,1),w-literal(aux133,1),w-literal(aux128,1),watched-or({gaceq(aux63,aux62),modulo(aux195,13,0)})}),watched-and({w-literal(aux70,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux134,1),w-literal(aux13,1),w-literal(aux128,1),watched-or({gaceq(aux63,aux60),modulo(aux196,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux117,1),w-literal(aux111,1),w-literal(aux133,1),w-literal(aux128,1),watched-or({gaceq(aux79,aux63),modulo(aux197,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux23,1),w-literal(aux134,1),w-literal(aux133,1),w-literal(aux128,1),watched-or({gaceq(aux79,aux61),modulo(aux198,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux199,13,0),gaceq(aux18,aux101)}),w-literal(aux114,1),w-literal(aux115,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux123,1)}),watched-and({modulo(aux200,13,0),w-literal(aux113,1),w-literal(aux114,1),w-literal(aux115,1),w-literal(aux73,1)}),watched-and({watched-or({modulo(aux201,13,0),gaceq(aux18,aux100)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux74,1),w-literal(aux105,1),w-literal(aux123,1)}),watched-and({watched-or({modulo(aux202,13,0),gaceq(aux100,aux20)}),w-literal(aux113,1),w-literal(aux115,1),w-literal(aux73,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux203,13,0),gaceq(aux100,aux19)}),w-literal(aux113,1),w-literal(aux74,1),w-literal(aux105,1),w-literal(aux123,1)}),watched-and({watched-or({modulo(aux204,13,0),gaceq(aux19,aux101)}),w-literal(aux113,1),w-literal(aux114,1),w-literal(aux105,1),w-literal(aux123,1)}),watched-and({watched-or({modulo(aux205,13,0),gaceq(aux101,aux20)}),w-literal(aux113,1),w-literal(aux114,1),w-literal(aux115,1),w-literal(aux123,1)})})
watched-or({watched-and({watched-or({gaceq(aux56,aux59),modulo(aux206,13,0)}),w-literal(aux47,1),w-literal(aux46,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux58,aux57),modulo(aux207,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux76,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux58,aux59),modulo(aux208,13,0)}),w-literal(aux46,1),w-literal(aux77,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux57,aux56),modulo(aux209,13,0)}),w-literal(aux47,1),w-literal(aux76,1),w-literal(aux45,1)}),watched-and({w-literal(aux47,1),w-literal(aux46,1),w-literal(aux77,1),modulo(aux210,13,0)})})
watched-or({watched-and({watched-or({modulo(aux211,13,0),div(M_00009_00001, 13, aux129)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux34,1)}),watched-and({watched-or({modulo(aux212,13,0),div(M_00009_00003, 13, aux129)}),w-literal(aux33,1),w-literal(aux34,1)}),watched-and({modulo(aux213,13,0),w-literal(aux33,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux135),modulo(aux214,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux215,13,0)})})
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux136)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux136)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux137)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux137)
weightedsumleq([-1,1],[M_00002_00006,22],aux138)
weightedsumgeq([-1,1],[M_00002_00006,22],aux138)
sumleq([M_00002_00002,-19],aux139)
sumgeq([M_00002_00002,-19],aux139)
weightedsumleq([-1,1],[M_00002_00008,22],aux140)
weightedsumgeq([-1,1],[M_00002_00008,22],aux140)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux141)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux141)
sumleq([M_00002_00004,-19],aux142)
sumgeq([M_00002_00004,-19],aux142)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux143)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux143)
weightedsumleq([-1,1],[M_00002_00007,10],aux144)
weightedsumgeq([-1,1],[M_00002_00007,10],aux144)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux145)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux145)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux146)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux146)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux147)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux147)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux148)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux148)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux149)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux149)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux150)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux150)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux151)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux151)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux152)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux152)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux153)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux153)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux154)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux154)
weightedsumleq([-1,1],[M_00003_00009,-1],aux155)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux155)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux156)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux156)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux157)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux157)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux158)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux158)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux159)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux159)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux160)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux160)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux161)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux161)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux162)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux162)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux163)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux163)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux164)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux164)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux165)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux165)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux166)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux166)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux167)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux167)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux168)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux168)
weightedsumleq([-1,1],[M_00004_00008,-1],aux169)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux169)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux170)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux170)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux171)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux171)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux172)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux172)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux173)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux173)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux174)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux174)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux175)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux175)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux176)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux176)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux177)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux177)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux178)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux178)
weightedsumleq([1,-1],[-1,M_00005_00007],aux179)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux179)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux180)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux180)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux181)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux181)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux182)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux182)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux183)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux183)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux184)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux184)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux185)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux185)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux186)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux186)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux187)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux187)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux188)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux188)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux189)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux189)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux190)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux190)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux191)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux191)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux192)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux192)
weightedsumleq([1,-1],[-1,M_00006_00006],aux193)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux193)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux194)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux194)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux195)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux195)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux196)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux196)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux197)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux197)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux198)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux198)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux199)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux199)
weightedsumleq([-1,1],[M_00007_00005,-1],aux200)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux200)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux201)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux201)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux202)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux202)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux203)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux203)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux204)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux204)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux205)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux205)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux206)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux206)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux207)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux207)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux208)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux208)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux209)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux209)
weightedsumleq([-1,1],[M_00008_00004,-1],aux210)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux210)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux211)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux211)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux212)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux212)
weightedsumleq([1,-1],[-1,M_00009_00003],aux213)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux213)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux214)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux214)
weightedsumleq([-1,1],[M_00010_00002,-1],aux215)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux215)
**EOF**
