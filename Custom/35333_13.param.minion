MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 187
# CSE_active_eliminated_expressions = 1052
# CSE_active_total_size = 561
**VARIABLES**
DISCRETE M_00002_00002 #
{32..33}
DISCRETE M_00002_00003 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{32..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{17..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00006 #
{4..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [4,4,12,12,17,17,19,20])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00009 #
{20..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [20,20,22,22])
**VARIABLES**
DISCRETE M_00002_00010 #
{22..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00002_00011 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00003_00001 #
{19..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [19,20,22,22,25,25,32,33])
**VARIABLES**
DISCRETE M_00003_00002 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00004 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00003_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00009 #
{20..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [20,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00003_00010 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00003_00011 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00004_00001 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00004_00008 #
{12..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00004_00009 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00004_00010 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00008 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00005_00009 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00006_00008 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00007_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00008_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00009_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00009_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00010_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00010_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00011_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00011_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00012_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
DISCRETE M_00013_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [2,2,4,4,12,12,17,17,19,20,22,22,25,25,32,33,35,35,38,38,43,43])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..2}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{1..3}
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..3}
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux22 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux23 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux29 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux31 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
BOOL aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
DISCRETE aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
DISCRETE aux35 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..2}
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux40 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux41 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
BOOL aux49 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux50 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux51 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux52 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux53 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux57 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux58 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux59 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux61 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux62 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux63 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux64 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux65 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux66 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux67 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..3}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..2}
BOOL aux73 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux74 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux79 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux84 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux85 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux88 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux94 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux95 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux96 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux97 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux100 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux101 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux102 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux106 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux109 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux111 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux112 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux113 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..3}
DISCRETE aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
BOOL aux120 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux121 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux126 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux131 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux134 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux135 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux139 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux140 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux141 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux142 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux143 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux144 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux147 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux150 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux151 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux153 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux154 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux155 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux156 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux157 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux162 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux163 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux164 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux165 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux167 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux168 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux169 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux171 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
BOOL aux172 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux173 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{1..2}
DISCRETE aux174 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux175 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux176 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux177 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux178 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux179 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux180 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux181 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux182 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux185 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux186 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux190 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..2}
DISCRETE aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux193 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux194 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux195 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux196 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux197 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux198 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux199 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux200 #
{0..3}
DISCRETE aux201 #( - M_00002_00008 + M_00002_00009)
{-15..2}
**CONSTRAINTS**
w-inintervalset(aux201, [-15,-15,-13,-10,-5,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux202 #( - M_00002_00009 + M_00002_00010)
{2..21}
**CONSTRAINTS**
w-inintervalset(aux202, [2,3,5,5,10,13,15,16,18,18,21,21])
**VARIABLES**
DISCRETE aux203 #( - M_00002_00008 + M_00002_00011)
{-33..8}
**CONSTRAINTS**
w-inintervalset(aux203, [-33,-33,-31,-28,-23,-23,-21,-20,-18,-18,-16,-10,-8,-5,-3,3,5,8])
**VARIABLES**
DISCRETE aux204 #( - M_00002_00010 + M_00002_00011)
{-41..21}
**CONSTRAINTS**
w-inintervalset(aux204, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,11,13,13,16,16,18,18,21,21])
**VARIABLES**
DISCRETE aux205 #( - M_00002_00007 + M_00002_00008)
{-15..31}
**CONSTRAINTS**
w-inintervalset(aux205, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux206 #( - M_00002_00007 + M_00002_00010)
{8..39}
**CONSTRAINTS**
w-inintervalset(aux206, [8,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux207 #( - M_00002_00003 + M_00002_00004)
{-6..21}
**CONSTRAINTS**
w-inintervalset(aux207, [-6,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux208 #( - M_00002_00004 + M_00002_00005)
{-21..-3}
**CONSTRAINTS**
w-inintervalset(aux208, [-21,-21,-19,-18,-16,-10,-8,-5,-3,-3])
**VARIABLES**
DISCRETE aux209 #( - M_00002_00006 + M_00002_00007)
{-16..31}
**CONSTRAINTS**
w-inintervalset(aux209, [-16,-15,-13,-13,-8,-7,-5,-5,-3,3,5,8,10,10,12,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux210 #(M_00002_00004 + -19)
{13..19}
**CONSTRAINTS**
w-inintervalset(aux210, [13,14,16,16,19,19])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00006 + M_00002_00009)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux211, [2,3,5,5,8,8,10,10,16,16,18,18])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00002 + M_00002_00005)
{-16..2}
**CONSTRAINTS**
w-inintervalset(aux212, [-16,-10,-8,-7,-1,2])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00005 + M_00002_00006)
{-28..-12}
**CONSTRAINTS**
w-inintervalset(aux213, [-28,-28,-23,-23,-21,-20,-18,-18,-16,-12])
**VARIABLES**
DISCRETE aux214 #(M_00002_00002 + -19)
{13..14}
DISCRETE aux215 #( - M_00002_00003 + M_00002_00006)
{-34..-5}
**CONSTRAINTS**
w-inintervalset(aux215, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-12,-10,-10,-8,-5])
**VARIABLES**
DISCRETE aux216 #( - M_00002_00002 + M_00002_00003)
{-16..5}
**CONSTRAINTS**
w-inintervalset(aux216, [-16,-10,-8,-7,-1,3,5,5])
**VARIABLES**
DISCRETE aux217 #( - M_00002_00004 + M_00002_00007)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux217, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3])
**VARIABLES**
DISCRETE aux218 #( - M_00002_00005 + M_00002_00008)
{-15..3}
**CONSTRAINTS**
w-inintervalset(aux218, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3])
**VARIABLES**
DISCRETE aux219 #( - M_00002_00011 + 12)
{-31..10}
**CONSTRAINTS**
w-inintervalset(aux219, [-31,-31,-26,-26,-23,-23,-21,-20,-13,-13,-10,-10,-8,-7,-5,-5,0,0,8,8,10,10])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00001 + M_00003_00004)
{-16..19}
**CONSTRAINTS**
w-inintervalset(aux220, [-16,-10,-8,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux221 #( - M_00003_00003 + M_00003_00004)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux221, [-21,-21,-19,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,23,26,26,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00004 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux222, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3])
**VARIABLES**
DISCRETE aux223 #( - M_00003_00006 + M_00003_00007)
{-18..31}
**CONSTRAINTS**
w-inintervalset(aux223, [-18,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00006 + M_00003_00009)
{-13..39}
**CONSTRAINTS**
w-inintervalset(aux224, [-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00002 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux225, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00005 + M_00003_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux226, [-31,-31,-29,-28,-23,-23,-21,-20,-18,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00003 + M_00003_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux227, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00002 + M_00003_00003)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux228, [-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00001 + M_00003_00002)
{-7..19}
**CONSTRAINTS**
w-inintervalset(aux229, [-7,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00004 + M_00003_00007)
{-34..18}
**CONSTRAINTS**
w-inintervalset(aux230, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,18])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00005 + M_00003_00008)
{-15..18}
**CONSTRAINTS**
w-inintervalset(aux231, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,16,18,18])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00011 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux232, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00008 + M_00003_00009)
{-15..23}
**CONSTRAINTS**
w-inintervalset(aux233, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,8,10,13,15,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux234 #( - M_00003_00009 + M_00003_00010)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux234, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,13,15,16,18,18,21,21,23,23])
**VARIABLES**
DISCRETE aux235 #( - M_00003_00008 + M_00003_00011)
{-33..8}
**CONSTRAINTS**
w-inintervalset(aux235, [-33,-33,-31,-28,-23,-23,-21,-20,-18,-18,-16,-10,-8,-5,-3,3,5,8])
**VARIABLES**
DISCRETE aux236 #( - M_00003_00010 + M_00003_00011)
{-41..21}
**CONSTRAINTS**
w-inintervalset(aux236, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21])
**VARIABLES**
DISCRETE aux237 #( - M_00003_00007 + M_00003_00008)
{-23..31}
**CONSTRAINTS**
w-inintervalset(aux237, [-23,-23,-21,-21,-18,-18,-16,-15,-13,-10,-8,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux238 #( - M_00003_00007 + M_00003_00010)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux238, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00010 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux239, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00008 + M_00004_00009)
{-41..31}
**CONSTRAINTS**
w-inintervalset(aux240, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,31,31])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00009 + M_00004_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux241, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00007 + M_00004_00008)
{-23..39}
**CONSTRAINTS**
w-inintervalset(aux242, [-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00007 + M_00004_00010)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux243, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00006 + M_00004_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux244, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00006 + M_00004_00009)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux245, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00002 + M_00004_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux246, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,23,26,26,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00003 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux247, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,23,26,26,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00005 + M_00004_00006)
{-31..39}
**CONSTRAINTS**
w-inintervalset(aux248, [-31,-31,-29,-28,-23,-23,-21,-20,-18,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00005 + M_00004_00008)
{-23..39}
**CONSTRAINTS**
w-inintervalset(aux249, [-23,-23,-21,-20,-18,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00001 + M_00004_00004)
{-34..19}
**CONSTRAINTS**
w-inintervalset(aux250, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux251 #( - M_00004_00004 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux251, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux252 #( - M_00004_00002 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux252, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,18,20,21,23,23,28,29,31,31])
**VARIABLES**
DISCRETE aux253 #( - M_00004_00001 + M_00004_00002)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux253, [-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux254 #( - M_00004_00003 + M_00004_00006)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux254, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux255 #( - M_00004_00004 + M_00004_00007)
{-36..31}
**CONSTRAINTS**
w-inintervalset(aux255, [-36,-36,-34,-33,-31,-28,-26,-26,-23,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00003 + M_00005_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux256, [-39,-39,-34,-34,-31,-31,-29,-28,-26,-26,-24,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00001 + M_00005_00004)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux257, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00002 + M_00005_00005)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux258, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux259 #( - M_00005_00003 + M_00005_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux259, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux260 #(-1 - M_00005_00009)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux260, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00006 + M_00005_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux261, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00007 + M_00005_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux262, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00006 + M_00005_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux263, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00008 + M_00005_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux264, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00005 + M_00005_00006)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux265, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00005 + M_00005_00008)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux266, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux267 #( - M_00005_00001 + M_00005_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux267, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,23,26,26,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux268 #( - M_00005_00002 + M_00005_00003)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux268, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux269 #( - M_00005_00004 + M_00005_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux269, [-39,-39,-34,-34,-31,-31,-29,-28,-26,-26,-24,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux270 #( - M_00005_00004 + M_00005_00007)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux270, [-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00002 + M_00006_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux271, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux272 #( - M_00006_00001 + M_00006_00004)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux272, [-36,-36,-34,-33,-31,-28,-26,-26,-23,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00001 + M_00006_00002)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux273, [-34,-34,-31,-31,-29,-28,-26,-26,-23,-23,-21,-18,-16,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00002 + M_00006_00005)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux274, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,16,18,21,23,24,26,26,28,29,31,31,34,34,39,39])
**VARIABLES**
DISCRETE aux275 #(-1 - M_00006_00008)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux275, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00005 + M_00006_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux276, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux277 #( - M_00006_00006 + M_00006_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux277, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00005 + M_00006_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux278, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00007 + M_00006_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux279, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00004 + M_00006_00005)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux280, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux281 #( - M_00006_00004 + M_00006_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux281, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux282 #( - M_00006_00003 + M_00006_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux282, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux283 #( - M_00006_00003 + M_00006_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux283, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00004 + M_00007_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux284, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00002 + M_00007_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux285, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00004 + M_00007_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux286, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00006 + M_00007_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux287, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux288 #( - M_00007_00007 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux288, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux289 #( - M_00007_00003 + M_00007_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux289, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux290 #( - M_00007_00001 + M_00007_00004)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux290, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux291 #( - M_00007_00003 + M_00007_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux291, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux292 #( - M_00007_00005 + M_00007_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux292, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00001 + M_00007_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux293, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00002 + M_00007_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux294, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux295 #( - M_00008_00001 + M_00008_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux295, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux296 #( - M_00008_00005 + M_00008_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux296, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux297 #( - M_00008_00004 + M_00008_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux297, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux298 #( - M_00008_00003 + M_00008_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux298, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux299 #( - M_00008_00002 + M_00008_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux299, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux300 #( - M_00008_00001 + M_00008_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux300, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux301 #( - M_00008_00006 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux301, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux302 #( - M_00008_00003 + M_00008_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux302, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux303 #( - M_00008_00002 + M_00008_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux303, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux304 #( - M_00009_00001 + M_00009_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux304, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux305 #(-1 - M_00009_00005)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux305, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux306 #( - M_00009_00001 + M_00009_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux306, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux307 #( - M_00009_00002 + M_00009_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux307, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux308 #( - M_00009_00002 + M_00009_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux308, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux309 #( - M_00009_00003 + M_00009_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux309, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux310 #( - M_00009_00004 + M_00009_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux310, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux311 #( - M_00010_00002 + M_00010_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux311, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux312 #( - M_00010_00003 + M_00010_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux312, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux313 #( - M_00010_00001 + M_00010_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux313, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux314 #( - M_00010_00001 + M_00010_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux314, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux315 #( - M_00010_00004 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux315, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux316 #( - M_00011_00001 + M_00011_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux316, [-41,-41,-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39,41,41])
**VARIABLES**
DISCRETE aux317 #( - M_00011_00002 + M_00011_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux317, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux318 #( - M_00011_00003 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux318, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux319 #( - M_00012_00001 + M_00012_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux319, [-39,-39,-36,-36,-34,-33,-31,-28,-26,-26,-24,-23,-21,-10,-8,-5,-3,3,5,8,10,21,23,24,26,26,28,31,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux320 #( - M_00012_00002 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux320, [-44,-44,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-13,-13,-5,-5,-3,-3])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[19, 33, 25, 38, 32, 17, 4, 35, 20, 22, 43, 2, 12]
**SEARCH**
PRINT[[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux200)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00009, 13, 1)
div(M_00002_00004, 13, 2)
div(M_00002_00003, 13, aux16)
div(M_00002_00010, 13, aux17)
div(M_00002_00011, 13, aux18)
reify(gaceq(M_00003_00009,M_00004_00008), aux19)
div(M_00007_00001, 13, aux20)
div(M_00007_00007, 13, aux21)
reify(gaceq(M_00002_00006,M_00003_00005), aux22)
reify(gaceq(M_00007_00002,M_00006_00002), aux23)
div(M_00010_00004, 13, aux24)
div(M_00010_00001, 13, aux25)
div(M_00010_00003, 13, aux26)
div(M_00010_00002, 13, aux27)
reify(gaceq(M_00008_00004,M_00009_00004), aux28)
reify(gaceq(M_00004_00004,M_00005_00004), aux29)
reify(gaceq(M_00002_00008,M_00003_00007), aux30)
reify(gaceq(M_00005_00007,M_00006_00006), aux31)
div(M_00002_00005, 13, aux32)
div(M_00002_00006, 13, aux33)
div(M_00002_00007, 13, aux34)
div(M_00002_00008, 13, aux35)
reify(gaceq(M_00010_00001,M_00009_00001), aux36)
reify(gaceq(M_00003_00006,M_00004_00006), aux37)
reify(gaceq(M_00004_00005,M_00005_00004), aux38)
reify(gaceq(M_00010_00004,M_00009_00005), aux39)
reify(gaceq(M_00003_00002,M_00004_00002), aux40)
reify(gaceq(M_00002_00010,M_00003_00009), aux41)
reify(gaceq(M_00010_00004,M_00009_00004), aux42)
reify(gaceq(M_00010_00002,M_00009_00003), aux43)
reify(gaceq(M_00004_00006,M_00005_00005), aux44)
div(M_00004_00008, 13, aux45)
div(M_00004_00009, 13, aux46)
div(M_00004_00003, 13, aux47)
div(M_00004_00002, 13, aux48)
reify(gaceq(M_00007_00007,M_00006_00008), aux49)
reify(gaceq(M_00005_00004,M_00006_00004), aux50)
reify(gaceq(M_00003_00008,M_00004_00007), aux51)
reify(gaceq(M_00004_00007,M_00005_00007), aux52)
reify(gaceq(M_00004_00010,M_00005_00009), aux53)
div(M_00002_00002, 13, 2)
reify(gaceq(M_00011_00003,M_00012_00002), aux55)
reify(gaceq(M_00011_00001,M_00012_00001), aux56)
reify(gaceq(M_00005_00005,M_00006_00005), aux57)
reify(gaceq(M_00003_00008,M_00004_00008), aux58)
reify(gaceq(M_00007_00006,M_00008_00005), aux59)
reify(gaceq(M_00008_00004,M_00009_00003), aux60)
reify(gaceq(M_00007_00003,M_00006_00003), aux61)
reify(gaceq(M_00003_00007,M_00004_00006), aux62)
reify(gaceq(M_00005_00003,M_00006_00003), aux63)
reify(gaceq(M_00002_00002,M_00003_00002), aux64)
reify(gaceq(M_00003_00005,M_00004_00004), aux65)
reify(gaceq(M_00005_00007,M_00006_00007), aux66)
reify(gaceq(M_00003_00011,M_00004_00010), aux67)
reify(gaceq(M_00010_00004,M_00011_00003), aux68)
reify(gaceq(M_00010_00001,M_00011_00001), aux69)
reify(gaceq(M_00010_00002,M_00011_00002), aux70)
div(M_00003_00011, 13, aux71)
div(M_00003_00001, 13, aux72)
reify(gaceq(M_00003_00004,M_00004_00004), aux73)
reify(gaceq(M_00007_00002,M_00008_00002), aux74)
div(M_00005_00001, 13, aux75)
div(M_00005_00009, 13, aux76)
div(M_00008_00001, 13, aux77)
div(M_00008_00006, 13, aux78)
reify(gaceq(M_00004_00006,M_00005_00006), aux79)
div(M_00006_00007, 13, aux80)
div(M_00006_00006, 13, aux81)
div(M_00006_00003, 13, aux82)
div(M_00006_00002, 13, aux83)
reify(gaceq(M_00002_00004,M_00003_00004), aux84)
reify(gaceq(M_00005_00009,M_00006_00008), aux85)
reify(gaceq(M_00010_00003,M_00011_00003), aux86)
reify(gaceq(M_00010_00003,M_00011_00002), aux87)
reify(gaceq(M_00002_00005,M_00003_00005), aux88)
reify(gaceq(M_00002_00005,M_00003_00004), aux89)
reify(gaceq(M_00010_00002,M_00009_00002), aux90)
reify(gaceq(M_00010_00003,M_00009_00003), aux91)
reify(gaceq(M_00004_00004,M_00005_00003), aux92)
reify(gaceq(M_00002_00003,M_00003_00002), aux93)
reify(gaceq(M_00002_00009,M_00003_00009), aux94)
reify(gaceq(M_00004_00001,M_00005_00001), aux95)
reify(gaceq(M_00004_00007,M_00005_00006), aux96)
reify(gaceq(M_00007_00001,M_00006_00001), aux97)
div(M_00009_00004, 13, aux98)
div(M_00009_00002, 13, aux99)
reify(gaceq(M_00003_00005,M_00004_00005), aux100)
reify(gaceq(M_00007_00006,M_00006_00007), aux101)
reify(gaceq(M_00002_00009,M_00003_00008), aux102)
reify(gaceq(M_00007_00006,M_00008_00006), aux103)
reify(gaceq(M_00007_00003,M_00008_00002), aux104)
div(M_00011_00002, 13, aux105)
reify(gaceq(M_00003_00006,M_00004_00005), aux106)
reify(gaceq(M_00008_00003,M_00009_00002), aux107)
reify(gaceq(M_00008_00005,M_00009_00005), aux108)
reify(gaceq(M_00005_00008,M_00006_00007), aux109)
reify(gaceq(M_00010_00003,M_00009_00004), aux110)
div(M_00006_00004, 13, aux111)
div(M_00006_00005, 13, aux112)
reify(gaceq(M_00004_00003,M_00005_00003), aux113)
div(M_00006_00001, 13, aux114)
div(M_00006_00008, 13, aux115)
div(M_00003_00010, 13, aux116)
div(M_00003_00009, 13, aux117)
div(M_00003_00002, 13, aux118)
div(M_00003_00003, 13, aux119)
reify(gaceq(M_00004_00002,M_00005_00002), aux120)
reify(gaceq(M_00005_00005,M_00006_00004), aux121)
reify(gaceq(M_00003_00010,M_00004_00010), aux122)
reify(gaceq(M_00003_00003,M_00004_00002), aux123)
reify(gaceq(M_00005_00003,M_00006_00002), aux124)
reify(gaceq(M_00005_00008,M_00006_00008), aux125)
reify(gaceq(M_00003_00007,M_00004_00007), aux126)
div(M_00005_00007, 13, aux127)
div(M_00005_00008, 13, aux128)
div(M_00005_00002, 13, aux129)
div(M_00005_00003, 13, aux130)
reify(gaceq(M_00005_00006,M_00006_00006), aux131)
reify(gaceq(M_00004_00009,M_00005_00009), aux132)
reify(gaceq(M_00004_00003,M_00005_00002), aux133)
reify(gaceq(M_00005_00002,M_00006_00002), aux134)
reify(gaceq(M_00004_00008,M_00005_00007), aux135)
div(M_00007_00002, 13, aux136)
div(M_00007_00003, 13, aux137)
div(M_00007_00006, 13, aux138)
div(M_00007_00005, 13, aux139)
reify(gaceq(M_00004_00009,M_00005_00008), aux140)
reify(gaceq(M_00008_00003,M_00009_00003), aux141)
reify(gaceq(M_00008_00005,M_00009_00004), aux142)
div(M_00007_00004, 13, aux143)
reify(gaceq(M_00002_00007,M_00003_00006), aux144)
reify(gaceq(M_00003_00004,M_00004_00003), aux145)
reify(gaceq(M_00007_00004,M_00008_00003), aux146)
reify(gaceq(M_00003_00003,M_00004_00003), aux147)
reify(gaceq(M_00003_00009,M_00004_00009), aux148)
reify(gaceq(M_00005_00004,M_00006_00003), aux149)
div(M_00004_00007, 13, aux150)
reify(gaceq(M_00008_00001,M_00009_00001), aux151)
div(M_00004_00004, 13, aux152)
div(M_00004_00005, 13, aux153)
div(M_00004_00006, 13, aux154)
reify(gaceq(M_00008_00006,M_00009_00005), aux155)
reify(gaceq(M_00007_00003,M_00006_00004), aux156)
reify(gaceq(M_00002_00003,M_00003_00003), aux157)
div(M_00008_00003, 13, aux158)
div(M_00008_00004, 13, aux159)
div(M_00008_00005, 13, aux160)
div(M_00008_00002, 13, aux161)
reify(gaceq(M_00002_00008,M_00003_00008), aux162)
reify(gaceq(M_00008_00002,M_00009_00002), aux163)
reify(gaceq(M_00002_00011,M_00003_00010), aux164)
reify(gaceq(M_00007_00005,M_00008_00005), aux165)
reify(gaceq(M_00007_00007,M_00006_00007), aux166)
reify(gaceq(M_00007_00002,M_00006_00003), aux167)
reify(gaceq(M_00002_00006,M_00003_00006), aux168)
reify(gaceq(M_00005_00006,M_00006_00005), aux169)
div(M_00003_00007, 13, aux170)
div(M_00003_00008, 13, aux171)
reify(gaceq(M_00007_00004,M_00008_00004), aux172)
div(M_00003_00004, 13, aux173)
div(M_00003_00006, 13, aux174)
div(M_00003_00005, 13, aux175)
reify(gaceq(M_00007_00007,M_00008_00006), aux176)
reify(gaceq(M_00007_00005,M_00008_00004), aux177)
reify(gaceq(M_00003_00001,M_00004_00001), aux178)
reify(gaceq(M_00002_00004,M_00003_00003), aux179)
reify(gaceq(M_00002_00010,M_00003_00010), aux180)
reify(gaceq(M_00007_00005,M_00006_00005), aux181)
div(M_00005_00004, 13, aux182)
div(M_00005_00005, 13, aux183)
div(M_00005_00006, 13, aux184)
reify(gaceq(M_00005_00001,M_00006_00001), aux185)
reify(gaceq(M_00007_00005,M_00006_00006), aux186)
div(M_00009_00005, 13, aux187)
div(M_00009_00003, 13, aux188)
div(M_00009_00001, 13, aux189)
reify(gaceq(M_00002_00007,M_00003_00007), aux190)
div(M_00004_00001, 13, aux191)
div(M_00004_00010, 13, aux192)
reify(gaceq(M_00004_00008,M_00005_00008), aux193)
reify(gaceq(M_00007_00004,M_00006_00005), aux194)
reify(gaceq(M_00007_00003,M_00008_00003), aux195)
reify(gaceq(M_00003_00010,M_00004_00009), aux196)
reify(gaceq(M_00007_00001,M_00008_00001), aux197)
reify(gaceq(M_00004_00005,M_00005_00005), aux198)
reify(gaceq(M_00007_00004,M_00006_00004), aux199)
gccweak([M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,35),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,32),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,38),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,20),w-literal(M_00002_00010,22),w-literal(M_00002_00011,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,20),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,17),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)})})
watched-or({watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux201,13,0),w-literal(aux35,1)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux162,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux202,13,0),w-literal(aux17,1)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux94,1),w-literal(aux180,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux203,13,0),gaceq(aux35,aux18)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux162,1),w-literal(aux94,1),w-literal(aux164,1),watched-or({modulo(aux204,13,0),gaceq(aux17,aux18)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux205,13,0),gaceq(aux34,aux35)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux162,1),w-literal(aux94,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux164,1),watched-or({modulo(aux206,13,0),gaceq(aux34,aux17)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux179,1),w-literal(aux89,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux207,13,0),w-literal(aux16,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux89,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux208,13,0),w-literal(aux32,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux209,13,0),gaceq(aux33,aux34)})}),watched-and({w-literal(M_00003_00011,12),modulo(aux210,13,0),w-literal(aux64,1),w-literal(aux157,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux89,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux190,1),w-literal(aux162,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux211,13,0),w-literal(aux33,1)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux157,1),w-literal(aux84,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux212,13,0),w-literal(aux32,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux162,1),w-literal(aux94,1),w-literal(aux180,1),gaceq(M_00002_00011,M_00003_00011)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux213,13,0),gaceq(aux32,aux33)})}),watched-and({w-literal(M_00003_00011,12),modulo(aux214,13,0),gaceq(M_00002_00002,M_00003_00001),w-literal(aux93,1),w-literal(aux179,1),w-literal(aux89,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux84,1),w-literal(aux88,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux215,13,0),gaceq(aux16,aux33)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux93,1),w-literal(aux179,1),w-literal(aux89,1),w-literal(aux22,1),w-literal(aux144,1),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux216,13,0),w-literal(aux16,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux88,1),w-literal(aux168,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux30,1),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux217,13,0),w-literal(aux34,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux168,1),w-literal(aux190,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux102,1),w-literal(aux41,1),w-literal(aux164,1),watched-or({modulo(aux218,13,0),gaceq(aux32,aux35)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,12),watched-or({w-literal(aux18,0),modulo(aux219,13,0)}),w-literal(aux64,1),w-literal(aux157,1),w-literal(aux84,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux190,1),w-literal(aux162,1),w-literal(aux94,1),w-literal(aux180,1)})})
watched-or({watched-and({w-literal(aux40,1),w-literal(aux147,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux65,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux220,13,0),gaceq(aux72,aux173)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux145,1),w-literal(aux65,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux221,13,0),gaceq(aux119,aux173)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux65,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux222,13,0),gaceq(aux173,aux175)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux223,13,0),gaceq(aux174,aux170)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux126,1),w-literal(aux58,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux224,13,0),gaceq(aux174,aux117)})}),watched-and({w-literal(aux178,1),w-literal(aux147,1),w-literal(aux73,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux225,13,0),gaceq(aux118,aux175)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux226,13,0),gaceq(aux175,aux174)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux73,1),w-literal(aux100,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux227,13,0),gaceq(aux119,aux174)})}),watched-and({w-literal(aux178,1),w-literal(aux123,1),w-literal(aux145,1),w-literal(aux65,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux228,13,0),gaceq(aux118,aux119)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux123,1),w-literal(aux145,1),w-literal(aux65,1),w-literal(aux106,1),w-literal(aux62,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux229,13,0),gaceq(aux72,aux118)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux100,1),w-literal(aux37,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux230,13,0),gaceq(aux173,aux170)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux37,1),w-literal(aux126,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux231,13,0),gaceq(aux175,aux171)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux126,1),w-literal(aux58,1),w-literal(aux148,1),w-literal(aux122,1),modulo(aux232,13,0)}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux126,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux233,13,0),gaceq(aux171,aux117)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux126,1),w-literal(aux58,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux234,13,0),gaceq(aux117,aux116)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux126,1),w-literal(aux148,1),w-literal(aux122,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux235,13,0),gaceq(aux171,aux71)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux126,1),w-literal(aux58,1),w-literal(aux148,1),w-literal(aux67,1),watched-or({modulo(aux236,13,0),gaceq(aux116,aux71)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux51,1),w-literal(aux19,1),w-literal(aux196,1),w-literal(aux67,1),watched-or({modulo(aux237,13,0),gaceq(aux170,aux171)})}),watched-and({w-literal(aux178,1),w-literal(aux40,1),w-literal(aux147,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux148,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux67,1),watched-or({modulo(aux238,13,0),gaceq(aux170,aux116)})})})
watched-or({watched-and({modulo(aux239,13,0),w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux79,1),w-literal(aux52,1),w-literal(aux193,1),w-literal(aux132,1)}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux79,1),w-literal(aux52,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux45,aux46),modulo(aux240,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux79,1),w-literal(aux52,1),w-literal(aux193,1),w-literal(aux53,1),watched-or({gaceq(aux46,aux192),modulo(aux241,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux79,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux150,aux45),modulo(aux242,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux79,1),w-literal(aux193,1),w-literal(aux132,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux150,aux192),modulo(aux243,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux154,aux150),modulo(aux244,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux198,1),w-literal(aux52,1),w-literal(aux193,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux53,1),watched-or({gaceq(aux154,aux46),modulo(aux245,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux133,1),w-literal(aux92,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux48,aux47),modulo(aux246,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux92,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux47,aux152),modulo(aux247,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux153,aux154),modulo(aux248,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux29,1),w-literal(aux79,1),w-literal(aux52,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux153,aux45),modulo(aux249,13,0)})}),watched-and({w-literal(aux120,1),w-literal(aux113,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux191,aux152),modulo(aux250,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux152,aux153),modulo(aux251,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux113,1),w-literal(aux29,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux48,aux153),modulo(aux252,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux133,1),w-literal(aux92,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux191,aux48),modulo(aux253,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux29,1),w-literal(aux198,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux96,1),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux47,aux154),modulo(aux254,13,0)})}),watched-and({w-literal(aux95,1),w-literal(aux120,1),w-literal(aux113,1),w-literal(aux198,1),w-literal(aux79,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux135,1),w-literal(aux140,1),w-literal(aux53,1),watched-or({gaceq(aux152,aux150),modulo(aux255,13,0)})})})
watched-or({watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux149,1),w-literal(aux121,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux256,13,0),gaceq(aux130,aux182)})}),watched-and({w-literal(aux134,1),w-literal(aux63,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux121,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux257,13,0),gaceq(aux75,aux182)})}),watched-and({w-literal(aux185,1),w-literal(aux63,1),w-literal(aux50,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux258,13,0),gaceq(aux129,aux183)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux50,1),w-literal(aux57,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux259,13,0),gaceq(aux130,aux184)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux131,1),w-literal(aux66,1),w-literal(aux125,1),modulo(aux260,13,0)}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux261,13,0),gaceq(aux184,aux127)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux131,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux262,13,0),gaceq(aux127,aux128)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux66,1),w-literal(aux125,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux263,13,0),gaceq(aux184,aux76)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux131,1),w-literal(aux66,1),w-literal(aux85,1),watched-or({modulo(aux264,13,0),gaceq(aux128,aux76)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux265,13,0),gaceq(aux183,aux184)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux50,1),w-literal(aux131,1),w-literal(aux66,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux85,1),watched-or({modulo(aux266,13,0),gaceq(aux183,aux128)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux124,1),w-literal(aux149,1),w-literal(aux121,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux267,13,0),gaceq(aux75,aux129)})}),watched-and({w-literal(aux185,1),w-literal(aux124,1),w-literal(aux149,1),w-literal(aux121,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux268,13,0),gaceq(aux129,aux130)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux121,1),w-literal(aux169,1),w-literal(aux31,1),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux269,13,0),gaceq(aux182,aux183)})}),watched-and({w-literal(aux185,1),w-literal(aux134,1),w-literal(aux63,1),w-literal(aux57,1),w-literal(aux131,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux109,1),w-literal(aux85,1),watched-or({modulo(aux270,13,0),gaceq(aux182,aux127)})})})
watched-or({watched-and({w-literal(aux97,1),w-literal(aux167,1),w-literal(aux156,1),w-literal(aux194,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux83,aux82),modulo(aux271,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux194,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux114,aux111),modulo(aux272,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux167,1),w-literal(aux156,1),w-literal(aux194,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux114,aux83),modulo(aux273,13,0)})}),watched-and({w-literal(aux97,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux61,1),w-literal(aux199,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux83,aux112),modulo(aux274,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux199,1),w-literal(aux181,1),w-literal(aux13,1),w-literal(aux166,1),modulo(aux275,13,0)}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux199,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux112,aux81),modulo(aux276,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux199,1),w-literal(aux181,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux81,aux80),modulo(aux277,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux199,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux166,1),watched-or({gaceq(aux112,aux115),modulo(aux278,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux199,1),w-literal(aux181,1),w-literal(aux13,1),w-literal(aux49,1),watched-or({gaceq(aux80,aux115),modulo(aux279,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),w-literal(aux194,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux111,aux112),modulo(aux280,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux61,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux181,1),w-literal(aux13,1),w-literal(aux49,1),watched-or({gaceq(aux111,aux80),modulo(aux281,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),w-literal(aux156,1),w-literal(aux194,1),w-literal(aux186,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux82,aux111),modulo(aux282,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux23,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux199,1),w-literal(aux181,1),w-literal(aux101,1),w-literal(aux49,1),watched-or({gaceq(aux82,aux81),modulo(aux283,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux284,13,0),gaceq(aux143,aux21)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux195,1),w-literal(aux165,1),w-literal(aux103,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux136,aux137)}),w-literal(aux197,1),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux177,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux143,aux139)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux195,1),w-literal(aux177,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux138,aux21)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux195,1),w-literal(aux172,1),w-literal(aux165,1),w-literal(aux176,1)}),watched-and({modulo(aux288,13,0),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux195,1),w-literal(aux172,1),w-literal(aux165,1),w-literal(aux103,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux137,aux138)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux172,1),w-literal(aux165,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux290,13,0),gaceq(aux20,aux143)}),w-literal(aux74,1),w-literal(aux195,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux177,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux291,13,0),gaceq(aux137,aux143)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux146,1),w-literal(aux177,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux292,13,0),gaceq(aux139,aux138)}),w-literal(aux197,1),w-literal(aux74,1),w-literal(aux195,1),w-literal(aux172,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux293,13,0),gaceq(aux20,aux136)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux177,1),w-literal(aux59,1),w-literal(aux176,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux136,aux139)}),w-literal(aux197,1),w-literal(aux195,1),w-literal(aux172,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux59,1),w-literal(aux176,1)})})
watched-or({watched-and({watched-or({gaceq(aux77,aux159),modulo(aux295,13,0)}),w-literal(aux163,1),w-literal(aux141,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux142,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux160,aux78),modulo(aux296,13,0)}),w-literal(aux151,1),w-literal(aux163,1),w-literal(aux141,1),w-literal(aux28,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux159,aux160),modulo(aux297,13,0)}),w-literal(aux151,1),w-literal(aux163,1),w-literal(aux141,1),w-literal(aux142,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux158,aux159),modulo(aux298,13,0)}),w-literal(aux151,1),w-literal(aux163,1),w-literal(aux60,1),w-literal(aux142,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux161,aux158),modulo(aux299,13,0)}),w-literal(aux151,1),w-literal(aux107,1),w-literal(aux60,1),w-literal(aux142,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux77,aux161),modulo(aux300,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux107,1),w-literal(aux60,1),w-literal(aux142,1),w-literal(aux155,1)}),watched-and({w-literal(aux151,1),w-literal(aux163,1),w-literal(aux141,1),w-literal(aux28,1),w-literal(aux108,1),modulo(aux301,13,0)}),watched-and({watched-or({gaceq(aux158,aux78),modulo(aux302,13,0)}),w-literal(aux151,1),w-literal(aux163,1),w-literal(aux28,1),w-literal(aux108,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux161,aux160),modulo(aux303,13,0)}),w-literal(aux151,1),w-literal(aux141,1),w-literal(aux28,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux155,1)})})
watched-or({watched-and({watched-or({modulo(aux304,13,0),gaceq(aux189,aux98)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux90,1),w-literal(aux91,1),w-literal(aux39,1)}),watched-and({modulo(aux305,13,0),w-literal(aux36,1),w-literal(aux90,1),w-literal(aux91,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux306,13,0),gaceq(aux189,aux99)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux43,1),w-literal(aux110,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux307,13,0),gaceq(aux99,aux187)}),w-literal(aux36,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux91,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux308,13,0),gaceq(aux99,aux188)}),w-literal(aux36,1),w-literal(aux43,1),w-literal(aux110,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux309,13,0),gaceq(aux188,aux98)}),w-literal(aux36,1),w-literal(aux90,1),w-literal(aux110,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux310,13,0),gaceq(aux98,aux187)}),w-literal(aux36,1),w-literal(aux90,1),w-literal(aux91,1),w-literal(aux39,1)})})
watched-or({watched-and({w-literal(aux69,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({gaceq(aux27,aux26),modulo(aux311,13,0)})}),watched-and({w-literal(aux69,1),w-literal(aux70,1),w-literal(aux68,1),watched-or({gaceq(aux26,aux24),modulo(aux312,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux87,1),w-literal(aux68,1),watched-or({gaceq(aux25,aux27),modulo(aux313,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux86,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux25,aux24),modulo(aux314,13,0)})}),watched-and({w-literal(aux69,1),w-literal(aux70,1),w-literal(aux86,1),modulo(aux315,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux105),modulo(aux316,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux55,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux105),modulo(aux317,13,0)}),w-literal(aux56,1),w-literal(aux55,1)}),watched-and({modulo(aux318,13,0),w-literal(aux56,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux200),modulo(aux319,13,0)})}),watched-and({modulo(aux320,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux201)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux201)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux202)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux202)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux203)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux203)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux204)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux204)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux205)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux205)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux206)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux206)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux207)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux207)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux208)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux208)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux209)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux209)
sumleq([M_00002_00004,-19],aux210)
sumgeq([M_00002_00004,-19],aux210)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux211)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux211)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux212)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux212)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux213)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux213)
sumleq([M_00002_00002,-19],aux214)
sumgeq([M_00002_00002,-19],aux214)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux215)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux215)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux216)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux216)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux217)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux217)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux218)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux218)
weightedsumleq([-1,1],[M_00002_00011,12],aux219)
weightedsumgeq([-1,1],[M_00002_00011,12],aux219)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux220)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux220)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux221)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux221)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux222)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux222)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux223)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux223)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux224)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux224)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux225)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux225)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux226)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux226)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux227)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux227)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux228)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux228)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux229)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux229)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux230)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux230)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumleq([-1,1],[M_00003_00011,-1],aux232)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux232)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux233)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux233)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux235)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux235)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux236)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux236)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux237)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux237)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux238)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux238)
weightedsumleq([-1,1],[M_00004_00010,-1],aux239)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux239)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux240)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux240)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux241)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux241)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux242)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux242)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux243)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux243)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux244)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux244)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux245)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux245)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux247)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux247)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux248)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux248)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux250)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux250)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux251)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux251)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux252)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux252)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux253)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux253)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux254)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux254)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux255)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux255)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux256)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux256)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux257)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux257)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux258)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux258)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumleq([1,-1],[-1,M_00005_00009],aux260)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux260)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux261)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux261)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux263)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux263)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux264)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux264)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux265)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux265)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux266)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux266)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux269)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux269)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux270)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux270)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux271)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux271)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux272)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux272)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux273)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux273)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux274)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux274)
weightedsumleq([1,-1],[-1,M_00006_00008],aux275)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux275)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux276)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux276)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux277)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux277)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux279)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux279)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux280)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux280)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux281)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux281)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux283)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux283)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux284)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux284)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux285)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux285)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux286)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux286)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux287)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux287)
weightedsumleq([-1,1],[M_00007_00007,-1],aux288)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux288)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux289)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux289)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux290)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux290)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux291)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux291)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux292)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux292)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux295)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux295)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux296)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux296)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux297)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux297)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux298)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux298)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux299)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux299)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux300)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux300)
weightedsumleq([-1,1],[M_00008_00006,-1],aux301)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux301)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux302)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux302)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux303)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux303)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux304)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux304)
weightedsumleq([1,-1],[-1,M_00009_00005],aux305)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux305)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux306)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux306)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux307)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux307)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux308)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux308)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux309)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux309)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux310)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux310)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux311)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux311)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux312)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux312)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux313)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux313)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux314)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux314)
weightedsumleq([-1,1],[M_00010_00004,-1],aux315)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux315)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux316)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux316)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux317)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux317)
weightedsumleq([-1,1],[M_00011_00003,-1],aux318)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux318)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux319)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux319)
weightedsumleq([-1,1],[M_00012_00002,-1],aux320)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux320)
**EOF**
