MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 221
# CSE_active_eliminated_expressions = 1323
# CSE_active_total_size = 663
**VARIABLES**
DISCRETE M_00002_00002 #
{32..33}
DISCRETE M_00002_00003 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{32..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{17..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00006 #
{4..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [4,4,13,13,17,17,19,20])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00002_00009 #
{20..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [20,20,22,22])
**VARIABLES**
DISCRETE M_00002_00010 #
{22..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00002_00011 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00001 #
{19..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [19,20,22,22,25,25,32,33])
**VARIABLES**
DISCRETE M_00003_00002 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00004 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00008 #
{20..35}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [20,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00003_00009 #
{20..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [20,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00010 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00011 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00003_00012 #
{13..41}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41])
**VARIABLES**
DISCRETE M_00004_00001 #
{17..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..35}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00008 #
{20..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [20,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00009 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00010 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00004_00011 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00008 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00009 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00005_00010 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00008 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00006_00009 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00007_00008 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00008_00007 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00009_00006 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00010_00005 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00011_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00011_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00011_00004 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00012_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00012_00003 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00013_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00013_00002 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
DISCRETE M_00014_00001 #
{2..43}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [2,2,4,4,13,13,17,17,19,20,22,22,25,25,32,33,35,35,38,38,41,41,43,43])
**VARIABLES**
BOOL aux13 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..2}
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..3}
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux20 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..3}
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010/13)
{1..3}
BOOL aux32 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
BOOL aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
DISCRETE aux35 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
DISCRETE aux36 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..2}
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux39 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux41 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux42 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux43 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux47 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux48 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux49 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux50 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
DISCRETE aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux55 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux56 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux57 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux58 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux59 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux60 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux61 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux63 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux66 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux68 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux74 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux76 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux77 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux79 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00012/13)
{1..3}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..2}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
{0..3}
BOOL aux84 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux85 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
BOOL aux88 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux93 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux94 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux95 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux98 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux99 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux100 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux101 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux102 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux106 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux107 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux108 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux109 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux110 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux115 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux116 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux123 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux126 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux129 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux130 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
BOOL aux131 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..3}
BOOL aux134 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..3}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux140 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux141 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux144 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux149 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux150 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux151 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux152 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux155 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux158 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux159 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux160 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux161 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux162 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux163 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux165 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux166 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux167 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux168 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux169 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux171 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux172 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux173 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux174 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux175 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux176 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux177 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux178 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux179 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
DISCRETE aux181 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux182 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux185 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux186 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux187 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux188 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux189 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux190 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux191 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux192 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux193 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux194 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux195 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux196 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux197 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux198 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux199 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux200 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux201 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..3}
DISCRETE aux202 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux203 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
DISCRETE aux204 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{1..2}
DISCRETE aux205 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux206 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux207 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux208 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux209 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux210 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux211 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux212 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux213 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux214 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux215 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux216 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux217 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux218 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux219 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux220 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux221 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux222 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux223 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux224 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux225 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux226 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..2}
DISCRETE aux227 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00011/13)
{0..3}
BOOL aux228 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux229 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux230 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux231 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux232 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux233 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux234 #
{0..3}
DISCRETE aux235 #( - M_00002_00009 + 41)
{19..21}
**CONSTRAINTS**
w-inintervalset(aux235, [19,19,21,21])
**VARIABLES**
DISCRETE aux236 #( - M_00002_00002 + M_00002_00005)
{-16..2}
**CONSTRAINTS**
w-inintervalset(aux236, [-16,-10,-8,-7,-1,2])
**VARIABLES**
DISCRETE aux237 #( - M_00002_00005 + M_00002_00006)
{-28..-12}
**CONSTRAINTS**
w-inintervalset(aux237, [-28,-28,-22,-18,-16,-12])
**VARIABLES**
DISCRETE aux238 #( - M_00002_00003 + M_00002_00006)
{-34..-5}
**CONSTRAINTS**
w-inintervalset(aux238, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,-12,-9,-5])
**VARIABLES**
DISCRETE aux239 #( - M_00002_00002 + M_00002_00003)
{-16..5}
**CONSTRAINTS**
w-inintervalset(aux239, [-16,-10,-8,-7,-1,3,5,5])
**VARIABLES**
DISCRETE aux240 #( - M_00002_00004 + M_00002_00007)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux240, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,-10,-8,-5,-3,3])
**VARIABLES**
DISCRETE aux241 #( - M_00002_00011 + 41)
{-2..39}
**CONSTRAINTS**
w-inintervalset(aux241, [-2,-2,0,0,3,3,6,6,8,9,16,16,19,19,21,22,24,24,28,28,37,37,39,39])
**VARIABLES**
DISCRETE aux242 #( - M_00002_00005 + M_00002_00008)
{-15..3}
**CONSTRAINTS**
w-inintervalset(aux242, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3])
**VARIABLES**
DISCRETE aux243 #(M_00002_00004 + -19)
{13..19}
**CONSTRAINTS**
w-inintervalset(aux243, [13,14,16,16,19,19])
**VARIABLES**
DISCRETE aux244 #( - M_00002_00010 + 13)
{-30..-9}
**CONSTRAINTS**
w-inintervalset(aux244, [-30,-30,-28,-28,-25,-25,-22,-22,-20,-19,-12,-12,-9,-9])
**VARIABLES**
DISCRETE aux245 #( - M_00002_00008 + M_00002_00009)
{-15..2}
**CONSTRAINTS**
w-inintervalset(aux245, [-15,-15,-13,-10,-5,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux246 #( - M_00002_00009 + M_00002_00010)
{2..21}
**CONSTRAINTS**
w-inintervalset(aux246, [2,3,5,5,10,13,15,16,18,19,21,21])
**VARIABLES**
DISCRETE aux247 #( - M_00002_00008 + M_00002_00011)
{-33..8}
**CONSTRAINTS**
w-inintervalset(aux247, [-33,-33,-31,-28,-23,-18,-16,-5,-3,3,5,8])
**VARIABLES**
DISCRETE aux248 #( - M_00002_00010 + M_00002_00011)
{-41..21}
**CONSTRAINTS**
w-inintervalset(aux248, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,-18,-16,-5,-3,3,5,11,13,13,16,16,18,19,21,21])
**VARIABLES**
DISCRETE aux249 #( - M_00002_00007 + M_00002_00008)
{-15..31}
**CONSTRAINTS**
w-inintervalset(aux249, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux250 #( - M_00002_00007 + M_00002_00010)
{8..39}
**CONSTRAINTS**
w-inintervalset(aux250, [8,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux251 #( - M_00002_00003 + M_00002_00004)
{-6..21}
**CONSTRAINTS**
w-inintervalset(aux251, [-6,-5,-3,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux252 #( - M_00002_00004 + M_00002_00005)
{-21..-3}
**CONSTRAINTS**
w-inintervalset(aux252, [-21,-21,-19,-18,-16,-10,-8,-5,-3,-3])
**VARIABLES**
DISCRETE aux253 #( - M_00002_00006 + M_00002_00007)
{-16..31}
**CONSTRAINTS**
w-inintervalset(aux253, [-16,-15,-13,-13,-9,-9,-7,-6,-4,9,12,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux254 #( - M_00002_00006 + M_00002_00009)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux254, [2,3,5,5,7,7,9,9,16,16,18,18])
**VARIABLES**
DISCRETE aux255 #(M_00002_00002 + -19)
{13..14}
DISCRETE aux256 #( - M_00003_00001 + M_00003_00004)
{-16..19}
**CONSTRAINTS**
w-inintervalset(aux256, [-16,-10,-8,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux257 #( - M_00003_00003 + M_00003_00006)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux257, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux258 #( - M_00003_00006 + M_00003_00007)
{-18..31}
**CONSTRAINTS**
w-inintervalset(aux258, [-18,-18,-16,16,18,26,28,31])
**VARIABLES**
DISCRETE aux259 #( - M_00003_00001 + M_00003_00002)
{-7..19}
**CONSTRAINTS**
w-inintervalset(aux259, [-7,-5,-3,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux260 #( - M_00003_00004 + M_00003_00007)
{-34..18}
**CONSTRAINTS**
w-inintervalset(aux260, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,3,5,16,18,18])
**VARIABLES**
DISCRETE aux261 #( - M_00003_00003 + M_00003_00004)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux261, [-21,-21,-19,-18,-16,-10,-8,-5,-3,16,18,22,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux262 #( - M_00003_00002 + M_00003_00003)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux262, [-29,-28,-25,-25,-22,-18,-16,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux263 #( - M_00003_00005 + M_00003_00008)
{-15..18}
**CONSTRAINTS**
w-inintervalset(aux263, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,16,18,18])
**VARIABLES**
DISCRETE aux264 #( - M_00003_00006 + M_00003_00009)
{-13..39}
**CONSTRAINTS**
w-inintervalset(aux264, [-13,-10,-8,-7,-5,-5,-3,3,5,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux265 #( - M_00003_00012 + -1)
{-42..-14}
**CONSTRAINTS**
w-inintervalset(aux265, [-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14])
**VARIABLES**
DISCRETE aux266 #( - M_00003_00009 + M_00003_00010)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux266, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,-18,-16,-5,-3,3,5,13,15,16,18,19,21,21,23,23])
**VARIABLES**
DISCRETE aux267 #( - M_00003_00010 + M_00003_00011)
{-11..39}
**CONSTRAINTS**
w-inintervalset(aux267, [-11,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux268 #( - M_00003_00009 + M_00003_00012)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux268, [-30,-30,-28,-28,-26,-18,-16,-5,-3,3,5,13,15,16,18,19,21,21])
**VARIABLES**
DISCRETE aux269 #( - M_00003_00011 + M_00003_00012)
{-28..39}
**CONSTRAINTS**
w-inintervalset(aux269, [-28,-28,-26,-18,-16,25,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux270 #( - M_00003_00008 + M_00003_00009)
{-15..23}
**CONSTRAINTS**
w-inintervalset(aux270, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,13,15,16,18,19,21,21,23,23])
**VARIABLES**
DISCRETE aux271 #( - M_00003_00008 + M_00003_00011)
{-33..21}
**CONSTRAINTS**
w-inintervalset(aux271, [-33,-33,-31,-28,-23,-18,-16,-5,-3,3,5,13,15,16,18,19,21,21])
**VARIABLES**
DISCRETE aux272 #( - M_00003_00002 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux272, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,3])
**VARIABLES**
DISCRETE aux273 #( - M_00003_00004 + M_00003_00005)
{-34..3}
**CONSTRAINTS**
w-inintervalset(aux273, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,3])
**VARIABLES**
DISCRETE aux274 #( - M_00003_00005 + M_00003_00006)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux274, [-31,-31,-29,-28,-22,-18,-16,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux275 #( - M_00003_00007 + M_00003_00008)
{-23..31}
**CONSTRAINTS**
w-inintervalset(aux275, [-23,-23,-21,-21,-19,-18,-16,-15,-13,-5,-3,3,5,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux276 #( - M_00003_00007 + M_00003_00010)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux276, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux277 #( - M_00004_00002 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux277, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux278 #( - M_00004_00005 + M_00004_00006)
{-31..39}
**CONSTRAINTS**
w-inintervalset(aux278, [-31,-31,-29,-28,-22,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux279 #( - M_00004_00003 + M_00004_00006)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux279, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux280 #( - M_00004_00002 + M_00004_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux280, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux281 #( - M_00004_00001 + M_00004_00002)
{-29..21}
**CONSTRAINTS**
w-inintervalset(aux281, [-29,-28,-25,-25,-22,-18,-16,3,5,8,10,16,18,19,21,21])
**VARIABLES**
DISCRETE aux282 #( - M_00004_00004 + M_00004_00007)
{-36..31}
**CONSTRAINTS**
w-inintervalset(aux282, [-36,-36,-34,-33,-31,-28,-25,-25,-23,16,18,26,28,31])
**VARIABLES**
DISCRETE aux283 #( - M_00004_00005 + M_00004_00008)
{-15..39}
**CONSTRAINTS**
w-inintervalset(aux283, [-15,-15,-13,-10,-8,-7,-5,-5,-3,3,5,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux284 #( - M_00004_00011 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux284, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux285 #( - M_00004_00009 + M_00004_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux285, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux286 #( - M_00004_00010 + M_00004_00011)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux286, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux287 #( - M_00004_00008 + M_00004_00009)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux287, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,-18,-16,-5,-3,3,5,13,15,16,18,19,21,21,23,23])
**VARIABLES**
DISCRETE aux288 #( - M_00004_00008 + M_00004_00011)
{-33..23}
**CONSTRAINTS**
w-inintervalset(aux288, [-33,-33,-31,-28,-26,-18,-16,-5,-3,3,5,13,15,16,18,19,21,21,23,23])
**VARIABLES**
DISCRETE aux289 #( - M_00004_00007 + M_00004_00008)
{-23..39}
**CONSTRAINTS**
w-inintervalset(aux289, [-23,-23,-21,-21,-19,-18,-16,-15,-13,-5,-3,3,5,16,18,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux290 #( - M_00004_00007 + M_00004_00010)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux290, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux291 #( - M_00004_00001 + M_00004_00004)
{-34..19}
**CONSTRAINTS**
w-inintervalset(aux291, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,3,5,8,10,16,18,19])
**VARIABLES**
DISCRETE aux292 #( - M_00004_00003 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux292, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux293 #( - M_00004_00004 + M_00004_00005)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux293, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,28,29,31,31])
**VARIABLES**
DISCRETE aux294 #( - M_00004_00006 + M_00004_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux294, [-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux295 #( - M_00004_00006 + M_00004_00009)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux295, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux296 #( - M_00005_00003 + M_00005_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux296, [-39,-39,-37,-37,-34,-34,-31,-28,-26,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux297 #( - M_00005_00005 + M_00005_00006)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux297, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux298 #( - M_00005_00005 + M_00005_00008)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux298, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux299 #( - M_00005_00001 + M_00005_00004)
{-34..31}
**CONSTRAINTS**
w-inintervalset(aux299, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,26,28,31])
**VARIABLES**
DISCRETE aux300 #( - M_00005_00004 + M_00005_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux300, [-39,-39,-37,-37,-34,-34,-31,-28,-26,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux301 #( - M_00005_00002 + M_00005_00005)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux301, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux302 #( - M_00005_00001 + M_00005_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux302, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,22,25,25,28,29,31,31,34,34])
**VARIABLES**
DISCRETE aux303 #( - M_00005_00003 + M_00005_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux303, [-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux304 #( - M_00005_00004 + M_00005_00007)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux304, [-36,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux305 #(-1 - M_00005_00010)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux305, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux306 #( - M_00005_00007 + M_00005_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux306, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux307 #( - M_00005_00008 + M_00005_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux307, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux308 #( - M_00005_00007 + M_00005_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux308, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux309 #( - M_00005_00009 + M_00005_00010)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux309, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux310 #( - M_00005_00006 + M_00005_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux310, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux311 #( - M_00005_00006 + M_00005_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux311, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux312 #( - M_00005_00002 + M_00005_00003)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux312, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux313 #( - M_00006_00002 + M_00006_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux313, [-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux314 #( - M_00006_00003 + M_00006_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux314, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux315 #( - M_00006_00001 + M_00006_00004)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux315, [-36,-36,-34,-33,-31,-28,-25,-25,-23,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux316 #(-1 - M_00006_00009)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux316, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux317 #( - M_00006_00006 + M_00006_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux317, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux318 #( - M_00006_00007 + M_00006_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux318, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux319 #( - M_00006_00006 + M_00006_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux319, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux320 #( - M_00006_00008 + M_00006_00009)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux320, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux321 #( - M_00006_00005 + M_00006_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux321, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux322 #( - M_00006_00005 + M_00006_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux322, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux323 #( - M_00006_00004 + M_00006_00005)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux323, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux324 #( - M_00006_00004 + M_00006_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux324, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux325 #( - M_00006_00001 + M_00006_00002)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux325, [-34,-34,-31,-31,-29,-28,-25,-25,-22,-18,-16,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux326 #( - M_00006_00003 + M_00006_00004)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux326, [-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux327 #( - M_00006_00002 + M_00006_00005)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux327, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,16,18,26,28,31,34,34,37,37,39,39])
**VARIABLES**
DISCRETE aux328 #( - M_00007_00007 + M_00007_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux328, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux329 #( - M_00007_00005 + M_00007_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux329, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux330 #( - M_00007_00008 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux330, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux331 #( - M_00007_00001 + M_00007_00004)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux331, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux332 #( - M_00007_00003 + M_00007_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux332, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux333 #( - M_00007_00002 + M_00007_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux333, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux334 #( - M_00007_00004 + M_00007_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux334, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux335 #( - M_00007_00005 + M_00007_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux335, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux336 #( - M_00007_00003 + M_00007_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux336, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux337 #( - M_00007_00001 + M_00007_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux337, [-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux338 #( - M_00007_00002 + M_00007_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux338, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux339 #( - M_00007_00006 + M_00007_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux339, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux340 #( - M_00007_00004 + M_00007_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux340, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux341 #( - M_00008_00007 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux341, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux342 #( - M_00008_00002 + M_00008_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux342, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux343 #( - M_00008_00003 + M_00008_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux343, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux344 #( - M_00008_00004 + M_00008_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux344, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux345 #( - M_00008_00001 + M_00008_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux345, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux346 #( - M_00008_00005 + M_00008_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux346, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux347 #( - M_00008_00006 + M_00008_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux347, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux348 #( - M_00008_00002 + M_00008_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux348, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux349 #( - M_00008_00003 + M_00008_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux349, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux350 #( - M_00008_00004 + M_00008_00007)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux350, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux351 #( - M_00008_00001 + M_00008_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux351, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux352 #( - M_00009_00004 + M_00009_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux352, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux353 #( - M_00009_00001 + M_00009_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux353, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux354 #( - M_00009_00005 + M_00009_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux354, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux355 #( - M_00009_00002 + M_00009_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux355, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux356 #( - M_00009_00003 + M_00009_00006)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux356, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux357 #( - M_00009_00001 + M_00009_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux357, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux358 #(-1 - M_00009_00006)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux358, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux359 #( - M_00009_00002 + M_00009_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux359, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux360 #( - M_00009_00003 + M_00009_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux360, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux361 #( - M_00010_00003 + M_00010_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux361, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux362 #( - M_00010_00004 + M_00010_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux362, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux363 #( - M_00010_00002 + M_00010_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux363, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux364 #( - M_00010_00002 + M_00010_00005)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux364, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux365 #( - M_00010_00001 + M_00010_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux365, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux366 #( - M_00010_00001 + M_00010_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux366, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux367 #( - M_00010_00005 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux367, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux368 #( - M_00011_00002 + M_00011_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux368, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux369 #( - M_00011_00003 + M_00011_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux369, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux370 #( - M_00011_00004 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux370, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux371 #( - M_00011_00001 + M_00011_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux371, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux372 #( - M_00011_00001 + M_00011_00004)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux372, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux373 #( - M_00012_00001 + M_00012_00002)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux373, [-41,-41,-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39,41,41])
**VARIABLES**
DISCRETE aux374 #( - M_00012_00002 + M_00012_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux374, [-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
DISCRETE aux375 #( - M_00012_00003 + -1)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux375, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux376 #(-1 - M_00013_00002)
{-44..-3}
**CONSTRAINTS**
w-inintervalset(aux376, [-44,-44,-42,-42,-39,-39,-36,-36,-34,-33,-26,-26,-23,-23,-21,-20,-18,-18,-14,-14,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux377 #( - M_00013_00001 + M_00013_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux377, [-39,-39,-37,-36,-34,-33,-31,-28,-26,26,28,31,33,34,36,37,39,39])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[19, 33, 25, 38, 32, 17, 4, 35, 20, 22, 43, 2, 41, 13]
**SEARCH**
PRINT[[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux234)
reify(gaceq(M_00004_00006,M_00005_00006), aux13)
reify(gaceq(M_00007_00007,M_00006_00007), aux14)
div(M_00002_00009, 13, 1)
div(M_00002_00004, 13, 2)
div(M_00002_00003, 13, aux17)
div(M_00002_00011, 13, aux18)
reify(gaceq(M_00007_00008,M_00006_00009), aux19)
reify(gaceq(M_00003_00009,M_00004_00008), aux20)
div(M_00007_00001, 13, aux21)
div(M_00007_00008, 13, aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00004_00007,M_00005_00007), aux24)
div(M_00010_00005, 13, aux25)
div(M_00010_00001, 13, aux26)
div(M_00010_00003, 13, aux27)
reify(gaceq(M_00008_00005,M_00009_00005), aux28)
div(M_00012_00002, 13, aux29)
reify(gaceq(M_00002_00008,M_00003_00007), aux30)
div(M_00002_00010, 13, aux31)
reify(gaceq(M_00005_00007,M_00006_00006), aux32)
div(M_00002_00005, 13, aux33)
div(M_00002_00006, 13, aux34)
div(M_00002_00007, 13, aux35)
div(M_00002_00008, 13, aux36)
reify(gaceq(M_00010_00005,M_00011_00004), aux37)
reify(gaceq(M_00010_00003,M_00009_00003), aux38)
reify(gaceq(M_00007_00001,M_00008_00001), aux39)
reify(gaceq(M_00004_00005,M_00005_00004), aux40)
reify(gaceq(M_00010_00004,M_00009_00005), aux41)
reify(gaceq(M_00005_00001,M_00006_00001), aux42)
reify(gaceq(M_00002_00010,M_00003_00009), aux43)
reify(gaceq(M_00002_00008,M_00003_00008), aux44)
reify(gaceq(M_00010_00005,M_00009_00005), aux45)
reify(gaceq(M_00010_00002,M_00009_00003), aux46)
reify(gaceq(M_00003_00002,M_00004_00002), aux47)
reify(gaceq(M_00004_00006,M_00005_00005), aux48)
reify(gaceq(M_00010_00001,M_00009_00001), aux49)
reify(gaceq(M_00004_00001,M_00005_00001), aux50)
div(M_00004_00009, 13, aux51)
div(M_00004_00003, 13, aux52)
div(M_00004_00002, 13, aux53)
div(M_00004_00010, 13, aux54)
reify(gaceq(M_00007_00007,M_00006_00008), aux55)
reify(gaceq(M_00007_00002,M_00008_00002), aux56)
reify(gaceq(M_00004_00002,M_00005_00002), aux57)
reify(gaceq(M_00010_00001,M_00011_00001), aux58)
reify(gaceq(M_00003_00008,M_00004_00007), aux59)
reify(gaceq(M_00008_00002,M_00009_00002), aux60)
reify(gaceq(M_00004_00010,M_00005_00009), aux61)
div(M_00002_00002, 13, 2)
reify(gaceq(M_00004_00008,M_00005_00008), aux63)
reify(gaceq(M_00011_00003,M_00012_00002), aux64)
reify(gaceq(M_00011_00003,M_00012_00003), aux65)
reify(gaceq(M_00007_00006,M_00008_00005), aux66)
reify(gaceq(M_00008_00004,M_00009_00003), aux67)
reify(gaceq(M_00003_00007,M_00004_00006), aux68)
reify(gaceq(M_00003_00009,M_00004_00009), aux69)
reify(gaceq(M_00003_00005,M_00004_00004), aux70)
reify(gaceq(M_00011_00002,M_00012_00002), aux71)
reify(gaceq(M_00011_00001,M_00012_00001), aux72)
reify(gaceq(M_00011_00004,M_00012_00003), aux73)
reify(gaceq(M_00005_00008,M_00006_00008), aux74)
div(M_00008_00004, 13, aux75)
reify(gaceq(M_00002_00003,M_00003_00003), aux76)
reify(gaceq(M_00003_00011,M_00004_00010), aux77)
reify(gaceq(M_00010_00004,M_00011_00003), aux78)
reify(gaceq(M_00002_00006,M_00003_00006), aux79)
div(M_00003_00012, 13, aux80)
div(M_00003_00001, 13, aux81)
div(M_00005_00001, 13, aux82)
div(M_00005_00010, 13, aux83)
reify(gaceq(M_00003_00004,M_00004_00004), aux84)
reify(gaceq(M_00007_00001,M_00006_00001), aux85)
div(M_00008_00001, 13, aux86)
div(M_00008_00007, 13, aux87)
reify(gaceq(M_00003_00008,M_00004_00008), aux88)
div(M_00006_00008, 13, aux89)
div(M_00006_00007, 13, aux90)
div(M_00006_00003, 13, aux91)
div(M_00006_00002, 13, aux92)
reify(gaceq(M_00003_00012,M_00004_00011), aux93)
reify(gaceq(M_00005_00002,M_00006_00002), aux94)
reify(gaceq(M_00005_00009,M_00006_00008), aux95)
reify(gaceq(M_00010_00003,M_00011_00002), aux96)
reify(gaceq(M_00010_00004,M_00011_00004), aux97)
reify(gaceq(M_00005_00010,M_00006_00009), aux98)
reify(gaceq(M_00010_00002,M_00011_00002), aux99)
reify(gaceq(M_00010_00003,M_00011_00003), aux100)
reify(gaceq(M_00002_00005,M_00003_00004), aux101)
reify(gaceq(M_00010_00004,M_00009_00004), aux102)
reify(gaceq(M_00004_00004,M_00005_00003), aux103)
reify(gaceq(M_00002_00003,M_00003_00002), aux104)
reify(gaceq(M_00002_00011,M_00003_00011), aux105)
reify(gaceq(M_00002_00009,M_00003_00009), aux106)
reify(gaceq(M_00002_00002,M_00003_00002), aux107)
reify(gaceq(M_00004_00007,M_00005_00006), aux108)
reify(gaceq(M_00007_00003,M_00006_00003), aux109)
reify(gaceq(M_00005_00003,M_00006_00003), aux110)
div(M_00009_00005, 13, aux111)
div(M_00009_00003, 13, aux112)
div(M_00009_00004, 13, aux113)
div(M_00009_00002, 13, aux114)
reify(gaceq(M_00007_00006,M_00006_00007), aux115)
reify(gaceq(M_00002_00009,M_00003_00008), aux116)
reify(gaceq(M_00007_00003,M_00008_00002), aux117)
reify(gaceq(M_00007_00007,M_00008_00007), aux118)
div(M_00011_00001, 13, aux119)
div(M_00011_00002, 13, aux120)
div(M_00011_00003, 13, aux121)
div(M_00011_00004, 13, aux122)
reify(gaceq(M_00003_00006,M_00004_00005), aux123)
reify(gaceq(M_00008_00006,M_00009_00006), aux124)
reify(gaceq(M_00008_00003,M_00009_00002), aux125)
reify(gaceq(M_00005_00008,M_00006_00007), aux126)
reify(gaceq(M_00010_00003,M_00009_00004), aux127)
div(M_00006_00004, 13, aux128)
div(M_00006_00005, 13, aux129)
div(M_00006_00006, 13, aux130)
reify(gaceq(M_00002_00007,M_00003_00007), aux131)
div(M_00006_00001, 13, aux132)
div(M_00006_00009, 13, aux133)
reify(gaceq(M_00003_00007,M_00004_00007), aux134)
div(M_00003_00010, 13, aux135)
div(M_00003_00011, 13, aux136)
div(M_00003_00002, 13, aux137)
div(M_00003_00003, 13, aux138)
reify(gaceq(M_00005_00005,M_00006_00004), aux139)
reify(gaceq(M_00003_00005,M_00004_00005), aux140)
reify(gaceq(M_00010_00002,M_00009_00002), aux141)
reify(gaceq(M_00003_00011,M_00004_00011), aux142)
reify(gaceq(M_00003_00003,M_00004_00002), aux143)
reify(gaceq(M_00004_00005,M_00005_00005), aux144)
reify(gaceq(M_00005_00003,M_00006_00002), aux145)
reify(gaceq(M_00005_00009,M_00006_00009), aux146)
div(M_00010_00004, 13, aux147)
div(M_00010_00002, 13, aux148)
reify(gaceq(M_00005_00006,M_00006_00006), aux149)
reify(gaceq(M_00008_00003,M_00009_00003), aux150)
reify(gaceq(M_00003_00001,M_00004_00001), aux151)
div(M_00005_00009, 13, aux152)
div(M_00005_00008, 13, aux153)
div(M_00005_00002, 13, aux154)
div(M_00005_00003, 13, aux155)
reify(gaceq(M_00004_00010,M_00005_00010), aux156)
reify(gaceq(M_00004_00003,M_00005_00002), aux157)
reify(gaceq(M_00005_00005,M_00006_00005), aux158)
reify(gaceq(M_00005_00007,M_00006_00007), aux159)
reify(gaceq(M_00002_00004,M_00003_00004), aux160)
reify(gaceq(M_00004_00008,M_00005_00007), aux161)
reify(gaceq(M_00007_00003,M_00008_00003), aux162)
div(M_00007_00002, 13, aux163)
div(M_00007_00003, 13, aux164)
div(M_00007_00006, 13, aux165)
div(M_00007_00007, 13, aux166)
reify(gaceq(M_00004_00009,M_00005_00008), aux167)
reify(gaceq(M_00008_00004,M_00009_00004), aux168)
reify(gaceq(M_00008_00005,M_00009_00004), aux169)
reify(gaceq(M_00003_00010,M_00004_00010), aux170)
div(M_00007_00004, 13, aux171)
div(M_00007_00005, 13, aux172)
reify(gaceq(M_00004_00011,M_00005_00010), aux173)
reify(gaceq(M_00007_00004,M_00006_00004), aux174)
reify(gaceq(M_00002_00007,M_00003_00006), aux175)
reify(gaceq(M_00003_00004,M_00004_00003), aux176)
reify(gaceq(M_00007_00004,M_00008_00003), aux177)
reify(gaceq(M_00010_00005,M_00009_00006), aux178)
reify(gaceq(M_00005_00004,M_00006_00003), aux179)
div(M_00004_00007, 13, aux180)
div(M_00004_00008, 13, aux181)
div(M_00004_00004, 13, aux182)
div(M_00004_00005, 13, aux183)
div(M_00004_00006, 13, aux184)
reify(gaceq(M_00004_00004,M_00005_00004), aux185)
reify(gaceq(M_00005_00004,M_00006_00004), aux186)
reify(gaceq(M_00008_00006,M_00009_00005), aux187)
reify(gaceq(M_00007_00003,M_00006_00004), aux188)
reify(gaceq(M_00007_00004,M_00008_00004), aux189)
reify(gaceq(M_00007_00005,M_00006_00005), aux190)
div(M_00008_00003, 13, aux191)
div(M_00008_00005, 13, aux192)
div(M_00008_00006, 13, aux193)
div(M_00008_00002, 13, aux194)
reify(gaceq(M_00007_00002,M_00006_00002), aux195)
reify(gaceq(M_00002_00011,M_00003_00010), aux196)
reify(gaceq(M_00007_00008,M_00006_00008), aux197)
reify(gaceq(M_00007_00002,M_00006_00003), aux198)
reify(gaceq(M_00007_00006,M_00008_00006), aux199)
reify(gaceq(M_00005_00006,M_00006_00005), aux200)
div(M_00003_00009, 13, aux201)
div(M_00003_00007, 13, aux202)
div(M_00003_00008, 13, aux203)
div(M_00003_00004, 13, aux204)
div(M_00003_00006, 13, aux205)
div(M_00003_00005, 13, aux206)
reify(gaceq(M_00007_00007,M_00008_00006), aux207)
reify(gaceq(M_00008_00001,M_00009_00001), aux208)
reify(gaceq(M_00007_00006,M_00006_00006), aux209)
reify(gaceq(M_00004_00003,M_00005_00003), aux210)
reify(gaceq(M_00007_00005,M_00008_00004), aux211)
reify(gaceq(M_00007_00005,M_00008_00005), aux212)
reify(gaceq(M_00002_00004,M_00003_00003), aux213)
reify(gaceq(M_00002_00010,M_00003_00010), aux214)
reify(gaceq(M_00012_00001,M_00013_00001), aux215)
reify(gaceq(M_00012_00003,M_00013_00002), aux216)
div(M_00005_00004, 13, aux217)
div(M_00005_00005, 13, aux218)
div(M_00005_00006, 13, aux219)
div(M_00005_00007, 13, aux220)
reify(gaceq(M_00007_00008,M_00008_00007), aux221)
reify(gaceq(M_00007_00005,M_00006_00006), aux222)
div(M_00009_00006, 13, aux223)
div(M_00009_00001, 13, aux224)
reify(gaceq(M_00008_00007,M_00009_00006), aux225)
div(M_00004_00001, 13, aux226)
div(M_00004_00011, 13, aux227)
reify(gaceq(M_00004_00009,M_00005_00009), aux228)
reify(gaceq(M_00007_00004,M_00006_00005), aux229)
reify(gaceq(M_00002_00005,M_00003_00005), aux230)
reify(gaceq(M_00003_00010,M_00004_00009), aux231)
reify(gaceq(M_00003_00003,M_00004_00003), aux232)
reify(gaceq(M_00003_00006,M_00004_00006), aux233)
gccweak([M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,35),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,32),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,38),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,20),w-literal(M_00002_00010,22),w-literal(M_00002_00011,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,17),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,20),w-literal(M_00002_00007,4),w-literal(M_00002_00008,35),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,17),w-literal(M_00002_00004,38),w-literal(M_00002_00005,32),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)}),watched-and({w-literal(M_00002_00002,33),w-literal(M_00002_00003,25),w-literal(M_00002_00004,32),w-literal(M_00002_00005,17),w-literal(M_00002_00006,4),w-literal(M_00002_00007,35),w-literal(M_00002_00008,20),w-literal(M_00002_00009,22),w-literal(M_00002_00011,2),w-literal(M_00002_00010,43)})})
watched-or({watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00009,41),w-literal(M_00003_00012,13),modulo(aux235,13,0),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux44,1),w-literal(aux214,1),w-literal(aux105,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux76,1),w-literal(aux160,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux236,13,0),w-literal(aux33,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux237,13,0),gaceq(aux33,aux34)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux160,1),w-literal(aux230,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux238,13,0),gaceq(aux17,aux34)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux104,1),w-literal(aux213,1),w-literal(aux101,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux239,13,0),w-literal(aux17,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux230,1),w-literal(aux79,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux240,13,0),w-literal(aux35,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),watched-or({w-literal(aux18,3),modulo(aux241,13,0)}),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux44,1),w-literal(aux106,1),w-literal(aux214,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux79,1),w-literal(aux131,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux242,13,0),gaceq(aux33,aux36)})}),watched-and({w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),modulo(aux243,13,0),w-literal(aux107,1),w-literal(aux76,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux101,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00010,13),w-literal(M_00003_00012,41),watched-or({w-literal(aux31,1),modulo(aux244,13,0)}),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux44,1),w-literal(aux106,1),w-literal(aux105,1)}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux245,13,0),w-literal(aux36,1)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux44,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux246,13,0),w-literal(aux31,1)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux106,1),w-literal(aux214,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux247,13,0),gaceq(aux36,aux18)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux131,1),w-literal(aux44,1),w-literal(aux106,1),w-literal(aux196,1),watched-or({modulo(aux248,13,0),gaceq(aux31,aux18)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux249,13,0),gaceq(aux35,aux36)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux79,1),w-literal(aux44,1),w-literal(aux106,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux196,1),watched-or({modulo(aux250,13,0),gaceq(aux35,aux31)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux213,1),w-literal(aux101,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux251,13,0),w-literal(aux17,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux101,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux252,13,0),w-literal(aux33,2)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux253,13,0),gaceq(aux34,aux35)})}),watched-and({w-literal(M_00003_00001,19),w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),w-literal(aux107,1),w-literal(aux76,1),w-literal(aux160,1),w-literal(aux230,1),w-literal(aux131,1),w-literal(aux44,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux43,1),w-literal(aux196,1),watched-or({modulo(aux254,13,0),w-literal(aux34,1)})}),watched-and({w-literal(M_00003_00011,41),w-literal(M_00003_00012,13),modulo(aux255,13,0),gaceq(M_00002_00002,M_00003_00001),w-literal(aux104,1),w-literal(aux213,1),w-literal(aux101,1),w-literal(aux23,1),w-literal(aux175,1),w-literal(aux30,1),w-literal(aux116,1),w-literal(aux43,1),w-literal(aux196,1)})})
watched-or({watched-and({w-literal(aux47,1),w-literal(aux232,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux256,13,0),gaceq(aux81,aux204)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux84,1),w-literal(aux140,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux257,13,0),gaceq(aux138,aux205)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux258,13,0),gaceq(aux205,aux202)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux143,1),w-literal(aux176,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux259,13,0),gaceq(aux81,aux137)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux140,1),w-literal(aux233,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux260,13,0),gaceq(aux204,aux202)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux176,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux261,13,0),gaceq(aux138,aux204)})}),watched-and({w-literal(aux151,1),w-literal(aux143,1),w-literal(aux176,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux262,13,0),gaceq(aux137,aux138)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux233,1),w-literal(aux134,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux263,13,0),gaceq(aux206,aux203)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux134,1),w-literal(aux88,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux264,13,0),gaceq(aux205,aux201)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux170,1),w-literal(aux142,1),modulo(aux265,13,0)}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux88,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux266,13,0),gaceq(aux201,aux135)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux267,13,0),gaceq(aux135,aux136)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux88,1),w-literal(aux170,1),w-literal(aux142,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux268,13,0),gaceq(aux201,aux80)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux88,1),w-literal(aux69,1),w-literal(aux170,1),w-literal(aux93,1),watched-or({modulo(aux269,13,0),gaceq(aux136,aux80)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux270,13,0),gaceq(aux203,aux201)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux134,1),w-literal(aux69,1),w-literal(aux170,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux93,1),watched-or({modulo(aux271,13,0),gaceq(aux203,aux136)})}),watched-and({w-literal(aux151,1),w-literal(aux232,1),w-literal(aux84,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux272,13,0),gaceq(aux137,aux206)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux273,13,0),gaceq(aux204,aux206)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux123,1),w-literal(aux68,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux274,13,0),gaceq(aux206,aux205)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux59,1),w-literal(aux20,1),w-literal(aux231,1),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux275,13,0),gaceq(aux202,aux203)})}),watched-and({w-literal(aux151,1),w-literal(aux47,1),w-literal(aux232,1),w-literal(aux84,1),w-literal(aux140,1),w-literal(aux233,1),w-literal(aux88,1),w-literal(aux69,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux77,1),w-literal(aux93,1),watched-or({modulo(aux276,13,0),gaceq(aux202,aux135)})})})
watched-or({watched-and({w-literal(aux50,1),w-literal(aux210,1),w-literal(aux185,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux53,aux183),modulo(aux277,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux183,aux184),modulo(aux278,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux185,1),w-literal(aux144,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux52,aux184),modulo(aux279,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux157,1),w-literal(aux103,1),w-literal(aux40,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux53,aux52),modulo(aux280,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux157,1),w-literal(aux103,1),w-literal(aux40,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux226,aux53),modulo(aux281,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux144,1),w-literal(aux13,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux182,aux180),modulo(aux282,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux13,1),w-literal(aux24,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux183,aux181),modulo(aux283,13,0)})}),watched-and({modulo(aux284,13,0),w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux228,1),w-literal(aux156,1)}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux51,aux54),modulo(aux285,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux228,1),w-literal(aux173,1),watched-or({gaceq(aux54,aux227),modulo(aux286,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux24,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux181,aux51),modulo(aux287,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux24,1),w-literal(aux228,1),w-literal(aux156,1),gaceq(M_00004_00011,M_00005_00008),watched-or({gaceq(aux181,aux227),modulo(aux288,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux180,aux181),modulo(aux289,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux13,1),w-literal(aux63,1),w-literal(aux228,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux173,1),watched-or({gaceq(aux180,aux54),modulo(aux290,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux210,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux40,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux226,aux182),modulo(aux291,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux103,1),w-literal(aux40,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux52,aux182),modulo(aux292,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux40,1),w-literal(aux48,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux182,aux183),modulo(aux293,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux108,1),w-literal(aux161,1),w-literal(aux167,1),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux184,aux180),modulo(aux294,13,0)})}),watched-and({w-literal(aux50,1),w-literal(aux57,1),w-literal(aux210,1),w-literal(aux185,1),w-literal(aux144,1),w-literal(aux24,1),w-literal(aux63,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux61,1),w-literal(aux173,1),watched-or({gaceq(aux184,aux51),modulo(aux295,13,0)})})})
watched-or({watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux179,1),w-literal(aux139,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux296,13,0),gaceq(aux155,aux217)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux297,13,0),gaceq(aux218,aux219)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux149,1),w-literal(aux159,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux298,13,0),gaceq(aux218,aux153)})}),watched-and({w-literal(aux94,1),w-literal(aux110,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux139,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux299,13,0),gaceq(aux82,aux217)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux139,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux300,13,0),gaceq(aux217,aux218)})}),watched-and({w-literal(aux42,1),w-literal(aux110,1),w-literal(aux186,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux301,13,0),gaceq(aux154,aux218)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux145,1),w-literal(aux179,1),w-literal(aux139,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux302,13,0),gaceq(aux82,aux154)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux186,1),w-literal(aux158,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux303,13,0),gaceq(aux155,aux219)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux158,1),w-literal(aux149,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux304,13,0),gaceq(aux217,aux220)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux149,1),w-literal(aux159,1),w-literal(aux74,1),w-literal(aux146,1),modulo(aux305,13,0)}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux149,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux306,13,0),gaceq(aux220,aux153)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux149,1),w-literal(aux159,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux307,13,0),gaceq(aux153,aux152)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux149,1),w-literal(aux74,1),w-literal(aux146,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux308,13,0),gaceq(aux220,aux83)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux149,1),w-literal(aux159,1),w-literal(aux74,1),w-literal(aux98,1),watched-or({modulo(aux309,13,0),gaceq(aux152,aux83)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux310,13,0),gaceq(aux219,aux220)})}),watched-and({w-literal(aux42,1),w-literal(aux94,1),w-literal(aux110,1),w-literal(aux186,1),w-literal(aux158,1),w-literal(aux159,1),w-literal(aux74,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux98,1),watched-or({modulo(aux311,13,0),gaceq(aux219,aux152)})}),watched-and({w-literal(aux42,1),w-literal(aux145,1),w-literal(aux179,1),w-literal(aux139,1),w-literal(aux200,1),w-literal(aux32,1),w-literal(aux126,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux312,13,0),gaceq(aux154,aux155)})})})
watched-or({watched-and({w-literal(aux85,1),w-literal(aux198,1),w-literal(aux188,1),w-literal(aux229,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux92,aux91),modulo(aux313,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux174,1),w-literal(aux190,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux91,aux130),modulo(aux314,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux229,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux132,aux128),modulo(aux315,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux190,1),w-literal(aux209,1),w-literal(aux14,1),w-literal(aux197,1),modulo(aux316,13,0)}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux190,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux130,aux90),modulo(aux317,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux190,1),w-literal(aux209,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux90,aux89),modulo(aux318,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux190,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux14,1),w-literal(aux197,1),watched-or({gaceq(aux130,aux133),modulo(aux319,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux190,1),w-literal(aux209,1),w-literal(aux14,1),w-literal(aux19,1),watched-or({gaceq(aux89,aux133),modulo(aux320,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux129,aux130),modulo(aux321,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux174,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux209,1),w-literal(aux14,1),w-literal(aux19,1),watched-or({gaceq(aux129,aux89),modulo(aux322,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),w-literal(aux229,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux128,aux129),modulo(aux323,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux109,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux190,1),w-literal(aux209,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux128,aux90),modulo(aux324,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux198,1),w-literal(aux188,1),w-literal(aux229,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux132,aux92),modulo(aux325,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux195,1),w-literal(aux188,1),w-literal(aux229,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux91,aux128),modulo(aux326,13,0)})}),watched-and({w-literal(aux85,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux109,1),w-literal(aux174,1),w-literal(aux222,1),w-literal(aux115,1),w-literal(aux55,1),w-literal(aux19,1),watched-or({gaceq(aux92,aux129),modulo(aux327,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux328,13,0),gaceq(aux166,aux22)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux189,1),w-literal(aux212,1),w-literal(aux199,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux329,13,0),gaceq(aux172,aux22)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux189,1),w-literal(aux199,1),w-literal(aux118,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux330,13,0),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux189,1),w-literal(aux212,1),w-literal(aux199,1),w-literal(aux118,1)}),watched-and({watched-or({modulo(aux331,13,0),gaceq(aux21,aux171)}),w-literal(aux56,1),w-literal(aux162,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux211,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux332,13,0),gaceq(aux164,aux171)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux177,1),w-literal(aux211,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux333,13,0),gaceq(aux163,aux164)}),w-literal(aux39,1),w-literal(aux117,1),w-literal(aux177,1),w-literal(aux211,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux334,13,0),gaceq(aux171,aux172)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux211,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux335,13,0),gaceq(aux172,aux165)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux189,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux336,13,0),gaceq(aux164,aux165)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux189,1),w-literal(aux212,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux337,13,0),gaceq(aux21,aux163)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux117,1),w-literal(aux177,1),w-literal(aux211,1),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux338,13,0),gaceq(aux163,aux172)}),w-literal(aux39,1),w-literal(aux162,1),w-literal(aux189,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux66,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux339,13,0),gaceq(aux165,aux166)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux189,1),w-literal(aux212,1),w-literal(aux207,1),w-literal(aux221,1)}),watched-and({watched-or({modulo(aux340,13,0),gaceq(aux171,aux166)}),w-literal(aux39,1),w-literal(aux56,1),w-literal(aux162,1),w-literal(aux212,1),w-literal(aux199,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux221,1)})})
watched-or({watched-and({w-literal(aux208,1),w-literal(aux60,1),w-literal(aux150,1),w-literal(aux168,1),w-literal(aux28,1),w-literal(aux124,1),modulo(aux341,13,0)}),watched-and({watched-or({gaceq(aux194,aux191),modulo(aux342,13,0)}),w-literal(aux208,1),w-literal(aux125,1),w-literal(aux67,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux191,aux75),modulo(aux343,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux67,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux75,aux192),modulo(aux344,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux150,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux86,aux194),modulo(aux345,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux125,1),w-literal(aux67,1),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux192,aux193),modulo(aux346,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux150,1),w-literal(aux168,1),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux193,aux87),modulo(aux347,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux150,1),w-literal(aux168,1),w-literal(aux28,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux194,aux192),modulo(aux348,13,0)}),w-literal(aux208,1),w-literal(aux150,1),w-literal(aux168,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux187,1),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux191,aux193),modulo(aux349,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux168,1),w-literal(aux28,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux225,1)}),watched-and({watched-or({gaceq(aux75,aux87),modulo(aux350,13,0)}),w-literal(aux208,1),w-literal(aux60,1),w-literal(aux150,1),w-literal(aux28,1),w-literal(aux124,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux86,aux75),modulo(aux351,13,0)}),w-literal(aux60,1),w-literal(aux150,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux169,1),w-literal(aux187,1),w-literal(aux225,1)})})
watched-or({watched-and({watched-or({modulo(aux352,13,0),gaceq(aux113,aux111)}),w-literal(aux49,1),w-literal(aux141,1),w-literal(aux38,1),w-literal(aux41,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux353,13,0),gaceq(aux224,aux113)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux141,1),w-literal(aux38,1),w-literal(aux41,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux354,13,0),gaceq(aux111,aux223)}),w-literal(aux49,1),w-literal(aux141,1),w-literal(aux38,1),w-literal(aux102,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux355,13,0),gaceq(aux114,aux111)}),w-literal(aux49,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux38,1),w-literal(aux102,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux356,13,0),gaceq(aux112,aux223)}),w-literal(aux49,1),w-literal(aux141,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux102,1),w-literal(aux45,1)}),watched-and({watched-or({modulo(aux357,13,0),gaceq(aux224,aux114)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux46,1),w-literal(aux127,1),w-literal(aux41,1),w-literal(aux178,1)}),watched-and({modulo(aux358,13,0),w-literal(aux49,1),w-literal(aux141,1),w-literal(aux38,1),w-literal(aux102,1),w-literal(aux45,1)}),watched-and({watched-or({modulo(aux359,13,0),gaceq(aux114,aux112)}),w-literal(aux49,1),w-literal(aux46,1),w-literal(aux127,1),w-literal(aux41,1),w-literal(aux178,1)}),watched-and({watched-or({modulo(aux360,13,0),gaceq(aux112,aux113)}),w-literal(aux49,1),w-literal(aux141,1),w-literal(aux127,1),w-literal(aux41,1),w-literal(aux178,1)})})
watched-or({watched-and({w-literal(aux58,1),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux37,1),watched-or({gaceq(aux27,aux147),modulo(aux361,13,0)})}),watched-and({w-literal(aux58,1),w-literal(aux99,1),w-literal(aux100,1),w-literal(aux37,1),watched-or({gaceq(aux147,aux25),modulo(aux362,13,0)})}),watched-and({w-literal(aux58,1),w-literal(aux96,1),w-literal(aux78,1),w-literal(aux37,1),watched-or({gaceq(aux148,aux27),modulo(aux363,13,0)})}),watched-and({w-literal(aux58,1),w-literal(aux100,1),w-literal(aux97,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux148,aux25),modulo(aux364,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux96,1),w-literal(aux78,1),w-literal(aux37,1),watched-or({gaceq(aux26,aux148),modulo(aux365,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux100,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux37,1),watched-or({gaceq(aux26,aux147),modulo(aux366,13,0)})}),watched-and({w-literal(aux58,1),w-literal(aux99,1),w-literal(aux100,1),w-literal(aux97,1),modulo(aux367,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux120,aux121),modulo(aux368,13,0)}),w-literal(aux72,1),w-literal(aux64,1),w-literal(aux73,1)}),watched-and({watched-or({gaceq(aux121,aux122),modulo(aux369,13,0)}),w-literal(aux72,1),w-literal(aux71,1),w-literal(aux73,1)}),watched-and({modulo(aux370,13,0),w-literal(aux72,1),w-literal(aux71,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux119,aux120),modulo(aux371,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux64,1),w-literal(aux73,1)}),watched-and({watched-or({gaceq(aux119,aux122),modulo(aux372,13,0)}),w-literal(aux71,1),w-literal(aux65,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux216,1),watched-or({div(M_00012_00001, 13, aux29),modulo(aux373,13,0)})}),watched-and({w-literal(aux215,1),w-literal(aux216,1),watched-or({div(M_00012_00003, 13, aux29),modulo(aux374,13,0)})}),watched-and({modulo(aux375,13,0),w-literal(aux215,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux376,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux234),modulo(aux377,13,0)})})})
weightedsumleq([-1,1],[M_00002_00009,41],aux235)
weightedsumgeq([-1,1],[M_00002_00009,41],aux235)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux236)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux236)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux237)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux237)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux238)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux238)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux239)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux239)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux240)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux240)
weightedsumleq([-1,1],[M_00002_00011,41],aux241)
weightedsumgeq([-1,1],[M_00002_00011,41],aux241)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux242)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux242)
sumleq([M_00002_00004,-19],aux243)
sumgeq([M_00002_00004,-19],aux243)
weightedsumleq([-1,1],[M_00002_00010,13],aux244)
weightedsumgeq([-1,1],[M_00002_00010,13],aux244)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux245)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux245)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux246)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux246)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux247)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux247)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux248)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux248)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux249)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux249)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux250)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux250)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux251)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux251)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux252)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux252)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux253)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux253)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux254)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux254)
sumleq([M_00002_00002,-19],aux255)
sumgeq([M_00002_00002,-19],aux255)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux256)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux256)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux257)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux257)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux258)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux258)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux259)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux259)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux260)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux260)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux261)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux261)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux262)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux262)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux263)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux263)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux264)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux264)
weightedsumleq([-1,1],[M_00003_00012,-1],aux265)
weightedsumgeq([-1,1],[M_00003_00012,-1],aux265)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux266)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux266)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux267)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux267)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux268)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux268)
weightedsumleq([-1,1],[M_00003_00011,M_00003_00012],aux269)
weightedsumgeq([-1,1],[M_00003_00011,M_00003_00012],aux269)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux270)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux270)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux271)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux271)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux272)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux272)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux273)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux273)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux274)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux274)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux275)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux275)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux276)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux276)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux277)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux277)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux278)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux278)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux279)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux279)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux280)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux280)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux281)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux281)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux282)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux282)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux283)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux283)
weightedsumleq([-1,1],[M_00004_00011,-1],aux284)
weightedsumgeq([-1,1],[M_00004_00011,-1],aux284)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux285)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux285)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux286)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux286)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux287)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux287)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux288)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux288)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux289)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux289)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux290)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux290)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux291)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux291)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux292)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux292)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux293)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux293)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux294)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux294)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux295)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux295)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux296)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux296)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux297)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux297)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux298)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux298)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux299)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux299)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux300)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux300)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux301)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux301)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux302)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux302)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux303)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux303)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux304)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux304)
weightedsumleq([1,-1],[-1,M_00005_00010],aux305)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux305)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux306)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux306)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux307)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux307)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux308)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux308)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux309)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux309)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux310)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux310)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux311)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux311)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux312)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux312)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux313)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux313)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux314)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux314)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux315)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux315)
weightedsumleq([1,-1],[-1,M_00006_00009],aux316)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux316)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux317)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux317)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux318)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux318)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux319)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux319)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux320)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux320)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux321)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux321)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux322)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux322)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux323)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux323)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux324)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux324)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux325)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux325)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux326)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux326)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux327)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux327)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux328)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux328)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux329)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux329)
weightedsumleq([-1,1],[M_00007_00008,-1],aux330)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux330)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux331)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux331)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux332)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux332)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux333)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux333)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux334)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux334)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux335)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux335)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux336)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux336)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux337)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux337)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux338)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux338)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux339)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux339)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux340)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux340)
weightedsumleq([-1,1],[M_00008_00007,-1],aux341)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux341)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux342)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux342)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux343)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux343)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux344)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux344)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux345)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux345)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux346)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux346)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux347)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux347)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux348)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux348)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux349)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux349)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux350)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux350)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux351)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux351)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux352)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux352)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux353)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux353)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux354)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux354)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux355)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux355)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux356)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux356)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux357)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux357)
weightedsumleq([1,-1],[-1,M_00009_00006],aux358)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux358)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux359)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux359)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux360)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux360)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux361)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux361)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux362)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux362)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux363)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux363)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux364)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux364)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux365)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux365)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux366)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux366)
weightedsumleq([-1,1],[M_00010_00005,-1],aux367)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux367)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux368)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux368)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux369)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux369)
weightedsumleq([-1,1],[M_00011_00004,-1],aux370)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux370)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux371)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux371)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux372)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux372)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux373)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux373)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux374)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux374)
weightedsumleq([-1,1],[M_00012_00003,-1],aux375)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux375)
weightedsumleq([1,-1],[-1,M_00013_00002],aux376)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux376)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux377)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux377)
**EOF**
