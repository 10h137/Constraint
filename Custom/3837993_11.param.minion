MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 94
# CSE_active_eliminated_expressions = 353
# CSE_active_total_size = 282
**VARIABLES**
DISCRETE M_00002_00004 #
{8..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [8,10,12,12])
**VARIABLES**
DISCRETE M_00002_00005 #
{19..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [19,19,21,21])
**VARIABLES**
DISCRETE M_00002_00006 #
{8..9}
DISCRETE M_00002_00007 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00002_00008 #
{21..25}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [21,21,25,25])
**VARIABLES**
DISCRETE M_00003_00004 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00003_00005 #
{19..25}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00003_00006 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00003_00007 #
{1..25}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [1,1,8,10,12,12,19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00003_00008 #
{21..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00003_00009 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00004_00003 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00004_00004 #
{1..25}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [1,1,8,10,12,12,19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00004_00005 #
{8..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{1..25}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [1,1,8,10,12,12,19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00004_00007 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00004_00008 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{8..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00003 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00005 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00006 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00007 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00006_00001 #
{8..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [8,10,12,12,19,19,21,21,25,25,38,38,44,44])
**VARIABLES**
DISCRETE M_00006_00002 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00006_00005 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00006_00006 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00007_00001 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00007_00005 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00008_00001 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00008_00004 #
{1..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [1,1,8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00009_00001 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00009_00002 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00009_00003 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00010_00002 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
DISCRETE M_00011_00001 #
{1..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [1,1,8,10,12,12,19,19,21,21,25,25,38,38,44,44,50,50])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux14 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux17 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux18 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux19 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux20 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux21 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux22 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
BOOL aux23 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
DISCRETE aux26 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
BOOL aux27 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
DISCRETE aux28 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux29 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004/13)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux31 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux38 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux39 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00004/13)
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux52 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux54 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux56 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux57 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux62 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
BOOL aux65 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux71 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux74 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
BOOL aux90 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux92 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux94 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux97 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux98 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux99 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux101 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
BOOL aux104 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux105 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux106 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux107 #
{0..3}
DISCRETE aux108 #( - M_00002_00008 + 38)
{13..17}
**CONSTRAINTS**
w-inintervalset(aux108, [13,13,17,17])
**VARIABLES**
DISCRETE aux109 #( - M_00002_00007 + 1)
{-20..-7}
**CONSTRAINTS**
w-inintervalset(aux109, [-20,-20,-18,-18,-11,-11,-9,-7])
**VARIABLES**
DISCRETE aux110 #( - M_00002_00006 + M_00002_00007)
{-1..13}
**CONSTRAINTS**
w-inintervalset(aux110, [-1,4,10,13])
**VARIABLES**
DISCRETE aux111 #( - M_00002_00005 + M_00002_00008)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux111, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux112 #( - M_00002_00007 + M_00002_00008)
{4..17}
**CONSTRAINTS**
w-inintervalset(aux112, [4,4,6,6,9,9,11,13,15,17])
**VARIABLES**
DISCRETE aux113 #( - M_00002_00004 + M_00002_00007)
{-4..13}
**CONSTRAINTS**
w-inintervalset(aux113, [-4,4,7,7,9,13])
**VARIABLES**
DISCRETE aux114 #( - M_00003_00006 + M_00003_00007)
{-8..17}
**CONSTRAINTS**
w-inintervalset(aux114, [-8,-7,-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux115 #( - M_00003_00007 + M_00003_00008)
{13..30}
**CONSTRAINTS**
w-inintervalset(aux115, [13,13,15,17,19,20,24,24,26,26,28,30])
**VARIABLES**
DISCRETE aux116 #( - M_00003_00006 + M_00003_00009)
{-20..29}
**CONSTRAINTS**
w-inintervalset(aux116, [-20,-20,-18,-18,-13,-7,-4,4,6,7,9,13,15,17,19,19,26,26,28,29])
**VARIABLES**
DISCRETE aux117 #( - M_00003_00008 + M_00003_00009)
{-37..17}
**CONSTRAINTS**
w-inintervalset(aux117, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-19,-17,-15,-13,-11,-9,-9,-6,-6,-4,-4,-2,-2,0,0,4,4,13,13,17,17])
**VARIABLES**
DISCRETE aux118 #( - M_00003_00005 + M_00003_00006)
{-17..2}
**CONSTRAINTS**
w-inintervalset(aux118, [-17,-15,-13,-9,-7,-6,-4,-4,-2,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux119 #( - M_00003_00005 + M_00003_00008)
{2..19}
**CONSTRAINTS**
w-inintervalset(aux119, [2,2,4,4,6,6,13,13,17,17,19,19])
**VARIABLES**
DISCRETE aux120 #(M_00003_00004 + -50)
{-42..-29}
**CONSTRAINTS**
w-inintervalset(aux120, [-42,-40,-38,-38,-31,-31,-29,-29])
**VARIABLES**
DISCRETE aux121 #( - M_00003_00009 + -1)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux121, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux122 #(M_00003_00006 + -50)
{-42..-29}
**CONSTRAINTS**
w-inintervalset(aux122, [-42,-40,-38,-38,-31,-31,-29,-29])
**VARIABLES**
DISCRETE aux123 #( - M_00003_00004 + M_00003_00005)
{-2..17}
**CONSTRAINTS**
w-inintervalset(aux123, [-2,-2,0,0,2,2,4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux124 #( - M_00003_00004 + M_00003_00007)
{-11..17}
**CONSTRAINTS**
w-inintervalset(aux124, [-11,-7,-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux125 #( - M_00004_00008 + -1)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux125, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux126 #( - M_00004_00006 + M_00004_00007)
{-20..37}
**CONSTRAINTS**
w-inintervalset(aux126, [-20,-20,-18,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux127 #( - M_00004_00007 + M_00004_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux127, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux128 #( - M_00004_00005 + M_00004_00006)
{-30..17}
**CONSTRAINTS**
w-inintervalset(aux128, [-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux129 #( - M_00004_00005 + M_00004_00008)
{-37..30}
**CONSTRAINTS**
w-inintervalset(aux129, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,7,9,13,15,17,19,19,26,26,28,30])
**VARIABLES**
DISCRETE aux130 #( - M_00004_00004 + M_00004_00005)
{-17..26}
**CONSTRAINTS**
w-inintervalset(aux130, [-17,-15,-13,-9,-7,-6,-4,4,6,13,15,20,24,24,26,26])
**VARIABLES**
DISCRETE aux131 #( - M_00004_00004 + M_00004_00007)
{-20..30}
**CONSTRAINTS**
w-inintervalset(aux131, [-20,-20,-18,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30])
**VARIABLES**
DISCRETE aux132 #( - M_00004_00003 + M_00004_00004)
{-49..13}
**CONSTRAINTS**
w-inintervalset(aux132, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,7,9,13])
**VARIABLES**
DISCRETE aux133 #( - M_00004_00003 + M_00004_00006)
{-49..17}
**CONSTRAINTS**
w-inintervalset(aux133, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux134 #(M_00004_00003 + -10)
{-2..40}
**CONSTRAINTS**
w-inintervalset(aux134, [-2,0,2,2,9,9,11,11,15,15,28,28,34,34,40,40])
**VARIABLES**
DISCRETE aux135 #(M_00004_00005 + -10)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux135, [-2,0,2,2,9,9,11,11,15,15,28,28])
**VARIABLES**
DISCRETE aux136 #( - M_00005_00002 + M_00005_00003)
{-30..42}
**CONSTRAINTS**
w-inintervalset(aux136, [-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,26,28,32,34,36,38,38,40,42])
**VARIABLES**
DISCRETE aux137 #( - M_00005_00002 + M_00005_00005)
{-37..28}
**CONSTRAINTS**
w-inintervalset(aux137, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,7,9,13,15,17,19,19,26,26,28,28])
**VARIABLES**
DISCRETE aux138 #(-1 - M_00005_00007)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux138, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux139 #( - M_00005_00004 + M_00005_00005)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux139, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux140 #( - M_00005_00005 + M_00005_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux140, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux141 #( - M_00005_00004 + M_00005_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux141, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux142 #( - M_00005_00006 + M_00005_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux142, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux143 #(-44 + M_00005_00002)
{-36..-6}
**CONSTRAINTS**
w-inintervalset(aux143, [-36,-34,-32,-32,-25,-25,-23,-23,-19,-19,-6,-6])
**VARIABLES**
DISCRETE aux144 #( - M_00005_00003 + M_00005_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux144, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux145 #( - M_00005_00003 + M_00005_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux145, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux146 #(-44 + M_00005_00004)
{-43..-6}
**CONSTRAINTS**
w-inintervalset(aux146, [-43,-43,-36,-34,-32,-32,-25,-25,-23,-23,-19,-19,-6,-6])
**VARIABLES**
DISCRETE aux147 #( - M_00006_00003 + M_00006_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux147, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux148 #( - M_00006_00004 + M_00006_00005)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux148, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux149 #( - M_00006_00003 + M_00006_00006)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux149, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux150 #(-1 - M_00006_00006)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux150, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux151 #( - M_00006_00005 + M_00006_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux151, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux152 #( - M_00006_00002 + M_00006_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux152, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux153 #( - M_00006_00002 + M_00006_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux153, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux154 #( - M_00006_00001 + M_00006_00002)
{-43..30}
**CONSTRAINTS**
w-inintervalset(aux154, [-43,-43,-37,-34,-32,-32,-30,-28,-26,-23,-20,-15,-13,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,26,28,30])
**VARIABLES**
DISCRETE aux155 #( - M_00006_00001 + M_00006_00004)
{-43..30}
**CONSTRAINTS**
w-inintervalset(aux155, [-43,-43,-37,-34,-32,-32,-30,-28,-26,-23,-20,-15,-13,-6,-4,4,6,7,9,13,15,17,19,19,26,26,28,30])
**VARIABLES**
DISCRETE aux156 #( - M_00007_00001 + M_00007_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux156, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux157 #( - M_00007_00005 + -1)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux157, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux158 #( - M_00007_00001 + M_00007_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux158, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux159 #( - M_00007_00002 + M_00007_00005)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux159, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux160 #( - M_00007_00002 + M_00007_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux160, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux161 #( - M_00007_00003 + M_00007_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux161, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux162 #( - M_00007_00004 + M_00007_00005)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux162, [-37,-37,-30,-28,-26,-26,-24,-24,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux163 #( - M_00008_00003 + M_00008_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux163, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux164 #( - M_00008_00001 + M_00008_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux164, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux165 #( - M_00008_00001 + M_00008_00004)
{-49..37}
**CONSTRAINTS**
w-inintervalset(aux165, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,24,24,26,26,28,30,37,37])
**VARIABLES**
DISCRETE aux166 #( - M_00008_00002 + M_00008_00003)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux166, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux167 #( - M_00008_00004 + -1)
{-39..-2}
**CONSTRAINTS**
w-inintervalset(aux167, [-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux168 #( - M_00009_00001 + M_00009_00002)
{-49..49}
**CONSTRAINTS**
w-inintervalset(aux168, [-49,-49,-43,-40,-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,38,40,43,49,49])
**VARIABLES**
DISCRETE aux169 #( - M_00009_00002 + M_00009_00003)
{-38..37}
**CONSTRAINTS**
w-inintervalset(aux169, [-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,37])
**VARIABLES**
DISCRETE aux170 #(-1 - M_00009_00003)
{-51..-2}
**CONSTRAINTS**
w-inintervalset(aux170, [-51,-51,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
DISCRETE aux171 #( - M_00010_00001 + M_00010_00002)
{-38..37}
**CONSTRAINTS**
w-inintervalset(aux171, [-38,-34,-32,-28,-26,-23,-20,-15,-13,-6,-4,4,6,13,15,20,23,26,28,32,34,37])
**VARIABLES**
DISCRETE aux172 #( - M_00010_00002 + -1)
{-51..-2}
**CONSTRAINTS**
w-inintervalset(aux172, [-51,-51,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-2,-2])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[44, 10, 50, 12, 19, 9, 8, 21, 25, 38, 1]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux107)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00007_00001, 13, aux14)
div(M_00007_00003, 13, aux15)
div(M_00007_00005, 13, aux16)
reify(gaceq(M_00005_00002,M_00006_00002), aux17)
reify(gaceq(M_00003_00009,M_00004_00008), aux18)
reify(gaceq(M_00007_00002,M_00006_00002), aux19)
reify(gaceq(M_00005_00003,M_00006_00003), aux20)
reify(gaceq(M_00005_00007,M_00006_00006), aux21)
div(M_00002_00007, 13, aux22)
reify(gaceq(M_00004_00005,M_00005_00005), aux23)
reify(gaceq(M_00010_00001,M_00009_00001), aux24)
reify(gaceq(M_00010_00002,M_00009_00003), aux25)
div(M_00004_00003, 13, aux26)
div(M_00004_00006, 13, aux27)
div(M_00004_00007, 13, aux28)
div(M_00004_00004, 13, aux29)
reify(gaceq(M_00004_00006,M_00005_00005), aux30)
reify(gaceq(M_00003_00008,M_00004_00007), aux31)
div(M_00002_00008, 13, 1)
reify(gaceq(M_00008_00004,M_00009_00003), aux33)
reify(gaceq(M_00008_00002,M_00009_00002), aux34)
reify(gaceq(M_00008_00001,M_00009_00001), aux35)
reify(gaceq(M_00003_00006,M_00004_00006), aux36)
reify(gaceq(M_00003_00007,M_00004_00006), aux37)
reify(gaceq(M_00005_00005,M_00006_00005), aux38)
reify(gaceq(M_00003_00004,M_00004_00004), aux39)
div(M_00003_00009, 13, aux40)
div(M_00003_00004, 13, aux41)
div(M_00005_00007, 13, aux42)
div(M_00005_00002, 13, aux43)
div(M_00008_00003, 13, aux44)
div(M_00008_00002, 13, aux45)
div(M_00008_00001, 13, aux46)
div(M_00008_00004, 13, aux47)
div(M_00006_00005, 13, aux48)
div(M_00006_00004, 13, aux49)
div(M_00006_00003, 13, aux50)
div(M_00006_00002, 13, aux51)
reify(gaceq(M_00002_00005,M_00003_00005), aux52)
reify(gaceq(M_00004_00005,M_00005_00004), aux53)
reify(gaceq(M_00002_00006,M_00003_00006), aux54)
reify(gaceq(M_00002_00007,M_00003_00007), aux55)
reify(gaceq(M_00004_00003,M_00005_00003), aux56)
reify(gaceq(M_00007_00001,M_00006_00001), aux57)
reify(gaceq(M_00007_00004,M_00008_00004), aux58)
reify(gaceq(M_00007_00003,M_00008_00002), aux59)
reify(gaceq(M_00008_00003,M_00009_00002), aux60)
reify(gaceq(M_00008_00003,M_00009_00003), aux61)
reify(gaceq(M_00004_00008,M_00005_00007), aux62)
div(M_00006_00001, 13, aux63)
div(M_00006_00006, 13, aux64)
reify(gaceq(M_00004_00004,M_00005_00004), aux65)
div(M_00003_00006, 13, aux66)
div(M_00003_00007, 13, aux67)
div(M_00003_00008, 13, aux68)
div(M_00003_00005, 13, 1)
reify(gaceq(M_00002_00004,M_00003_00004), aux70)
reify(gaceq(M_00005_00005,M_00006_00004), aux71)
reify(gaceq(M_00003_00005,M_00004_00004), aux72)
reify(gaceq(M_00003_00008,M_00004_00008), aux73)
reify(gaceq(M_00005_00004,M_00006_00004), aux74)
reify(gaceq(M_00005_00003,M_00006_00002), aux75)
reify(gaceq(M_00005_00006,M_00006_00006), aux76)
div(M_00005_00006, 13, aux77)
div(M_00005_00004, 13, aux78)
div(M_00005_00005, 13, aux79)
div(M_00005_00003, 13, aux80)
reify(gaceq(M_00004_00007,M_00005_00007), aux81)
reify(gaceq(M_00004_00004,M_00005_00003), aux82)
div(M_00007_00002, 13, aux83)
div(M_00007_00004, 13, aux84)
reify(gaceq(M_00003_00006,M_00004_00005), aux85)
reify(gaceq(M_00007_00004,M_00008_00003), aux86)
reify(gaceq(M_00005_00004,M_00006_00003), aux87)
reify(gaceq(M_00003_00007,M_00004_00007), aux88)
div(M_00004_00005, 13, aux89)
reify(gaceq(M_00004_00007,M_00005_00006), aux90)
reify(gaceq(M_00007_00003,M_00006_00004), aux91)
reify(gaceq(M_00007_00001,M_00008_00001), aux92)
reify(gaceq(M_00007_00002,M_00008_00002), aux93)
reify(gaceq(M_00007_00003,M_00008_00003), aux94)
reify(gaceq(M_00007_00005,M_00006_00005), aux95)
reify(gaceq(M_00007_00002,M_00006_00003), aux96)
reify(gaceq(M_00005_00006,M_00006_00005), aux97)
reify(gaceq(M_00003_00005,M_00004_00005), aux98)
reify(gaceq(M_00007_00005,M_00008_00004), aux99)
reify(gaceq(M_00002_00008,M_00003_00007), aux100)
reify(gaceq(M_00007_00005,M_00006_00006), aux101)
div(M_00009_00002, 13, aux102)
div(M_00004_00008, 13, aux103)
reify(gaceq(M_00004_00006,M_00005_00006), aux104)
reify(gaceq(M_00007_00004,M_00006_00005), aux105)
reify(gaceq(M_00007_00003,M_00006_00003), aux106)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,8),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,8),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,21)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,25)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,21),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,25)})})
watched-or({watched-and({w-literal(M_00003_00009,1),w-literal(M_00003_00008,38),modulo(aux108,13,0),w-literal(aux70,1),w-literal(aux52,1),w-literal(aux54,1),w-literal(aux55,1)}),watched-and({w-literal(M_00003_00007,1),w-literal(M_00003_00009,38),watched-or({w-literal(aux22,0),modulo(aux109,13,0)}),w-literal(aux70,1),w-literal(aux52,1),w-literal(aux54,1),gaceq(M_00002_00008,M_00003_00008)}),watched-and({w-literal(M_00003_00009,1),w-literal(M_00003_00008,38),w-literal(aux70,1),w-literal(aux52,1),gaceq(M_00002_00007,M_00003_00006),w-literal(aux100,1),watched-or({modulo(aux110,13,0),div(M_00002_00006, 13, aux22)})}),watched-and({w-literal(M_00003_00009,1),w-literal(M_00003_00008,38),w-literal(aux70,1),w-literal(aux54,1),w-literal(aux55,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux111,13,0),div(M_00002_00005, 13, 1)})}),watched-and({w-literal(M_00003_00009,1),w-literal(M_00003_00008,38),w-literal(aux70,1),w-literal(aux52,1),w-literal(aux54,1),w-literal(aux100,1),watched-or({modulo(aux112,13,0),w-literal(aux22,1)})}),watched-and({w-literal(M_00003_00009,1),w-literal(M_00003_00008,38),w-literal(aux52,1),w-literal(aux54,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux100,1),watched-or({modulo(aux113,13,0),div(M_00002_00004, 13, aux22)})})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux98,1),w-literal(aux37,1),w-literal(aux31,1),w-literal(aux18,1),watched-or({modulo(aux114,13,0),gaceq(aux66,aux67)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux31,1),w-literal(aux18,1),watched-or({modulo(aux115,13,0),gaceq(aux67,aux68)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux98,1),w-literal(aux88,1),w-literal(aux73,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux116,13,0),gaceq(aux66,aux40)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux88,1),w-literal(aux18,1),watched-or({modulo(aux117,13,0),gaceq(aux68,aux40)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux85,1),w-literal(aux37,1),w-literal(aux31,1),w-literal(aux18,1),watched-or({modulo(aux118,13,0),w-literal(aux66,1)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux36,1),w-literal(aux88,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux18,1),watched-or({modulo(aux119,13,0),w-literal(aux68,1)}),w-literal(M_00004_00003,50)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux72,1),w-literal(aux85,1),w-literal(aux37,1),w-literal(aux31,1),w-literal(aux18,1),modulo(aux120,13,0)}),watched-and({w-literal(aux39,1),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux88,1),w-literal(aux73,1),modulo(aux121,13,0),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux39,1),w-literal(aux98,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux37,1),w-literal(aux31,1),w-literal(aux18,1),modulo(aux122,13,0)}),watched-and({w-literal(aux72,1),w-literal(aux85,1),w-literal(aux37,1),w-literal(aux31,1),w-literal(aux18,1),watched-or({modulo(aux123,13,0),w-literal(aux41,1)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux98,1),w-literal(aux36,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux31,1),w-literal(aux18,1),watched-or({modulo(aux124,13,0),gaceq(aux41,aux67)}),w-literal(M_00004_00003,50)})})
watched-or({watched-and({w-literal(M_00005_00002,10),modulo(aux125,13,0),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux104,1),w-literal(aux81,1)}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux90,1),w-literal(aux62,1),watched-or({gaceq(aux27,aux28),modulo(aux126,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux23,1),w-literal(aux104,1),w-literal(aux62,1),watched-or({gaceq(aux28,aux103),modulo(aux127,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux30,1),w-literal(aux90,1),w-literal(aux62,1),watched-or({gaceq(aux89,aux27),modulo(aux128,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux104,1),w-literal(aux81,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux89,aux103),modulo(aux129,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux53,1),w-literal(aux30,1),w-literal(aux90,1),w-literal(aux62,1),watched-or({gaceq(aux29,aux89),modulo(aux130,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux56,1),w-literal(aux23,1),w-literal(aux104,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux62,1),watched-or({gaceq(aux29,aux28),modulo(aux131,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux82,1),w-literal(aux53,1),w-literal(aux30,1),w-literal(aux90,1),w-literal(aux62,1),watched-or({gaceq(aux26,aux29),modulo(aux132,13,0)})}),watched-and({w-literal(M_00005_00002,10),w-literal(aux65,1),w-literal(aux23,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux90,1),w-literal(aux62,1),watched-or({gaceq(aux26,aux27),modulo(aux133,13,0)})}),watched-and({watched-or({modulo(aux134,13,0),w-literal(aux26,0)}),gaceq(M_00004_00003,M_00005_00002),w-literal(aux82,1),w-literal(aux53,1),w-literal(aux30,1),w-literal(aux90,1),w-literal(aux62,1)}),watched-and({watched-or({modulo(aux135,13,0),w-literal(aux89,0)}),w-literal(aux56,1),w-literal(aux65,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux30,1),w-literal(aux90,1),w-literal(aux62,1)})})
watched-or({watched-and({w-literal(aux75,1),w-literal(aux87,1),w-literal(aux71,1),w-literal(aux97,1),w-literal(aux21,1),watched-or({modulo(aux136,13,0),gaceq(aux43,aux80)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux20,1),w-literal(aux74,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux97,1),w-literal(aux21,1),watched-or({modulo(aux137,13,0),gaceq(aux43,aux79)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),w-literal(aux74,1),w-literal(aux38,1),w-literal(aux76,1),modulo(aux138,13,0),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),w-literal(aux71,1),w-literal(aux97,1),w-literal(aux21,1),watched-or({modulo(aux139,13,0),gaceq(aux78,aux79)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),w-literal(aux74,1),w-literal(aux97,1),w-literal(aux21,1),watched-or({modulo(aux140,13,0),gaceq(aux79,aux77)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),w-literal(aux38,1),w-literal(aux76,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux141,13,0),gaceq(aux78,aux42)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),w-literal(aux74,1),w-literal(aux38,1),w-literal(aux21,1),watched-or({modulo(aux142,13,0),gaceq(aux77,aux42)}),w-literal(M_00006_00001,44)}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux75,1),w-literal(aux87,1),w-literal(aux71,1),w-literal(aux97,1),w-literal(aux21,1),modulo(aux143,13,0)}),watched-and({w-literal(aux17,1),w-literal(aux87,1),w-literal(aux71,1),w-literal(aux97,1),w-literal(aux21,1),watched-or({modulo(aux144,13,0),gaceq(aux80,aux78)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux74,1),w-literal(aux38,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux21,1),watched-or({modulo(aux145,13,0),gaceq(aux80,aux77)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux17,1),w-literal(aux20,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux71,1),w-literal(aux97,1),w-literal(aux21,1),modulo(aux146,13,0)})})
watched-or({watched-and({w-literal(aux57,1),w-literal(aux19,1),w-literal(aux91,1),w-literal(aux105,1),w-literal(aux101,1),watched-or({gaceq(aux50,aux49),modulo(aux147,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux19,1),w-literal(aux106,1),w-literal(aux105,1),w-literal(aux101,1),watched-or({gaceq(aux49,aux48),modulo(aux148,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux19,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux95,1),watched-or({gaceq(aux50,aux64),modulo(aux149,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux19,1),w-literal(aux106,1),w-literal(aux13,1),w-literal(aux95,1),modulo(aux150,13,0)}),watched-and({w-literal(aux57,1),w-literal(aux19,1),w-literal(aux106,1),w-literal(aux13,1),w-literal(aux101,1),watched-or({gaceq(aux48,aux64),modulo(aux151,13,0)})}),watched-and({w-literal(aux57,1),w-literal(aux96,1),w-literal(aux91,1),w-literal(aux105,1),w-literal(aux101,1),watched-or({gaceq(aux51,aux50),modulo(aux152,13,0)})}),watched-and({w-literal(aux57,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux106,1),w-literal(aux13,1),w-literal(aux101,1),watched-or({gaceq(aux51,aux48),modulo(aux153,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux96,1),w-literal(aux91,1),w-literal(aux105,1),w-literal(aux101,1),watched-or({gaceq(aux63,aux51),modulo(aux154,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux19,1),w-literal(aux106,1),w-literal(aux105,1),w-literal(aux101,1),watched-or({gaceq(aux63,aux49),modulo(aux155,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux156,13,0),gaceq(aux14,aux84)}),w-literal(aux93,1),w-literal(aux94,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux99,1)}),watched-and({modulo(aux157,13,0),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux94,1),w-literal(aux58,1)}),watched-and({watched-or({modulo(aux158,13,0),gaceq(aux14,aux83)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux59,1),w-literal(aux86,1),w-literal(aux99,1)}),watched-and({watched-or({modulo(aux159,13,0),gaceq(aux83,aux16)}),w-literal(aux92,1),w-literal(aux94,1),w-literal(aux58,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux160,13,0),gaceq(aux83,aux15)}),w-literal(aux92,1),w-literal(aux59,1),w-literal(aux86,1),w-literal(aux99,1)}),watched-and({watched-or({modulo(aux161,13,0),gaceq(aux15,aux84)}),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux99,1)}),watched-and({watched-or({modulo(aux162,13,0),gaceq(aux84,aux16)}),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux94,1),w-literal(aux99,1)})})
watched-or({watched-and({watched-or({gaceq(aux44,aux47),modulo(aux163,13,0)}),w-literal(aux35,1),w-literal(aux34,1),w-literal(aux33,1)}),watched-and({watched-or({gaceq(aux46,aux45),modulo(aux164,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux60,1),w-literal(aux33,1)}),watched-and({watched-or({gaceq(aux46,aux47),modulo(aux165,13,0)}),w-literal(aux34,1),w-literal(aux61,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux45,aux44),modulo(aux166,13,0)}),w-literal(aux35,1),w-literal(aux60,1),w-literal(aux33,1)}),watched-and({w-literal(aux35,1),w-literal(aux34,1),w-literal(aux61,1),modulo(aux167,13,0)})})
watched-or({watched-and({watched-or({modulo(aux168,13,0),div(M_00009_00001, 13, aux102)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux25,1)}),watched-and({watched-or({modulo(aux169,13,0),div(M_00009_00003, 13, aux102)}),w-literal(aux24,1),w-literal(aux25,1)}),watched-and({modulo(aux170,13,0),w-literal(aux24,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux107),modulo(aux171,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux172,13,0)})})
weightedsumleq([-1,1],[M_00002_00008,38],aux108)
weightedsumgeq([-1,1],[M_00002_00008,38],aux108)
weightedsumleq([-1,1],[M_00002_00007,1],aux109)
weightedsumgeq([-1,1],[M_00002_00007,1],aux109)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux110)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux110)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux111)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux111)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux112)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux112)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux113)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux113)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux114)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux114)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux115)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux115)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux116)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux116)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux117)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux117)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux118)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux118)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux119)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux119)
sumleq([M_00003_00004,-50],aux120)
sumgeq([M_00003_00004,-50],aux120)
weightedsumleq([-1,1],[M_00003_00009,-1],aux121)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux121)
sumleq([M_00003_00006,-50],aux122)
sumgeq([M_00003_00006,-50],aux122)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux123)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux123)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux124)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux124)
weightedsumleq([-1,1],[M_00004_00008,-1],aux125)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux125)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux126)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux126)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux127)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux127)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux128)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux128)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux129)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux129)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux130)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux130)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux131)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux131)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux132)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux132)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux133)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux133)
sumleq([M_00004_00003,-10],aux134)
sumgeq([M_00004_00003,-10],aux134)
sumleq([M_00004_00005,-10],aux135)
sumgeq([M_00004_00005,-10],aux135)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux136)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux136)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux137)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux137)
weightedsumleq([1,-1],[-1,M_00005_00007],aux138)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux138)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux139)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux139)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux140)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux140)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux141)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux141)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux142)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux142)
sumleq([-44,M_00005_00002],aux143)
sumgeq([-44,M_00005_00002],aux143)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux144)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux144)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux145)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux145)
sumleq([-44,M_00005_00004],aux146)
sumgeq([-44,M_00005_00004],aux146)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux147)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux147)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux148)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux148)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux149)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux149)
weightedsumleq([1,-1],[-1,M_00006_00006],aux150)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux150)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux151)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux151)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux152)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux152)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux153)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux153)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux154)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux154)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux155)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux155)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux156)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux156)
weightedsumleq([-1,1],[M_00007_00005,-1],aux157)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux157)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux158)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux158)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux159)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux159)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux160)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux160)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux161)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux161)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux162)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux162)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux163)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux163)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux164)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux164)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux165)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux165)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux166)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux166)
weightedsumleq([-1,1],[M_00008_00004,-1],aux167)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux167)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux168)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux168)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux169)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux169)
weightedsumleq([1,-1],[-1,M_00009_00003],aux170)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux170)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux171)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux171)
weightedsumleq([-1,1],[M_00010_00002,-1],aux172)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux172)
**EOF**
