MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 152
# CSE_active_eliminated_expressions = 698
# CSE_active_total_size = 456
**VARIABLES**
DISCRETE M_00002_00004 #
{8..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [8,10,12,12])
**VARIABLES**
DISCRETE M_00002_00005 #
{19..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [19,19,21,21])
**VARIABLES**
DISCRETE M_00002_00006 #
{8..9}
DISCRETE M_00002_00007 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00002_00008 #
{21..25}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [21,21,25,25])
**VARIABLES**
DISCRETE M_00002_00009 #
{25..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00002_00010 #
{38..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [38,38,44,44,48,48])
**VARIABLES**
DISCRETE M_00002_00011 #
{48..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [48,48,50,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00003_00005 #
{19..25}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00003_00006 #
{8..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [8,10,12,12,19,19,21,21])
**VARIABLES**
DISCRETE M_00003_00007 #
{8..25}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [8,10,12,12,19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00003_00008 #
{21..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00003_00009 #
{25..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00003_00010 #
{48..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [48,48,50,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,50])
**VARIABLES**
DISCRETE M_00004_00004 #
{8..25}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [8,10,12,12,19,19,21,21,25,25])
**VARIABLES**
DISCRETE M_00004_00005 #
{8..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{8..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48])
**VARIABLES**
DISCRETE M_00004_00007 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00004_00008 #
{21..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00004_00009 #
{38..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{8..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [8,10,12,12,19,19,21,21,25,25,38,38])
**VARIABLES**
DISCRETE M_00005_00003 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00005 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00006 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00007 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00008 #
{21..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00005_00009 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00001 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00005 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00006 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00007 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00006_00008 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00001 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{8..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00005 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00006 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00007_00007 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00005 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00008_00006 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00009_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00009_00005 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00010_00004 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00011_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00012_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
DISCRETE M_00013_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [3,3,8,10,12,12,19,19,21,21,25,25,38,38,44,44,48,48,50,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux19 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux20 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux26 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux27 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux28 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
BOOL aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004/13)
BOOL aux36 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux39 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..3}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{2..3}
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux45 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux47 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux48 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux50 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux51 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux52 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux56 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00004/13)
BOOL aux58 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux59 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux68 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux71 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux72 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux76 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux77 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux80 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux86 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux87 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
BOOL aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
BOOL aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..3}
BOOL aux98 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux99 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{1..3}
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux107 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux109 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux110 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux115 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux116 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux123 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux124 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux126 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux127 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux128 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux129 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux131 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux136 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux137 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux138 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux141 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux142 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux143 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux144 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux145 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux150 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux153 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux154 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{2..3}
BOOL aux159 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux160 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux161 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux162 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux163 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux164 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux165 #
{0..3}
DISCRETE aux166 #( - M_00002_00011 + 3)
{-48..-45}
**CONSTRAINTS**
w-inintervalset(aux166, [-48,-47,-45,-45])
**VARIABLES**
DISCRETE aux167 #( - M_00002_00004 + M_00002_00007)
{-4..13}
**CONSTRAINTS**
w-inintervalset(aux167, [-4,4,7,7,9,13])
**VARIABLES**
DISCRETE aux168 #( - M_00002_00005 + M_00002_00008)
{2..6}
**CONSTRAINTS**
w-inintervalset(aux168, [2,2,4,4,6,6])
**VARIABLES**
DISCRETE aux169 #( - M_00002_00008 + M_00002_00011)
{26..30}
**CONSTRAINTS**
w-inintervalset(aux169, [26,27,29,30])
**VARIABLES**
DISCRETE aux170 #( - M_00002_00008 + M_00002_00009)
{4..30}
**CONSTRAINTS**
w-inintervalset(aux170, [4,4,13,13,17,17,19,19,23,23,25,27,29,30])
**VARIABLES**
DISCRETE aux171 #( - M_00002_00009 + M_00002_00010)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux171, [-13,-12,-10,-10,-7,-6,-4,-2,0,0,4,4,6,6,10,10,13,13])
**VARIABLES**
DISCRETE aux172 #( - M_00002_00010 + M_00002_00011)
{3..13}
**CONSTRAINTS**
w-inintervalset(aux172, [3,4,6,7,10,10,12,13])
**VARIABLES**
DISCRETE aux173 #( - M_00002_00007 + M_00002_00008)
{4..17}
**CONSTRAINTS**
w-inintervalset(aux173, [4,4,6,6,9,9,11,13,15,17])
**VARIABLES**
DISCRETE aux174 #( - M_00002_00006 + M_00002_00007)
{-1..13}
**CONSTRAINTS**
w-inintervalset(aux174, [-1,4,10,13])
**VARIABLES**
DISCRETE aux175 #(M_00003_00004 + -50)
{-42..-29}
**CONSTRAINTS**
w-inintervalset(aux175, [-42,-40,-38,-38,-31,-31,-29,-29])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00005 + M_00003_00008)
{0..32}
**CONSTRAINTS**
w-inintervalset(aux176, [0,0,2,2,4,4,6,6,13,13,17,17,19,19,23,23,25,27,29,32])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00007 + M_00003_00008)
{0..43}
**CONSTRAINTS**
w-inintervalset(aux177, [0,0,2,2,4,4,6,6,9,9,11,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00008 + M_00003_00009)
{-13..27}
**CONSTRAINTS**
w-inintervalset(aux178, [-13,-12,-10,-10,-7,-6,-4,4,6,7,10,10,12,13,17,17,19,19,23,23,25,27])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00009 + M_00003_00010)
{-3..26}
**CONSTRAINTS**
w-inintervalset(aux179, [-3,4,6,7,10,10,12,13,23,23,25,26])
**VARIABLES**
DISCRETE aux180 #( - M_00003_00004 + M_00003_00005)
{-2..17}
**CONSTRAINTS**
w-inintervalset(aux180, [-2,-2,0,0,2,2,4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux181 #( - M_00003_00006 + M_00003_00007)
{-1..17}
**CONSTRAINTS**
w-inintervalset(aux181, [-1,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux182 #( - M_00003_00006 + M_00003_00009)
{16..43}
**CONSTRAINTS**
w-inintervalset(aux182, [16,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux183 #( - M_00003_00010 + 3)
{-48..-45}
**CONSTRAINTS**
w-inintervalset(aux183, [-48,-47,-45,-45])
**VARIABLES**
DISCRETE aux184 #( - M_00003_00007 + M_00003_00010)
{23..43}
**CONSTRAINTS**
w-inintervalset(aux184, [23,23,25,27,29,32,36,36,38,43])
**VARIABLES**
DISCRETE aux185 #(M_00003_00006 + -50)
{-42..-29}
**CONSTRAINTS**
w-inintervalset(aux185, [-42,-40,-38,-38,-31,-31,-29,-29])
**VARIABLES**
DISCRETE aux186 #( - M_00003_00005 + M_00003_00006)
{-17..2}
**CONSTRAINTS**
w-inintervalset(aux186, [-17,-15,-13,-9,-7,-6,-4,-4,-2,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux187 #( - M_00003_00004 + M_00003_00007)
{-4..17}
**CONSTRAINTS**
w-inintervalset(aux187, [-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00003 + M_00004_00006)
{-42..17}
**CONSTRAINTS**
w-inintervalset(aux188, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00007 + M_00004_00008)
{-30..43}
**CONSTRAINTS**
w-inintervalset(aux189, [-30,-29,-27,-25,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00008 + M_00004_00009)
{-13..30}
**CONSTRAINTS**
w-inintervalset(aux190, [-13,-12,-10,-10,-7,-6,-4,4,6,7,10,10,12,13,17,17,19,19,23,23,25,27,29,30])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00006 + M_00004_00007)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux191, [-40,-38,-36,-34,-32,-32,-30,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00006 + M_00004_00009)
{0..43}
**CONSTRAINTS**
w-inintervalset(aux192, [0,0,2,4,6,7,10,10,12,13,17,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00005 + M_00004_00006)
{-30..29}
**CONSTRAINTS**
w-inintervalset(aux193, [-30,-28,-26,-26,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,29])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00005 + M_00004_00008)
{-4..43}
**CONSTRAINTS**
w-inintervalset(aux194, [-4,-4,0,0,2,2,4,4,6,6,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00007 + 3)
{-48..-5}
**CONSTRAINTS**
w-inintervalset(aux195, [-48,-47,-45,-45,-41,-41,-35,-35,-22,-22,-18,-18,-16,-16,-9,-9,-7,-5])
**VARIABLES**
DISCRETE aux196 #( - M_00004_00009 + 3)
{-48..-35}
**CONSTRAINTS**
w-inintervalset(aux196, [-48,-47,-45,-45,-41,-41,-35,-35])
**VARIABLES**
DISCRETE aux197 #(M_00004_00003 + -10)
{-2..40}
**CONSTRAINTS**
w-inintervalset(aux197, [-2,0,2,2,9,9,11,11,15,15,28,28,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux198 #( - M_00004_00004 + M_00004_00005)
{-17..30}
**CONSTRAINTS**
w-inintervalset(aux198, [-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,26,26,28,30])
**VARIABLES**
DISCRETE aux199 #( - M_00004_00004 + M_00004_00007)
{-13..43}
**CONSTRAINTS**
w-inintervalset(aux199, [-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux200 #(M_00004_00005 + -10)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux200, [-2,0,2,2,9,9,11,11,15,15,28,28])
**VARIABLES**
DISCRETE aux201 #( - M_00004_00003 + M_00004_00004)
{-42..13}
**CONSTRAINTS**
w-inintervalset(aux201, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00004 + M_00005_00005)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux202, [-43,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux203 #( - M_00005_00002 + M_00005_00005)
{-30..41}
**CONSTRAINTS**
w-inintervalset(aux203, [-30,-28,-26,-26,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,41])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00003 + M_00005_00006)
{-42..43}
**CONSTRAINTS**
w-inintervalset(aux204, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux205 #(-1 - M_00005_00009)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux205, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00004 + M_00005_00007)
{-30..43}
**CONSTRAINTS**
w-inintervalset(aux206, [-30,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux207 #(-44 + M_00005_00004)
{-36..7}
**CONSTRAINTS**
w-inintervalset(aux207, [-36,-34,-32,-32,-25,-25,-23,-23,-19,-19,-6,-6,0,0,4,4,6,7])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00006 + M_00005_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux208, [-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux209 #( - M_00005_00007 + M_00005_00008)
{-30..48}
**CONSTRAINTS**
w-inintervalset(aux209, [-30,-29,-27,-25,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-7,-6,-4,4,6,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux210 #( - M_00005_00006 + M_00005_00009)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux210, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux211 #( - M_00005_00008 + M_00005_00009)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux211, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,-6,-4,4,6,7,10,10,12,13,17,17,19,19,23,23,25,27,29,30])
**VARIABLES**
DISCRETE aux212 #( - M_00005_00002 + M_00005_00003)
{-30..42}
**CONSTRAINTS**
w-inintervalset(aux212, [-30,-28,-26,-26,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,42])
**VARIABLES**
DISCRETE aux213 #( - M_00005_00003 + M_00005_00004)
{-42..39}
**CONSTRAINTS**
w-inintervalset(aux213, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,39])
**VARIABLES**
DISCRETE aux214 #(-44 + M_00005_00002)
{-36..-6}
**CONSTRAINTS**
w-inintervalset(aux214, [-36,-34,-32,-32,-25,-25,-23,-23,-19,-19,-6,-6])
**VARIABLES**
DISCRETE aux215 #( - M_00005_00005 + M_00005_00006)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux215, [-43,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux216 #( - M_00005_00005 + M_00005_00008)
{-17..43}
**CONSTRAINTS**
w-inintervalset(aux216, [-17,-17,-13,-12,-10,-10,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00002 + M_00006_00003)
{-42..43}
**CONSTRAINTS**
w-inintervalset(aux217, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00001 + M_00006_00004)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux218, [-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux219 #( - M_00006_00001 + M_00006_00002)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux219, [-41,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,30])
**VARIABLES**
DISCRETE aux220 #( - M_00006_00002 + M_00006_00005)
{-42..43}
**CONSTRAINTS**
w-inintervalset(aux220, [-42,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux221 #(-1 - M_00006_00008)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux221, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux222 #( - M_00006_00005 + M_00006_00006)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux222, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux223 #( - M_00006_00006 + M_00006_00007)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux223, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux224 #( - M_00006_00005 + M_00006_00008)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux224, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux225 #( - M_00006_00007 + M_00006_00008)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux225, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux226 #( - M_00006_00004 + M_00006_00005)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux226, [-43,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,7,9,13,15,19,22,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux227 #( - M_00006_00004 + M_00006_00007)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux227, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux228 #( - M_00006_00003 + M_00006_00004)
{-47..43}
**CONSTRAINTS**
w-inintervalset(aux228, [-47,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux229 #( - M_00006_00003 + M_00006_00006)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux229, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux230 #( - M_00007_00004 + M_00007_00007)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux230, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux231 #( - M_00007_00002 + M_00007_00003)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux231, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux232 #( - M_00007_00004 + M_00007_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux232, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux233 #( - M_00007_00006 + M_00007_00007)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux233, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux234 #( - M_00007_00007 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux234, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux235 #( - M_00007_00003 + M_00007_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux235, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux236 #( - M_00007_00001 + M_00007_00004)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux236, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux237 #( - M_00007_00003 + M_00007_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux237, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux238 #( - M_00007_00005 + M_00007_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux238, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux239 #( - M_00007_00001 + M_00007_00002)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux239, [-43,-38,-36,-34,-32,-25,-23,-23,-19,-19,-17,-15,-13,-9,-7,-6,-4,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux240 #( - M_00007_00002 + M_00007_00005)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux240, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,4,6,7,9,13,15,17,19,19,23,23,25,32,34,36,38,43])
**VARIABLES**
DISCRETE aux241 #( - M_00008_00001 + M_00008_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux241, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux242 #( - M_00008_00005 + M_00008_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux242, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux243 #( - M_00008_00004 + M_00008_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux243, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux244 #( - M_00008_00003 + M_00008_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux244, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux245 #( - M_00008_00002 + M_00008_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux245, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux246 #( - M_00008_00001 + M_00008_00002)
{-48..47}
**CONSTRAINTS**
w-inintervalset(aux246, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,47])
**VARIABLES**
DISCRETE aux247 #( - M_00008_00006 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux247, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux248 #( - M_00008_00003 + M_00008_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux248, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux249 #( - M_00008_00002 + M_00008_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux249, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux250 #( - M_00009_00001 + M_00009_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux250, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux251 #(-1 - M_00009_00005)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux251, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux252 #( - M_00009_00001 + M_00009_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux252, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux253 #( - M_00009_00002 + M_00009_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux253, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux254 #( - M_00009_00002 + M_00009_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux254, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux255 #( - M_00009_00003 + M_00009_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux255, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux256 #( - M_00009_00004 + M_00009_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux256, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux257 #( - M_00010_00002 + M_00010_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux257, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux258 #( - M_00010_00003 + M_00010_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux258, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux259 #( - M_00010_00001 + M_00010_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux259, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux260 #( - M_00010_00001 + M_00010_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux260, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux261 #( - M_00010_00004 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux261, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux262 #( - M_00011_00001 + M_00011_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux262, [-48,-47,-45,-45,-43,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux263 #( - M_00011_00002 + M_00011_00003)
{-39..48}
**CONSTRAINTS**
w-inintervalset(aux263, [-39,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux264 #( - M_00011_00003 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux264, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
DISCRETE aux265 #( - M_00012_00001 + M_00012_00002)
{-39..48}
**CONSTRAINTS**
w-inintervalset(aux265, [-39,-38,-36,-34,-32,-25,-23,-22,-19,-15,-13,-9,-7,7,9,13,15,19,22,23,25,32,34,36,38,43,45,45,47,48])
**VARIABLES**
DISCRETE aux266 #( - M_00012_00002 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux266, [-52,-51,-49,-49,-45,-45,-39,-39,-26,-26,-22,-22,-20,-20,-13,-13,-11,-9,-4,-4])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[44, 10, 50, 12, 19, 9, 8, 21, 25, 38, 48, 51, 3]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux165)
reify(gaceq(M_00002_00007,M_00003_00007), aux13)
reify(gaceq(M_00007_00006,M_00006_00006), aux14)
div(M_00002_00008, 13, 1)
div(M_00002_00007, 13, aux16)
div(M_00007_00001, 13, aux17)
div(M_00007_00007, 13, aux18)
reify(gaceq(M_00007_00002,M_00006_00002), aux19)
reify(gaceq(M_00003_00009,M_00004_00008), aux20)
div(M_00010_00004, 13, aux21)
div(M_00010_00001, 13, aux22)
div(M_00010_00003, 13, aux23)
div(M_00010_00002, 13, aux24)
reify(gaceq(M_00008_00004,M_00009_00004), aux25)
reify(gaceq(M_00004_00006,M_00005_00006), aux26)
reify(gaceq(M_00005_00007,M_00006_00006), aux27)
reify(gaceq(M_00010_00001,M_00009_00001), aux28)
reify(gaceq(M_00010_00004,M_00009_00005), aux29)
reify(gaceq(M_00004_00009,M_00005_00008), aux30)
reify(gaceq(M_00010_00004,M_00009_00004), aux31)
reify(gaceq(M_00010_00002,M_00009_00003), aux32)
div(M_00004_00008, 13, aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00004, 13, aux35)
reify(gaceq(M_00007_00007,M_00006_00008), aux36)
reify(gaceq(M_00005_00004,M_00006_00004), aux37)
reify(gaceq(M_00004_00006,M_00005_00005), aux38)
reify(gaceq(M_00003_00008,M_00004_00007), aux39)
div(M_00002_00009, 13, aux40)
div(M_00002_00010, 13, aux41)
reify(gaceq(M_00011_00003,M_00012_00002), aux42)
reify(gaceq(M_00011_00001,M_00012_00001), aux43)
reify(gaceq(M_00005_00005,M_00006_00005), aux44)
reify(gaceq(M_00007_00006,M_00008_00005), aux45)
reify(gaceq(M_00008_00004,M_00009_00003), aux46)
reify(gaceq(M_00007_00003,M_00006_00003), aux47)
reify(gaceq(M_00003_00007,M_00004_00007), aux48)
reify(gaceq(M_00003_00007,M_00004_00006), aux49)
reify(gaceq(M_00005_00003,M_00006_00003), aux50)
reify(gaceq(M_00003_00010,M_00004_00009), aux51)
reify(gaceq(M_00005_00007,M_00006_00007), aux52)
reify(gaceq(M_00010_00004,M_00011_00003), aux53)
reify(gaceq(M_00010_00001,M_00011_00001), aux54)
reify(gaceq(M_00010_00002,M_00011_00002), aux55)
reify(gaceq(M_00002_00011,M_00003_00010), aux56)
div(M_00003_00004, 13, aux57)
reify(gaceq(M_00007_00002,M_00008_00002), aux58)
reify(gaceq(M_00002_00004,M_00003_00004), aux59)
div(M_00005_00002, 13, aux60)
div(M_00005_00009, 13, aux61)
div(M_00008_00001, 13, aux62)
div(M_00008_00006, 13, aux63)
div(M_00006_00007, 13, aux64)
div(M_00006_00006, 13, aux65)
div(M_00006_00003, 13, aux66)
div(M_00006_00002, 13, aux67)
reify(gaceq(M_00005_00009,M_00006_00008), aux68)
reify(gaceq(M_00010_00003,M_00011_00003), aux69)
reify(gaceq(M_00010_00003,M_00011_00002), aux70)
reify(gaceq(M_00010_00002,M_00009_00002), aux71)
reify(gaceq(M_00010_00003,M_00009_00003), aux72)
reify(gaceq(M_00004_00008,M_00005_00008), aux73)
reify(gaceq(M_00004_00005,M_00005_00004), aux74)
reify(gaceq(M_00002_00010,M_00003_00010), aux75)
reify(gaceq(M_00002_00009,M_00003_00008), aux76)
reify(gaceq(M_00007_00001,M_00006_00001), aux77)
div(M_00009_00004, 13, aux78)
div(M_00009_00002, 13, aux79)
reify(gaceq(M_00007_00006,M_00006_00007), aux80)
reify(gaceq(M_00007_00006,M_00008_00006), aux81)
reify(gaceq(M_00007_00003,M_00008_00002), aux82)
div(M_00011_00002, 13, aux83)
reify(gaceq(M_00008_00003,M_00009_00002), aux84)
reify(gaceq(M_00008_00005,M_00009_00005), aux85)
reify(gaceq(M_00004_00008,M_00005_00007), aux86)
reify(gaceq(M_00005_00008,M_00006_00007), aux87)
reify(gaceq(M_00010_00003,M_00009_00004), aux88)
div(M_00006_00004, 13, aux89)
div(M_00006_00005, 13, aux90)
div(M_00006_00001, 13, aux91)
div(M_00006_00008, 13, aux92)
div(M_00003_00006, 13, aux93)
div(M_00003_00007, 13, aux94)
div(M_00003_00008, 13, aux95)
div(M_00003_00009, 13, aux96)
div(M_00003_00005, 13, 1)
reify(gaceq(M_00005_00005,M_00006_00004), aux98)
reify(gaceq(M_00002_00005,M_00003_00005), aux99)
reify(gaceq(M_00003_00005,M_00004_00004), aux100)
reify(gaceq(M_00003_00009,M_00004_00009), aux101)
reify(gaceq(M_00005_00003,M_00006_00002), aux102)
reify(gaceq(M_00005_00008,M_00006_00008), aux103)
div(M_00005_00007, 13, aux104)
div(M_00005_00008, 13, aux105)
div(M_00005_00003, 13, aux106)
reify(gaceq(M_00005_00006,M_00006_00006), aux107)
reify(gaceq(M_00004_00004,M_00005_00003), aux108)
reify(gaceq(M_00005_00002,M_00006_00002), aux109)
reify(gaceq(M_00003_00004,M_00004_00004), aux110)
div(M_00007_00002, 13, aux111)
div(M_00007_00003, 13, aux112)
div(M_00007_00006, 13, aux113)
div(M_00007_00005, 13, aux114)
reify(gaceq(M_00008_00003,M_00009_00003), aux115)
reify(gaceq(M_00008_00005,M_00009_00004), aux116)
div(M_00007_00004, 13, aux117)
reify(gaceq(M_00003_00006,M_00004_00005), aux118)
reify(gaceq(M_00007_00004,M_00008_00003), aux119)
reify(gaceq(M_00005_00004,M_00006_00003), aux120)
reify(gaceq(M_00003_00008,M_00004_00008), aux121)
div(M_00004_00007, 13, aux122)
reify(gaceq(M_00008_00001,M_00009_00001), aux123)
div(M_00004_00005, 13, aux124)
div(M_00004_00006, 13, aux125)
reify(gaceq(M_00003_00005,M_00004_00005), aux126)
reify(gaceq(M_00002_00006,M_00003_00006), aux127)
reify(gaceq(M_00004_00007,M_00005_00006), aux128)
reify(gaceq(M_00008_00006,M_00009_00005), aux129)
reify(gaceq(M_00007_00003,M_00006_00004), aux130)
reify(gaceq(M_00003_00006,M_00004_00006), aux131)
div(M_00008_00003, 13, aux132)
div(M_00008_00004, 13, aux133)
div(M_00008_00005, 13, aux134)
div(M_00008_00002, 13, aux135)
reify(gaceq(M_00008_00002,M_00009_00002), aux136)
reify(gaceq(M_00004_00005,M_00005_00005), aux137)
reify(gaceq(M_00007_00005,M_00008_00005), aux138)
reify(gaceq(M_00007_00007,M_00006_00007), aux139)
reify(gaceq(M_00007_00002,M_00006_00003), aux140)
reify(gaceq(M_00005_00006,M_00006_00005), aux141)
reify(gaceq(M_00007_00004,M_00008_00004), aux142)
reify(gaceq(M_00007_00007,M_00008_00006), aux143)
reify(gaceq(M_00002_00010,M_00003_00009), aux144)
reify(gaceq(M_00007_00005,M_00008_00004), aux145)
reify(gaceq(M_00002_00009,M_00003_00009), aux146)
reify(gaceq(M_00002_00008,M_00003_00007), aux147)
reify(gaceq(M_00002_00008,M_00003_00008), aux148)
reify(gaceq(M_00007_00005,M_00006_00005), aux149)
div(M_00005_00004, 13, aux150)
div(M_00005_00005, 13, aux151)
div(M_00005_00006, 13, aux152)
reify(gaceq(M_00004_00003,M_00005_00003), aux153)
reify(gaceq(M_00007_00005,M_00006_00006), aux154)
div(M_00009_00005, 13, aux155)
div(M_00009_00003, 13, aux156)
div(M_00009_00001, 13, aux157)
div(M_00004_00009, 13, aux158)
reify(gaceq(M_00004_00007,M_00005_00007), aux159)
reify(gaceq(M_00007_00004,M_00006_00005), aux160)
reify(gaceq(M_00007_00003,M_00008_00003), aux161)
reify(gaceq(M_00007_00001,M_00008_00001), aux162)
reify(gaceq(M_00007_00004,M_00006_00004), aux163)
reify(gaceq(M_00004_00004,M_00005_00004), aux164)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,8),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,21),w-literal(M_00002_00009,25),w-literal(M_00002_00010,38),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,21),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,21),w-literal(M_00002_00009,51),w-literal(M_00002_00010,38),w-literal(M_00002_00011,48)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,25),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,8),w-literal(M_00002_00005,19),w-literal(M_00002_00006,9),w-literal(M_00002_00007,21),w-literal(M_00002_00008,25),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)}),watched-and({w-literal(M_00002_00004,12),w-literal(M_00002_00005,21),w-literal(M_00002_00006,9),w-literal(M_00002_00007,8),w-literal(M_00002_00008,25),w-literal(M_00002_00009,38),w-literal(M_00002_00010,48),w-literal(M_00002_00011,51)})})
watched-or({watched-and({modulo(aux166,13,0),w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux148,1),w-literal(aux146,1),w-literal(aux75,1)}),watched-and({w-literal(aux99,1),w-literal(aux127,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux147,1),w-literal(aux76,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux167,13,0),div(M_00002_00004, 13, aux16)})}),watched-and({w-literal(aux59,1),w-literal(aux127,1),w-literal(aux13,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux76,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux168,13,0),div(M_00002_00005, 13, 1)})}),watched-and({w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux146,1),w-literal(aux75,1),gaceq(M_00002_00011,M_00003_00008),modulo(aux169,13,0)}),watched-and({w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux76,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux170,13,0),w-literal(aux40,1)})}),watched-and({w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux148,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux171,13,0),gaceq(aux40,aux41)})}),watched-and({w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux148,1),w-literal(aux146,1),w-literal(aux56,1),watched-or({modulo(aux172,13,0),div(M_00002_00011, 13, aux41)})}),watched-and({w-literal(aux59,1),w-literal(aux99,1),w-literal(aux127,1),w-literal(aux147,1),w-literal(aux76,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux173,13,0),w-literal(aux16,1)})}),watched-and({w-literal(aux59,1),w-literal(aux99,1),gaceq(M_00002_00007,M_00003_00006),w-literal(aux147,1),w-literal(aux76,1),w-literal(aux144,1),w-literal(aux56,1),watched-or({modulo(aux174,13,0),div(M_00002_00006, 13, aux16)})})})
watched-or({watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux100,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),modulo(aux175,13,0)}),watched-and({w-literal(aux110,1),w-literal(aux131,1),w-literal(aux48,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux176,13,0),w-literal(aux95,1)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux131,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux177,13,0),gaceq(aux94,aux95)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux131,1),w-literal(aux48,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux178,13,0),gaceq(aux95,aux96)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux131,1),w-literal(aux48,1),w-literal(aux121,1),w-literal(aux51,1),watched-or({modulo(aux179,13,0),div(M_00003_00010, 13, aux96)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux100,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux180,13,0),w-literal(aux57,1)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux49,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux181,13,0),gaceq(aux93,aux94)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux48,1),w-literal(aux121,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux51,1),watched-or({modulo(aux182,13,0),gaceq(aux93,aux96)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux131,1),w-literal(aux48,1),w-literal(aux121,1),w-literal(aux101,1),modulo(aux183,13,0),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),w-literal(aux131,1),w-literal(aux121,1),w-literal(aux101,1),gaceq(M_00003_00010,M_00004_00007),modulo(aux184,13,0),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux110,1),w-literal(aux126,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux49,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),modulo(aux185,13,0)}),watched-and({w-literal(aux110,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux186,13,0),w-literal(aux93,1)}),w-literal(M_00004_00003,50)}),watched-and({w-literal(aux126,1),w-literal(aux131,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux39,1),w-literal(aux20,1),w-literal(aux51,1),watched-or({modulo(aux187,13,0),gaceq(aux57,aux94)}),w-literal(M_00004_00003,50)})})
watched-or({watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux164,1),w-literal(aux137,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux34,aux125),modulo(aux188,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux122,aux33),modulo(aux189,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux159,1),w-literal(aux30,1),watched-or({gaceq(aux33,aux158),modulo(aux190,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux125,aux122),modulo(aux191,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux159,1),w-literal(aux73,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux125,aux158),modulo(aux192,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux38,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux124,aux125),modulo(aux193,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux26,1),w-literal(aux159,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux30,1),watched-or({gaceq(aux124,aux33),modulo(aux194,13,0)})}),watched-and({w-literal(M_00005_00007,3),w-literal(M_00005_00002,10),watched-or({modulo(aux195,13,0),w-literal(aux122,0)}),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux73,1),gaceq(M_00004_00009,M_00005_00009)}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),modulo(aux196,13,0),w-literal(aux153,1),w-literal(aux164,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux159,1),w-literal(aux73,1)}),watched-and({w-literal(M_00005_00009,3),watched-or({modulo(aux197,13,0),w-literal(aux34,0)}),gaceq(M_00004_00003,M_00005_00002),w-literal(aux108,1),w-literal(aux74,1),w-literal(aux38,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1)}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux74,1),w-literal(aux38,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux35,aux124),modulo(aux198,13,0)})}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux153,1),w-literal(aux137,1),w-literal(aux26,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux35,aux122),modulo(aux199,13,0)})}),watched-and({w-literal(M_00005_00009,3),watched-or({modulo(aux200,13,0),w-literal(aux124,0)}),w-literal(aux153,1),w-literal(aux164,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux38,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1)}),watched-and({w-literal(M_00005_00009,3),w-literal(M_00005_00002,10),w-literal(aux108,1),w-literal(aux74,1),w-literal(aux38,1),w-literal(aux128,1),w-literal(aux86,1),w-literal(aux30,1),watched-or({gaceq(aux34,aux35),modulo(aux201,13,0)})})})
watched-or({watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux202,13,0),gaceq(aux150,aux151)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux50,1),w-literal(aux37,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux203,13,0),gaceq(aux60,aux151)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux37,1),w-literal(aux44,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux204,13,0),gaceq(aux106,aux152)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux44,1),w-literal(aux107,1),w-literal(aux52,1),w-literal(aux103,1),modulo(aux205,13,0),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux44,1),w-literal(aux107,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux206,13,0),gaceq(aux150,aux104)}),w-literal(M_00006_00001,44)}),watched-and({watched-or({w-literal(aux150,3),modulo(aux207,13,0)}),w-literal(aux109,1),w-literal(aux50,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux44,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux208,13,0),gaceq(aux152,aux104)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux44,1),w-literal(aux107,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux209,13,0),gaceq(aux104,aux105)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux44,1),w-literal(aux52,1),w-literal(aux103,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux210,13,0),gaceq(aux152,aux61)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux44,1),w-literal(aux107,1),w-literal(aux52,1),w-literal(aux68,1),watched-or({modulo(aux211,13,0),gaceq(aux105,aux61)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux102,1),w-literal(aux120,1),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux212,13,0),gaceq(aux60,aux106)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux120,1),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux213,13,0),gaceq(aux106,aux150)}),w-literal(M_00006_00001,44)}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux102,1),w-literal(aux120,1),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),modulo(aux214,13,0)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux141,1),w-literal(aux27,1),w-literal(aux87,1),w-literal(aux68,1),watched-or({modulo(aux215,13,0),gaceq(aux151,aux152)}),w-literal(M_00006_00001,44)}),watched-and({w-literal(aux109,1),w-literal(aux50,1),w-literal(aux37,1),w-literal(aux107,1),w-literal(aux52,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux68,1),watched-or({modulo(aux216,13,0),gaceq(aux151,aux105)}),w-literal(M_00006_00001,44)})})
watched-or({watched-and({w-literal(aux77,1),w-literal(aux140,1),w-literal(aux130,1),w-literal(aux160,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux67,aux66),modulo(aux217,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux160,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux91,aux89),modulo(aux218,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux140,1),w-literal(aux130,1),w-literal(aux160,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux91,aux67),modulo(aux219,13,0)})}),watched-and({w-literal(aux77,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux47,1),w-literal(aux163,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux67,aux90),modulo(aux220,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux163,1),w-literal(aux149,1),w-literal(aux14,1),w-literal(aux139,1),modulo(aux221,13,0)}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux163,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux90,aux65),modulo(aux222,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux163,1),w-literal(aux149,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux65,aux64),modulo(aux223,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux163,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux14,1),w-literal(aux139,1),watched-or({gaceq(aux90,aux92),modulo(aux224,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux163,1),w-literal(aux149,1),w-literal(aux14,1),w-literal(aux36,1),watched-or({gaceq(aux64,aux92),modulo(aux225,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),w-literal(aux160,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux89,aux90),modulo(aux226,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux47,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux149,1),w-literal(aux14,1),w-literal(aux36,1),watched-or({gaceq(aux89,aux64),modulo(aux227,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),w-literal(aux130,1),w-literal(aux160,1),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux66,aux89),modulo(aux228,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux19,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux163,1),w-literal(aux149,1),w-literal(aux80,1),w-literal(aux36,1),watched-or({gaceq(aux66,aux65),modulo(aux229,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux230,13,0),gaceq(aux117,aux18)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux161,1),w-literal(aux138,1),w-literal(aux81,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux231,13,0),gaceq(aux111,aux112)}),w-literal(aux162,1),w-literal(aux82,1),w-literal(aux119,1),w-literal(aux145,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux232,13,0),gaceq(aux117,aux114)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux161,1),w-literal(aux145,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux233,13,0),gaceq(aux113,aux18)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux161,1),w-literal(aux142,1),w-literal(aux138,1),w-literal(aux143,1)}),watched-and({modulo(aux234,13,0),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux161,1),w-literal(aux142,1),w-literal(aux138,1),w-literal(aux81,1)}),watched-and({watched-or({modulo(aux235,13,0),gaceq(aux112,aux113)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux142,1),w-literal(aux138,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux236,13,0),gaceq(aux17,aux117)}),w-literal(aux58,1),w-literal(aux161,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux145,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux237,13,0),gaceq(aux112,aux117)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux119,1),w-literal(aux145,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux238,13,0),gaceq(aux114,aux113)}),w-literal(aux162,1),w-literal(aux58,1),w-literal(aux161,1),w-literal(aux142,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux239,13,0),gaceq(aux17,aux111)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux82,1),w-literal(aux119,1),w-literal(aux145,1),w-literal(aux45,1),w-literal(aux143,1)}),watched-and({watched-or({modulo(aux240,13,0),gaceq(aux111,aux114)}),w-literal(aux162,1),w-literal(aux161,1),w-literal(aux142,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux45,1),w-literal(aux143,1)})})
watched-or({watched-and({watched-or({gaceq(aux62,aux133),modulo(aux241,13,0)}),w-literal(aux136,1),w-literal(aux115,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux116,1),w-literal(aux129,1)}),watched-and({watched-or({gaceq(aux134,aux63),modulo(aux242,13,0)}),w-literal(aux123,1),w-literal(aux136,1),w-literal(aux115,1),w-literal(aux25,1),w-literal(aux129,1)}),watched-and({watched-or({gaceq(aux133,aux134),modulo(aux243,13,0)}),w-literal(aux123,1),w-literal(aux136,1),w-literal(aux115,1),w-literal(aux116,1),w-literal(aux129,1)}),watched-and({watched-or({gaceq(aux132,aux133),modulo(aux244,13,0)}),w-literal(aux123,1),w-literal(aux136,1),w-literal(aux46,1),w-literal(aux116,1),w-literal(aux129,1)}),watched-and({watched-or({gaceq(aux135,aux132),modulo(aux245,13,0)}),w-literal(aux123,1),w-literal(aux84,1),w-literal(aux46,1),w-literal(aux116,1),w-literal(aux129,1)}),watched-and({watched-or({gaceq(aux62,aux135),modulo(aux246,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux84,1),w-literal(aux46,1),w-literal(aux116,1),w-literal(aux129,1)}),watched-and({w-literal(aux123,1),w-literal(aux136,1),w-literal(aux115,1),w-literal(aux25,1),w-literal(aux85,1),modulo(aux247,13,0)}),watched-and({watched-or({gaceq(aux132,aux63),modulo(aux248,13,0)}),w-literal(aux123,1),w-literal(aux136,1),w-literal(aux25,1),w-literal(aux85,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux135,aux134),modulo(aux249,13,0)}),w-literal(aux123,1),w-literal(aux115,1),w-literal(aux25,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux129,1)})})
watched-or({watched-and({watched-or({modulo(aux250,13,0),gaceq(aux157,aux78)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux71,1),w-literal(aux72,1),w-literal(aux29,1)}),watched-and({modulo(aux251,13,0),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux72,1),w-literal(aux31,1)}),watched-and({watched-or({modulo(aux252,13,0),gaceq(aux157,aux79)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux32,1),w-literal(aux88,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux253,13,0),gaceq(aux79,aux155)}),w-literal(aux28,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux72,1),w-literal(aux31,1)}),watched-and({watched-or({modulo(aux254,13,0),gaceq(aux79,aux156)}),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux88,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux255,13,0),gaceq(aux156,aux78)}),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux88,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux256,13,0),gaceq(aux78,aux155)}),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux72,1),w-literal(aux29,1)})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux70,1),w-literal(aux53,1),watched-or({gaceq(aux24,aux23),modulo(aux257,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux55,1),w-literal(aux53,1),watched-or({gaceq(aux23,aux21),modulo(aux258,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux70,1),w-literal(aux53,1),watched-or({gaceq(aux22,aux24),modulo(aux259,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux69,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux22,aux21),modulo(aux260,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux55,1),w-literal(aux69,1),modulo(aux261,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux83),modulo(aux262,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux42,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux83),modulo(aux263,13,0)}),w-literal(aux43,1),w-literal(aux42,1)}),watched-and({modulo(aux264,13,0),w-literal(aux43,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux165),modulo(aux265,13,0)})}),watched-and({modulo(aux266,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00011,3],aux166)
weightedsumgeq([-1,1],[M_00002_00011,3],aux166)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux167)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux167)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux168)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux168)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux169)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux169)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux170)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux170)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux171)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux171)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux172)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux172)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux173)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux173)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux174)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux174)
sumleq([M_00003_00004,-50],aux175)
sumgeq([M_00003_00004,-50],aux175)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux176)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux176)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux177)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux177)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux178)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux178)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux179)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux179)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux180)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux180)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux181)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux181)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux182)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux182)
weightedsumleq([-1,1],[M_00003_00010,3],aux183)
weightedsumgeq([-1,1],[M_00003_00010,3],aux183)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux184)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux184)
sumleq([M_00003_00006,-50],aux185)
sumgeq([M_00003_00006,-50],aux185)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux186)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux186)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux187)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux187)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux188)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux188)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux189)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux189)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux190)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux190)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux191)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux191)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux192)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux192)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux193)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux193)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux194)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux194)
weightedsumleq([-1,1],[M_00004_00007,3],aux195)
weightedsumgeq([-1,1],[M_00004_00007,3],aux195)
weightedsumleq([-1,1],[M_00004_00009,3],aux196)
weightedsumgeq([-1,1],[M_00004_00009,3],aux196)
sumleq([M_00004_00003,-10],aux197)
sumgeq([M_00004_00003,-10],aux197)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux198)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux198)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux199)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux199)
sumleq([M_00004_00005,-10],aux200)
sumgeq([M_00004_00005,-10],aux200)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux201)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux201)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux202)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux202)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux203)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux203)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux204)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux204)
weightedsumleq([1,-1],[-1,M_00005_00009],aux205)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux205)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux206)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux206)
sumleq([-44,M_00005_00004],aux207)
sumgeq([-44,M_00005_00004],aux207)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux208)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux208)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux209)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux209)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux210)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux210)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux211)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux211)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux212)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux212)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux213)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux213)
sumleq([-44,M_00005_00002],aux214)
sumgeq([-44,M_00005_00002],aux214)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux215)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux215)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux216)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux216)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux217)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux217)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux218)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux218)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux219)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux219)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux220)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux220)
weightedsumleq([1,-1],[-1,M_00006_00008],aux221)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux221)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux222)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux222)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux223)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux223)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux224)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux224)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux225)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux225)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux226)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux226)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux227)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux227)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux228)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux228)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux229)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux229)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux230)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux230)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux231)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux231)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux232)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux232)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux233)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux233)
weightedsumleq([-1,1],[M_00007_00007,-1],aux234)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux234)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux235)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux235)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux236)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux236)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux237)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux237)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux238)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux238)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux239)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux239)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux240)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux240)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux241)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux241)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux242)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux242)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux243)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux243)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux244)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux244)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux245)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux245)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux246)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux246)
weightedsumleq([-1,1],[M_00008_00006,-1],aux247)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux247)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux248)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux248)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux249)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux249)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux250)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux250)
weightedsumleq([1,-1],[-1,M_00009_00005],aux251)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux251)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux252)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux252)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux253)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux253)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux254)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux254)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux255)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux255)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux256)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux256)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux257)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux257)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux258)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux258)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux259)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux259)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux260)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux260)
weightedsumleq([-1,1],[M_00010_00004,-1],aux261)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux261)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux262)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux262)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux263)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux263)
weightedsumleq([-1,1],[M_00011_00003,-1],aux264)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux264)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux265)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux265)
weightedsumleq([-1,1],[M_00012_00002,-1],aux266)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux266)
**EOF**
