MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 127
# CSE_active_eliminated_expressions = 615
# CSE_active_total_size = 381
**VARIABLES**
DISCRETE M_00002_00001 #
{9..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [9,10,12,12])
**VARIABLES**
DISCRETE M_00002_00002 #
{18..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [18,18,22,22])
**VARIABLES**
DISCRETE M_00002_00003 #
{9..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [9,10,12,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00002_00004 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00002_00005 #
{16..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00002_00006 #
{3..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [3,4,9,10,12,12,16,16])
**VARIABLES**
DISCRETE M_00002_00007 #
{3..4}
DISCRETE M_00002_00008 #
{2..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [2,4,9,10])
**VARIABLES**
DISCRETE M_00002_00009 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00002_00010 #
{10..32}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [10,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00003_00001 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [3,4,9,10,12,12])
**VARIABLES**
DISCRETE M_00003_00002 #
{9..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [9,10,12,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00003_00003 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00004 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00005 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00006 #
{3..16}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [3,4,9,10,12,12,16,16])
**VARIABLES**
DISCRETE M_00003_00007 #
{2..10}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [2,4,9,10])
**VARIABLES**
DISCRETE M_00003_00008 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00003_00009 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00004_00001 #
{3..22}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [3,4,9,10,12,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00003 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [3,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00006 #
{2..22}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [2,4,9,10,12,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00004_00008 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00005_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00006_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,4,9,10,12,12,16,16,18,18,22,22,32,32])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,4,9,10,12,12,16,16,18,18,22,22,32,32,37,37])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
BOOL aux17 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..2}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..2}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux21 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux22 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux24 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux25 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux33 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux38 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux39 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux40 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux41 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..2}
BOOL aux46 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux47 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux51 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux52 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux53 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux54 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux55 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux56 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
BOOL aux61 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux62 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..2}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..2}
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..2}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
DISCRETE aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux72 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux75 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux77 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux78 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux79 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux80 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux83 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux86 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
BOOL aux89 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux90 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
BOOL aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
BOOL aux95 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux98 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux99 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux108 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
BOOL aux117 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux119 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux124 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux125 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
BOOL aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
DISCRETE aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux129 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
DISCRETE aux130 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
BOOL aux131 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux132 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux133 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..2}
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
BOOL aux137 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux138 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux140 #
{0..2}
DISCRETE aux141 #( - M_00002_00005 + M_00002_00008)
{-35..-14}
**CONSTRAINTS**
w-inintervalset(aux141, [-35,-33,-30,-27,-23,-22,-20,-18,-16,-14])
**VARIABLES**
DISCRETE aux142 #( - M_00002_00002 + M_00002_00003)
{-13..4}
**CONSTRAINTS**
w-inintervalset(aux142, [-13,-12,-10,-8,-6,-6,-4,-4,-2,-2,0,0,4,4])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00003 + M_00002_00004)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux143, [-19,-18,-15,-12,-10,4,6,10,12,16,19,23,25,25,27,28])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00005 + M_00002_00006)
{-34..-13}
**CONSTRAINTS**
w-inintervalset(aux144, [-34,-33,-29,-27,-25,-25,-23,-18,-16,-13])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00001 + M_00002_00004)
{-9..28}
**CONSTRAINTS**
w-inintervalset(aux145, [-9,-5,-3,4,6,10,12,13,20,20,22,23,25,25,27,28])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00010 + -1)
{-33..-11}
**CONSTRAINTS**
w-inintervalset(aux146, [-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00004 + M_00002_00005)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux147, [-21,-21,-19,-19,-16,-14,-10,-10,-6,-4,-2,-2,0,0,2,2,4,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00002 + M_00002_00005)
{-6..19}
**CONSTRAINTS**
w-inintervalset(aux148, [-6,-6,-4,-4,-2,-2,0,0,4,4,10,10,14,15,19,19])
**VARIABLES**
DISCRETE aux149 #( - M_00002_00003 + M_00002_00006)
{-19..-6}
**CONSTRAINTS**
w-inintervalset(aux149, [-19,-18,-15,-12,-10,-6])
**VARIABLES**
DISCRETE aux150 #( - M_00002_00004 + M_00002_00007)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux150, [-33,-33,-29,-28,-19,-18,-15,-12,-9,-5,-1,1])
**VARIABLES**
DISCRETE aux151 #( - M_00002_00008 + M_00002_00009)
{-8..30}
**CONSTRAINTS**
w-inintervalset(aux151, [-8,-5,-2,3,5,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux152 #( - M_00002_00007 + M_00002_00010)
{6..29}
**CONSTRAINTS**
w-inintervalset(aux152, [6,9,12,15,18,19,28,29])
**VARIABLES**
DISCRETE aux153 #( - M_00002_00009 + M_00002_00010)
{-22..30}
**CONSTRAINTS**
w-inintervalset(aux153, [-22,-22,-20,-20,-16,-16,-14,-14,-12,-12,-10,-10,-8,-8,-6,-6,-4,-4,-2,-2,0,4,6,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux154 #( - M_00002_00006 + M_00002_00007)
{-13..1}
**CONSTRAINTS**
w-inintervalset(aux154, [-13,-12,-9,-5,-1,1])
**VARIABLES**
DISCRETE aux155 #( - M_00002_00006 + M_00002_00009)
{-14..29}
**CONSTRAINTS**
w-inintervalset(aux155, [-14,-12,-10,10,12,16,18,20,22,23,28,29])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00003 + M_00003_00004)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux156, [-21,-18,-16,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00001 + M_00003_00004)
{-9..34}
**CONSTRAINTS**
w-inintervalset(aux157, [-9,-5,-3,10,12,15,18,20,22,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00002 + M_00003_00005)
{-19..19}
**CONSTRAINTS**
w-inintervalset(aux158, [-19,-18,-15,-12,-10,4,6,10,12,16,19,19])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00003 + M_00003_00006)
{-34..7}
**CONSTRAINTS**
w-inintervalset(aux159, [-34,-33,-29,-27,-25,-25,-23,-18,-16,-12,-10,7])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00009 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux160, [-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00006 + M_00003_00007)
{-14..7}
**CONSTRAINTS**
w-inintervalset(aux161, [-14,-12,-10,-5,-3,1,5,7])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00007 + M_00003_00008)
{-8..30}
**CONSTRAINTS**
w-inintervalset(aux162, [-8,-5,-2,3,5,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00006 + M_00003_00009)
{-14..29}
**CONSTRAINTS**
w-inintervalset(aux163, [-14,-12,-10,10,12,16,18,20,22,23,28,29])
**VARIABLES**
DISCRETE aux164 #( - M_00003_00008 + M_00003_00009)
{-22..30}
**CONSTRAINTS**
w-inintervalset(aux164, [-22,-22,-20,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux165 #( - M_00003_00005 + M_00003_00006)
{-34..1}
**CONSTRAINTS**
w-inintervalset(aux165, [-34,-33,-29,-27,-25,-25,-23,-18,-16,-12,-10,1])
**VARIABLES**
DISCRETE aux166 #( - M_00003_00005 + M_00003_00008)
{-35..29}
**CONSTRAINTS**
w-inintervalset(aux166, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,29])
**VARIABLES**
DISCRETE aux167 #( - M_00003_00001 + M_00003_00002)
{-3..15}
**CONSTRAINTS**
w-inintervalset(aux167, [-3,10,12,15])
**VARIABLES**
DISCRETE aux168 #( - M_00003_00002 + M_00003_00003)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux168, [-19,-18,-15,-12,-10,4,6,10,12,16,19,23,25,25,27,28])
**VARIABLES**
DISCRETE aux169 #( - M_00003_00004 + M_00003_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux169, [-34,-33,-29,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux170 #( - M_00003_00004 + M_00003_00007)
{-35..7}
**CONSTRAINTS**
w-inintervalset(aux170, [-35,-33,-30,-27,-23,-22,-20,-18,-16,-12,-10,-5,-3,1,5,7])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00002 + M_00004_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux171, [-34,-33,-29,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00001 + M_00004_00004)
{-19..34}
**CONSTRAINTS**
w-inintervalset(aux172, [-19,-18,-16,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00002 + M_00004_00005)
{-34..28}
**CONSTRAINTS**
w-inintervalset(aux173, [-34,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,28])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00008 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux174, [-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00006 + M_00004_00007)
{-20..30}
**CONSTRAINTS**
w-inintervalset(aux175, [-20,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00007 + M_00004_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux176, [-30,-28,-23,-22,-20,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux177 #( - M_00004_00005 + M_00004_00006)
{-35..14}
**CONSTRAINTS**
w-inintervalset(aux177, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,14])
**VARIABLES**
DISCRETE aux178 #( - M_00004_00005 + M_00004_00008)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux178, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux179 #( - M_00004_00004 + M_00004_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux179, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux180 #( - M_00004_00004 + M_00004_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux180, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux181 #( - M_00004_00001 + M_00004_00002)
{-19..34}
**CONSTRAINTS**
w-inintervalset(aux181, [-19,-18,-15,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux182 #( - M_00004_00003 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux182, [-34,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,29,33,34])
**VARIABLES**
DISCRETE aux183 #( - M_00004_00003 + M_00004_00006)
{-35..13}
**CONSTRAINTS**
w-inintervalset(aux183, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,13])
**VARIABLES**
DISCRETE aux184 #(-1 - M_00005_00007)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux184, [-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00004 + M_00005_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux185, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00005 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux186, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00004 + M_00005_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux187, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux188 #( - M_00005_00006 + M_00005_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux188, [-30,-28,-23,-22,-20,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux189 #( - M_00005_00003 + M_00005_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux189, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux190 #( - M_00005_00003 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux190, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux191 #( - M_00005_00002 + M_00005_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux191, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux192 #( - M_00005_00002 + M_00005_00005)
{-35..34}
**CONSTRAINTS**
w-inintervalset(aux192, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,34])
**VARIABLES**
DISCRETE aux193 #( - M_00005_00001 + M_00005_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux193, [-34,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,34])
**VARIABLES**
DISCRETE aux194 #( - M_00005_00001 + M_00005_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux194, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00003 + M_00006_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux195, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00004 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux196, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux197 #( - M_00006_00003 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux197, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux198 #(-1 - M_00006_00006)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux198, [-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux199 #( - M_00006_00005 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux199, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,20,22,23,28,30])
**VARIABLES**
DISCRETE aux200 #( - M_00006_00002 + M_00006_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux200, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux201 #( - M_00006_00002 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux201, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux202 #( - M_00006_00001 + M_00006_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux202, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux203 #( - M_00006_00001 + M_00006_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux203, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux204 #( - M_00007_00001 + M_00007_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux204, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux205 #( - M_00007_00005 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux205, [-38,-38,-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux206 #( - M_00007_00001 + M_00007_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux206, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux207 #( - M_00007_00002 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux207, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux208 #( - M_00007_00002 + M_00007_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux208, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux209 #( - M_00007_00003 + M_00007_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux209, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux210 #( - M_00007_00004 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux210, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux211 #( - M_00008_00003 + M_00008_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux211, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux212 #( - M_00008_00001 + M_00008_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux212, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux213 #( - M_00008_00001 + M_00008_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux213, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux214 #( - M_00008_00002 + M_00008_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux214, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux215 #( - M_00008_00004 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux215, [-38,-38,-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux216 #( - M_00009_00001 + M_00009_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux216, [-35,-33,-30,-27,-25,-25,-23,-18,-16,-12,-10,10,12,16,18,23,25,25,27,30,33,35])
**VARIABLES**
DISCRETE aux217 #( - M_00009_00002 + M_00009_00003)
{-25..19}
**CONSTRAINTS**
w-inintervalset(aux217, [-25,-25,-23,-18,-16,-12,-10,10,12,16,18,19])
**VARIABLES**
DISCRETE aux218 #(-1 - M_00009_00003)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux218, [-38,-38,-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
DISCRETE aux219 #( - M_00010_00001 + M_00010_00002)
{-25..13}
**CONSTRAINTS**
w-inintervalset(aux219, [-25,-25,-23,-18,-16,-12,-10,10,12,13])
**VARIABLES**
DISCRETE aux220 #( - M_00010_00002 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux220, [-38,-38,-33,-33,-23,-23,-19,-19,-17,-17,-13,-13,-11,-10,-5,-3])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[12, 18, 22, 9, 37, 16, 3, 4, 2, 32, 10]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux140)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00005, 13, aux15)
div(M_00002_00003, 13, aux16)
reify(gaceq(M_00003_00009,M_00004_00008), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00003, 13, aux19)
div(M_00007_00005, 13, aux20)
reify(gaceq(M_00005_00002,M_00006_00002), aux21)
reify(gaceq(M_00007_00002,M_00006_00002), aux22)
reify(gaceq(M_00003_00002,M_00004_00002), aux23)
reify(gaceq(M_00005_00003,M_00006_00003), aux24)
reify(gaceq(M_00005_00007,M_00006_00006), aux25)
div(M_00002_00004, 13, aux26)
div(M_00002_00006, 13, aux27)
div(M_00002_00007, 13, 0)
reify(gaceq(M_00004_00005,M_00005_00005), aux29)
reify(gaceq(M_00004_00005,M_00005_00004), aux30)
reify(gaceq(M_00010_00001,M_00009_00001), aux31)
reify(gaceq(M_00010_00002,M_00009_00003), aux32)
reify(gaceq(M_00004_00006,M_00005_00005), aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00002, 13, aux35)
div(M_00004_00006, 13, aux36)
div(M_00004_00007, 13, aux37)
reify(gaceq(M_00004_00003,M_00005_00003), aux38)
reify(gaceq(M_00005_00001,M_00006_00001), aux39)
reify(gaceq(M_00004_00002,M_00005_00002), aux40)
reify(gaceq(M_00002_00005,M_00003_00005), aux41)
reify(gaceq(M_00003_00008,M_00004_00007), aux42)
div(M_00002_00008, 13, 0)
div(M_00002_00010, 13, aux44)
div(M_00002_00002, 13, 1)
reify(gaceq(M_00002_00008,M_00003_00007), aux46)
reify(gaceq(M_00002_00009,M_00003_00008), aux47)
reify(gaceq(M_00008_00004,M_00009_00003), aux48)
reify(gaceq(M_00008_00002,M_00009_00002), aux49)
reify(gaceq(M_00008_00001,M_00009_00001), aux50)
reify(gaceq(M_00003_00007,M_00004_00006), aux51)
reify(gaceq(M_00003_00006,M_00004_00006), aux52)
reify(gaceq(M_00002_00006,M_00003_00005), aux53)
reify(gaceq(M_00003_00005,M_00004_00004), aux54)
reify(gaceq(M_00005_00005,M_00006_00005), aux55)
reify(gaceq(M_00002_00004,M_00003_00004), aux56)
div(M_00003_00009, 13, aux57)
div(M_00003_00001, 13, 0)
div(M_00005_00007, 13, aux59)
div(M_00005_00001, 13, aux60)
reify(gaceq(M_00002_00002,M_00003_00002), aux61)
reify(gaceq(M_00002_00010,M_00003_00009), aux62)
div(M_00008_00003, 13, aux63)
div(M_00008_00002, 13, aux64)
div(M_00008_00001, 13, aux65)
div(M_00008_00004, 13, aux66)
div(M_00006_00005, 13, aux67)
div(M_00006_00004, 13, aux68)
div(M_00006_00003, 13, aux69)
div(M_00006_00002, 13, aux70)
reify(gaceq(M_00004_00004,M_00005_00003), aux71)
reify(gaceq(M_00002_00007,M_00003_00007), aux72)
reify(gaceq(M_00002_00009,M_00003_00009), aux73)
reify(gaceq(M_00002_00004,M_00003_00003), aux74)
reify(gaceq(M_00003_00004,M_00004_00004), aux75)
reify(gaceq(M_00002_00008,M_00003_00008), aux76)
reify(gaceq(M_00002_00005,M_00003_00004), aux77)
reify(gaceq(M_00007_00001,M_00006_00001), aux78)
reify(gaceq(M_00004_00007,M_00005_00006), aux79)
reify(gaceq(M_00003_00003,M_00004_00003), aux80)
reify(gaceq(M_00007_00004,M_00008_00004), aux81)
reify(gaceq(M_00007_00003,M_00008_00002), aux82)
reify(gaceq(M_00003_00006,M_00004_00005), aux83)
reify(gaceq(M_00008_00003,M_00009_00002), aux84)
reify(gaceq(M_00008_00003,M_00009_00003), aux85)
reify(gaceq(M_00003_00001,M_00004_00001), aux86)
div(M_00006_00001, 13, aux87)
div(M_00006_00006, 13, aux88)
reify(gaceq(M_00002_00003,M_00003_00003), aux89)
reify(gaceq(M_00004_00004,M_00005_00004), aux90)
div(M_00003_00007, 13, 0)
div(M_00003_00008, 13, aux92)
div(M_00003_00002, 13, aux93)
div(M_00003_00003, 13, aux94)
reify(gaceq(M_00005_00005,M_00006_00004), aux95)
reify(gaceq(M_00003_00003,M_00004_00002), aux96)
reify(gaceq(M_00003_00008,M_00004_00008), aux97)
reify(gaceq(M_00005_00004,M_00006_00004), aux98)
reify(gaceq(M_00002_00007,M_00003_00006), aux99)
reify(gaceq(M_00005_00003,M_00006_00002), aux100)
reify(gaceq(M_00005_00006,M_00006_00006), aux101)
div(M_00005_00006, 13, aux102)
div(M_00005_00002, 13, aux103)
div(M_00005_00005, 13, aux104)
div(M_00005_00003, 13, aux105)
reify(gaceq(M_00004_00007,M_00005_00007), aux106)
reify(gaceq(M_00004_00003,M_00005_00002), aux107)
reify(gaceq(M_00004_00008,M_00005_00007), aux108)
div(M_00007_00002, 13, aux109)
div(M_00007_00004, 13, aux110)
reify(gaceq(M_00003_00004,M_00004_00003), aux111)
reify(gaceq(M_00007_00004,M_00008_00003), aux112)
reify(gaceq(M_00005_00004,M_00006_00003), aux113)
reify(gaceq(M_00003_00007,M_00004_00007), aux114)
div(M_00004_00004, 13, aux115)
div(M_00004_00005, 13, aux116)
reify(gaceq(M_00002_00006,M_00003_00006), aux117)
reify(gaceq(M_00007_00003,M_00006_00004), aux118)
reify(gaceq(M_00007_00001,M_00008_00001), aux119)
reify(gaceq(M_00007_00002,M_00008_00002), aux120)
reify(gaceq(M_00007_00003,M_00008_00003), aux121)
reify(gaceq(M_00007_00005,M_00006_00005), aux122)
reify(gaceq(M_00007_00002,M_00006_00003), aux123)
reify(gaceq(M_00005_00006,M_00006_00005), aux124)
reify(gaceq(M_00003_00005,M_00004_00005), aux125)
div(M_00003_00004, 13, aux126)
div(M_00003_00006, 13, aux127)
div(M_00003_00005, 13, aux128)
reify(gaceq(M_00007_00005,M_00008_00004), aux129)
div(M_00005_00004, 13, aux130)
reify(gaceq(M_00004_00001,M_00005_00001), aux131)
reify(gaceq(M_00002_00001,M_00003_00001), aux132)
reify(gaceq(M_00007_00005,M_00006_00006), aux133)
div(M_00009_00002, 13, aux134)
div(M_00004_00008, 13, aux135)
div(M_00004_00001, 13, aux136)
reify(gaceq(M_00004_00006,M_00005_00006), aux137)
reify(gaceq(M_00007_00004,M_00006_00005), aux138)
reify(gaceq(M_00007_00003,M_00006_00003), aux139)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,16),w-literal(M_00002_00004,9),w-literal(M_00002_00006,3),w-literal(M_00002_00005,37),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,22),w-literal(M_00002_00003,9),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,3),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00006,3),w-literal(M_00002_00005,37),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,10),w-literal(M_00002_00009,2),w-literal(M_00002_00010,32)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,9),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,10)})})
watched-or({watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux117,1),w-literal(aux72,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux47,1),w-literal(aux62,1),modulo(aux141,13,0)}),watched-and({w-literal(aux132,1),gaceq(M_00002_00003,M_00003_00002),w-literal(aux74,1),w-literal(aux77,1),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux142,13,0),w-literal(aux16,1)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux74,1),w-literal(aux77,1),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux143,13,0),gaceq(aux16,aux26)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux144,13,0),gaceq(aux15,aux27)})}),watched-and({w-literal(aux61,1),w-literal(aux89,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux77,1),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux145,13,0),div(M_00002_00001, 13, aux26)})}),watched-and({modulo(aux146,13,0),w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux117,1),w-literal(aux72,1),w-literal(aux76,1),w-literal(aux73,1)}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux77,1),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux147,13,0),gaceq(aux26,aux15)})}),watched-and({w-literal(aux132,1),w-literal(aux89,1),w-literal(aux56,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux53,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux148,13,0),w-literal(aux15,1)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux56,1),w-literal(aux41,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux149,13,0),gaceq(aux16,aux27)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux41,1),w-literal(aux117,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux150,13,0),w-literal(aux26,0)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux117,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1)}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux117,1),w-literal(aux72,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux151,13,0),w-literal(aux14,0)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux117,1),w-literal(aux76,1),w-literal(aux73,1),gaceq(M_00002_00010,M_00003_00007),watched-or({modulo(aux152,13,0),w-literal(aux44,0)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux117,1),w-literal(aux72,1),w-literal(aux76,1),w-literal(aux62,1),watched-or({modulo(aux153,13,0),gaceq(aux14,aux44)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux62,1),watched-or({modulo(aux154,13,0),w-literal(aux27,0)})}),watched-and({w-literal(aux132,1),w-literal(aux61,1),w-literal(aux89,1),w-literal(aux56,1),w-literal(aux41,1),w-literal(aux72,1),w-literal(aux76,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux62,1),watched-or({modulo(aux155,13,0),gaceq(aux27,aux14)})})})
watched-or({watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux54,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux156,13,0),gaceq(aux94,aux126)})}),watched-and({w-literal(aux23,1),w-literal(aux80,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux54,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux157,13,0),w-literal(aux126,0)})}),watched-and({w-literal(aux86,1),w-literal(aux80,1),w-literal(aux75,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux158,13,0),gaceq(aux93,aux128)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux75,1),w-literal(aux125,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux159,13,0),gaceq(aux94,aux127)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux125,1),w-literal(aux52,1),w-literal(aux114,1),w-literal(aux97,1),modulo(aux160,13,0)}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux125,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux161,13,0),w-literal(aux127,0)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux125,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux162,13,0),w-literal(aux92,0)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux125,1),w-literal(aux114,1),w-literal(aux97,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux163,13,0),gaceq(aux127,aux57)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux125,1),w-literal(aux52,1),w-literal(aux114,1),w-literal(aux17,1),watched-or({modulo(aux164,13,0),gaceq(aux92,aux57)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux165,13,0),gaceq(aux128,aux127)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux75,1),w-literal(aux52,1),w-literal(aux114,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux17,1),watched-or({modulo(aux166,13,0),gaceq(aux128,aux92)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux96,1),w-literal(aux111,1),w-literal(aux54,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux167,13,0),w-literal(aux93,0)})}),watched-and({w-literal(aux86,1),w-literal(aux96,1),w-literal(aux111,1),w-literal(aux54,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux168,13,0),gaceq(aux93,aux94)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux54,1),w-literal(aux83,1),w-literal(aux51,1),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux169,13,0),gaceq(aux126,aux128)})}),watched-and({w-literal(aux86,1),w-literal(aux23,1),w-literal(aux80,1),w-literal(aux125,1),w-literal(aux52,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux42,1),w-literal(aux17,1),watched-or({modulo(aux170,13,0),w-literal(aux126,0)})})})
watched-or({watched-and({w-literal(aux131,1),w-literal(aux107,1),w-literal(aux71,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux35,aux34),modulo(aux171,13,0)})}),watched-and({w-literal(aux40,1),w-literal(aux38,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux136,aux115),modulo(aux172,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux38,1),w-literal(aux90,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux35,aux116),modulo(aux173,13,0)})}),watched-and({modulo(aux174,13,0),w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux90,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux106,1)}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux90,1),w-literal(aux29,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux36,aux37),modulo(aux175,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux90,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux108,1),watched-or({gaceq(aux37,aux135),modulo(aux176,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux90,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux116,aux36),modulo(aux177,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux90,1),w-literal(aux137,1),w-literal(aux106,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux116,aux135),modulo(aux178,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux115,aux116),modulo(aux179,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux29,1),w-literal(aux137,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux108,1),watched-or({gaceq(aux115,aux37),modulo(aux180,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux107,1),w-literal(aux71,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux136,aux35),modulo(aux181,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux71,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux34,aux115),modulo(aux182,13,0)})}),watched-and({w-literal(aux131,1),w-literal(aux40,1),w-literal(aux90,1),w-literal(aux29,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux79,1),w-literal(aux108,1),watched-or({gaceq(aux34,aux36),modulo(aux183,13,0)})})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux24,1),w-literal(aux98,1),w-literal(aux55,1),w-literal(aux101,1),modulo(aux184,13,0)}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux24,1),w-literal(aux95,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux185,13,0),gaceq(aux130,aux104)})}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux24,1),w-literal(aux98,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux186,13,0),gaceq(aux104,aux102)})}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux24,1),w-literal(aux55,1),w-literal(aux101,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux187,13,0),gaceq(aux130,aux59)})}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux24,1),w-literal(aux98,1),w-literal(aux55,1),w-literal(aux25,1),watched-or({modulo(aux188,13,0),gaceq(aux102,aux59)})}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux113,1),w-literal(aux95,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux189,13,0),gaceq(aux105,aux130)})}),watched-and({w-literal(aux39,1),w-literal(aux21,1),w-literal(aux98,1),w-literal(aux55,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux25,1),watched-or({modulo(aux190,13,0),gaceq(aux105,aux102)})}),watched-and({w-literal(aux39,1),w-literal(aux100,1),w-literal(aux113,1),w-literal(aux95,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux191,13,0),gaceq(aux103,aux105)})}),watched-and({w-literal(aux39,1),w-literal(aux24,1),w-literal(aux98,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux192,13,0),gaceq(aux103,aux104)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux100,1),w-literal(aux113,1),w-literal(aux95,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux193,13,0),gaceq(aux60,aux103)})}),watched-and({w-literal(aux21,1),w-literal(aux24,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux95,1),w-literal(aux124,1),w-literal(aux25,1),watched-or({modulo(aux194,13,0),gaceq(aux60,aux130)})})})
watched-or({watched-and({w-literal(aux78,1),w-literal(aux22,1),w-literal(aux118,1),w-literal(aux138,1),w-literal(aux133,1),watched-or({gaceq(aux69,aux68),modulo(aux195,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux22,1),w-literal(aux139,1),w-literal(aux138,1),w-literal(aux133,1),watched-or({gaceq(aux68,aux67),modulo(aux196,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux22,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux122,1),watched-or({gaceq(aux69,aux88),modulo(aux197,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux22,1),w-literal(aux139,1),w-literal(aux13,1),w-literal(aux122,1),modulo(aux198,13,0)}),watched-and({w-literal(aux78,1),w-literal(aux22,1),w-literal(aux139,1),w-literal(aux13,1),w-literal(aux133,1),watched-or({gaceq(aux67,aux88),modulo(aux199,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux123,1),w-literal(aux118,1),w-literal(aux138,1),w-literal(aux133,1),watched-or({gaceq(aux70,aux69),modulo(aux200,13,0)})}),watched-and({w-literal(aux78,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux139,1),w-literal(aux13,1),w-literal(aux133,1),watched-or({gaceq(aux70,aux67),modulo(aux201,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux123,1),w-literal(aux118,1),w-literal(aux138,1),w-literal(aux133,1),watched-or({gaceq(aux87,aux70),modulo(aux202,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux22,1),w-literal(aux139,1),w-literal(aux138,1),w-literal(aux133,1),watched-or({gaceq(aux87,aux68),modulo(aux203,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux204,13,0),gaceq(aux18,aux110)}),w-literal(aux120,1),w-literal(aux121,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux129,1)}),watched-and({modulo(aux205,13,0),w-literal(aux119,1),w-literal(aux120,1),w-literal(aux121,1),w-literal(aux81,1)}),watched-and({watched-or({modulo(aux206,13,0),gaceq(aux18,aux109)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux82,1),w-literal(aux112,1),w-literal(aux129,1)}),watched-and({watched-or({modulo(aux207,13,0),gaceq(aux109,aux20)}),w-literal(aux119,1),w-literal(aux121,1),w-literal(aux81,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux208,13,0),gaceq(aux109,aux19)}),w-literal(aux119,1),w-literal(aux82,1),w-literal(aux112,1),w-literal(aux129,1)}),watched-and({watched-or({modulo(aux209,13,0),gaceq(aux19,aux110)}),w-literal(aux119,1),w-literal(aux120,1),w-literal(aux112,1),w-literal(aux129,1)}),watched-and({watched-or({modulo(aux210,13,0),gaceq(aux110,aux20)}),w-literal(aux119,1),w-literal(aux120,1),w-literal(aux121,1),w-literal(aux129,1)})})
watched-or({watched-and({watched-or({gaceq(aux63,aux66),modulo(aux211,13,0)}),w-literal(aux50,1),w-literal(aux49,1),w-literal(aux48,1)}),watched-and({watched-or({gaceq(aux65,aux64),modulo(aux212,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux84,1),w-literal(aux48,1)}),watched-and({watched-or({gaceq(aux65,aux66),modulo(aux213,13,0)}),w-literal(aux49,1),w-literal(aux85,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux64,aux63),modulo(aux214,13,0)}),w-literal(aux50,1),w-literal(aux84,1),w-literal(aux48,1)}),watched-and({w-literal(aux50,1),w-literal(aux49,1),w-literal(aux85,1),modulo(aux215,13,0)})})
watched-or({watched-and({watched-or({modulo(aux216,13,0),div(M_00009_00001, 13, aux134)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux32,1)}),watched-and({watched-or({modulo(aux217,13,0),div(M_00009_00003, 13, aux134)}),w-literal(aux31,1),w-literal(aux32,1)}),watched-and({modulo(aux218,13,0),w-literal(aux31,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux140),modulo(aux219,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux220,13,0)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux141)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux141)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux142)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux142)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux144)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux144)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux145)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux145)
weightedsumleq([-1,1],[M_00002_00010,-1],aux146)
weightedsumgeq([-1,1],[M_00002_00010,-1],aux146)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux147)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux147)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux148)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux148)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux149)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux149)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux150)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux150)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux151)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux151)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux152)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux152)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux153)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux153)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux156)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux156)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux157)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux157)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux158)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux158)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux159)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux159)
weightedsumleq([-1,1],[M_00003_00009,-1],aux160)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux160)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux161)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux161)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux162)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux162)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux163)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux163)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux164)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux164)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux165)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux165)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux166)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux166)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux167)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux167)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux168)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux168)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux169)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux169)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux170)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux170)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux171)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux171)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux172)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux172)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux173)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux173)
weightedsumleq([-1,1],[M_00004_00008,-1],aux174)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux174)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux175)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux175)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux176)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux176)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux177)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux177)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux178)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux178)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux179)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux179)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux180)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux180)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux181)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux181)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux182)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux182)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux183)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux183)
weightedsumleq([1,-1],[-1,M_00005_00007],aux184)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux184)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux185)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux185)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux186)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux186)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux188)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux188)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux191)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux191)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux192)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux192)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux193)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux193)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux194)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux194)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux195)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux195)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux196)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux196)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux197)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux197)
weightedsumleq([1,-1],[-1,M_00006_00006],aux198)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux198)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux199)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux199)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux200)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux200)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux201)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux201)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux202)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux202)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux203)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux203)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux204)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux204)
weightedsumleq([-1,1],[M_00007_00005,-1],aux205)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux205)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux206)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux206)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux207)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux207)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux209)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux209)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux210)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux210)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux211)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux211)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux212)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux212)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux213)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux213)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux214)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux214)
weightedsumleq([-1,1],[M_00008_00004,-1],aux215)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux215)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux216)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux216)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux217)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux217)
weightedsumleq([1,-1],[-1,M_00009_00003],aux218)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux218)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux219)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux219)
weightedsumleq([-1,1],[M_00010_00002,-1],aux220)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux220)
**EOF**
