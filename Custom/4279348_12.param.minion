MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 157
# CSE_active_eliminated_expressions = 831
# CSE_active_total_size = 471
**VARIABLES**
DISCRETE M_00002_00001 #
{9..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [9,9,11,12])
**VARIABLES**
DISCRETE M_00002_00002 #
{18..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [18,18,22,22])
**VARIABLES**
DISCRETE M_00002_00003 #
{9..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [9,9,11,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00002_00004 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00002_00005 #
{16..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00002_00006 #
{3..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [3,4,9,9,11,12,16,16])
**VARIABLES**
DISCRETE M_00002_00007 #
{3..4}
DISCRETE M_00002_00008 #
{2..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [2,4,9,9,11,12,16,16,18,18,22,22,30,30])
**VARIABLES**
DISCRETE M_00002_00009 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00002_00010 #
{30..32}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [30,30,32,32])
**VARIABLES**
DISCRETE M_00002_00011 #
{11..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [11,12,16,16,18,18,22,22,30,30])
**VARIABLES**
DISCRETE M_00003_00001 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [3,4,9,9,11,12])
**VARIABLES**
DISCRETE M_00003_00002 #
{9..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [9,9,11,12,16,16,18,18,22,22])
**VARIABLES**
DISCRETE M_00003_00003 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00004 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00005 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00003_00006 #
{3..16}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [3,4,9,9,11,12,16,16])
**VARIABLES**
DISCRETE M_00003_00007 #
{2..30}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [2,4,9,9,11,12,16,16,18,18,22,22,30,30])
**VARIABLES**
DISCRETE M_00003_00008 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00003_00009 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00003_00010 #
{11..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00004_00001 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00003 #
{3..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [3,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00004_00006 #
{2..30}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [2,4,9,9,11,12,16,16,18,18,22,22,30,30])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00004_00008 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00004_00009 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00005_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00005_00008 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00006_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00006_00007 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00007_00006 #
{2..32}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00008_00005 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00009_00004 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00010_00003 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00011_00002 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,4,9,9,11,12,16,16,18,18,22,22,30,30,32,32,37,37])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
BOOL aux17 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux18 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..2}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..2}
BOOL aux21 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux22 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..2}
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux27 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux28 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
BOOL aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux36 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux37 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux38 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux39 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux43 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux44 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux45 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..2}
BOOL aux49 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux50 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux51 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux53 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux54 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux55 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux56 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux57 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux58 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux59 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux60 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux61 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux62 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..2}
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..2}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..2}
BOOL aux67 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux68 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux69 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..2}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..2}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..2}
DISCRETE aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
DISCRETE aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
DISCRETE aux76 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux80 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux83 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux84 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux86 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux87 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux90 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux93 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux97 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..2}
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..2}
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..2}
BOOL aux104 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux105 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux106 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux109 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux118 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..2}
DISCRETE aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux123 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux124 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux125 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux126 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux127 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux135 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux136 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux138 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux139 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux140 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux141 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
DISCRETE aux142 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..2}
BOOL aux144 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux147 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux148 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux149 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux150 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
BOOL aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux153 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
DISCRETE aux154 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
DISCRETE aux155 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
BOOL aux156 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux157 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..2}
DISCRETE aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..2}
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..2}
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..2}
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux164 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux165 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux166 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux167 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux168 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux169 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux170 #
{0..2}
DISCRETE aux171 #( - M_00002_00004 + M_00002_00007)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux171, [-33,-33,-29,-26,-19,-18,-15,-12,-9,-5,-1,1])
**VARIABLES**
DISCRETE aux172 #( - M_00002_00005 + M_00002_00008)
{-35..-7}
**CONSTRAINTS**
w-inintervalset(aux172, [-35,-33,-30,-25,-23,-23,-21,-18,-16,-7])
**VARIABLES**
DISCRETE aux173 #( - M_00002_00007 + M_00002_00010)
{26..29}
DISCRETE aux174 #( - M_00002_00008 + M_00002_00009)
{-28..30}
**CONSTRAINTS**
w-inintervalset(aux174, [-28,-26,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux175 #( - M_00002_00009 + M_00002_00010)
{-2..30}
**CONSTRAINTS**
w-inintervalset(aux175, [-2,-2,0,0,2,2,8,8,10,10,12,12,14,14,16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux176 #( - M_00002_00008 + M_00002_00011)
{-19..26}
**CONSTRAINTS**
w-inintervalset(aux176, [-19,-18,-14,-14,-12,-10,-8,-4,-2,16,18,21,26,26])
**VARIABLES**
DISCRETE aux177 #( - M_00002_00010 + M_00002_00011)
{-21..-2}
**CONSTRAINTS**
w-inintervalset(aux177, [-21,-18,-16,-16,-14,-14,-12,-12,-10,-10,-8,-8,-2,-2])
**VARIABLES**
DISCRETE aux178 #( - M_00002_00007 + M_00002_00008)
{-2..27}
**CONSTRAINTS**
w-inintervalset(aux178, [-2,1,5,9,12,15,18,19,26,27])
**VARIABLES**
DISCRETE aux179 #( - M_00002_00001 + M_00002_00004)
{-9..28}
**CONSTRAINTS**
w-inintervalset(aux179, [-9,-5,-3,7,9,11,13,13,18,21,23,23,25,26,28,28])
**VARIABLES**
DISCRETE aux180 #( - M_00002_00003 + M_00002_00004)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux180, [-19,-18,-15,16,18,21,23,23,25,26,28,28])
**VARIABLES**
DISCRETE aux181 #( - M_00002_00011 + -1)
{-31..-12}
**CONSTRAINTS**
w-inintervalset(aux181, [-31,-31,-23,-23,-19,-19,-17,-17,-13,-12])
**VARIABLES**
DISCRETE aux182 #( - M_00002_00004 + M_00002_00005)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux182, [-21,-21,-19,-19,-16,-14,-12,-12,-10,-10,-8,-4,-2,-2,0,0,2,2,4,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux183 #( - M_00002_00006 + M_00002_00007)
{-13..1}
**CONSTRAINTS**
w-inintervalset(aux183, [-13,-12,-9,-5,-1,1])
**VARIABLES**
DISCRETE aux184 #( - M_00002_00006 + M_00002_00009)
{-14..29}
**CONSTRAINTS**
w-inintervalset(aux184, [-14,-12,-10,16,18,21,23,23,26,29])
**VARIABLES**
DISCRETE aux185 #( - M_00002_00002 + M_00002_00005)
{-6..19}
**CONSTRAINTS**
w-inintervalset(aux185, [-6,-6,-4,-4,-2,-2,0,0,4,4,8,8,10,10,12,12,14,15,19,19])
**VARIABLES**
DISCRETE aux186 #( - M_00002_00005 + M_00002_00006)
{-34..-13}
**CONSTRAINTS**
w-inintervalset(aux186, [-34,-33,-29,-25,-23,-23,-21,-18,-16,-13])
**VARIABLES**
DISCRETE aux187 #( - M_00002_00003 + M_00002_00006)
{-19..-6}
**CONSTRAINTS**
w-inintervalset(aux187, [-19,-18,-15,-6])
**VARIABLES**
DISCRETE aux188 #( - M_00002_00002 + M_00002_00003)
{-13..4}
**CONSTRAINTS**
w-inintervalset(aux188, [-13,-13,-11,-9,-7,-6,-4,-4,-2,-2,0,0,4,4])
**VARIABLES**
DISCRETE aux189 #( - M_00003_00001 + M_00003_00004)
{-9..34}
**CONSTRAINTS**
w-inintervalset(aux189, [-9,-5,-3,15,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux190 #( - M_00003_00004 + M_00003_00005)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux190, [-34,-33,-29,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux191 #( - M_00003_00002 + M_00003_00005)
{-19..19}
**CONSTRAINTS**
w-inintervalset(aux191, [-19,-18,-15,16,18,19])
**VARIABLES**
DISCRETE aux192 #( - M_00003_00001 + M_00003_00002)
{-3..15}
DISCRETE aux193 #( - M_00003_00003 + M_00003_00006)
{-34..7}
**CONSTRAINTS**
w-inintervalset(aux193, [-34,-33,-29,-25,-23,-23,-21,-18,-16,7])
**VARIABLES**
DISCRETE aux194 #( - M_00003_00004 + M_00003_00007)
{-35..27}
**CONSTRAINTS**
w-inintervalset(aux194, [-35,-33,-30,-25,-23,-23,-21,-18,-16,15,18,19,21,21,26,27])
**VARIABLES**
DISCRETE aux195 #( - M_00003_00010 + -1)
{-33..-12}
**CONSTRAINTS**
w-inintervalset(aux195, [-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12])
**VARIABLES**
DISCRETE aux196 #( - M_00003_00007 + M_00003_00008)
{-28..30}
**CONSTRAINTS**
w-inintervalset(aux196, [-28,-26,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux197 #( - M_00003_00008 + M_00003_00009)
{-28..30}
**CONSTRAINTS**
w-inintervalset(aux197, [-28,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux198 #( - M_00003_00007 + M_00003_00010)
{-19..29}
**CONSTRAINTS**
w-inintervalset(aux198, [-19,-18,-14,-14,-12,-10,-8,-4,-2,16,18,21,23,23,26,29])
**VARIABLES**
DISCRETE aux199 #( - M_00003_00009 + M_00003_00010)
{-21..30}
**CONSTRAINTS**
w-inintervalset(aux199, [-21,-18,-16,-16,-14,-14,-12,-10,-8,-4,-2,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux200 #( - M_00003_00006 + M_00003_00007)
{-14..27}
**CONSTRAINTS**
w-inintervalset(aux200, [-14,-12,-10,15,18,19,21,21,26,27])
**VARIABLES**
DISCRETE aux201 #( - M_00003_00006 + M_00003_00009)
{-14..29}
**CONSTRAINTS**
w-inintervalset(aux201, [-14,-12,-10,16,18,21,23,23,26,29])
**VARIABLES**
DISCRETE aux202 #( - M_00003_00002 + M_00003_00003)
{-19..28}
**CONSTRAINTS**
w-inintervalset(aux202, [-19,-18,-15,16,18,21,23,23,25,26,28,28])
**VARIABLES**
DISCRETE aux203 #( - M_00003_00003 + M_00003_00004)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux203, [-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux204 #( - M_00003_00005 + M_00003_00006)
{-34..5}
**CONSTRAINTS**
w-inintervalset(aux204, [-34,-33,-29,-25,-23,-23,-21,-18,-16,5])
**VARIABLES**
DISCRETE aux205 #( - M_00003_00005 + M_00003_00008)
{-35..29}
**CONSTRAINTS**
w-inintervalset(aux205, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,29])
**VARIABLES**
DISCRETE aux206 #( - M_00004_00007 + M_00004_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux206, [-30,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux207 #( - M_00004_00008 + M_00004_00009)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux207, [-30,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux208 #( - M_00004_00006 + M_00004_00007)
{-28..30}
**CONSTRAINTS**
w-inintervalset(aux208, [-28,-26,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux209 #( - M_00004_00006 + M_00004_00009)
{-19..30}
**CONSTRAINTS**
w-inintervalset(aux209, [-19,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux210 #( - M_00004_00005 + M_00004_00006)
{-35..27}
**CONSTRAINTS**
w-inintervalset(aux210, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,26,27])
**VARIABLES**
DISCRETE aux211 #( - M_00004_00005 + M_00004_00008)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux211, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux212 #( - M_00004_00001 + M_00004_00002)
{-21..34}
**CONSTRAINTS**
w-inintervalset(aux212, [-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux213 #( - M_00004_00002 + M_00004_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux213, [-34,-33,-29,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux214 #( - M_00004_00004 + M_00004_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux214, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux215 #( - M_00004_00004 + M_00004_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux215, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux216 #( - M_00004_00009 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux216, [-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux217 #( - M_00004_00003 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux217, [-34,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux218 #( - M_00004_00001 + M_00004_00004)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux218, [-34,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,29,33,34])
**VARIABLES**
DISCRETE aux219 #( - M_00004_00002 + M_00004_00005)
{-34..28}
**CONSTRAINTS**
w-inintervalset(aux219, [-34,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,28])
**VARIABLES**
DISCRETE aux220 #( - M_00004_00003 + M_00004_00006)
{-35..27}
**CONSTRAINTS**
w-inintervalset(aux220, [-35,-33,-30,-25,-23,-23,-21,-18,-16,15,18,19,21,21,26,27])
**VARIABLES**
DISCRETE aux221 #( - M_00005_00002 + M_00005_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux221, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux222 #( - M_00005_00001 + M_00005_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux222, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux223 #( - M_00005_00002 + M_00005_00005)
{-35..34}
**CONSTRAINTS**
w-inintervalset(aux223, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,34])
**VARIABLES**
DISCRETE aux224 #(-1 - M_00005_00008)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux224, [-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux225 #( - M_00005_00005 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux225, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux226 #( - M_00005_00006 + M_00005_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux226, [-30,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux227 #( - M_00005_00005 + M_00005_00008)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux227, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux228 #( - M_00005_00007 + M_00005_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux228, [-30,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux229 #( - M_00005_00004 + M_00005_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux229, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux230 #( - M_00005_00004 + M_00005_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux230, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux231 #( - M_00005_00001 + M_00005_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux231, [-34,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,34])
**VARIABLES**
DISCRETE aux232 #( - M_00005_00003 + M_00005_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux232, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux233 #( - M_00005_00003 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux233, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux234 #( - M_00006_00001 + M_00006_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux234, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux235 #( - M_00006_00004 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux235, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux236 #(-1 - M_00006_00007)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux236, [-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux237 #( - M_00006_00005 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux237, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux238 #( - M_00006_00004 + M_00006_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux238, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux239 #( - M_00006_00006 + M_00006_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux239, [-30,-26,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux240 #( - M_00006_00003 + M_00006_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux240, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux241 #( - M_00006_00003 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux241, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux242 #( - M_00006_00002 + M_00006_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux242, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux243 #( - M_00006_00002 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux243, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux244 #( - M_00006_00001 + M_00006_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux244, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux245 #( - M_00007_00004 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux245, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux246 #( - M_00007_00001 + M_00007_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux246, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux247 #( - M_00007_00005 + M_00007_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux247, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux248 #( - M_00007_00002 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux248, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux249 #( - M_00007_00003 + M_00007_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux249, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,26,30])
**VARIABLES**
DISCRETE aux250 #( - M_00007_00001 + M_00007_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux250, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux251 #( - M_00007_00002 + M_00007_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux251, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux252 #( - M_00007_00006 + -1)
{-33..-3}
**CONSTRAINTS**
w-inintervalset(aux252, [-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux253 #( - M_00007_00003 + M_00007_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux253, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux254 #( - M_00008_00001 + M_00008_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux254, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux255 #( - M_00008_00002 + M_00008_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux255, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux256 #( - M_00008_00002 + M_00008_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux256, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux257 #( - M_00008_00003 + M_00008_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux257, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux258 #( - M_00008_00005 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux258, [-38,-38,-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux259 #( - M_00008_00004 + M_00008_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux259, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux260 #( - M_00008_00001 + M_00008_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux260, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux261 #( - M_00009_00003 + M_00009_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux261, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux262 #( - M_00009_00001 + M_00009_00004)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux262, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux263 #( - M_00009_00002 + M_00009_00003)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux263, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux264 #(-1 - M_00009_00004)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux264, [-38,-38,-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux265 #( - M_00009_00001 + M_00009_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux265, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux266 #( - M_00010_00001 + M_00010_00002)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux266, [-35,-33,-30,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,30,33,35])
**VARIABLES**
DISCRETE aux267 #( - M_00010_00002 + M_00010_00003)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux267, [-26,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,26])
**VARIABLES**
DISCRETE aux268 #( - M_00010_00003 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux268, [-38,-38,-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
DISCRETE aux269 #( - M_00011_00001 + M_00011_00002)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux269, [-26,-25,-23,-23,-21,-18,-16,16,18,21,23,23,25,26])
**VARIABLES**
DISCRETE aux270 #( - M_00011_00002 + -1)
{-38..-3}
**CONSTRAINTS**
w-inintervalset(aux270, [-38,-38,-33,-33,-31,-31,-23,-23,-19,-19,-17,-17,-13,-12,-10,-10,-5,-3])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[12, 18, 22, 9, 37, 16, 3, 4, 2, 32, 30, 11]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux170)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00007, 13, 0)
div(M_00002_00003, 13, aux16)
reify(gaceq(M_00003_00009,M_00004_00008), aux17)
reify(gaceq(M_00007_00002,M_00008_00002), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00006, 13, aux20)
reify(gaceq(M_00007_00003,M_00006_00003), aux21)
reify(gaceq(M_00005_00002,M_00006_00002), aux22)
reify(gaceq(M_00003_00002,M_00004_00002), aux23)
div(M_00010_00002, 13, aux24)
reify(gaceq(M_00008_00002,M_00009_00002), aux25)
reify(gaceq(M_00008_00003,M_00009_00003), aux26)
reify(gaceq(M_00003_00003,M_00004_00003), aux27)
reify(gaceq(M_00005_00007,M_00006_00006), aux28)
div(M_00002_00004, 13, aux29)
div(M_00002_00005, 13, aux30)
div(M_00002_00006, 13, aux31)
div(M_00002_00008, 13, aux32)
reify(gaceq(M_00004_00005,M_00005_00004), aux33)
reify(gaceq(M_00010_00003,M_00009_00003), aux34)
reify(gaceq(M_00010_00002,M_00009_00003), aux35)
reify(gaceq(M_00004_00006,M_00005_00005), aux36)
reify(gaceq(M_00004_00001,M_00005_00001), aux37)
reify(gaceq(M_00002_00004,M_00003_00004), aux38)
div(M_00004_00008, 13, aux39)
div(M_00004_00003, 13, aux40)
div(M_00004_00002, 13, aux41)
div(M_00004_00007, 13, aux42)
reify(gaceq(M_00004_00006,M_00005_00006), aux43)
reify(gaceq(M_00003_00001,M_00004_00001), aux44)
reify(gaceq(M_00003_00008,M_00004_00007), aux45)
div(M_00002_00010, 13, 2)
div(M_00002_00011, 13, aux47)
div(M_00002_00002, 13, 1)
reify(gaceq(M_00002_00008,M_00003_00007), aux49)
reify(gaceq(M_00002_00009,M_00003_00008), aux50)
reify(gaceq(M_00007_00006,M_00008_00005), aux51)
reify(gaceq(M_00008_00004,M_00009_00003), aux52)
reify(gaceq(M_00003_00007,M_00004_00006), aux53)
reify(gaceq(M_00002_00001,M_00003_00001), aux54)
reify(gaceq(M_00002_00006,M_00003_00005), aux55)
reify(gaceq(M_00003_00007,M_00004_00007), aux56)
reify(gaceq(M_00003_00005,M_00004_00004), aux57)
reify(gaceq(M_00005_00001,M_00006_00001), aux58)
reify(gaceq(M_00005_00006,M_00006_00006), aux59)
reify(gaceq(M_00007_00001,M_00008_00001), aux60)
reify(gaceq(M_00004_00004,M_00005_00004), aux61)
reify(gaceq(M_00004_00005,M_00005_00005), aux62)
div(M_00003_00001, 13, 0)
div(M_00003_00010, 13, aux64)
div(M_00005_00008, 13, aux65)
div(M_00005_00001, 13, aux66)
reify(gaceq(M_00005_00003,M_00006_00003), aux67)
reify(gaceq(M_00002_00010,M_00003_00009), aux68)
reify(gaceq(M_00002_00003,M_00003_00003), aux69)
div(M_00008_00003, 13, aux70)
div(M_00008_00001, 13, aux71)
div(M_00008_00005, 13, aux72)
div(M_00006_00006, 13, aux73)
div(M_00006_00005, 13, aux74)
div(M_00006_00003, 13, aux75)
div(M_00006_00002, 13, aux76)
reify(gaceq(M_00010_00003,M_00011_00002), aux77)
reify(gaceq(M_00010_00001,M_00011_00001), aux78)
reify(gaceq(M_00004_00004,M_00005_00003), aux79)
reify(gaceq(M_00005_00004,M_00006_00004), aux80)
reify(gaceq(M_00002_00004,M_00003_00003), aux81)
reify(gaceq(M_00002_00010,M_00003_00010), aux82)
reify(gaceq(M_00002_00008,M_00003_00008), aux83)
reify(gaceq(M_00002_00005,M_00003_00004), aux84)
reify(gaceq(M_00002_00009,M_00003_00009), aux85)
reify(gaceq(M_00004_00007,M_00005_00006), aux86)
reify(gaceq(M_00007_00006,M_00006_00007), aux87)
reify(gaceq(M_00007_00005,M_00008_00005), aux88)
reify(gaceq(M_00007_00003,M_00008_00002), aux89)
reify(gaceq(M_00003_00006,M_00004_00005), aux90)
reify(gaceq(M_00008_00003,M_00009_00002), aux91)
reify(gaceq(M_00008_00004,M_00009_00004), aux92)
reify(gaceq(M_00005_00008,M_00006_00007), aux93)
reify(gaceq(M_00010_00001,M_00009_00001), aux94)
reify(gaceq(M_00010_00002,M_00009_00002), aux95)
reify(gaceq(M_00010_00003,M_00009_00004), aux96)
div(M_00006_00004, 13, aux97)
div(M_00006_00001, 13, aux98)
div(M_00006_00007, 13, aux99)
div(M_00003_00008, 13, aux100)
div(M_00003_00009, 13, aux101)
div(M_00003_00002, 13, aux102)
div(M_00003_00003, 13, aux103)
reify(gaceq(M_00002_00011,M_00003_00010), aux104)
reify(gaceq(M_00005_00005,M_00006_00004), aux105)
reify(gaceq(M_00005_00005,M_00006_00005), aux106)
reify(gaceq(M_00003_00003,M_00004_00002), aux107)
reify(gaceq(M_00003_00009,M_00004_00009), aux108)
reify(gaceq(M_00002_00007,M_00003_00006), aux109)
reify(gaceq(M_00005_00003,M_00006_00002), aux110)
reify(gaceq(M_00005_00007,M_00006_00007), aux111)
div(M_00005_00007, 13, aux112)
div(M_00005_00006, 13, aux113)
div(M_00005_00002, 13, aux114)
div(M_00005_00003, 13, aux115)
reify(gaceq(M_00004_00008,M_00005_00008), aux116)
reify(gaceq(M_00004_00003,M_00005_00002), aux117)
reify(gaceq(M_00004_00008,M_00005_00007), aux118)
div(M_00007_00002, 13, aux119)
div(M_00007_00004, 13, aux120)
div(M_00007_00003, 13, aux121)
div(M_00007_00005, 13, aux122)
reify(gaceq(M_00007_00002,M_00006_00002), aux123)
reify(gaceq(M_00004_00009,M_00005_00008), aux124)
reify(gaceq(M_00007_00001,M_00006_00001), aux125)
reify(gaceq(M_00008_00005,M_00009_00004), aux126)
reify(gaceq(M_00008_00001,M_00009_00001), aux127)
reify(gaceq(M_00003_00004,M_00004_00003), aux128)
reify(gaceq(M_00007_00004,M_00008_00003), aux129)
reify(gaceq(M_00005_00004,M_00006_00003), aux130)
reify(gaceq(M_00003_00008,M_00004_00008), aux131)
div(M_00004_00004, 13, aux132)
div(M_00004_00005, 13, aux133)
div(M_00004_00006, 13, aux134)
reify(gaceq(M_00003_00005,M_00004_00005), aux135)
reify(gaceq(M_00002_00002,M_00003_00002), aux136)
reify(gaceq(M_00007_00003,M_00006_00004), aux137)
reify(gaceq(M_00003_00006,M_00004_00006), aux138)
reify(gaceq(M_00004_00002,M_00005_00002), aux139)
reify(gaceq(M_00002_00006,M_00003_00006), aux140)
reify(gaceq(M_00002_00005,M_00003_00005), aux141)
div(M_00008_00004, 13, aux142)
div(M_00008_00002, 13, aux143)
reify(gaceq(M_00007_00004,M_00008_00004), aux144)
reify(gaceq(M_00007_00006,M_00006_00006), aux145)
reify(gaceq(M_00007_00002,M_00006_00003), aux146)
reify(gaceq(M_00005_00006,M_00006_00005), aux147)
reify(gaceq(M_00007_00003,M_00008_00003), aux148)
div(M_00003_00007, 13, aux149)
div(M_00003_00004, 13, aux150)
div(M_00003_00006, 13, aux151)
div(M_00003_00005, 13, aux152)
reify(gaceq(M_00007_00005,M_00008_00004), aux153)
div(M_00005_00004, 13, aux154)
div(M_00005_00005, 13, aux155)
reify(gaceq(M_00004_00003,M_00005_00003), aux156)
reify(gaceq(M_00007_00005,M_00006_00006), aux157)
div(M_00009_00003, 13, aux158)
div(M_00009_00004, 13, aux159)
div(M_00009_00001, 13, aux160)
div(M_00009_00002, 13, aux161)
div(M_00004_00009, 13, aux162)
div(M_00004_00001, 13, aux163)
reify(gaceq(M_00004_00007,M_00005_00007), aux164)
reify(gaceq(M_00007_00004,M_00006_00004), aux165)
reify(gaceq(M_00007_00004,M_00006_00005), aux166)
reify(gaceq(M_00002_00007,M_00003_00007), aux167)
reify(gaceq(M_00003_00010,M_00004_00009), aux168)
reify(gaceq(M_00003_00004,M_00004_00004), aux169)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,22),w-literal(M_00002_00003,9),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00006,3),w-literal(M_00002_00005,37),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,9),w-literal(M_00002_00004,37),w-literal(M_00002_00005,16),w-literal(M_00002_00006,3),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,3),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,16),w-literal(M_00002_00004,9),w-literal(M_00002_00006,3),w-literal(M_00002_00005,37),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,4),w-literal(M_00002_00009,2),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,4),w-literal(M_00002_00009,11),w-literal(M_00002_00010,32),w-literal(M_00002_00011,30)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,3),w-literal(M_00002_00008,30),w-literal(M_00002_00009,2),w-literal(M_00002_00010,32),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00001,12),w-literal(M_00002_00002,18),w-literal(M_00002_00003,22),w-literal(M_00002_00004,9),w-literal(M_00002_00005,37),w-literal(M_00002_00006,16),w-literal(M_00002_00007,4),w-literal(M_00002_00008,2),w-literal(M_00002_00009,32),w-literal(M_00002_00010,30),w-literal(M_00002_00011,11)})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux140,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux171,13,0),w-literal(aux29,0)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux140,1),w-literal(aux167,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux172,13,0),gaceq(aux30,aux32)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux83,1),w-literal(aux85,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux104,1),modulo(aux173,13,0)}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux167,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux174,13,0),gaceq(aux32,aux14)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux167,1),w-literal(aux83,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux175,13,0),w-literal(aux14,2)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux82,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux176,13,0),gaceq(aux32,aux47)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux167,1),w-literal(aux83,1),w-literal(aux85,1),w-literal(aux104,1),watched-or({modulo(aux177,13,0),w-literal(aux47,2)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux178,13,0),w-literal(aux32,0)})}),watched-and({w-literal(aux136,1),w-literal(aux69,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux84,1),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux179,13,0),div(M_00002_00001, 13, aux29)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux81,1),w-literal(aux84,1),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux180,13,0),gaceq(aux16,aux29)})}),watched-and({modulo(aux181,13,0),w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux140,1),w-literal(aux167,1),w-literal(aux83,1),w-literal(aux85,1),w-literal(aux82,1)}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux84,1),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux182,13,0),gaceq(aux29,aux30)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux183,13,0),w-literal(aux31,0)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux141,1),w-literal(aux167,1),w-literal(aux83,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux184,13,0),gaceq(aux31,aux14)})}),watched-and({w-literal(aux54,1),w-literal(aux69,1),w-literal(aux38,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux185,13,0),w-literal(aux30,1)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux186,13,0),gaceq(aux30,aux31)})}),watched-and({w-literal(aux54,1),w-literal(aux136,1),w-literal(aux38,1),w-literal(aux141,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux187,13,0),gaceq(aux16,aux31)})}),watched-and({w-literal(aux54,1),gaceq(M_00002_00003,M_00003_00002),w-literal(aux81,1),w-literal(aux84,1),w-literal(aux55,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux104,1),watched-or({modulo(aux188,13,0),w-literal(aux16,1)})})})
watched-or({watched-and({w-literal(aux23,1),w-literal(aux27,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux57,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux189,13,0),w-literal(aux150,0)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux57,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux190,13,0),gaceq(aux150,aux152)})}),watched-and({w-literal(aux44,1),w-literal(aux27,1),w-literal(aux169,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux191,13,0),gaceq(aux102,aux152)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux107,1),w-literal(aux128,1),w-literal(aux57,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux192,13,0),w-literal(aux102,0)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux169,1),w-literal(aux135,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux193,13,0),gaceq(aux103,aux151)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux135,1),w-literal(aux138,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux194,13,0),gaceq(aux150,aux149)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux138,1),w-literal(aux56,1),w-literal(aux131,1),w-literal(aux108,1),modulo(aux195,13,0)}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux138,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux196,13,0),gaceq(aux149,aux100)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux138,1),w-literal(aux56,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux197,13,0),gaceq(aux100,aux101)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux138,1),w-literal(aux131,1),w-literal(aux108,1),gaceq(M_00003_00010,M_00004_00007),watched-or({modulo(aux198,13,0),gaceq(aux149,aux64)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux138,1),w-literal(aux56,1),w-literal(aux131,1),w-literal(aux168,1),watched-or({modulo(aux199,13,0),gaceq(aux101,aux64)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux200,13,0),gaceq(aux151,aux149)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux135,1),w-literal(aux56,1),w-literal(aux131,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux168,1),watched-or({modulo(aux201,13,0),gaceq(aux151,aux101)})}),watched-and({w-literal(aux44,1),w-literal(aux107,1),w-literal(aux128,1),w-literal(aux57,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux202,13,0),gaceq(aux102,aux103)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux128,1),w-literal(aux57,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux203,13,0),gaceq(aux103,aux150)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux90,1),w-literal(aux53,1),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux204,13,0),gaceq(aux152,aux151)})}),watched-and({w-literal(aux44,1),w-literal(aux23,1),w-literal(aux27,1),w-literal(aux169,1),w-literal(aux138,1),w-literal(aux56,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux17,1),w-literal(aux168,1),watched-or({modulo(aux205,13,0),gaceq(aux152,aux100)})})})
watched-or({watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux62,1),w-literal(aux43,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux42,aux39),modulo(aux206,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux62,1),w-literal(aux43,1),w-literal(aux164,1),w-literal(aux124,1),watched-or({gaceq(aux39,aux162),modulo(aux207,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux62,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux134,aux42),modulo(aux208,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux62,1),w-literal(aux164,1),w-literal(aux116,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux134,aux162),modulo(aux209,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux133,aux134),modulo(aux210,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux43,1),w-literal(aux164,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux124,1),watched-or({gaceq(aux133,aux39),modulo(aux211,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux117,1),w-literal(aux79,1),w-literal(aux33,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux163,aux41),modulo(aux212,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux117,1),w-literal(aux79,1),w-literal(aux33,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux41,aux40),modulo(aux213,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux33,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux132,aux133),modulo(aux214,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux62,1),w-literal(aux43,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux132,aux42),modulo(aux215,13,0)})}),watched-and({modulo(aux216,13,0),w-literal(aux37,1),w-literal(aux139,1),w-literal(aux156,1),w-literal(aux61,1),w-literal(aux62,1),w-literal(aux43,1),w-literal(aux164,1),w-literal(aux116,1)}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux79,1),w-literal(aux33,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux40,aux132),modulo(aux217,13,0)})}),watched-and({w-literal(aux139,1),w-literal(aux156,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux33,1),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux163,aux132),modulo(aux218,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux156,1),w-literal(aux61,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux36,1),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux41,aux133),modulo(aux219,13,0)})}),watched-and({w-literal(aux37,1),w-literal(aux139,1),w-literal(aux61,1),w-literal(aux62,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux86,1),w-literal(aux118,1),w-literal(aux124,1),watched-or({gaceq(aux40,aux134),modulo(aux220,13,0)})})})
watched-or({watched-and({w-literal(aux58,1),w-literal(aux110,1),w-literal(aux130,1),w-literal(aux105,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux221,13,0),gaceq(aux114,aux115)})}),watched-and({w-literal(aux22,1),w-literal(aux67,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux105,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux222,13,0),gaceq(aux66,aux154)})}),watched-and({w-literal(aux58,1),w-literal(aux67,1),w-literal(aux80,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux223,13,0),gaceq(aux114,aux155)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux80,1),w-literal(aux106,1),w-literal(aux59,1),w-literal(aux111,1),modulo(aux224,13,0)}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux80,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux225,13,0),gaceq(aux155,aux113)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux80,1),w-literal(aux106,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux226,13,0),gaceq(aux113,aux112)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux80,1),w-literal(aux59,1),w-literal(aux111,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux227,13,0),gaceq(aux155,aux65)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux80,1),w-literal(aux106,1),w-literal(aux59,1),w-literal(aux93,1),watched-or({modulo(aux228,13,0),gaceq(aux112,aux65)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux105,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux229,13,0),gaceq(aux154,aux155)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux67,1),w-literal(aux106,1),w-literal(aux59,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux93,1),watched-or({modulo(aux230,13,0),gaceq(aux154,aux112)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux110,1),w-literal(aux130,1),w-literal(aux105,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux231,13,0),gaceq(aux66,aux114)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux130,1),w-literal(aux105,1),w-literal(aux147,1),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux232,13,0),gaceq(aux115,aux154)})}),watched-and({w-literal(aux58,1),w-literal(aux22,1),w-literal(aux80,1),w-literal(aux106,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux28,1),w-literal(aux93,1),watched-or({modulo(aux233,13,0),gaceq(aux115,aux113)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux123,1),w-literal(aux21,1),w-literal(aux166,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux98,aux97),modulo(aux234,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux21,1),w-literal(aux166,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux97,aux74),modulo(aux235,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux13,1),w-literal(aux145,1),modulo(aux236,13,0)}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux74,aux73),modulo(aux237,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux21,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux145,1),watched-or({gaceq(aux97,aux99),modulo(aux238,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux13,1),w-literal(aux87,1),watched-or({gaceq(aux73,aux99),modulo(aux239,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),w-literal(aux137,1),w-literal(aux166,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux75,aux97),modulo(aux240,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux123,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux165,1),w-literal(aux13,1),w-literal(aux87,1),watched-or({gaceq(aux75,aux73),modulo(aux241,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux146,1),w-literal(aux137,1),w-literal(aux166,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux76,aux75),modulo(aux242,13,0)})}),watched-and({w-literal(aux125,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux21,1),w-literal(aux165,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux76,aux74),modulo(aux243,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux146,1),w-literal(aux137,1),w-literal(aux166,1),w-literal(aux157,1),w-literal(aux87,1),watched-or({gaceq(aux98,aux76),modulo(aux244,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux245,13,0),gaceq(aux120,aux122)}),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux148,1),w-literal(aux153,1),w-literal(aux51,1)}),watched-and({watched-or({modulo(aux246,13,0),gaceq(aux19,aux120)}),w-literal(aux18,1),w-literal(aux148,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux153,1),w-literal(aux51,1)}),watched-and({watched-or({modulo(aux247,13,0),gaceq(aux122,aux20)}),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux148,1),w-literal(aux144,1),w-literal(aux51,1)}),watched-and({watched-or({modulo(aux248,13,0),gaceq(aux119,aux122)}),w-literal(aux60,1),w-literal(aux148,1),w-literal(aux144,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux51,1)}),watched-and({watched-or({modulo(aux249,13,0),gaceq(aux121,aux20)}),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux144,1),w-literal(aux88,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux250,13,0),gaceq(aux19,aux119)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux51,1)}),watched-and({watched-or({modulo(aux251,13,0),gaceq(aux119,aux121)}),w-literal(aux60,1),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux51,1)}),watched-and({modulo(aux252,13,0),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux148,1),w-literal(aux144,1),w-literal(aux88,1)}),watched-and({watched-or({modulo(aux253,13,0),gaceq(aux121,aux120)}),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux51,1)})})
watched-or({watched-and({watched-or({gaceq(aux71,aux143),modulo(aux254,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux91,1),w-literal(aux52,1),w-literal(aux126,1)}),watched-and({watched-or({gaceq(aux143,aux72),modulo(aux255,13,0)}),w-literal(aux127,1),w-literal(aux26,1),w-literal(aux92,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux143,aux70),modulo(aux256,13,0)}),w-literal(aux127,1),w-literal(aux91,1),w-literal(aux52,1),w-literal(aux126,1)}),watched-and({watched-or({gaceq(aux70,aux142),modulo(aux257,13,0)}),w-literal(aux127,1),w-literal(aux25,1),w-literal(aux52,1),w-literal(aux126,1)}),watched-and({w-literal(aux127,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux92,1),modulo(aux258,13,0)}),watched-and({watched-or({gaceq(aux142,aux72),modulo(aux259,13,0)}),w-literal(aux127,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux126,1)}),watched-and({watched-or({gaceq(aux71,aux142),modulo(aux260,13,0)}),w-literal(aux25,1),w-literal(aux26,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux126,1)})})
watched-or({watched-and({watched-or({modulo(aux261,13,0),gaceq(aux158,aux159)}),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux96,1)}),watched-and({watched-or({modulo(aux262,13,0),gaceq(aux160,aux159)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux95,1),w-literal(aux34,1)}),watched-and({watched-or({modulo(aux263,13,0),gaceq(aux161,aux158)}),w-literal(aux94,1),w-literal(aux35,1),w-literal(aux96,1)}),watched-and({modulo(aux264,13,0),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux34,1)}),watched-and({watched-or({modulo(aux265,13,0),gaceq(aux160,aux161)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux35,1),w-literal(aux96,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux77,1),watched-or({div(M_00010_00001, 13, aux24),modulo(aux266,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux77,1),watched-or({div(M_00010_00003, 13, aux24),modulo(aux267,13,0)})}),watched-and({w-literal(aux78,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux268,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux170),modulo(aux269,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux270,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux171)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux171)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux172)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux172)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux173)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux173)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux174)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux174)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux175)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux175)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux176)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux176)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux177)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux177)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux178)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux178)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux179)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux179)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux180)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux180)
weightedsumleq([-1,1],[M_00002_00011,-1],aux181)
weightedsumgeq([-1,1],[M_00002_00011,-1],aux181)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux182)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux182)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux183)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux183)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux184)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux184)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux185)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux185)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux186)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux186)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux187)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux187)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux188)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux188)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux189)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux189)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux190)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux190)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux191)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux191)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux192)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux192)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux193)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux193)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux194)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux194)
weightedsumleq([-1,1],[M_00003_00010,-1],aux195)
weightedsumgeq([-1,1],[M_00003_00010,-1],aux195)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux196)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux196)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux197)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux197)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux198)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux198)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux199)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux199)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux200)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux200)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux201)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux201)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux202)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux202)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux203)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux203)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux204)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux204)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux205)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux205)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux206)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux206)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux207)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux207)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux208)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux208)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux209)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux209)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux210)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux210)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux211)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux211)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux212)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux212)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux213)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux213)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux214)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux214)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux215)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux215)
weightedsumleq([-1,1],[M_00004_00009,-1],aux216)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux216)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux217)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux217)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux218)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux218)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux219)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux219)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux220)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux220)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux221)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux221)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux222)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux222)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux223)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux223)
weightedsumleq([1,-1],[-1,M_00005_00008],aux224)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux224)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux225)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux225)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux226)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux226)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux227)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux227)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux228)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux228)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux229)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux229)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux230)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux230)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux231)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux231)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux232)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux232)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux233)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux233)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux234)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux234)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux235)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux235)
weightedsumleq([1,-1],[-1,M_00006_00007],aux236)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux236)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux237)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux237)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux238)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux238)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux239)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux239)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux240)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux240)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux241)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux241)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux242)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux242)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux243)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux243)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux244)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux244)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux245)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux245)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux246)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux246)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux247)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux247)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux248)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux248)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux249)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux249)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux250)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux250)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux251)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux251)
weightedsumleq([-1,1],[M_00007_00006,-1],aux252)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux252)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux253)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux253)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux254)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux254)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux255)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux255)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux256)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux256)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux257)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux257)
weightedsumleq([-1,1],[M_00008_00005,-1],aux258)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux258)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux259)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux259)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux260)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux260)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux261)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux261)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux262)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux262)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux263)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux263)
weightedsumleq([1,-1],[-1,M_00009_00004],aux264)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux264)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux265)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux265)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux266)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux266)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux267)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux267)
weightedsumleq([-1,1],[M_00010_00003,-1],aux268)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux268)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux269)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux269)
weightedsumleq([-1,1],[M_00011_00002,-1],aux270)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux270)
**EOF**
