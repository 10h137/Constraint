MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 128
# CSE_active_eliminated_expressions = 602
# CSE_active_total_size = 384
**VARIABLES**
DISCRETE M_00002_00001 #
{14..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [14,14,16,16])
**VARIABLES**
DISCRETE M_00002_00002 #
{7..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [7,7,10,10,14,14])
**VARIABLES**
DISCRETE M_00002_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00005 #
{42..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00002_00006 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,7,7,10,10,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00002_00008 #
{10..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [10,10,14,14,16,16,22,22])
**VARIABLES**
DISCRETE M_00002_00009 #
{22..31}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00002_00010 #
{10..31}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00003_00001 #
{14..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [14,14,16,16,22,22,24,24,31,31,42,42])
**VARIABLES**
DISCRETE M_00003_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00004 #
{42..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00003_00005 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,7,7,10,10,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00003_00008 #
{10..31}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00003_00009 #
{10..31}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00004_00001 #
{14..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00004 #
{10..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..31}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00004_00008 #
{10..31}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00005_00001 #
{10..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00005_00007 #
{4..31}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00006_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00007_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,7,7,10,10,14,14,16,16,22,22,24,24,31,31,42,42,45,45,49,49])
**VARIABLES**
BOOL aux13 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..2}
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{0..3}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux22 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux25 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux27 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux31 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux34 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux39 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux40 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux41 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..2}
BOOL aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002/13)
BOOL aux48 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux52 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux54 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux55 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..3}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux71 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux74 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux77 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux78 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux79 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux82 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux85 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
BOOL aux88 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux93 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux94 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux97 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux100 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux101 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux108 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux111 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
BOOL aux118 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux120 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux121 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux123 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux126 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux127 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux129 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux130 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
DISCRETE aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
BOOL aux133 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux134 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux138 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux140 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux141 #
{0..3}
DISCRETE aux142 #( - M_00002_00002 + M_00002_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux142, [-7,-7,-4,-3,0,0,2,4,6,10,12,12,14,15,17,17,21,21,24,24,28,28,31,32,35,35,38,38])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00003 + M_00002_00004)
{-3..38}
**CONSTRAINTS**
w-inintervalset(aux143, [-3,-3,0,0,3,3,11,11,14,14,18,18,20,21,23,23,26,26,28,29,31,32,35,35,38,38])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00005 + M_00002_00006)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux144, [-25,-25,-21,-21,-18,-18,-14,-14,-11,-11,-7,-7,-4,-3,0,0,3,4,7,7])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00001 + M_00002_00004)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux145, [26,26,28,29])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00010 + -1)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux146, [-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00002 + M_00002_00005)
{28..42}
**CONSTRAINTS**
w-inintervalset(aux147, [28,28,31,32,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00001 + M_00002_00002)
{-7..-2}
**CONSTRAINTS**
w-inintervalset(aux148, [-7,-6,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux149 #( - M_00002_00003 + M_00002_00006)
{-21..42}
**CONSTRAINTS**
w-inintervalset(aux149, [-21,-21,-18,-18,-14,-14,-11,-11,-7,-7,-3,-3,0,0,2,4,7,11,14,15,17,18,20,21,23,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux150 #( - M_00002_00007 + M_00002_00008)
{-14..18}
**CONSTRAINTS**
w-inintervalset(aux150, [-14,-14,-12,-12,-10,-10,-8,-8,-6,-6,-4,-4,-2,-2,0,0,2,4,6,10,12,12,15,15,18,18])
**VARIABLES**
DISCRETE aux151 #( - M_00002_00008 + M_00002_00009)
{9..12}
**CONSTRAINTS**
w-inintervalset(aux151, [9,10,12,12])
**VARIABLES**
DISCRETE aux152 #( - M_00002_00007 + M_00002_00010)
{6..7}
DISCRETE aux153 #( - M_00002_00009 + M_00002_00010)
{-21..9}
**CONSTRAINTS**
w-inintervalset(aux153, [-21,-21,-17,-17,-15,-14,-12,-12,-10,-6,-2,-2,0,0,2,2,7,7,9,9])
**VARIABLES**
DISCRETE aux154 #( - M_00002_00006 + M_00002_00007)
{-25..-20}
**CONSTRAINTS**
w-inintervalset(aux154, [-25,-23,-21,-20])
**VARIABLES**
DISCRETE aux155 #( - M_00002_00006 + M_00002_00009)
{-27..7}
**CONSTRAINTS**
w-inintervalset(aux155, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-14,-14,-11,-11,-9,-9,-7,-7,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00003 + M_00003_00004)
{-3..42}
**CONSTRAINTS**
w-inintervalset(aux156, [-3,-3,0,0,3,4,7,7,11,11,14,14,18,18,20,21,23,23,25,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00001 + M_00003_00004)
{7..35}
**CONSTRAINTS**
w-inintervalset(aux157, [7,7,11,11,14,14,18,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00002 + M_00003_00005)
{-21..42}
**CONSTRAINTS**
w-inintervalset(aux158, [-21,-21,-18,-18,-14,-14,-11,-11,-7,-7,-3,-3,0,0,2,4,7,11,14,15,17,18,20,21,23,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00003 + M_00003_00006)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux159, [-41,-41,-38,-38,-35,-35,-32,-31,-29,-26,-24,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00009 + -1)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux160, [-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00006 + M_00003_00007)
{-45..18}
**CONSTRAINTS**
w-inintervalset(aux161, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-12,-10,-6,-4,-2,0,0,2,4,6,10,12,12,14,15,17,18])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00007 + M_00003_00008)
{-14..21}
**CONSTRAINTS**
w-inintervalset(aux162, [-14,-14,-12,-12,-10,-10,-8,-8,-6,-6,-4,-4,-2,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00006 + M_00003_00009)
{-39..27}
**CONSTRAINTS**
w-inintervalset(aux163, [-39,-39,-35,-35,-33,-31,-29,-25,-23,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-4,-2,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux164 #( - M_00003_00008 + M_00003_00009)
{-21..21}
**CONSTRAINTS**
w-inintervalset(aux164, [-21,-21,-17,-17,-15,-14,-12,-12,-10,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,10,12,12,14,15,17,17,21,21])
**VARIABLES**
DISCRETE aux165 #( - M_00003_00005 + M_00003_00006)
{-45..7}
**CONSTRAINTS**
w-inintervalset(aux165, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-11,-7,-4,-2,0,0,3,4,7,7])
**VARIABLES**
DISCRETE aux166 #( - M_00003_00005 + M_00003_00008)
{-39..7}
**CONSTRAINTS**
w-inintervalset(aux166, [-39,-39,-35,-35,-33,-31,-29,-25,-23,-23,-21,-20,-18,-17,-15,-14,-11,-7,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux167 #( - M_00003_00004 + M_00003_00007)
{-41..-18}
**CONSTRAINTS**
w-inintervalset(aux167, [-41,-41,-39,-38,-35,-35,-33,-31,-29,-25,-23,-23,-21,-20,-18,-18])
**VARIABLES**
DISCRETE aux168 #( - M_00003_00001 + M_00003_00002)
{-28..31}
**CONSTRAINTS**
w-inintervalset(aux168, [-28,-28,-26,-26,-24,-24,-21,-20,-18,-17,-15,-14,-12,-6,-4,-4,-2,-2,0,0,2,3,6,11,14,15,17,18,20,21,23,23,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux169 #( - M_00003_00002 + M_00003_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux169, [-7,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,24,26,26,28,29,31,32,35,35,38,38])
**VARIABLES**
DISCRETE aux170 #( - M_00003_00004 + M_00003_00005)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux170, [-25,-25,-21,-21,-18,-18,-14,-14,-11,-11,-7,-7,-4,-3,0,0,3,4,7,7])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00002 + M_00004_00003)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux171, [-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00001 + M_00004_00004)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux172, [-25,-25,-23,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,11,14,15,17,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00002 + M_00004_00005)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux173, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,42,42])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00008 + -1)
{-32..-11}
**CONSTRAINTS**
w-inintervalset(aux174, [-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00006 + M_00004_00007)
{-45..27}
**CONSTRAINTS**
w-inintervalset(aux175, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00007 + M_00004_00008)
{-21..27}
**CONSTRAINTS**
w-inintervalset(aux176, [-21,-21,-17,-17,-15,-14,-12,-12,-10,-6,-4,-4,-2,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux177 #( - M_00004_00005 + M_00004_00006)
{-45..39}
**CONSTRAINTS**
w-inintervalset(aux177, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39])
**VARIABLES**
DISCRETE aux178 #( - M_00004_00005 + M_00004_00008)
{-39..27}
**CONSTRAINTS**
w-inintervalset(aux178, [-39,-39,-35,-35,-33,-31,-29,-25,-23,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-4,-2,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux179 #( - M_00004_00004 + M_00004_00005)
{-45..39}
**CONSTRAINTS**
w-inintervalset(aux179, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,23,25,29,31,33,35,35,39,39])
**VARIABLES**
DISCRETE aux180 #( - M_00004_00004 + M_00004_00007)
{-45..21}
**CONSTRAINTS**
w-inintervalset(aux180, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,2,4,4,6,10,12,12,14,15,17,17,21,21])
**VARIABLES**
DISCRETE aux181 #( - M_00004_00001 + M_00004_00002)
{-38..35}
**CONSTRAINTS**
w-inintervalset(aux181, [-38,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,11,14,15,17,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux182 #( - M_00004_00003 + M_00004_00004)
{-35..45}
**CONSTRAINTS**
w-inintervalset(aux182, [-35,-35,-33,-31,-29,-25,-23,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux183 #( - M_00004_00003 + M_00004_00006)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux183, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42])
**VARIABLES**
DISCRETE aux184 #(-1 - M_00005_00007)
{-32..-5}
**CONSTRAINTS**
w-inintervalset(aux184, [-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00004 + M_00005_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux185, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00005 + M_00005_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux186, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00004 + M_00005_00007)
{-45..27}
**CONSTRAINTS**
w-inintervalset(aux187, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux188 #( - M_00005_00006 + M_00005_00007)
{-45..27}
**CONSTRAINTS**
w-inintervalset(aux188, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,10,12,12,14,15,17,18,20,21,24,24,27,27])
**VARIABLES**
DISCRETE aux189 #( - M_00005_00003 + M_00005_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux189, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux190 #( - M_00005_00003 + M_00005_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux190, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux191 #( - M_00005_00002 + M_00005_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux191, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux192 #( - M_00005_00002 + M_00005_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux192, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux193 #( - M_00005_00001 + M_00005_00002)
{-45..39}
**CONSTRAINTS**
w-inintervalset(aux193, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,23,25,29,31,33,35,35,39,39])
**VARIABLES**
DISCRETE aux194 #( - M_00005_00001 + M_00005_00004)
{-45..39}
**CONSTRAINTS**
w-inintervalset(aux194, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,23,25,29,31,33,35,35,39,39])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00003 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux195, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00004 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux196, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux197 #( - M_00006_00003 + M_00006_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux197, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux198 #(-1 - M_00006_00006)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux198, [-50,-50,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux199 #( - M_00006_00005 + M_00006_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux199, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux200 #( - M_00006_00002 + M_00006_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux200, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux201 #( - M_00006_00002 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux201, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux202 #( - M_00006_00001 + M_00006_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux202, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux203 #( - M_00006_00001 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux203, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux204 #( - M_00007_00001 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux204, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux205 #( - M_00007_00005 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux205, [-50,-50,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux206 #( - M_00007_00001 + M_00007_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux206, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux207 #( - M_00007_00002 + M_00007_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux207, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux208 #( - M_00007_00002 + M_00007_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux208, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux209 #( - M_00007_00003 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux209, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux210 #( - M_00007_00004 + M_00007_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux210, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux211 #( - M_00008_00003 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux211, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux212 #( - M_00008_00001 + M_00008_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux212, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux213 #( - M_00008_00001 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux213, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux214 #( - M_00008_00002 + M_00008_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux214, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux215 #( - M_00008_00004 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux215, [-50,-50,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux216 #( - M_00009_00001 + M_00009_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux216, [-45,-45,-42,-41,-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39,41,42,45,45])
**VARIABLES**
DISCRETE aux217 #( - M_00009_00002 + M_00009_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux217, [-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39])
**VARIABLES**
DISCRETE aux218 #(-1 - M_00009_00003)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux218, [-50,-50,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux219 #( - M_00010_00001 + M_00010_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux219, [-39,-38,-35,-35,-33,-31,-29,-23,-21,-20,-18,-17,-15,-14,-12,-6,-4,-2,0,0,2,4,6,12,14,15,17,18,20,21,23,29,31,33,35,35,38,39])
**VARIABLES**
DISCRETE aux220 #( - M_00010_00002 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux220, [-50,-50,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-11,-11,-8,-8,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[16, 14, 7, 45, 42, 49, 24, 4, 22, 31, 10]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux141)
reify(gaceq(M_00002_00001,M_00003_00001), aux13)
reify(gaceq(M_00007_00004,M_00006_00004), aux14)
div(M_00002_00009, 13, aux15)
div(M_00002_00007, 13, aux16)
div(M_00002_00003, 13, aux17)
reify(gaceq(M_00003_00009,M_00004_00008), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00003, 13, aux20)
div(M_00007_00005, 13, aux21)
reify(gaceq(M_00005_00002,M_00006_00002), aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00007_00002,M_00006_00002), aux24)
reify(gaceq(M_00003_00002,M_00004_00002), aux25)
reify(gaceq(M_00005_00003,M_00006_00003), aux26)
reify(gaceq(M_00005_00007,M_00006_00006), aux27)
div(M_00002_00006, 13, aux28)
reify(gaceq(M_00004_00005,M_00005_00005), aux29)
reify(gaceq(M_00004_00005,M_00005_00004), aux30)
reify(gaceq(M_00002_00010,M_00003_00009), aux31)
reify(gaceq(M_00010_00001,M_00009_00001), aux32)
reify(gaceq(M_00010_00002,M_00009_00003), aux33)
reify(gaceq(M_00004_00006,M_00005_00005), aux34)
div(M_00004_00003, 13, aux35)
div(M_00004_00002, 13, aux36)
div(M_00004_00006, 13, aux37)
div(M_00004_00007, 13, aux38)
reify(gaceq(M_00004_00003,M_00005_00003), aux39)
reify(gaceq(M_00005_00001,M_00006_00001), aux40)
reify(gaceq(M_00004_00002,M_00005_00002), aux41)
reify(gaceq(M_00003_00008,M_00004_00007), aux42)
div(M_00002_00008, 13, aux43)
div(M_00002_00010, 13, aux44)
div(M_00002_00005, 13, 3)
div(M_00002_00004, 13, 3)
div(M_00002_00002, 13, aux47)
reify(gaceq(M_00002_00008,M_00003_00007), aux48)
reify(gaceq(M_00008_00004,M_00009_00003), aux49)
reify(gaceq(M_00008_00002,M_00009_00002), aux50)
reify(gaceq(M_00008_00001,M_00009_00001), aux51)
reify(gaceq(M_00003_00007,M_00004_00006), aux52)
reify(gaceq(M_00003_00006,M_00004_00006), aux53)
reify(gaceq(M_00003_00005,M_00004_00004), aux54)
reify(gaceq(M_00005_00005,M_00006_00005), aux55)
div(M_00003_00009, 13, aux56)
div(M_00003_00007, 13, aux57)
div(M_00003_00001, 13, aux58)
div(M_00005_00007, 13, aux59)
div(M_00005_00001, 13, aux60)
div(M_00008_00003, 13, aux61)
div(M_00008_00002, 13, aux62)
div(M_00008_00001, 13, aux63)
div(M_00008_00004, 13, aux64)
div(M_00006_00005, 13, aux65)
div(M_00006_00004, 13, aux66)
div(M_00006_00003, 13, aux67)
div(M_00006_00002, 13, aux68)
reify(gaceq(M_00002_00005,M_00003_00004), aux69)
reify(gaceq(M_00004_00004,M_00005_00003), aux70)
reify(gaceq(M_00002_00006,M_00003_00006), aux71)
reify(gaceq(M_00002_00009,M_00003_00009), aux72)
reify(gaceq(M_00002_00003,M_00003_00002), aux73)
reify(gaceq(M_00003_00004,M_00004_00004), aux74)
reify(gaceq(M_00002_00007,M_00003_00007), aux75)
reify(gaceq(M_00002_00008,M_00003_00008), aux76)
reify(gaceq(M_00007_00001,M_00006_00001), aux77)
reify(gaceq(M_00004_00007,M_00005_00006), aux78)
reify(gaceq(M_00003_00003,M_00004_00003), aux79)
reify(gaceq(M_00007_00004,M_00008_00004), aux80)
reify(gaceq(M_00007_00003,M_00008_00002), aux81)
reify(gaceq(M_00003_00006,M_00004_00005), aux82)
reify(gaceq(M_00008_00003,M_00009_00002), aux83)
reify(gaceq(M_00008_00003,M_00009_00003), aux84)
reify(gaceq(M_00003_00001,M_00004_00001), aux85)
div(M_00006_00001, 13, aux86)
div(M_00006_00006, 13, aux87)
reify(gaceq(M_00004_00004,M_00005_00004), aux88)
div(M_00003_00008, 13, aux89)
div(M_00003_00002, 13, aux90)
div(M_00003_00003, 13, aux91)
div(M_00003_00004, 13, 3)
reify(gaceq(M_00005_00005,M_00006_00004), aux93)
reify(gaceq(M_00002_00005,M_00003_00005), aux94)
reify(gaceq(M_00003_00003,M_00004_00002), aux95)
reify(gaceq(M_00003_00008,M_00004_00008), aux96)
reify(gaceq(M_00005_00004,M_00006_00004), aux97)
reify(gaceq(M_00005_00003,M_00006_00002), aux98)
reify(gaceq(M_00005_00006,M_00006_00006), aux99)
reify(gaceq(M_00002_00004,M_00003_00004), aux100)
reify(gaceq(M_00002_00009,M_00003_00008), aux101)
div(M_00005_00006, 13, aux102)
div(M_00005_00002, 13, aux103)
div(M_00005_00005, 13, aux104)
div(M_00005_00003, 13, aux105)
reify(gaceq(M_00004_00007,M_00005_00007), aux106)
reify(gaceq(M_00004_00003,M_00005_00002), aux107)
reify(gaceq(M_00004_00008,M_00005_00007), aux108)
div(M_00007_00002, 13, aux109)
div(M_00007_00004, 13, aux110)
reify(gaceq(M_00002_00007,M_00003_00006), aux111)
reify(gaceq(M_00003_00004,M_00004_00003), aux112)
reify(gaceq(M_00007_00004,M_00008_00003), aux113)
reify(gaceq(M_00005_00004,M_00006_00003), aux114)
reify(gaceq(M_00003_00007,M_00004_00007), aux115)
div(M_00004_00004, 13, aux116)
div(M_00004_00005, 13, aux117)
reify(gaceq(M_00002_00002,M_00003_00002), aux118)
reify(gaceq(M_00007_00003,M_00006_00004), aux119)
reify(gaceq(M_00002_00003,M_00003_00003), aux120)
reify(gaceq(M_00007_00001,M_00008_00001), aux121)
reify(gaceq(M_00007_00002,M_00008_00002), aux122)
reify(gaceq(M_00007_00003,M_00008_00003), aux123)
reify(gaceq(M_00007_00005,M_00006_00005), aux124)
reify(gaceq(M_00007_00002,M_00006_00003), aux125)
reify(gaceq(M_00005_00006,M_00006_00005), aux126)
reify(gaceq(M_00003_00005,M_00004_00005), aux127)
div(M_00003_00006, 13, aux128)
div(M_00003_00005, 13, aux129)
reify(gaceq(M_00007_00005,M_00008_00004), aux130)
reify(gaceq(M_00002_00004,M_00003_00003), aux131)
div(M_00005_00004, 13, aux132)
reify(gaceq(M_00004_00001,M_00005_00001), aux133)
reify(gaceq(M_00007_00005,M_00006_00006), aux134)
div(M_00009_00002, 13, aux135)
div(M_00004_00008, 13, aux136)
div(M_00004_00001, 13, aux137)
reify(gaceq(M_00004_00006,M_00005_00006), aux138)
reify(gaceq(M_00007_00004,M_00006_00005), aux139)
reify(gaceq(M_00007_00003,M_00006_00003), aux140)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,14),w-literal(M_00002_00002,7),w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45),w-literal(M_00002_00005,42),w-literal(M_00002_00006,49),w-literal(M_00002_00007,24),w-literal(M_00002_00008,10),w-literal(M_00002_00009,22),w-literal(M_00002_00010,31)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,10)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,42),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,10)})})
watched-or({watched-and({w-literal(aux13,1),w-literal(aux73,1),w-literal(aux131,1),w-literal(aux69,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux142,13,0),gaceq(aux47,aux17)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux131,1),w-literal(aux69,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux143,13,0),w-literal(aux17,3)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux144,13,0),w-literal(aux28,3)})}),watched-and({w-literal(aux118,1),w-literal(aux120,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux69,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),modulo(aux145,13,0)}),watched-and({modulo(aux146,13,0),w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux71,1),w-literal(aux75,1),w-literal(aux76,1),w-literal(aux72,1)}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux69,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1)}),watched-and({w-literal(aux13,1),w-literal(aux120,1),w-literal(aux100,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),modulo(aux147,13,0)}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux73,1),w-literal(aux131,1),w-literal(aux69,1),w-literal(aux23,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux148,13,0),div(M_00002_00001, 13, aux47)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux100,1),w-literal(aux94,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux149,13,0),gaceq(aux17,aux28)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux71,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux150,13,0),gaceq(aux16,aux43)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux71,1),w-literal(aux75,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux151,13,0),gaceq(aux43,aux15)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux71,1),w-literal(aux76,1),w-literal(aux72,1),gaceq(M_00002_00010,M_00003_00007),watched-or({modulo(aux152,13,0),gaceq(aux16,aux44)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux71,1),w-literal(aux75,1),w-literal(aux76,1),w-literal(aux31,1),watched-or({modulo(aux153,13,0),gaceq(aux15,aux44)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux111,1),w-literal(aux48,1),w-literal(aux101,1),w-literal(aux31,1),watched-or({modulo(aux154,13,0),gaceq(aux28,aux16)})}),watched-and({w-literal(aux13,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux100,1),w-literal(aux94,1),w-literal(aux75,1),w-literal(aux76,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux31,1),watched-or({modulo(aux155,13,0),gaceq(aux28,aux15)})})})
watched-or({watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux156,13,0),w-literal(aux91,3)})}),watched-and({w-literal(aux25,1),w-literal(aux79,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux54,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux157,13,0),w-literal(aux58,3)})}),watched-and({w-literal(aux85,1),w-literal(aux79,1),w-literal(aux74,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux158,13,0),gaceq(aux90,aux129)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux74,1),w-literal(aux127,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux159,13,0),gaceq(aux91,aux128)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux127,1),w-literal(aux53,1),w-literal(aux115,1),w-literal(aux96,1),modulo(aux160,13,0)}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux127,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux161,13,0),gaceq(aux128,aux57)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux127,1),w-literal(aux53,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux162,13,0),gaceq(aux57,aux89)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux127,1),w-literal(aux115,1),w-literal(aux96,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux163,13,0),gaceq(aux128,aux56)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux127,1),w-literal(aux53,1),w-literal(aux115,1),w-literal(aux18,1),watched-or({modulo(aux164,13,0),gaceq(aux89,aux56)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux165,13,0),gaceq(aux129,aux128)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux74,1),w-literal(aux53,1),w-literal(aux115,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux18,1),watched-or({modulo(aux166,13,0),gaceq(aux129,aux89)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux127,1),w-literal(aux53,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux42,1),w-literal(aux18,1),modulo(aux167,13,0)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux95,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux168,13,0),gaceq(aux58,aux90)})}),watched-and({w-literal(aux85,1),w-literal(aux95,1),w-literal(aux112,1),w-literal(aux54,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux169,13,0),gaceq(aux90,aux91)})}),watched-and({w-literal(aux85,1),w-literal(aux25,1),w-literal(aux79,1),w-literal(aux54,1),w-literal(aux82,1),w-literal(aux52,1),w-literal(aux42,1),w-literal(aux18,1),watched-or({modulo(aux170,13,0),w-literal(aux129,3)})})})
watched-or({watched-and({w-literal(aux133,1),w-literal(aux107,1),w-literal(aux70,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux36,aux35),modulo(aux171,13,0)})}),watched-and({w-literal(aux41,1),w-literal(aux39,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux137,aux116),modulo(aux172,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux39,1),w-literal(aux88,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux36,aux117),modulo(aux173,13,0)})}),watched-and({modulo(aux174,13,0),w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux29,1),w-literal(aux138,1),w-literal(aux106,1)}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux29,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux37,aux38),modulo(aux175,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux29,1),w-literal(aux138,1),w-literal(aux108,1),watched-or({gaceq(aux38,aux136),modulo(aux176,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux117,aux37),modulo(aux177,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux88,1),w-literal(aux138,1),w-literal(aux106,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux117,aux136),modulo(aux178,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux116,aux117),modulo(aux179,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux39,1),w-literal(aux29,1),w-literal(aux138,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux108,1),watched-or({gaceq(aux116,aux38),modulo(aux180,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux107,1),w-literal(aux70,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux137,aux36),modulo(aux181,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux70,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux35,aux116),modulo(aux182,13,0)})}),watched-and({w-literal(aux133,1),w-literal(aux41,1),w-literal(aux88,1),w-literal(aux29,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux78,1),w-literal(aux108,1),watched-or({gaceq(aux35,aux37),modulo(aux183,13,0)})})})
watched-or({watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux26,1),w-literal(aux97,1),w-literal(aux55,1),w-literal(aux99,1),modulo(aux184,13,0)}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux26,1),w-literal(aux93,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux185,13,0),gaceq(aux132,aux104)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux26,1),w-literal(aux97,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux186,13,0),gaceq(aux104,aux102)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux26,1),w-literal(aux55,1),w-literal(aux99,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux187,13,0),gaceq(aux132,aux59)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux26,1),w-literal(aux97,1),w-literal(aux55,1),w-literal(aux27,1),watched-or({modulo(aux188,13,0),gaceq(aux102,aux59)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux114,1),w-literal(aux93,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux189,13,0),gaceq(aux105,aux132)})}),watched-and({w-literal(aux40,1),w-literal(aux22,1),w-literal(aux97,1),w-literal(aux55,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux27,1),watched-or({modulo(aux190,13,0),gaceq(aux105,aux102)})}),watched-and({w-literal(aux40,1),w-literal(aux98,1),w-literal(aux114,1),w-literal(aux93,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux191,13,0),gaceq(aux103,aux105)})}),watched-and({w-literal(aux40,1),w-literal(aux26,1),w-literal(aux97,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux192,13,0),gaceq(aux103,aux104)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux98,1),w-literal(aux114,1),w-literal(aux93,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux193,13,0),gaceq(aux60,aux103)})}),watched-and({w-literal(aux22,1),w-literal(aux26,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux93,1),w-literal(aux126,1),w-literal(aux27,1),watched-or({modulo(aux194,13,0),gaceq(aux60,aux132)})})})
watched-or({watched-and({w-literal(aux77,1),w-literal(aux24,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux134,1),watched-or({gaceq(aux67,aux66),modulo(aux195,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux24,1),w-literal(aux140,1),w-literal(aux139,1),w-literal(aux134,1),watched-or({gaceq(aux66,aux65),modulo(aux196,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux24,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux14,1),w-literal(aux124,1),watched-or({gaceq(aux67,aux87),modulo(aux197,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux24,1),w-literal(aux140,1),w-literal(aux14,1),w-literal(aux124,1),modulo(aux198,13,0)}),watched-and({w-literal(aux77,1),w-literal(aux24,1),w-literal(aux140,1),w-literal(aux14,1),w-literal(aux134,1),watched-or({gaceq(aux65,aux87),modulo(aux199,13,0)})}),watched-and({w-literal(aux77,1),w-literal(aux125,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux134,1),watched-or({gaceq(aux68,aux67),modulo(aux200,13,0)})}),watched-and({w-literal(aux77,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux140,1),w-literal(aux14,1),w-literal(aux134,1),watched-or({gaceq(aux68,aux65),modulo(aux201,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux125,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux134,1),watched-or({gaceq(aux86,aux68),modulo(aux202,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux24,1),w-literal(aux140,1),w-literal(aux139,1),w-literal(aux134,1),watched-or({gaceq(aux86,aux66),modulo(aux203,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux204,13,0),gaceq(aux19,aux110)}),w-literal(aux122,1),w-literal(aux123,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux130,1)}),watched-and({modulo(aux205,13,0),w-literal(aux121,1),w-literal(aux122,1),w-literal(aux123,1),w-literal(aux80,1)}),watched-and({watched-or({modulo(aux206,13,0),gaceq(aux19,aux109)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux81,1),w-literal(aux113,1),w-literal(aux130,1)}),watched-and({watched-or({modulo(aux207,13,0),gaceq(aux109,aux21)}),w-literal(aux121,1),w-literal(aux123,1),w-literal(aux80,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux208,13,0),gaceq(aux109,aux20)}),w-literal(aux121,1),w-literal(aux81,1),w-literal(aux113,1),w-literal(aux130,1)}),watched-and({watched-or({modulo(aux209,13,0),gaceq(aux20,aux110)}),w-literal(aux121,1),w-literal(aux122,1),w-literal(aux113,1),w-literal(aux130,1)}),watched-and({watched-or({modulo(aux210,13,0),gaceq(aux110,aux21)}),w-literal(aux121,1),w-literal(aux122,1),w-literal(aux123,1),w-literal(aux130,1)})})
watched-or({watched-and({watched-or({gaceq(aux61,aux64),modulo(aux211,13,0)}),w-literal(aux51,1),w-literal(aux50,1),w-literal(aux49,1)}),watched-and({watched-or({gaceq(aux63,aux62),modulo(aux212,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux83,1),w-literal(aux49,1)}),watched-and({watched-or({gaceq(aux63,aux64),modulo(aux213,13,0)}),w-literal(aux50,1),w-literal(aux84,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux62,aux61),modulo(aux214,13,0)}),w-literal(aux51,1),w-literal(aux83,1),w-literal(aux49,1)}),watched-and({w-literal(aux51,1),w-literal(aux50,1),w-literal(aux84,1),modulo(aux215,13,0)})})
watched-or({watched-and({watched-or({modulo(aux216,13,0),div(M_00009_00001, 13, aux135)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux33,1)}),watched-and({watched-or({modulo(aux217,13,0),div(M_00009_00003, 13, aux135)}),w-literal(aux32,1),w-literal(aux33,1)}),watched-and({modulo(aux218,13,0),w-literal(aux32,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux141),modulo(aux219,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux220,13,0)})})
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux142)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux142)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux144)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux144)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux145)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux145)
weightedsumleq([-1,1],[M_00002_00010,-1],aux146)
weightedsumgeq([-1,1],[M_00002_00010,-1],aux146)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux147)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux147)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux148)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux148)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux149)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux149)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux150)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux150)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux151)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux151)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux152)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux152)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux153)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux153)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux156)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux156)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux157)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux157)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux158)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux158)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux159)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux159)
weightedsumleq([-1,1],[M_00003_00009,-1],aux160)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux160)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux161)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux161)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux162)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux162)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux163)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux163)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux164)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux164)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux165)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux165)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux166)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux166)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux167)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux167)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux168)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux168)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux169)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux169)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux170)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux170)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux171)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux171)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux172)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux172)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux173)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux173)
weightedsumleq([-1,1],[M_00004_00008,-1],aux174)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux174)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux175)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux175)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux176)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux176)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux177)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux177)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux178)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux178)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux179)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux179)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux180)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux180)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux181)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux181)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux182)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux182)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux183)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux183)
weightedsumleq([1,-1],[-1,M_00005_00007],aux184)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux184)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux185)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux185)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux186)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux186)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux188)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux188)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux191)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux191)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux192)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux192)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux193)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux193)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux194)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux194)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux195)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux195)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux196)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux196)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux197)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux197)
weightedsumleq([1,-1],[-1,M_00006_00006],aux198)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux198)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux199)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux199)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux200)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux200)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux201)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux201)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux202)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux202)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux203)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux203)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux204)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux204)
weightedsumleq([-1,1],[M_00007_00005,-1],aux205)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux205)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux206)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux206)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux207)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux207)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux209)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux209)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux210)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux210)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux211)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux211)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux212)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux212)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux213)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux213)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux214)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux214)
weightedsumleq([-1,1],[M_00008_00004,-1],aux215)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux215)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux216)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux216)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux217)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux217)
weightedsumleq([1,-1],[-1,M_00009_00003],aux218)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux218)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux219)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux219)
weightedsumleq([-1,1],[M_00010_00002,-1],aux220)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux220)
**EOF**
