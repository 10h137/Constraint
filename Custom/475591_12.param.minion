MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 101
# CSE_active_eliminated_expressions = 357
# CSE_active_total_size = 303
**VARIABLES**
DISCRETE M_00002_00001 #
{14..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [14,14,16,16])
**VARIABLES**
DISCRETE M_00002_00002 #
{7..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [7,7,11,11,14,14])
**VARIABLES**
DISCRETE M_00002_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00001 #
{14..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [14,14,16,16,22,22,24,24,31,31,42,42])
**VARIABLES**
DISCRETE M_00003_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00001 #
{14..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00004 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,7,7,11,11,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00005_00001 #
{11..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,7,7,11,11,14,14,16,16,22,22])
**VARIABLES**
DISCRETE M_00005_00006 #
{22..31}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..31}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00006_00006 #
{22..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [22,22,24,24,31,31,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00007 #
{11..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00005 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00006 #
{11..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00005 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [4,4,7,7,11,11,14,14,16,16,22,22,24,24,31,31,42,42,45,45,47,47,49,49])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux14 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux15 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux17 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux18 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux19 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux21 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux22 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux24 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux25 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
DISCRETE aux28 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux29 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
BOOL aux30 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005/13)
BOOL aux31 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003/13)
{0..3}
BOOL aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002/13)
BOOL aux35 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux37 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
DISCRETE aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..3}
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006/13)
{1..2}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{1..3}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux54 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux55 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux63 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux68 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux71 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux82 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux83 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux84 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux85 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{1..3}
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
DISCRETE aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux98 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux99 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux100 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
DISCRETE aux104 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
BOOL aux105 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
BOOL aux106 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux113 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux114 #
{0..3}
DISCRETE aux115 #( - M_00002_00001 + M_00002_00004)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux115, [26,26,28,29])
**VARIABLES**
DISCRETE aux116 #( - M_00002_00001 + M_00002_00002)
{-7..-2}
**CONSTRAINTS**
w-inintervalset(aux116, [-7,-7,-5,-5,-3,-2])
**VARIABLES**
DISCRETE aux117 #( - M_00002_00002 + M_00002_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux117, [-7,-7,-4,-3,0,0,2,5,7,11,13,13,15,15,17,17,20,20,24,24,28,28,31,31,34,35,38,38])
**VARIABLES**
DISCRETE aux118 #( - M_00002_00003 + M_00002_00004)
{-3..38}
**CONSTRAINTS**
w-inintervalset(aux118, [-3,-3,0,0,3,3,11,11,14,14,18,18,20,21,23,23,26,26,28,29,31,31,34,35,38,38])
**VARIABLES**
DISCRETE aux119 #( - M_00003_00001 + 49)
{7..35}
**CONSTRAINTS**
w-inintervalset(aux119, [7,7,18,18,25,25,27,27,33,33,35,35])
**VARIABLES**
DISCRETE aux120 #( - M_00003_00002 + M_00003_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux120, [-7,-2,0,0,2,11,13,15,17,18,20,21,23,24,26,26,28,29,31,31,34,35,38,38])
**VARIABLES**
DISCRETE aux121 #( - M_00003_00002 + 24)
{-21..17}
**CONSTRAINTS**
w-inintervalset(aux121, [-21,-21,-18,-18,-7,-7,0,0,2,2,8,8,10,10,13,13,17,17])
**VARIABLES**
DISCRETE aux122 #( - M_00003_00003 + 49)
{4..42}
**CONSTRAINTS**
w-inintervalset(aux122, [4,4,7,7,18,18,25,25,27,27,33,33,35,35,38,38,42,42])
**VARIABLES**
DISCRETE aux123 #( - M_00003_00003 + 4)
{-41..-3}
**CONSTRAINTS**
w-inintervalset(aux123, [-41,-41,-38,-38,-27,-27,-20,-20,-18,-18,-12,-12,-10,-10,-7,-7,-3,-3])
**VARIABLES**
DISCRETE aux124 #( - M_00003_00001 + M_00003_00002)
{-28..31}
**CONSTRAINTS**
w-inintervalset(aux124, [-28,-28,-26,-26,-24,-24,-20,-20,-18,-17,-15,-15,-13,-13,-11,-5,-3,-2,0,0,2,3,6,11,14,15,17,18,20,21,23,23,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux125 #( - M_00004_00005 + 22)
{-2..18}
**CONSTRAINTS**
w-inintervalset(aux125, [-2,-2,0,0,6,6,8,8,11,11,15,15,18,18])
**VARIABLES**
DISCRETE aux126 #( - M_00004_00003 + 22)
{-27..18}
**CONSTRAINTS**
w-inintervalset(aux126, [-27,-27,-25,-25,-23,-23,-20,-20,-9,-9,-2,-2,0,0,6,6,8,8,11,11,15,15,18,18])
**VARIABLES**
DISCRETE aux127 #( - M_00004_00004 + 31)
{-18..7}
**CONSTRAINTS**
w-inintervalset(aux127, [-18,-18,-16,-16,-14,-14,-11,-11,0,0,7,7])
**VARIABLES**
DISCRETE aux128 #( - M_00004_00003 + M_00004_00004)
{-25..45}
**CONSTRAINTS**
w-inintervalset(aux128, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-14,-11,-11,-7,-7,-5,-2,0,0,2,5,7,11,13,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux129 #( - M_00004_00004 + M_00004_00005)
{-45..-20}
**CONSTRAINTS**
w-inintervalset(aux129, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20])
**VARIABLES**
DISCRETE aux130 #( - M_00004_00002 + M_00004_00003)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux130, [-38,-38,-35,-34,-31,-31,-29,-26,-24,-23,-21,-20,-18,-17,-15,-2,0,0,2,11,13,18,20,21,23,29,31,31,33,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux131 #( - M_00004_00002 + M_00004_00005)
{-41..17}
**CONSTRAINTS**
w-inintervalset(aux131, [-41,-41,-38,-38,-35,-34,-31,-31,-29,-26,-24,-23,-21,-20,-18,-17,-15,-15,-13,-2,0,0,2,11,13,13,15,15,17,17])
**VARIABLES**
DISCRETE aux132 #( - M_00004_00001 + M_00004_00002)
{-38..31}
**CONSTRAINTS**
w-inintervalset(aux132, [-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-13,-11,-2,0,0,2,3,6,11,14,15,17,18,20,21,23,23,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux133 #( - M_00004_00001 + M_00004_00004)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux133, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-14,-11,-11,-7,-7,-5,-2,0,0,2,5,7,11,14,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux134 #( - M_00005_00001 + M_00005_00004)
{-45..35}
**CONSTRAINTS**
w-inintervalset(aux134, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,11,13,18,20,21,23,23,25,29,31,31,33,35])
**VARIABLES**
DISCRETE aux135 #( - M_00005_00002 + M_00005_00003)
{-41..45}
**CONSTRAINTS**
w-inintervalset(aux135, [-41,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux136 #( - M_00005_00005 + M_00005_00006)
{9..27}
**CONSTRAINTS**
w-inintervalset(aux136, [9,11,13,13,15,15,17,18,20,20,24,24,27,27])
**VARIABLES**
DISCRETE aux137 #(47 - M_00005_00004)
{-2..43}
**CONSTRAINTS**
w-inintervalset(aux137, [-2,-2,0,0,2,2,5,5,16,16,23,23,25,25,31,31,33,33,36,36,40,40,43,43])
**VARIABLES**
DISCRETE aux138 #(11 - M_00005_00005)
{-11..7}
**CONSTRAINTS**
w-inintervalset(aux138, [-11,-11,-5,-5,-3,-3,0,0,4,4,7,7])
**VARIABLES**
DISCRETE aux139 #( - M_00005_00002 + M_00005_00005)
{-41..18}
**CONSTRAINTS**
w-inintervalset(aux139, [-41,-40,-38,-38,-36,-33,-31,-31,-29,-23,-20,-20,-18,-17,-15,-15,-13,-2,0,0,2,12,15,15,18,18])
**VARIABLES**
DISCRETE aux140 #( - M_00005_00001 + M_00005_00002)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux140, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,11,13,18,20,21,23,23,25,29,31,31,33,36,38,38])
**VARIABLES**
DISCRETE aux141 #(47 - M_00005_00006)
{16..25}
**CONSTRAINTS**
w-inintervalset(aux141, [16,16,23,23,25,25])
**VARIABLES**
DISCRETE aux142 #( - M_00005_00003 + M_00005_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux142, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux143 #( - M_00005_00004 + M_00005_00005)
{-45..18}
**CONSTRAINTS**
w-inintervalset(aux143, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-20,-20,-18,-17,-15,-15,-13,-2,0,0,2,12,15,15,18,18])
**VARIABLES**
DISCRETE aux144 #( - M_00005_00003 + M_00005_00006)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux144, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-16,-16,-14,-14,-11,-11,-9,-9,-7,-7,-2,-2,0,0,2,2,6,11,13,13,15,15,17,18,20,20,24,24,27,27])
**VARIABLES**
DISCRETE aux145 #( - M_00006_00001 + M_00006_00004)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux145, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38])
**VARIABLES**
DISCRETE aux146 #( - M_00006_00004 + M_00006_00005)
{-43..27}
**CONSTRAINTS**
w-inintervalset(aux146, [-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,13,15,15,17,18,20,20,24,24,27,27])
**VARIABLES**
DISCRETE aux147 #(-1 - M_00006_00007)
{-48..-12}
**CONSTRAINTS**
w-inintervalset(aux147, [-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12])
**VARIABLES**
DISCRETE aux148 #( - M_00006_00005 + M_00006_00006)
{9..43}
**CONSTRAINTS**
w-inintervalset(aux148, [9,11,13,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux149 #( - M_00006_00004 + M_00006_00007)
{-38..43}
**CONSTRAINTS**
w-inintervalset(aux149, [-38,-38,-36,-33,-31,-31,-29,-25,-23,-23,-21,-20,-18,-13,-11,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux150 #( - M_00006_00006 + M_00006_00007)
{-36..25}
**CONSTRAINTS**
w-inintervalset(aux150, [-36,-36,-34,-33,-31,-31,-29,-28,-26,-25,-23,-23,-21,-20,-18,-13,-11,-5,-3,-2,0,0,2,3,5,5,7,7,9,9,11,11,14,14,16,16,18,18,20,21,23,23,25,25])
**VARIABLES**
DISCRETE aux151 #( - M_00006_00003 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux151, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux152 #( - M_00006_00003 + M_00006_00006)
{-27..43}
**CONSTRAINTS**
w-inintervalset(aux152, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-16,-16,-14,-14,-11,-11,-9,-9,-7,-7,-5,-2,0,0,2,3,5,11,13,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux153 #( - M_00006_00002 + M_00006_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux153, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux154 #( - M_00006_00002 + M_00006_00005)
{-45..27}
**CONSTRAINTS**
w-inintervalset(aux154, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,13,15,15,17,18,20,20,24,24,27,27])
**VARIABLES**
DISCRETE aux155 #( - M_00006_00001 + M_00006_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux155, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux156 #( - M_00007_00004 + M_00007_00005)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux156, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux157 #( - M_00007_00001 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux157, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux158 #( - M_00007_00005 + M_00007_00006)
{-36..43}
**CONSTRAINTS**
w-inintervalset(aux158, [-36,-36,-34,-33,-31,-31,-29,-28,-26,-25,-23,-23,-21,-20,-18,-13,-11,-5,-3,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux159 #( - M_00007_00002 + M_00007_00005)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux159, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux160 #( - M_00007_00003 + M_00007_00006)
{-38..43}
**CONSTRAINTS**
w-inintervalset(aux160, [-38,-38,-36,-33,-31,-31,-29,-25,-23,-23,-21,-20,-18,-13,-11,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux161 #( - M_00007_00001 + M_00007_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux161, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux162 #( - M_00007_00002 + M_00007_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux162, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux163 #( - M_00007_00006 + -1)
{-48..-12}
**CONSTRAINTS**
w-inintervalset(aux163, [-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12])
**VARIABLES**
DISCRETE aux164 #( - M_00007_00003 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux164, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux165 #( - M_00008_00001 + M_00008_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux165, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux166 #( - M_00008_00002 + M_00008_00005)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux166, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux167 #( - M_00008_00002 + M_00008_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux167, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux168 #( - M_00008_00003 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux168, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux169 #( - M_00008_00005 + -1)
{-48..-5}
**CONSTRAINTS**
w-inintervalset(aux169, [-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux170 #( - M_00008_00004 + M_00008_00005)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux170, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux171 #( - M_00008_00001 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux171, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux172 #( - M_00009_00003 + M_00009_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux172, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux173 #( - M_00009_00001 + M_00009_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux173, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux174 #( - M_00009_00002 + M_00009_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux174, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux175 #(-1 - M_00009_00004)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux175, [-50,-50,-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux176 #( - M_00009_00001 + M_00009_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux176, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux177 #( - M_00010_00001 + M_00010_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux177, [-45,-45,-43,-40,-38,-38,-36,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,29,31,31,33,36,38,38,40,43,45,45])
**VARIABLES**
DISCRETE aux178 #( - M_00010_00002 + M_00010_00003)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux178, [-35,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,26])
**VARIABLES**
DISCRETE aux179 #( - M_00010_00003 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux179, [-50,-50,-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux180 #( - M_00011_00001 + M_00011_00002)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux180, [-35,-33,-31,-31,-29,-23,-21,-20,-18,-2,0,0,2,18,20,21,23,26])
**VARIABLES**
DISCRETE aux181 #( - M_00011_00002 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux181, [-50,-50,-48,-48,-46,-46,-43,-43,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-12,-12,-8,-8,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[16, 14, 7, 45, 42, 49, 24, 4, 22, 31, 47, 11]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux114)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
reify(gaceq(M_00007_00002,M_00008_00002), aux14)
div(M_00007_00001, 13, aux15)
div(M_00007_00006, 13, aux16)
reify(gaceq(M_00004_00001,M_00005_00001), aux17)
reify(gaceq(M_00005_00002,M_00006_00002), aux18)
reify(gaceq(M_00007_00003,M_00006_00003), aux19)
div(M_00010_00002, 13, aux20)
reify(gaceq(M_00008_00002,M_00009_00002), aux21)
reify(gaceq(M_00008_00003,M_00009_00003), aux22)
reify(gaceq(M_00005_00003,M_00006_00003), aux23)
reify(gaceq(M_00004_00003,M_00005_00003), aux24)
reify(gaceq(M_00004_00005,M_00005_00004), aux25)
reify(gaceq(M_00010_00003,M_00009_00003), aux26)
reify(gaceq(M_00010_00002,M_00009_00003), aux27)
div(M_00004_00003, 13, aux28)
div(M_00004_00002, 13, aux29)
div(M_00004_00005, 13, aux30)
reify(gaceq(M_00005_00001,M_00006_00001), aux31)
div(M_00002_00004, 13, 3)
div(M_00002_00003, 13, aux33)
div(M_00002_00002, 13, aux34)
reify(gaceq(M_00007_00006,M_00008_00005), aux35)
reify(gaceq(M_00008_00004,M_00009_00003), aux36)
reify(gaceq(M_00007_00001,M_00008_00001), aux37)
div(M_00003_00001, 13, aux38)
div(M_00005_00006, 13, aux39)
div(M_00005_00001, 13, aux40)
div(M_00008_00003, 13, aux41)
div(M_00008_00001, 13, aux42)
div(M_00008_00005, 13, aux43)
div(M_00006_00006, 13, aux44)
div(M_00006_00005, 13, aux45)
div(M_00006_00003, 13, aux46)
div(M_00006_00002, 13, aux47)
reify(gaceq(M_00010_00003,M_00011_00002), aux48)
reify(gaceq(M_00010_00001,M_00011_00001), aux49)
reify(gaceq(M_00004_00004,M_00005_00004), aux50)
reify(gaceq(M_00004_00004,M_00005_00003), aux51)
reify(gaceq(M_00002_00003,M_00003_00002), aux52)
reify(gaceq(M_00002_00003,M_00003_00003), aux53)
reify(gaceq(M_00004_00002,M_00005_00002), aux54)
reify(gaceq(M_00007_00006,M_00006_00007), aux55)
reify(gaceq(M_00007_00005,M_00008_00005), aux56)
reify(gaceq(M_00007_00003,M_00008_00002), aux57)
reify(gaceq(M_00008_00003,M_00009_00002), aux58)
reify(gaceq(M_00008_00004,M_00009_00004), aux59)
reify(gaceq(M_00010_00001,M_00009_00001), aux60)
reify(gaceq(M_00010_00002,M_00009_00002), aux61)
reify(gaceq(M_00010_00003,M_00009_00004), aux62)
div(M_00006_00004, 13, aux63)
div(M_00006_00001, 13, aux64)
div(M_00006_00007, 13, aux65)
div(M_00003_00002, 13, aux66)
div(M_00003_00003, 13, aux67)
reify(gaceq(M_00005_00005,M_00006_00004), aux68)
reify(gaceq(M_00003_00003,M_00004_00003), aux69)
reify(gaceq(M_00003_00003,M_00004_00002), aux70)
reify(gaceq(M_00005_00004,M_00006_00004), aux71)
reify(gaceq(M_00005_00003,M_00006_00002), aux72)
reify(gaceq(M_00005_00006,M_00006_00006), aux73)
div(M_00005_00002, 13, aux74)
div(M_00005_00003, 13, aux75)
reify(gaceq(M_00004_00003,M_00005_00002), aux76)
reify(gaceq(M_00004_00005,M_00005_00005), aux77)
div(M_00007_00002, 13, aux78)
div(M_00007_00004, 13, aux79)
div(M_00007_00003, 13, aux80)
div(M_00007_00005, 13, aux81)
reify(gaceq(M_00007_00002,M_00006_00002), aux82)
reify(gaceq(M_00007_00001,M_00006_00001), aux83)
reify(gaceq(M_00008_00005,M_00009_00004), aux84)
reify(gaceq(M_00008_00001,M_00009_00001), aux85)
reify(gaceq(M_00003_00002,M_00004_00002), aux86)
reify(gaceq(M_00007_00004,M_00008_00003), aux87)
reify(gaceq(M_00005_00004,M_00006_00003), aux88)
reify(gaceq(M_00005_00005,M_00006_00005), aux89)
reify(gaceq(M_00003_00001,M_00004_00001), aux90)
div(M_00004_00004, 13, aux91)
reify(gaceq(M_00007_00003,M_00006_00004), aux92)
div(M_00008_00004, 13, aux93)
div(M_00008_00002, 13, aux94)
reify(gaceq(M_00007_00004,M_00008_00004), aux95)
reify(gaceq(M_00007_00006,M_00006_00006), aux96)
reify(gaceq(M_00007_00002,M_00006_00003), aux97)
reify(gaceq(M_00005_00006,M_00006_00005), aux98)
reify(gaceq(M_00007_00003,M_00008_00003), aux99)
reify(gaceq(M_00007_00005,M_00008_00004), aux100)
reify(gaceq(M_00002_00001,M_00003_00001), aux101)
reify(gaceq(M_00002_00004,M_00003_00003), aux102)
reify(gaceq(M_00002_00002,M_00003_00002), aux103)
div(M_00005_00004, 13, aux104)
div(M_00005_00005, 13, aux105)
reify(gaceq(M_00007_00005,M_00006_00006), aux106)
div(M_00009_00003, 13, aux107)
div(M_00009_00004, 13, aux108)
div(M_00009_00001, 13, aux109)
div(M_00009_00002, 13, aux110)
div(M_00004_00001, 13, aux111)
reify(gaceq(M_00007_00004,M_00006_00004), aux112)
reify(gaceq(M_00007_00004,M_00006_00005), aux113)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,14),w-literal(M_00002_00002,7),w-literal(M_00002_00003,45),w-literal(M_00002_00004,42)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,42)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45)})})
watched-or({watched-and({w-literal(aux103,1),w-literal(aux53,1),gaceq(M_00002_00004,M_00003_00001),modulo(aux115,13,0)}),watched-and({w-literal(aux101,1),w-literal(aux103,1),w-literal(aux53,1)}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux52,1),w-literal(aux102,1),watched-or({modulo(aux116,13,0),div(M_00002_00001, 13, aux34)})}),watched-and({w-literal(aux101,1),w-literal(aux52,1),w-literal(aux102,1),watched-or({modulo(aux117,13,0),gaceq(aux34,aux33)})}),watched-and({w-literal(aux101,1),w-literal(aux103,1),w-literal(aux102,1),watched-or({modulo(aux118,13,0),w-literal(aux33,3)})})})
watched-or({watched-and({watched-or({modulo(aux119,13,0),w-literal(aux38,3)}),w-literal(aux86,1),w-literal(aux69,1),w-literal(M_00004_00001,49),w-literal(M_00004_00004,24),w-literal(M_00004_00005,4)}),watched-and({w-literal(aux90,1),w-literal(aux70,1),watched-or({modulo(aux120,13,0),gaceq(aux66,aux67)}),w-literal(M_00004_00003,49),w-literal(M_00004_00004,24),w-literal(M_00004_00005,4)}),watched-and({watched-or({modulo(aux121,13,0),w-literal(aux66,1)}),w-literal(aux90,1),w-literal(aux69,1),w-literal(M_00004_00002,24),w-literal(M_00004_00005,4),w-literal(M_00004_00004,49)}),watched-and({watched-or({modulo(aux122,13,0),w-literal(aux67,3)}),w-literal(aux90,1),w-literal(aux86,1),w-literal(M_00004_00003,49),w-literal(M_00004_00004,24),w-literal(M_00004_00005,4)}),watched-and({watched-or({modulo(aux123,13,0),w-literal(aux67,0)}),w-literal(aux90,1),w-literal(aux86,1),w-literal(M_00004_00003,4),w-literal(M_00004_00004,49),w-literal(M_00004_00005,24)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux70,1),watched-or({modulo(aux124,13,0),gaceq(aux38,aux66)}),w-literal(M_00004_00003,49),w-literal(M_00004_00004,24),w-literal(M_00004_00005,4)})})
watched-or({watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),watched-or({modulo(aux125,13,0),w-literal(aux30,1)}),w-literal(aux17,1),w-literal(aux54,1),w-literal(aux24,1),w-literal(aux50,1)}),watched-and({w-literal(M_00005_00003,22),w-literal(M_00005_00006,31),watched-or({modulo(aux126,13,0),w-literal(aux28,1)}),w-literal(aux17,1),w-literal(aux54,1),w-literal(aux50,1),w-literal(aux77,1)}),watched-and({w-literal(M_00005_00006,22),w-literal(M_00005_00004,31),watched-or({modulo(aux127,13,0),w-literal(aux91,2)}),w-literal(aux17,1),w-literal(aux54,1),w-literal(aux24,1),w-literal(aux77,1)}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),w-literal(aux17,1),w-literal(aux54,1),w-literal(aux51,1),w-literal(aux25,1),watched-or({gaceq(aux28,aux91),modulo(aux128,13,0)})}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),w-literal(aux17,1),w-literal(aux54,1),w-literal(aux24,1),w-literal(aux25,1),watched-or({gaceq(aux91,aux30),modulo(aux129,13,0)})}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),w-literal(aux17,1),w-literal(aux76,1),w-literal(aux51,1),w-literal(aux25,1),watched-or({gaceq(aux29,aux28),modulo(aux130,13,0)})}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),w-literal(aux17,1),w-literal(aux24,1),w-literal(aux50,1),gaceq(M_00004_00005,M_00005_00002),watched-or({gaceq(aux29,aux30),modulo(aux131,13,0)})}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),gaceq(M_00004_00002,M_00005_00001),w-literal(aux76,1),w-literal(aux51,1),w-literal(aux25,1),watched-or({gaceq(aux111,aux29),modulo(aux132,13,0)})}),watched-and({w-literal(M_00005_00005,22),w-literal(M_00005_00006,31),w-literal(aux54,1),w-literal(aux24,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux25,1),watched-or({gaceq(aux111,aux91),modulo(aux133,13,0)})})})
watched-or({watched-and({w-literal(aux18,1),w-literal(aux23,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux68,1),w-literal(aux98,1),watched-or({modulo(aux134,13,0),gaceq(aux40,aux104)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux72,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux98,1),watched-or({modulo(aux135,13,0),gaceq(aux74,aux75)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux18,1),w-literal(aux23,1),w-literal(aux71,1),w-literal(aux98,1),watched-or({modulo(aux136,13,0),gaceq(aux105,aux39)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({watched-or({w-literal(aux104,3),modulo(aux137,13,0)}),w-literal(aux31,1),w-literal(aux18,1),w-literal(aux23,1),w-literal(aux89,1),w-literal(aux73,1),w-literal(M_00006_00007,11),w-literal(M_00006_00004,47)}),watched-and({watched-or({w-literal(aux105,0),modulo(aux138,13,0)}),w-literal(aux31,1),w-literal(aux18,1),w-literal(aux23,1),w-literal(aux71,1),w-literal(aux73,1),w-literal(M_00006_00005,11),w-literal(M_00006_00007,47)}),watched-and({w-literal(aux31,1),w-literal(aux23,1),w-literal(aux71,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux98,1),watched-or({modulo(aux139,13,0),gaceq(aux74,aux105)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux72,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux98,1),watched-or({modulo(aux140,13,0),gaceq(aux40,aux74)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux18,1),w-literal(aux23,1),w-literal(aux71,1),w-literal(aux89,1),modulo(aux141,13,0),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux18,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux98,1),watched-or({modulo(aux142,13,0),gaceq(aux75,aux104)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux18,1),w-literal(aux23,1),w-literal(aux68,1),w-literal(aux98,1),watched-or({modulo(aux143,13,0),gaceq(aux104,aux105)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)}),watched-and({w-literal(aux31,1),w-literal(aux18,1),w-literal(aux71,1),w-literal(aux89,1),gaceq(M_00005_00006,M_00006_00003),watched-or({modulo(aux144,13,0),gaceq(aux75,aux39)}),w-literal(M_00006_00007,11),w-literal(M_00006_00006,47)})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux82,1),w-literal(aux19,1),w-literal(aux113,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux64,aux63),modulo(aux145,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux19,1),w-literal(aux113,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux63,aux45),modulo(aux146,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux19,1),w-literal(aux112,1),w-literal(aux13,1),w-literal(aux96,1),modulo(aux147,13,0)}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux19,1),w-literal(aux112,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux45,aux44),modulo(aux148,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux19,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux96,1),watched-or({gaceq(aux63,aux65),modulo(aux149,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux19,1),w-literal(aux112,1),w-literal(aux13,1),w-literal(aux55,1),watched-or({gaceq(aux44,aux65),modulo(aux150,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),w-literal(aux92,1),w-literal(aux113,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux46,aux63),modulo(aux151,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux82,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux112,1),w-literal(aux13,1),w-literal(aux55,1),watched-or({gaceq(aux46,aux44),modulo(aux152,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux97,1),w-literal(aux92,1),w-literal(aux113,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux47,aux46),modulo(aux153,13,0)})}),watched-and({w-literal(aux83,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux19,1),w-literal(aux112,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux47,aux45),modulo(aux154,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux97,1),w-literal(aux92,1),w-literal(aux113,1),w-literal(aux106,1),w-literal(aux55,1),watched-or({gaceq(aux64,aux47),modulo(aux155,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux156,13,0),gaceq(aux79,aux81)}),w-literal(aux37,1),w-literal(aux14,1),w-literal(aux99,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux157,13,0),gaceq(aux15,aux79)}),w-literal(aux14,1),w-literal(aux99,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux158,13,0),gaceq(aux81,aux16)}),w-literal(aux37,1),w-literal(aux14,1),w-literal(aux99,1),w-literal(aux95,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux159,13,0),gaceq(aux78,aux81)}),w-literal(aux37,1),w-literal(aux99,1),w-literal(aux95,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux160,13,0),gaceq(aux80,aux16)}),w-literal(aux37,1),w-literal(aux14,1),w-literal(aux95,1),w-literal(aux56,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux161,13,0),gaceq(aux15,aux78)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux57,1),w-literal(aux87,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux162,13,0),gaceq(aux78,aux80)}),w-literal(aux37,1),w-literal(aux57,1),w-literal(aux87,1),w-literal(aux100,1),w-literal(aux35,1)}),watched-and({modulo(aux163,13,0),w-literal(aux37,1),w-literal(aux14,1),w-literal(aux99,1),w-literal(aux95,1),w-literal(aux56,1)}),watched-and({watched-or({modulo(aux164,13,0),gaceq(aux80,aux79)}),w-literal(aux37,1),w-literal(aux14,1),w-literal(aux87,1),w-literal(aux100,1),w-literal(aux35,1)})})
watched-or({watched-and({watched-or({gaceq(aux42,aux94),modulo(aux165,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux58,1),w-literal(aux36,1),w-literal(aux84,1)}),watched-and({watched-or({gaceq(aux94,aux43),modulo(aux166,13,0)}),w-literal(aux85,1),w-literal(aux22,1),w-literal(aux59,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux94,aux41),modulo(aux167,13,0)}),w-literal(aux85,1),w-literal(aux58,1),w-literal(aux36,1),w-literal(aux84,1)}),watched-and({watched-or({gaceq(aux41,aux93),modulo(aux168,13,0)}),w-literal(aux85,1),w-literal(aux21,1),w-literal(aux36,1),w-literal(aux84,1)}),watched-and({w-literal(aux85,1),w-literal(aux21,1),w-literal(aux22,1),w-literal(aux59,1),modulo(aux169,13,0)}),watched-and({watched-or({gaceq(aux93,aux43),modulo(aux170,13,0)}),w-literal(aux85,1),w-literal(aux21,1),w-literal(aux22,1),w-literal(aux84,1)}),watched-and({watched-or({gaceq(aux42,aux93),modulo(aux171,13,0)}),w-literal(aux21,1),w-literal(aux22,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux84,1)})})
watched-or({watched-and({watched-or({modulo(aux172,13,0),gaceq(aux107,aux108)}),w-literal(aux60,1),w-literal(aux61,1),w-literal(aux62,1)}),watched-and({watched-or({modulo(aux173,13,0),gaceq(aux109,aux108)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux61,1),w-literal(aux26,1)}),watched-and({watched-or({modulo(aux174,13,0),gaceq(aux110,aux107)}),w-literal(aux60,1),w-literal(aux27,1),w-literal(aux62,1)}),watched-and({modulo(aux175,13,0),w-literal(aux60,1),w-literal(aux61,1),w-literal(aux26,1)}),watched-and({watched-or({modulo(aux176,13,0),gaceq(aux109,aux110)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux27,1),w-literal(aux62,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux48,1),watched-or({div(M_00010_00001, 13, aux20),modulo(aux177,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux48,1),watched-or({div(M_00010_00003, 13, aux20),modulo(aux178,13,0)})}),watched-and({w-literal(aux49,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux179,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux114),modulo(aux180,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux181,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux115)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux115)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux116)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux116)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux117)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux117)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux118)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux118)
weightedsumleq([-1,1],[M_00003_00001,49],aux119)
weightedsumgeq([-1,1],[M_00003_00001,49],aux119)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux120)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux120)
weightedsumleq([-1,1],[M_00003_00002,24],aux121)
weightedsumgeq([-1,1],[M_00003_00002,24],aux121)
weightedsumleq([-1,1],[M_00003_00003,49],aux122)
weightedsumgeq([-1,1],[M_00003_00003,49],aux122)
weightedsumleq([-1,1],[M_00003_00003,4],aux123)
weightedsumgeq([-1,1],[M_00003_00003,4],aux123)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux124)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux124)
weightedsumleq([-1,1],[M_00004_00005,22],aux125)
weightedsumgeq([-1,1],[M_00004_00005,22],aux125)
weightedsumleq([-1,1],[M_00004_00003,22],aux126)
weightedsumgeq([-1,1],[M_00004_00003,22],aux126)
weightedsumleq([-1,1],[M_00004_00004,31],aux127)
weightedsumgeq([-1,1],[M_00004_00004,31],aux127)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux128)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux128)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux129)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux129)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux130)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux130)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux131)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux131)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux132)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux132)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux133)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux133)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux134)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux134)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux135)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux135)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux136)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux136)
weightedsumleq([1,-1],[47,M_00005_00004],aux137)
weightedsumgeq([1,-1],[47,M_00005_00004],aux137)
weightedsumleq([1,-1],[11,M_00005_00005],aux138)
weightedsumgeq([1,-1],[11,M_00005_00005],aux138)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux139)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux139)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux140)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux140)
weightedsumleq([1,-1],[47,M_00005_00006],aux141)
weightedsumgeq([1,-1],[47,M_00005_00006],aux141)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux145)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux145)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux146)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux146)
weightedsumleq([1,-1],[-1,M_00006_00007],aux147)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux147)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux148)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux148)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux149)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux149)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux150)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux150)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux151)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux151)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux152)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux152)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux153)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux153)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux154)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux154)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux155)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux155)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux156)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux156)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux157)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux157)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux158)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux158)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux159)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux159)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux160)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux160)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux161)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux161)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux162)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux162)
weightedsumleq([-1,1],[M_00007_00006,-1],aux163)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux163)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux164)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux164)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux165)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux165)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux166)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux166)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux167)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux167)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux168)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux168)
weightedsumleq([-1,1],[M_00008_00005,-1],aux169)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux169)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux170)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux170)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux171)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux171)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux172)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux172)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux173)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux173)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux174)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux174)
weightedsumleq([1,-1],[-1,M_00009_00004],aux175)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux175)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux176)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux176)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux177)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux177)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux178)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux178)
weightedsumleq([-1,1],[M_00010_00003,-1],aux179)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux179)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux180)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux180)
weightedsumleq([-1,1],[M_00011_00002,-1],aux181)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux181)
**EOF**
