MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 168
# CSE_active_eliminated_expressions = 838
# CSE_active_total_size = 504
**VARIABLES**
DISCRETE M_00002_00001 #
{14..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [14,14,16,16])
**VARIABLES**
DISCRETE M_00002_00002 #
{7..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [7,7,12,12,14,14])
**VARIABLES**
DISCRETE M_00002_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00001 #
{14..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [14,14,16,16,22,22,24,24,31,31,36,36,42,42])
**VARIABLES**
DISCRETE M_00003_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00004 #
{42..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00003_00005 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,7,7,12,12,14,14,16,16,22,22])
**VARIABLES**
DISCRETE M_00003_00008 #
{22..31}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00003_00009 #
{31..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00010 #
{36..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00011 #
{12..36}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [12,12,14,14,16,16,22,22,24,24,31,31,36,36])
**VARIABLES**
DISCRETE M_00004_00001 #
{14..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00004 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..31}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00004_00008 #
{22..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00009 #
{31..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00010 #
{12..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00001 #
{14..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42])
**VARIABLES**
DISCRETE M_00005_00007 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00008 #
{22..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00009 #
{12..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00006 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00007 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00008 #
{12..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00006 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00007 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00006 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00013_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [4,4,7,7,12,12,14,14,16,16,22,22,24,24,31,31,36,36,42,42,45,45,47,47,49,49])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{0..3}
BOOL aux15 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux18 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux24 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux25 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux26 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux27 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux28 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux32 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
BOOL aux37 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux38 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux40 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002/13)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux45 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux48 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux49 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux50 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux51 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux52 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..2}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{2..3}
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..3}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{2..3}
BOOL aux61 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{1..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
BOOL aux64 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux67 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux72 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux80 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux81 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux82 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux85 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux89 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux92 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux93 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux96 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux97 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux98 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
BOOL aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux105 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux106 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux111 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux112 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{1..3}
DISCRETE aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux117 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux118 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux121 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux122 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux123 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux128 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux129 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux130 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux137 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux138 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux139 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{1..3}
DISCRETE aux140 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
BOOL aux141 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux142 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux144 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux145 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux154 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux155 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux157 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux158 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux159 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux162 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux164 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux165 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux166 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux167 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux170 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{2..3}
DISCRETE aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
DISCRETE aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux174 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux175 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux176 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux177 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux178 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux179 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux180 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux181 #
{0..3}
DISCRETE aux182 #( - M_00002_00001 + M_00002_00004)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux182, [26,26,28,29])
**VARIABLES**
DISCRETE aux183 #( - M_00002_00003 + 24)
{-21..17}
**CONSTRAINTS**
w-inintervalset(aux183, [-21,-21,-18,-18,-12,-12,-7,-7,0,0,2,2,8,8,10,10,12,12,17,17])
**VARIABLES**
DISCRETE aux184 #( - M_00002_00001 + M_00002_00002)
{-7..-2}
**CONSTRAINTS**
w-inintervalset(aux184, [-7,-7,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux185 #( - M_00002_00002 + M_00002_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux185, [-7,-7,-5,-5,-2,-2,0,0,2,2,4,5,7,10,12,12,15,15,17,17,19,19,22,22,24,24,28,31,33,33,35,35,38,38])
**VARIABLES**
DISCRETE aux186 #( - M_00002_00003 + M_00002_00004)
{-3..38}
**CONSTRAINTS**
w-inintervalset(aux186, [-3,-3,0,0,3,3,6,6,9,9,11,11,14,14,18,18,20,21,23,23,26,26,28,31,33,33,35,35,38,38])
**VARIABLES**
DISCRETE aux187 #( - M_00003_00001 + M_00003_00004)
{7..35}
**CONSTRAINTS**
w-inintervalset(aux187, [7,7,9,9,11,11,13,14,16,16,18,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux188 #( - M_00003_00003 + M_00003_00004)
{-3..42}
**CONSTRAINTS**
w-inintervalset(aux188, [-3,-3,0,0,2,7,9,9,11,11,13,14,16,16,18,18,20,21,23,23,25,31,33,33,35,35,37,38,40,40,42,42])
**VARIABLES**
DISCRETE aux189 #( - M_00003_00004 + M_00003_00005)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux189, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-13,-11,-11,-9,-9,-7,-2,0,0,2,5,7,7])
**VARIABLES**
DISCRETE aux190 #( - M_00003_00006 + M_00003_00007)
{-20..18}
**CONSTRAINTS**
w-inintervalset(aux190, [-20,-20,-18,-17,-15,-15,-12,-12,-10,-2,0,0,2,10,12,12,15,15,18,18])
**VARIABLES**
DISCRETE aux191 #( - M_00003_00002 + M_00003_00005)
{-21..42}
**CONSTRAINTS**
w-inintervalset(aux191, [-21,-21,-18,-18,-14,-14,-12,-11,-9,-9,-7,-5,-3,-3,0,0,2,31,33,33,35,35,37,38,40,40,42,42])
**VARIABLES**
DISCRETE aux192 #( - M_00003_00005 + M_00003_00006)
{-45..-20}
**CONSTRAINTS**
w-inintervalset(aux192, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-20])
**VARIABLES**
DISCRETE aux193 #( - M_00003_00003 + M_00003_00006)
{-41..17}
**CONSTRAINTS**
w-inintervalset(aux193, [-41,-41,-38,-38,-35,-35,-33,-26,-24,-17,-15,-14,-12,-12,-10,-2,0,0,2,2,4,10,12,12,15,15,17,17])
**VARIABLES**
DISCRETE aux194 #( - M_00003_00002 + M_00003_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux194, [-7,-2,0,0,2,12,14,15,17,24,26,26,28,31,33,33,35,35,38,38])
**VARIABLES**
DISCRETE aux195 #( - M_00003_00001 + M_00003_00002)
{-28..31}
**CONSTRAINTS**
w-inintervalset(aux195, [-28,-28,-26,-26,-24,-24,-22,-22,-20,-17,-15,-14,-12,-4,-2,-2,0,0,2,3,5,12,14,15,17,18,20,23,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux196 #( - M_00003_00005 + M_00003_00008)
{-27..7}
**CONSTRAINTS**
w-inintervalset(aux196, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-16,-16,-14,-14,-12,-11,-9,-9,-7,-7,-5,-5,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux197 #( - M_00003_00011 + -1)
{-37..-13}
**CONSTRAINTS**
w-inintervalset(aux197, [-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux198 #( - M_00003_00008 + M_00003_00009)
{9..16}
**CONSTRAINTS**
w-inintervalset(aux198, [9,9,11,12,14,14,16,16])
**VARIABLES**
DISCRETE aux199 #( - M_00003_00009 + M_00003_00010)
{-11..16}
**CONSTRAINTS**
w-inintervalset(aux199, [-11,-11,-9,-9,-6,-5,-3,-2,0,0,2,3,5,6,9,9,11,11,14,14,16,16])
**VARIABLES**
DISCRETE aux200 #( - M_00003_00008 + M_00003_00011)
{-19..14}
**CONSTRAINTS**
w-inintervalset(aux200, [-19,-19,-17,-17,-15,-15,-12,-12,-10,-6,-2,-2,0,0,2,2,5,5,7,7,9,9,12,12,14,14])
**VARIABLES**
DISCRETE aux201 #( - M_00003_00010 + M_00003_00011)
{-24..-11}
**CONSTRAINTS**
w-inintervalset(aux201, [-24,-20,-18,-18,-16,-16,-14,-14,-12,-11])
**VARIABLES**
DISCRETE aux202 #( - M_00003_00007 + M_00003_00008)
{9..18}
**CONSTRAINTS**
w-inintervalset(aux202, [9,10,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux203 #( - M_00004_00010 + -1)
{-48..-13}
**CONSTRAINTS**
w-inintervalset(aux203, [-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux204 #( - M_00004_00006 + M_00004_00009)
{7..43}
**CONSTRAINTS**
w-inintervalset(aux204, [7,7,9,9,12,12,14,15,17,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux205 #( - M_00004_00008 + M_00004_00009)
{-11..25}
**CONSTRAINTS**
w-inintervalset(aux205, [-11,-11,-9,-9,-6,-5,-3,-2,0,0,2,3,5,7,9,9,11,12,14,14,16,16,18,18,20,21,23,23,25,25])
**VARIABLES**
DISCRETE aux206 #( - M_00004_00009 + M_00004_00010)
{-35..16}
**CONSTRAINTS**
w-inintervalset(aux206, [-35,-35,-33,-33,-31,-28,-26,-14,-12,-11,-9,-9,-7,-5,-3,-2,0,0,2,3,5,6,9,9,11,11,14,14,16,16])
**VARIABLES**
DISCRETE aux207 #( - M_00004_00007 + M_00004_00008)
{0..43}
**CONSTRAINTS**
w-inintervalset(aux207, [0,0,2,2,5,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux208 #( - M_00004_00007 + M_00004_00010)
{-19..43}
**CONSTRAINTS**
w-inintervalset(aux208, [-19,-19,-17,-17,-15,-15,-12,-12,-10,-6,-4,-4,-2,-2,0,0,2,2,4,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux209 #( - M_00004_00006 + M_00004_00007)
{-20..27}
**CONSTRAINTS**
w-inintervalset(aux209, [-20,-20,-18,-17,-15,-15,-12,-12,-10,-2,0,0,2,10,12,12,15,15,17,20,24,24,27,27])
**VARIABLES**
DISCRETE aux210 #( - M_00004_00002 + M_00004_00003)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux210, [-38,-38,-35,-35,-33,-26,-24,-17,-15,-14,-12,-2,0,0,2,31,33,33,35,35,37,38,40,40,42,42])
**VARIABLES**
DISCRETE aux211 #( - M_00004_00003 + M_00004_00004)
{-25..45}
**CONSTRAINTS**
w-inintervalset(aux211, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-11,-9,-9,-7,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux212 #( - M_00004_00005 + M_00004_00006)
{-45..18}
**CONSTRAINTS**
w-inintervalset(aux212, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-17,-15,-14,-12,-12,-10,-2,0,0,2,10,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux213 #( - M_00004_00005 + M_00004_00008)
{-27..43}
**CONSTRAINTS**
w-inintervalset(aux213, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-16,-16,-14,-11,-9,-9,-7,-2,0,0,2,3,5,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux214 #( - M_00004_00001 + M_00004_00004)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux214, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-11,-9,-9,-7,-2,0,0,2,18,20,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux215 #( - M_00004_00004 + M_00004_00005)
{-45..7}
**CONSTRAINTS**
w-inintervalset(aux215, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,7])
**VARIABLES**
DISCRETE aux216 #( - M_00004_00002 + M_00004_00005)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux216, [-41,-41,-38,-38,-35,-35,-33,-26,-24,-17,-15,-14,-12,-2,0,0,2,31,33,33,35,35,37,38,40,40,42,42])
**VARIABLES**
DISCRETE aux217 #( - M_00004_00001 + M_00004_00002)
{-38..31}
**CONSTRAINTS**
w-inintervalset(aux217, [-38,-37,-35,-35,-33,-33,-31,-2,0,0,2,3,5,12,14,15,17,18,20,23,26,26,28,29,31,31])
**VARIABLES**
DISCRETE aux218 #( - M_00004_00003 + M_00004_00006)
{-45..18}
**CONSTRAINTS**
w-inintervalset(aux218, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-17,-15,-14,-12,-12,-10,-2,0,0,2,10,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux219 #( - M_00004_00004 + M_00004_00007)
{-45..7}
**CONSTRAINTS**
w-inintervalset(aux219, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-14,-12,-7,-5,-5,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux220 #( - M_00005_00003 + M_00005_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux220, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux221 #( - M_00005_00001 + M_00005_00004)
{-45..35}
**CONSTRAINTS**
w-inintervalset(aux221, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,18,20,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux222 #( - M_00005_00002 + M_00005_00005)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux222, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,42])
**VARIABLES**
DISCRETE aux223 #( - M_00005_00003 + M_00005_00006)
{-45..35}
**CONSTRAINTS**
w-inintervalset(aux223, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,15,17,20,22,22,24,24,26,30,32,32,35,35])
**VARIABLES**
DISCRETE aux224 #(-1 - M_00005_00009)
{-48..-13}
**CONSTRAINTS**
w-inintervalset(aux224, [-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux225 #( - M_00005_00006 + M_00005_00007)
{-38..43}
**CONSTRAINTS**
w-inintervalset(aux225, [-38,-38,-35,-35,-32,-32,-30,-26,-24,-24,-22,-22,-20,-17,-15,-14,-12,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux226 #( - M_00005_00007 + M_00005_00008)
{-20..43}
**CONSTRAINTS**
w-inintervalset(aux226, [-20,-20,-18,-18,-16,-16,-14,-14,-12,-11,-9,-9,-7,-5,-3,-2,0,0,2,3,5,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux227 #( - M_00005_00006 + M_00005_00009)
{-30..43}
**CONSTRAINTS**
w-inintervalset(aux227, [-30,-30,-28,-28,-26,-26,-24,-24,-22,-22,-20,-17,-15,-14,-12,-4,-2,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux228 #( - M_00005_00008 + M_00005_00009)
{-35..25}
**CONSTRAINTS**
w-inintervalset(aux228, [-35,-35,-33,-33,-31,-28,-26,-14,-12,-5,-3,-2,0,0,2,3,5,7,9,9,11,12,14,14,16,16,18,18,20,21,23,23,25,25])
**VARIABLES**
DISCRETE aux229 #( - M_00005_00005 + M_00005_00006)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux229, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,15,17,20,22,22,24,24,26,30,32,32,35,35,38,38])
**VARIABLES**
DISCRETE aux230 #( - M_00005_00005 + M_00005_00008)
{-27..43}
**CONSTRAINTS**
w-inintervalset(aux230, [-27,-27,-25,-25,-23,-23,-21,-20,-18,-18,-16,-16,-14,-11,-9,-9,-7,-2,0,0,2,3,5,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux231 #( - M_00005_00001 + M_00005_00002)
{-45..35}
**CONSTRAINTS**
w-inintervalset(aux231, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,18,20,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux232 #( - M_00005_00002 + M_00005_00003)
{-42..45}
**CONSTRAINTS**
w-inintervalset(aux232, [-42,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux233 #( - M_00005_00004 + M_00005_00005)
{-45..33}
**CONSTRAINTS**
w-inintervalset(aux233, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33])
**VARIABLES**
DISCRETE aux234 #( - M_00005_00004 + M_00005_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux234, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux235 #( - M_00006_00002 + M_00006_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux235, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux236 #( - M_00006_00001 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux236, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux237 #( - M_00006_00001 + M_00006_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux237, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux238 #( - M_00006_00002 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux238, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux239 #(-1 - M_00006_00008)
{-48..-13}
**CONSTRAINTS**
w-inintervalset(aux239, [-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux240 #( - M_00006_00005 + M_00006_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux240, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux241 #( - M_00006_00006 + M_00006_00007)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux241, [-43,-43,-41,-40,-38,-38,-35,-35,-33,-14,-12,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux242 #( - M_00006_00005 + M_00006_00008)
{-37..43}
**CONSTRAINTS**
w-inintervalset(aux242, [-37,-37,-35,-35,-33,-33,-31,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux243 #( - M_00006_00007 + M_00006_00008)
{-35..43}
**CONSTRAINTS**
w-inintervalset(aux243, [-35,-35,-33,-33,-31,-28,-26,-14,-12,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux244 #( - M_00006_00004 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux244, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux245 #( - M_00006_00004 + M_00006_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux245, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux246 #( - M_00006_00003 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux246, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux247 #( - M_00006_00003 + M_00006_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux247, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux248 #( - M_00007_00004 + M_00007_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux248, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux249 #( - M_00007_00002 + M_00007_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux249, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux250 #( - M_00007_00004 + M_00007_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux250, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux251 #( - M_00007_00006 + M_00007_00007)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux251, [-43,-43,-41,-40,-38,-38,-35,-35,-33,-14,-12,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux252 #( - M_00007_00007 + -1)
{-48..-5}
**CONSTRAINTS**
w-inintervalset(aux252, [-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux253 #( - M_00007_00003 + M_00007_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux253, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux254 #( - M_00007_00001 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux254, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux255 #( - M_00007_00003 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux255, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux256 #( - M_00007_00005 + M_00007_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux256, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux257 #( - M_00007_00001 + M_00007_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux257, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux258 #( - M_00007_00002 + M_00007_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux258, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux259 #( - M_00008_00001 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux259, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux260 #( - M_00008_00005 + M_00008_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux260, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux261 #( - M_00008_00004 + M_00008_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux261, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux262 #( - M_00008_00003 + M_00008_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux262, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux263 #( - M_00008_00002 + M_00008_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux263, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux264 #( - M_00008_00001 + M_00008_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux264, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux265 #( - M_00008_00006 + -1)
{-48..-5}
**CONSTRAINTS**
w-inintervalset(aux265, [-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux266 #( - M_00008_00003 + M_00008_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux266, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,12,14,33,35,35,38,38,40,41,43,43])
**VARIABLES**
DISCRETE aux267 #( - M_00008_00002 + M_00008_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux267, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux268 #( - M_00009_00001 + M_00009_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux268, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux269 #(-1 - M_00009_00005)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux269, [-50,-50,-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux270 #( - M_00009_00001 + M_00009_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux270, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux271 #( - M_00009_00002 + M_00009_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux271, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux272 #( - M_00009_00002 + M_00009_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux272, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux273 #( - M_00009_00003 + M_00009_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux273, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux274 #( - M_00009_00004 + M_00009_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux274, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux275 #( - M_00010_00002 + M_00010_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux275, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux276 #( - M_00010_00003 + M_00010_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux276, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux277 #( - M_00010_00001 + M_00010_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux277, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux278 #( - M_00010_00001 + M_00010_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux278, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux279 #( - M_00010_00004 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux279, [-50,-50,-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux280 #( - M_00011_00001 + M_00011_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux280, [-45,-45,-43,-40,-38,-37,-35,-35,-33,-2,0,0,2,33,35,35,37,38,40,43,45,45])
**VARIABLES**
DISCRETE aux281 #( - M_00011_00002 + M_00011_00003)
{-37..26}
**CONSTRAINTS**
w-inintervalset(aux281, [-37,-37,-35,-35,-33,-2,0,0,2,26])
**VARIABLES**
DISCRETE aux282 #( - M_00011_00003 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux282, [-50,-50,-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
DISCRETE aux283 #( - M_00012_00001 + M_00012_00002)
{-37..26}
**CONSTRAINTS**
w-inintervalset(aux283, [-37,-37,-35,-35,-33,-2,0,0,2,26])
**VARIABLES**
DISCRETE aux284 #( - M_00012_00002 + -1)
{-50..-5}
**CONSTRAINTS**
w-inintervalset(aux284, [-50,-50,-48,-48,-46,-46,-43,-43,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-13,-13,-8,-8,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[16, 14, 7, 45, 42, 49, 24, 4, 22, 31, 47, 36, 12]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux181)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00003, 13, aux14)
reify(gaceq(M_00003_00008,M_00004_00007), aux15)
div(M_00007_00001, 13, aux16)
div(M_00007_00007, 13, aux17)
reify(gaceq(M_00007_00002,M_00006_00002), aux18)
div(M_00010_00004, 13, aux19)
div(M_00010_00001, 13, aux20)
div(M_00010_00003, 13, aux21)
div(M_00010_00002, 13, aux22)
reify(gaceq(M_00008_00004,M_00009_00004), aux23)
reify(gaceq(M_00004_00004,M_00005_00004), aux24)
reify(gaceq(M_00005_00007,M_00006_00006), aux25)
reify(gaceq(M_00010_00001,M_00009_00001), aux26)
reify(gaceq(M_00004_00005,M_00005_00004), aux27)
reify(gaceq(M_00003_00005,M_00004_00005), aux28)
reify(gaceq(M_00010_00004,M_00009_00005), aux29)
reify(gaceq(M_00010_00004,M_00009_00004), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
reify(gaceq(M_00004_00006,M_00005_00005), aux32)
div(M_00004_00008, 13, aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00002, 13, aux35)
div(M_00004_00006, 13, aux36)
reify(gaceq(M_00007_00007,M_00006_00008), aux37)
reify(gaceq(M_00005_00004,M_00006_00004), aux38)
reify(gaceq(M_00004_00007,M_00005_00007), aux39)
reify(gaceq(M_00004_00010,M_00005_00009), aux40)
div(M_00002_00004, 13, 3)
div(M_00002_00002, 13, aux42)
reify(gaceq(M_00011_00003,M_00012_00002), aux43)
reify(gaceq(M_00011_00001,M_00012_00001), aux44)
reify(gaceq(M_00005_00005,M_00006_00005), aux45)
reify(gaceq(M_00007_00006,M_00008_00005), aux46)
reify(gaceq(M_00008_00004,M_00009_00003), aux47)
reify(gaceq(M_00007_00003,M_00006_00003), aux48)
reify(gaceq(M_00003_00007,M_00004_00006), aux49)
reify(gaceq(M_00005_00003,M_00006_00003), aux50)
reify(gaceq(M_00003_00005,M_00004_00004), aux51)
reify(gaceq(M_00005_00007,M_00006_00007), aux52)
reify(gaceq(M_00010_00004,M_00011_00003), aux53)
reify(gaceq(M_00010_00001,M_00011_00001), aux54)
reify(gaceq(M_00010_00002,M_00011_00002), aux55)
div(M_00003_00011, 13, aux56)
div(M_00003_00009, 13, aux57)
div(M_00003_00007, 13, aux58)
div(M_00003_00001, 13, aux59)
div(M_00003_00010, 13, aux60)
reify(gaceq(M_00007_00002,M_00008_00002), aux61)
div(M_00005_00001, 13, aux62)
div(M_00005_00009, 13, aux63)
reify(gaceq(M_00003_00010,M_00004_00009), aux64)
div(M_00008_00001, 13, aux65)
div(M_00008_00006, 13, aux66)
reify(gaceq(M_00004_00006,M_00005_00006), aux67)
div(M_00006_00007, 13, aux68)
div(M_00006_00006, 13, aux69)
div(M_00006_00003, 13, aux70)
div(M_00006_00002, 13, aux71)
reify(gaceq(M_00005_00009,M_00006_00008), aux72)
reify(gaceq(M_00010_00003,M_00011_00003), aux73)
reify(gaceq(M_00010_00003,M_00011_00002), aux74)
reify(gaceq(M_00010_00002,M_00009_00002), aux75)
reify(gaceq(M_00010_00003,M_00009_00003), aux76)
reify(gaceq(M_00004_00004,M_00005_00003), aux77)
reify(gaceq(M_00002_00003,M_00003_00002), aux78)
reify(gaceq(M_00002_00004,M_00003_00004), aux79)
reify(gaceq(M_00004_00001,M_00005_00001), aux80)
reify(gaceq(M_00004_00007,M_00005_00006), aux81)
reify(gaceq(M_00007_00001,M_00006_00001), aux82)
div(M_00009_00004, 13, aux83)
div(M_00009_00002, 13, aux84)
reify(gaceq(M_00007_00006,M_00006_00007), aux85)
reify(gaceq(M_00007_00006,M_00008_00006), aux86)
reify(gaceq(M_00007_00003,M_00008_00002), aux87)
div(M_00011_00002, 13, aux88)
reify(gaceq(M_00003_00006,M_00004_00005), aux89)
reify(gaceq(M_00008_00003,M_00009_00002), aux90)
reify(gaceq(M_00008_00005,M_00009_00005), aux91)
reify(gaceq(M_00002_00001,M_00003_00001), aux92)
reify(gaceq(M_00005_00008,M_00006_00007), aux93)
reify(gaceq(M_00010_00003,M_00009_00004), aux94)
div(M_00006_00004, 13, aux95)
div(M_00006_00005, 13, aux96)
reify(gaceq(M_00002_00002,M_00003_00002), aux97)
reify(gaceq(M_00004_00003,M_00005_00003), aux98)
div(M_00006_00001, 13, aux99)
div(M_00006_00008, 13, aux100)
div(M_00003_00006, 13, aux101)
div(M_00003_00002, 13, aux102)
div(M_00003_00003, 13, aux103)
div(M_00003_00004, 13, 3)
reify(gaceq(M_00004_00002,M_00005_00002), aux105)
reify(gaceq(M_00005_00005,M_00006_00004), aux106)
reify(gaceq(M_00003_00010,M_00004_00010), aux107)
reify(gaceq(M_00003_00003,M_00004_00002), aux108)
reify(gaceq(M_00005_00003,M_00006_00002), aux109)
reify(gaceq(M_00005_00008,M_00006_00008), aux110)
reify(gaceq(M_00003_00001,M_00004_00001), aux111)
reify(gaceq(M_00003_00003,M_00004_00003), aux112)
div(M_00005_00007, 13, aux113)
div(M_00005_00008, 13, aux114)
div(M_00005_00002, 13, aux115)
div(M_00005_00003, 13, aux116)
reify(gaceq(M_00003_00009,M_00004_00008), aux117)
reify(gaceq(M_00005_00006,M_00006_00006), aux118)
reify(gaceq(M_00004_00009,M_00005_00009), aux119)
reify(gaceq(M_00004_00003,M_00005_00002), aux120)
reify(gaceq(M_00005_00002,M_00006_00002), aux121)
reify(gaceq(M_00003_00007,M_00004_00007), aux122)
reify(gaceq(M_00004_00008,M_00005_00007), aux123)
div(M_00007_00002, 13, aux124)
div(M_00007_00003, 13, aux125)
div(M_00007_00006, 13, aux126)
div(M_00007_00005, 13, aux127)
reify(gaceq(M_00004_00009,M_00005_00008), aux128)
reify(gaceq(M_00008_00003,M_00009_00003), aux129)
reify(gaceq(M_00008_00005,M_00009_00004), aux130)
div(M_00007_00004, 13, aux131)
reify(gaceq(M_00003_00004,M_00004_00003), aux132)
reify(gaceq(M_00003_00008,M_00004_00008), aux133)
reify(gaceq(M_00003_00009,M_00004_00009), aux134)
reify(gaceq(M_00007_00004,M_00008_00003), aux135)
reify(gaceq(M_00005_00004,M_00006_00003), aux136)
div(M_00004_00007, 13, aux137)
reify(gaceq(M_00008_00001,M_00009_00001), aux138)
div(M_00004_00004, 13, aux139)
div(M_00004_00005, 13, aux140)
reify(gaceq(M_00003_00002,M_00004_00002), aux141)
reify(gaceq(M_00008_00006,M_00009_00005), aux142)
reify(gaceq(M_00007_00003,M_00006_00004), aux143)
reify(gaceq(M_00003_00006,M_00004_00006), aux144)
reify(gaceq(M_00003_00011,M_00004_00010), aux145)
div(M_00008_00003, 13, aux146)
div(M_00008_00004, 13, aux147)
div(M_00008_00005, 13, aux148)
div(M_00008_00002, 13, aux149)
reify(gaceq(M_00008_00002,M_00009_00002), aux150)
reify(gaceq(M_00007_00005,M_00008_00005), aux151)
reify(gaceq(M_00007_00007,M_00006_00007), aux152)
reify(gaceq(M_00007_00002,M_00006_00003), aux153)
reify(gaceq(M_00005_00006,M_00006_00005), aux154)
div(M_00003_00008, 13, aux155)
reify(gaceq(M_00007_00004,M_00008_00004), aux156)
div(M_00003_00005, 13, aux157)
reify(gaceq(M_00007_00007,M_00008_00006), aux158)
reify(gaceq(M_00007_00005,M_00008_00004), aux159)
reify(gaceq(M_00002_00004,M_00003_00003), aux160)
reify(gaceq(M_00002_00003,M_00003_00003), aux161)
reify(gaceq(M_00007_00005,M_00006_00005), aux162)
div(M_00005_00004, 13, aux163)
div(M_00005_00005, 13, aux164)
div(M_00005_00006, 13, aux165)
reify(gaceq(M_00005_00001,M_00006_00001), aux166)
reify(gaceq(M_00007_00005,M_00006_00006), aux167)
div(M_00009_00005, 13, aux168)
div(M_00009_00003, 13, aux169)
div(M_00009_00001, 13, aux170)
div(M_00004_00009, 13, aux171)
div(M_00004_00001, 13, aux172)
div(M_00004_00010, 13, aux173)
reify(gaceq(M_00004_00008,M_00005_00008), aux174)
reify(gaceq(M_00007_00004,M_00006_00005), aux175)
reify(gaceq(M_00007_00003,M_00008_00003), aux176)
reify(gaceq(M_00007_00001,M_00008_00001), aux177)
reify(gaceq(M_00004_00005,M_00005_00005), aux178)
reify(gaceq(M_00007_00004,M_00006_00004), aux179)
reify(gaceq(M_00003_00004,M_00004_00004), aux180)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,14),w-literal(M_00002_00002,7),w-literal(M_00002_00003,45),w-literal(M_00002_00004,42)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,42)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45)})})
watched-or({watched-and({w-literal(M_00003_00004,49),w-literal(M_00003_00005,24),w-literal(M_00003_00006,4),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),w-literal(aux97,1),w-literal(aux161,1),gaceq(M_00002_00004,M_00003_00001),modulo(aux182,13,0)}),watched-and({w-literal(M_00003_00004,49),w-literal(M_00003_00005,24),w-literal(M_00003_00006,4),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),w-literal(aux92,1),w-literal(aux97,1),w-literal(aux161,1)}),watched-and({w-literal(M_00003_00003,24),w-literal(M_00003_00006,4),w-literal(M_00003_00005,49),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),watched-or({w-literal(aux14,1),modulo(aux183,13,0)}),w-literal(aux92,1),w-literal(aux97,1),w-literal(aux79,1)}),watched-and({w-literal(M_00003_00005,49),w-literal(M_00003_00006,24),w-literal(M_00003_00007,4),w-literal(M_00003_00008,22),w-literal(M_00003_00009,31),w-literal(M_00003_00010,47),w-literal(M_00003_00011,36),w-literal(aux92,1),w-literal(aux97,1),w-literal(aux161,1),w-literal(aux79,1)}),watched-and({w-literal(M_00003_00004,49),w-literal(M_00003_00005,24),w-literal(M_00003_00006,4),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),gaceq(M_00002_00002,M_00003_00001),w-literal(aux78,1),w-literal(aux160,1),watched-or({modulo(aux184,13,0),div(M_00002_00001, 13, aux42)})}),watched-and({w-literal(M_00003_00004,49),w-literal(M_00003_00005,24),w-literal(M_00003_00006,4),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),w-literal(aux92,1),w-literal(aux78,1),w-literal(aux160,1),watched-or({modulo(aux185,13,0),gaceq(aux42,aux14)})}),watched-and({w-literal(M_00003_00004,49),w-literal(M_00003_00005,24),w-literal(M_00003_00006,4),w-literal(M_00003_00007,22),w-literal(M_00003_00008,31),w-literal(M_00003_00009,47),w-literal(M_00003_00010,36),w-literal(M_00003_00011,12),w-literal(aux92,1),w-literal(aux97,1),w-literal(aux160,1),watched-or({modulo(aux186,13,0),w-literal(aux14,3)})})})
watched-or({watched-and({w-literal(aux141,1),w-literal(aux112,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux51,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux187,13,0),w-literal(aux59,3)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux132,1),w-literal(aux51,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux188,13,0),w-literal(aux103,3)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux51,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux189,13,0),w-literal(aux157,3)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux190,13,0),gaceq(aux101,aux58)})}),watched-and({w-literal(aux111,1),w-literal(aux112,1),w-literal(aux180,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux191,13,0),gaceq(aux102,aux157)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux192,13,0),gaceq(aux157,aux101)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux180,1),w-literal(aux28,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux193,13,0),gaceq(aux103,aux101)})}),watched-and({w-literal(aux111,1),w-literal(aux108,1),w-literal(aux132,1),w-literal(aux51,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux194,13,0),gaceq(aux102,aux103)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux108,1),w-literal(aux132,1),w-literal(aux51,1),w-literal(aux89,1),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux195,13,0),gaceq(aux59,aux102)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux144,1),w-literal(aux122,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux196,13,0),gaceq(aux157,aux155)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux122,1),w-literal(aux133,1),w-literal(aux134,1),w-literal(aux107,1),modulo(aux197,13,0)}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux198,13,0),gaceq(aux155,aux57)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux122,1),w-literal(aux133,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux199,13,0),gaceq(aux57,aux60)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux122,1),w-literal(aux134,1),w-literal(aux107,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux200,13,0),gaceq(aux155,aux56)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux122,1),w-literal(aux133,1),w-literal(aux134,1),w-literal(aux145,1),watched-or({modulo(aux201,13,0),gaceq(aux60,aux56)})}),watched-and({w-literal(aux111,1),w-literal(aux141,1),w-literal(aux112,1),w-literal(aux180,1),w-literal(aux28,1),w-literal(aux144,1),w-literal(aux15,1),w-literal(aux117,1),w-literal(aux64,1),w-literal(aux145,1),watched-or({modulo(aux202,13,0),gaceq(aux58,aux155)})})})
watched-or({watched-and({modulo(aux203,13,0),w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux67,1),w-literal(aux39,1),w-literal(aux174,1),w-literal(aux119,1)}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux39,1),w-literal(aux174,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux40,1),modulo(aux204,13,0)}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux67,1),w-literal(aux39,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux33,aux171),modulo(aux205,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux67,1),w-literal(aux39,1),w-literal(aux174,1),w-literal(aux40,1),watched-or({gaceq(aux171,aux173),modulo(aux206,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux67,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux137,aux33),modulo(aux207,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux67,1),w-literal(aux174,1),w-literal(aux119,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux137,aux173),modulo(aux208,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux178,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux36,aux137),modulo(aux209,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux120,1),w-literal(aux77,1),w-literal(aux27,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux35,aux34),modulo(aux210,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux77,1),w-literal(aux27,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux34,aux139),modulo(aux211,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux140,aux36),modulo(aux212,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux24,1),w-literal(aux67,1),w-literal(aux39,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux140,aux33),modulo(aux213,13,0)})}),watched-and({w-literal(aux105,1),w-literal(aux98,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux27,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux172,aux139),modulo(aux214,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux27,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux139,aux140),modulo(aux215,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux98,1),w-literal(aux24,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux35,aux140),modulo(aux216,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux120,1),w-literal(aux77,1),w-literal(aux27,1),w-literal(aux32,1),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux172,aux35),modulo(aux217,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux24,1),w-literal(aux178,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux81,1),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux34,aux36),modulo(aux218,13,0)})}),watched-and({w-literal(aux80,1),w-literal(aux105,1),w-literal(aux98,1),w-literal(aux178,1),w-literal(aux67,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux123,1),w-literal(aux128,1),w-literal(aux40,1),watched-or({gaceq(aux139,aux137),modulo(aux219,13,0)})})})
watched-or({watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux136,1),w-literal(aux106,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux220,13,0),gaceq(aux116,aux163)})}),watched-and({w-literal(aux121,1),w-literal(aux50,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux106,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux221,13,0),gaceq(aux62,aux163)})}),watched-and({w-literal(aux166,1),w-literal(aux50,1),w-literal(aux38,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux222,13,0),gaceq(aux115,aux164)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux38,1),w-literal(aux45,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux223,13,0),gaceq(aux116,aux165)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux118,1),w-literal(aux52,1),w-literal(aux110,1),modulo(aux224,13,0)}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux225,13,0),gaceq(aux165,aux113)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux118,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux226,13,0),gaceq(aux113,aux114)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux52,1),w-literal(aux110,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux227,13,0),gaceq(aux165,aux63)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux118,1),w-literal(aux52,1),w-literal(aux72,1),watched-or({modulo(aux228,13,0),gaceq(aux114,aux63)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux229,13,0),gaceq(aux164,aux165)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux38,1),w-literal(aux118,1),w-literal(aux52,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux72,1),watched-or({modulo(aux230,13,0),gaceq(aux164,aux114)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux109,1),w-literal(aux136,1),w-literal(aux106,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux231,13,0),gaceq(aux62,aux115)})}),watched-and({w-literal(aux166,1),w-literal(aux109,1),w-literal(aux136,1),w-literal(aux106,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux232,13,0),gaceq(aux115,aux116)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux106,1),w-literal(aux154,1),w-literal(aux25,1),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux233,13,0),gaceq(aux163,aux164)})}),watched-and({w-literal(aux166,1),w-literal(aux121,1),w-literal(aux50,1),w-literal(aux45,1),w-literal(aux118,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux93,1),w-literal(aux72,1),watched-or({modulo(aux234,13,0),gaceq(aux163,aux113)})})})
watched-or({watched-and({w-literal(aux82,1),w-literal(aux153,1),w-literal(aux143,1),w-literal(aux175,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux71,aux70),modulo(aux235,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux175,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux99,aux95),modulo(aux236,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux153,1),w-literal(aux143,1),w-literal(aux175,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux99,aux71),modulo(aux237,13,0)})}),watched-and({w-literal(aux82,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux48,1),w-literal(aux179,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux71,aux96),modulo(aux238,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux179,1),w-literal(aux162,1),w-literal(aux13,1),w-literal(aux152,1),modulo(aux239,13,0)}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux179,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux96,aux69),modulo(aux240,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux179,1),w-literal(aux162,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux69,aux68),modulo(aux241,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux179,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux152,1),watched-or({gaceq(aux96,aux100),modulo(aux242,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux179,1),w-literal(aux162,1),w-literal(aux13,1),w-literal(aux37,1),watched-or({gaceq(aux68,aux100),modulo(aux243,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),w-literal(aux175,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux95,aux96),modulo(aux244,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux48,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux162,1),w-literal(aux13,1),w-literal(aux37,1),watched-or({gaceq(aux95,aux68),modulo(aux245,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),w-literal(aux143,1),w-literal(aux175,1),w-literal(aux167,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux70,aux95),modulo(aux246,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux18,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux179,1),w-literal(aux162,1),w-literal(aux85,1),w-literal(aux37,1),watched-or({gaceq(aux70,aux69),modulo(aux247,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux248,13,0),gaceq(aux131,aux17)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux176,1),w-literal(aux151,1),w-literal(aux86,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux249,13,0),gaceq(aux124,aux125)}),w-literal(aux177,1),w-literal(aux87,1),w-literal(aux135,1),w-literal(aux159,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux250,13,0),gaceq(aux131,aux127)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux176,1),w-literal(aux159,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux251,13,0),gaceq(aux126,aux17)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux176,1),w-literal(aux156,1),w-literal(aux151,1),w-literal(aux158,1)}),watched-and({modulo(aux252,13,0),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux176,1),w-literal(aux156,1),w-literal(aux151,1),w-literal(aux86,1)}),watched-and({watched-or({modulo(aux253,13,0),gaceq(aux125,aux126)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux156,1),w-literal(aux151,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux254,13,0),gaceq(aux16,aux131)}),w-literal(aux61,1),w-literal(aux176,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux159,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux255,13,0),gaceq(aux125,aux131)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux135,1),w-literal(aux159,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux256,13,0),gaceq(aux127,aux126)}),w-literal(aux177,1),w-literal(aux61,1),w-literal(aux176,1),w-literal(aux156,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux257,13,0),gaceq(aux16,aux124)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux87,1),w-literal(aux135,1),w-literal(aux159,1),w-literal(aux46,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux258,13,0),gaceq(aux124,aux127)}),w-literal(aux177,1),w-literal(aux176,1),w-literal(aux156,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux46,1),w-literal(aux158,1)})})
watched-or({watched-and({watched-or({gaceq(aux65,aux147),modulo(aux259,13,0)}),w-literal(aux150,1),w-literal(aux129,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux130,1),w-literal(aux142,1)}),watched-and({watched-or({gaceq(aux148,aux66),modulo(aux260,13,0)}),w-literal(aux138,1),w-literal(aux150,1),w-literal(aux129,1),w-literal(aux23,1),w-literal(aux142,1)}),watched-and({watched-or({gaceq(aux147,aux148),modulo(aux261,13,0)}),w-literal(aux138,1),w-literal(aux150,1),w-literal(aux129,1),w-literal(aux130,1),w-literal(aux142,1)}),watched-and({watched-or({gaceq(aux146,aux147),modulo(aux262,13,0)}),w-literal(aux138,1),w-literal(aux150,1),w-literal(aux47,1),w-literal(aux130,1),w-literal(aux142,1)}),watched-and({watched-or({gaceq(aux149,aux146),modulo(aux263,13,0)}),w-literal(aux138,1),w-literal(aux90,1),w-literal(aux47,1),w-literal(aux130,1),w-literal(aux142,1)}),watched-and({watched-or({gaceq(aux65,aux149),modulo(aux264,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux90,1),w-literal(aux47,1),w-literal(aux130,1),w-literal(aux142,1)}),watched-and({w-literal(aux138,1),w-literal(aux150,1),w-literal(aux129,1),w-literal(aux23,1),w-literal(aux91,1),modulo(aux265,13,0)}),watched-and({watched-or({gaceq(aux146,aux66),modulo(aux266,13,0)}),w-literal(aux138,1),w-literal(aux150,1),w-literal(aux23,1),w-literal(aux91,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux149,aux148),modulo(aux267,13,0)}),w-literal(aux138,1),w-literal(aux129,1),w-literal(aux23,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux142,1)})})
watched-or({watched-and({watched-or({modulo(aux268,13,0),gaceq(aux170,aux83)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux75,1),w-literal(aux76,1),w-literal(aux29,1)}),watched-and({modulo(aux269,13,0),w-literal(aux26,1),w-literal(aux75,1),w-literal(aux76,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux270,13,0),gaceq(aux170,aux84)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1),w-literal(aux94,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux271,13,0),gaceq(aux84,aux168)}),w-literal(aux26,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux76,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux272,13,0),gaceq(aux84,aux169)}),w-literal(aux26,1),w-literal(aux31,1),w-literal(aux94,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux273,13,0),gaceq(aux169,aux83)}),w-literal(aux26,1),w-literal(aux75,1),w-literal(aux94,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux274,13,0),gaceq(aux83,aux168)}),w-literal(aux26,1),w-literal(aux75,1),w-literal(aux76,1),w-literal(aux29,1)})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux74,1),w-literal(aux53,1),watched-or({gaceq(aux22,aux21),modulo(aux275,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux55,1),w-literal(aux53,1),watched-or({gaceq(aux21,aux19),modulo(aux276,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux74,1),w-literal(aux53,1),watched-or({gaceq(aux20,aux22),modulo(aux277,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux73,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux20,aux19),modulo(aux278,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux55,1),w-literal(aux73,1),modulo(aux279,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux88),modulo(aux280,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux43,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux88),modulo(aux281,13,0)}),w-literal(aux44,1),w-literal(aux43,1)}),watched-and({modulo(aux282,13,0),w-literal(aux44,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux181),modulo(aux283,13,0)})}),watched-and({modulo(aux284,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux182)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux182)
weightedsumleq([-1,1],[M_00002_00003,24],aux183)
weightedsumgeq([-1,1],[M_00002_00003,24],aux183)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux184)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux184)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux185)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux185)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux186)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux186)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux187)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux187)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux188)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux188)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux189)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux189)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux190)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux190)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux191)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux191)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux192)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux192)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux193)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux193)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux194)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux194)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux195)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux195)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux196)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux196)
weightedsumleq([-1,1],[M_00003_00011,-1],aux197)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux197)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux198)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux198)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux199)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux199)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux200)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux200)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux201)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux201)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux202)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux202)
weightedsumleq([-1,1],[M_00004_00010,-1],aux203)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux203)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux204)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux204)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux205)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux205)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux206)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux206)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux207)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux207)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux208)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux208)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux209)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux209)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux210)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux210)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux211)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux211)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux212)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux212)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux213)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux213)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux214)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux214)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux215)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux215)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux216)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux216)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux217)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux217)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux218)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux218)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux219)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux219)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux220)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux220)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux221)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux221)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux222)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux222)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux223)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux223)
weightedsumleq([1,-1],[-1,M_00005_00009],aux224)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux224)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux225)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux225)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux226)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux226)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux227)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux227)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux228)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux228)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux229)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux229)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux230)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux230)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux231)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux231)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux232)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux232)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux233)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux233)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux234)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux234)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux235)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux235)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux236)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux236)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux237)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux237)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux238)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux238)
weightedsumleq([1,-1],[-1,M_00006_00008],aux239)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux239)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux240)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux240)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux241)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux241)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux242)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux242)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux243)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux243)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux244)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux244)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux245)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux245)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux246)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux246)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux247)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux247)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux248)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux248)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux249)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux249)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux250)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux250)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux251)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux251)
weightedsumleq([-1,1],[M_00007_00007,-1],aux252)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux252)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux253)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux253)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux254)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux254)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux255)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux255)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux256)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux256)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux257)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux257)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux258)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux258)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux259)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux259)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux260)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux260)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux261)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux261)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux262)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux262)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux263)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux263)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux264)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux264)
weightedsumleq([-1,1],[M_00008_00006,-1],aux265)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux265)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux266)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux266)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux267)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux267)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux268)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux268)
weightedsumleq([1,-1],[-1,M_00009_00005],aux269)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux269)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux270)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux270)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux271)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux271)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux272)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux272)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux273)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux273)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux274)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux274)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux275)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux275)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux276)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux276)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux277)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux277)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux278)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux278)
weightedsumleq([-1,1],[M_00010_00004,-1],aux279)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux279)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux280)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux280)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux281)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux281)
weightedsumleq([-1,1],[M_00011_00003,-1],aux282)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux282)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux283)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux283)
weightedsumleq([-1,1],[M_00012_00002,-1],aux284)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux284)
**EOF**
