MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 257
# CSE_active_eliminated_expressions = 1585
# CSE_active_total_size = 771
**VARIABLES**
DISCRETE M_00002_00001 #
{14..16}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [14,14,16,16])
**VARIABLES**
DISCRETE M_00002_00002 #
{7..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [7,7,14,14])
**VARIABLES**
DISCRETE M_00002_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [7,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00005 #
{42..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00002_00006 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,6,7,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00002_00008 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [4,4,6,7,14,14,16,16,22,22])
**VARIABLES**
DISCRETE M_00002_00009 #
{22..31}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00002_00010 #
{31..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00002_00011 #
{36..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00002_00012 #
{36..41}
**CONSTRAINTS**
w-inintervalset(M_00002_00012, [36,36,41,41])
**VARIABLES**
DISCRETE M_00002_00013 #
{6..41}
**CONSTRAINTS**
w-inintervalset(M_00002_00013, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,41])
**VARIABLES**
DISCRETE M_00003_00001 #
{14..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [14,14,16,16,22,22,24,24,31,31,36,36,41,42])
**VARIABLES**
DISCRETE M_00003_00002 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [7,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45])
**VARIABLES**
DISCRETE M_00003_00004 #
{42..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [42,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00003_00005 #
{24..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,6,7,14,14,16,16,22,22,24,24])
**VARIABLES**
DISCRETE M_00003_00008 #
{4..31}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [4,4,6,7,14,14,16,16,22,22,24,24,31,31])
**VARIABLES**
DISCRETE M_00003_00009 #
{22..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00010 #
{31..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00011 #
{36..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00012 #
{6..41}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,41])
**VARIABLES**
DISCRETE M_00004_00001 #
{14..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00004 #
{6..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45])
**VARIABLES**
DISCRETE M_00004_00008 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00009 #
{6..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00010 #
{31..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00011 #
{6..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00001 #
{7..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [7,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00005_00007 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00008 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00009 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00010 #
{6..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00011 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00011, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00006_00007 #
{4..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00008 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00009 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00010 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00010, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00007_00007 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00008 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00009 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00009, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00008_00007 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00008_00008 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00008, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00009_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00009_00007 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00007, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47])
**VARIABLES**
DISCRETE M_00010_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00010_00006 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00010_00006, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00011_00005 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00011_00005, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00012_00004 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00012_00004, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00013_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00013_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00013_00003 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00013_00003, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00014_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00014_00002 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00014_00002, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
DISCRETE M_00015_00001 #
{1..49}
**CONSTRAINTS**
w-inintervalset(M_00015_00001, [1,1,4,4,6,7,14,14,16,16,22,22,24,24,31,31,36,36,41,42,45,45,47,47,49,49])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{0..3}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00013/13)
{0..3}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{2..3}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00012/13)
{2..3}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux19 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux20 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux21 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00009/13)
{0..3}
DISCRETE aux24 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux25 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00006/13)
{0..3}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux30 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00004/13)
{0..3}
DISCRETE aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003/13)
{0..3}
DISCRETE aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001/13)
{0..3}
BOOL aux35 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux36 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux38 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
DISCRETE aux39 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..2}
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux41 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux42 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux43 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux44 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux45 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux47 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00008_00008=M_00009_00007)
BOOL aux48 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux49 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00013_00003=M_00014_00002)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00013_00001=M_00014_00001)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00006=M_00009_00006)
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux54 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux55 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{2..3}
DISCRETE aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00011/13)
{0..3}
BOOL aux60 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux61 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux62 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux63 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux64 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux65 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00006=M_00011_00005)
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00007/13)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011/13)
{2..3}
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002/13)
BOOL aux72 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux73 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00004)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux76 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux77 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux79 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux80 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux81 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux82 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux83 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux84 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
DISCRETE aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
BOOL aux89 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
DISCRETE aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
BOOL aux92 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{1..3}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{2..3}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00011/13)
{0..3}
BOOL aux98 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux99 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00008/13)
{0..3}
BOOL aux102 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..3}
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux107 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux108 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00005)
BOOL aux112 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux113 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux114 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux116 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux120 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux121 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux122 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00012)
BOOL aux125 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux128 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux129 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux130 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux135 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux136 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00008)
DISCRETE aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00005/13)
{0..3}
DISCRETE aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
BOOL aux142 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00005_00011=M_00006_00010)
BOOL aux143 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00007)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux146 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux147 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux149 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux150 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
BOOL aux153 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00010/13)
{0..3}
DISCRETE aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
BOOL aux156 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux157 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00011/13)
{2..3}
DISCRETE aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00012/13)
{0..3}
DISCRETE aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux162 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux163 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux164 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux166 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux167 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00011_00005=M_00012_00004)
BOOL aux168 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux169 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00010)
DISCRETE aux170 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux171 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux172 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux173 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux174 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux175 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux176 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux177 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux178 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux179 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
DISCRETE aux180 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00010/13)
{0..3}
BOOL aux181 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux182 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux183 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux184 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux185 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux186 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00007_00009=M_00006_00010)
DISCRETE aux187 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux188 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux189 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..3}
DISCRETE aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux191 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux192 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux193 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux194 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux195 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux196 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux198 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux199 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux200 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux201 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux202 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux203 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux204 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux205 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux206 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux207 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux208 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux209 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00013_00002/13)
{0..3}
DISCRETE aux210 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
DISCRETE aux211 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux212 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux213 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux214 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux215 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux216 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00013=M_00003_00012)
BOOL aux217 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux218 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux219 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux220 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux221 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux222 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux223 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux224 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux225 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00012_00002=M_00013_00002)
BOOL aux226 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00012_00004=M_00013_00003)
BOOL aux227 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux228 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00009=M_00008_00008)
BOOL aux229 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux230 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux231 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux232 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux233 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
BOOL aux234 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00010_00006=M_00009_00007)
BOOL aux235 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00009=M_00006_00009)
BOOL aux236 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux237 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
BOOL aux238 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux239 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..3}
DISCRETE aux240 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux241 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux242 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux243 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux244 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux245 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux246 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux247 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00003)
BOOL aux248 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
BOOL aux249 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
DISCRETE aux250 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux251 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux252 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux253 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux254 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux255 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux256 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux257 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux258 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux259 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00007/13)
{0..3}
DISCRETE aux260 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux261 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux262 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux263 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux264 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux265 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux266 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux267 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux268 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux269 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux270 #
{0..3}
DISCRETE aux271 #( - M_00002_00013 + 1)
{-40..-5}
**CONSTRAINTS**
w-inintervalset(aux271, [-40,-40,-35,-35,-30,-30,-23,-23,-21,-21,-15,-15,-13,-13,-6,-5])
**VARIABLES**
DISCRETE aux272 #( - M_00002_00009 + M_00002_00010)
{9..16}
**CONSTRAINTS**
w-inintervalset(aux272, [9,12,14,14,16,16])
**VARIABLES**
DISCRETE aux273 #( - M_00002_00009 + M_00002_00012)
{10..14}
**CONSTRAINTS**
w-inintervalset(aux273, [10,10,12,12,14,14])
**VARIABLES**
DISCRETE aux274 #( - M_00002_00003 + M_00002_00006)
{-21..42}
**CONSTRAINTS**
w-inintervalset(aux274, [-21,-21,-18,-17,-14,-14,-12,-9,-7,-3,-1,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux275 #( - M_00002_00005 + M_00002_00006)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux275, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-13,-11,-11,-9,0,2,5,7,7])
**VARIABLES**
DISCRETE aux276 #( - M_00002_00006 + M_00002_00007)
{-25..-20}
DISCRETE aux277 #( - M_00002_00008 + M_00002_00009)
{9..18}
**CONSTRAINTS**
w-inintervalset(aux277, [9,10,15,18])
**VARIABLES**
DISCRETE aux278 #( - M_00002_00001 + M_00002_00004)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux278, [26,26,28,29])
**VARIABLES**
DISCRETE aux279 #( - M_00002_00002 + M_00002_00005)
{28..42}
**CONSTRAINTS**
w-inintervalset(aux279, [28,28,31,31,33,33,35,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux280 #( - M_00002_00001 + M_00002_00002)
{-7..-2}
**CONSTRAINTS**
w-inintervalset(aux280, [-7,-7,-2,-2])
**VARIABLES**
DISCRETE aux281 #( - M_00002_00007 + M_00002_00008)
{-20..18}
**CONSTRAINTS**
w-inintervalset(aux281, [-20,-20,-18,-15,-12,-12,-10,-6,-3,3,6,10,12,12,15,16,18,18])
**VARIABLES**
DISCRETE aux282 #( - M_00002_00002 + M_00002_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux282, [-7,-7,0,0,2,2,7,10,15,15,17,17,22,22,24,24,27,29,31,31,34,35,38,38])
**VARIABLES**
DISCRETE aux283 #( - M_00002_00003 + M_00002_00004)
{-3..38}
**CONSTRAINTS**
w-inintervalset(aux283, [-3,-3,0,1,3,4,6,6,9,9,11,11,14,14,18,18,20,21,23,23,26,26,28,29,31,31,35,35,38,38])
**VARIABLES**
DISCRETE aux284 #( - M_00002_00006 + M_00002_00009)
{-27..7}
**CONSTRAINTS**
w-inintervalset(aux284, [-27,-27,-25,-25,-23,-23,-21,-16,-14,-14,-12,-9,-7,-7,-5,-5,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux285 #( - M_00002_00010 + M_00002_00011)
{-11..16}
**CONSTRAINTS**
w-inintervalset(aux285, [-11,-11,-9,-9,-6,6,9,11,14,14,16,16])
**VARIABLES**
DISCRETE aux286 #( - M_00002_00011 + M_00002_00012)
{-11..5}
**CONSTRAINTS**
w-inintervalset(aux286, [-11,-11,-9,-9,-6,-4,-1,0,5,5])
**VARIABLES**
DISCRETE aux287 #( - M_00002_00010 + M_00002_00013)
{-41..10}
**CONSTRAINTS**
w-inintervalset(aux287, [-41,-38,-36,-33,-31,-14,-12,-9,-7,-4,-1,0,5,5,10,10])
**VARIABLES**
DISCRETE aux288 #( - M_00002_00012 + M_00002_00013)
{-35..5}
**CONSTRAINTS**
w-inintervalset(aux288, [-35,-34,-30,-29,-27,-27,-25,-25,-22,-22,-20,-19,-17,-17,-14,-14,-12,-12,-10,-10,-5,-5,0,0,5,5])
**VARIABLES**
DISCRETE aux289 #( - M_00003_00001 + M_00003_00004)
{7..35}
**CONSTRAINTS**
w-inintervalset(aux289, [7,9,11,11,13,14,16,16,18,18,20,21,23,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux290 #( - M_00003_00003 + M_00003_00006)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux290, [-41,-41,-39,-34,-32,-14,-12,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux291 #( - M_00003_00012 + 1)
{-40..-5}
**CONSTRAINTS**
w-inintervalset(aux291, [-40,-40,-35,-35,-30,-30,-23,-23,-21,-21,-15,-15,-13,-13,-6,-5])
**VARIABLES**
DISCRETE aux292 #( - M_00003_00006 + M_00003_00007)
{-45..18}
**CONSTRAINTS**
w-inintervalset(aux292, [-45,-45,-43,-14,-12,-12,-10,-6,-3,3,6,10,12,12,15,18])
**VARIABLES**
DISCRETE aux293 #( - M_00003_00004 + M_00003_00007)
{-45..-18}
**CONSTRAINTS**
w-inintervalset(aux293, [-45,-45,-43,-38,-36,-35,-33,-33,-31,-31,-29,-25,-23,-23,-21,-20,-18,-18])
**VARIABLES**
DISCRETE aux294 #( - M_00003_00001 + M_00003_00002)
{-28..31}
**CONSTRAINTS**
w-inintervalset(aux294, [-28,-24,-22,-22,-20,-17,-15,-14,-12,-5,-2,12,14,15,17,23,25,29,31,31])
**VARIABLES**
DISCRETE aux295 #( - M_00003_00003 + M_00003_00004)
{-3..42}
**CONSTRAINTS**
w-inintervalset(aux295, [-3,-3,0,9,11,11,13,14,16,16,18,18,20,21,23,23,25,29,31,31,33,33,35,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux296 #( - M_00003_00002 + M_00003_00003)
{-7..38}
**CONSTRAINTS**
w-inintervalset(aux296, [-7,12,14,15,17,29,31,31,34,35,38,38])
**VARIABLES**
DISCRETE aux297 #( - M_00003_00005 + M_00003_00008)
{-45..7}
**CONSTRAINTS**
w-inintervalset(aux297, [-45,-45,-43,-14,-12,-7,-5,-5,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux298 #( - M_00003_00006 + M_00003_00009)
{-27..43}
**CONSTRAINTS**
w-inintervalset(aux298, [-27,-27,-25,-25,-23,-23,-21,-16,-14,12,14,41,43,43])
**VARIABLES**
DISCRETE aux299 #( - M_00003_00009 + M_00003_00010)
{-11..25}
**CONSTRAINTS**
w-inintervalset(aux299, [-11,-9,-6,7,9,12,14,14,16,21,23,23,25,25])
**VARIABLES**
DISCRETE aux300 #( - M_00003_00010 + M_00003_00011)
{-11..16}
**CONSTRAINTS**
w-inintervalset(aux300, [-11,-11,-9,-9,-6,6,9,11,14,14,16,16])
**VARIABLES**
DISCRETE aux301 #( - M_00003_00009 + M_00003_00012)
{-41..19}
**CONSTRAINTS**
w-inintervalset(aux301, [-41,-38,-36,-33,-31,-14,-12,-4,-2,0,2,2,5,5,7,7,9,10,12,12,14,14,17,17,19,19])
**VARIABLES**
DISCRETE aux302 #( - M_00003_00011 + M_00003_00012)
{-41..5}
**CONSTRAINTS**
w-inintervalset(aux302, [-41,-38,-36,-33,-31,-25,-23,-16,-14,-14,-12,-9,-6,-4,-1,0,5,5])
**VARIABLES**
DISCRETE aux303 #( - M_00003_00008 + M_00003_00009)
{0..43}
**CONSTRAINTS**
w-inintervalset(aux303, [0,0,2,2,5,12,14,41,43,43])
**VARIABLES**
DISCRETE aux304 #( - M_00003_00008 + M_00003_00011)
{5..43}
**CONSTRAINTS**
w-inintervalset(aux304, [5,5,10,12,14,14,16,23,25,41,43,43])
**VARIABLES**
DISCRETE aux305 #( - M_00003_00007 + M_00003_00010)
{7..43}
**CONSTRAINTS**
w-inintervalset(aux305, [7,7,9,9,12,12,14,15,17,41,43,43])
**VARIABLES**
DISCRETE aux306 #( - M_00003_00002 + M_00003_00005)
{-21..42}
**CONSTRAINTS**
w-inintervalset(aux306, [-21,-21,-18,-17,-14,-14,-12,-9,-7,-3,-1,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux307 #( - M_00003_00004 + M_00003_00005)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux307, [-25,-25,-23,-23,-21,-21,-18,-18,-16,-16,-14,-13,-11,-11,-9,0,2,5,7,7])
**VARIABLES**
DISCRETE aux308 #( - M_00003_00005 + M_00003_00006)
{-45..7}
**CONSTRAINTS**
w-inintervalset(aux308, [-45,-45,-43,7])
**VARIABLES**
DISCRETE aux309 #( - M_00003_00007 + M_00003_00008)
{-20..27}
**CONSTRAINTS**
w-inintervalset(aux309, [-20,-20,-18,-15,-12,-12,-10,-6,-3,3,6,10,12,12,15,18,20,20,24,25,27,27])
**VARIABLES**
DISCRETE aux310 #( - M_00004_00009 + M_00004_00010)
{-16..41}
**CONSTRAINTS**
w-inintervalset(aux310, [-16,-16,-14,-14,-11,-9,-6,7,9,12,14,31,33,36,38,41])
**VARIABLES**
DISCRETE aux311 #( - M_00004_00010 + M_00004_00011)
{-41..16}
**CONSTRAINTS**
w-inintervalset(aux311, [-41,-38,-36,-33,-31,-14,-12,-9,-7,6,9,11,14,14,16,16])
**VARIABLES**
DISCRETE aux312 #( - M_00004_00008 + M_00004_00009)
{-25..43}
**CONSTRAINTS**
w-inintervalset(aux312, [-25,-14,-12,12,14,41,43,43])
**VARIABLES**
DISCRETE aux313 #( - M_00004_00008 + M_00004_00011)
{-41..43}
**CONSTRAINTS**
w-inintervalset(aux313, [-41,-38,-36,-33,-31,-14,-12,12,14,41,43,43])
**VARIABLES**
DISCRETE aux314 #( - M_00004_00007 + M_00004_00008)
{-41..43}
**CONSTRAINTS**
w-inintervalset(aux314, [-41,-41,-39,-34,-32,-14,-12,12,14,41,43,43])
**VARIABLES**
DISCRETE aux315 #( - M_00004_00007 + M_00004_00010)
{-9..43}
**CONSTRAINTS**
w-inintervalset(aux315, [-9,-9,-6,-3,-1,7,9,12,14,41,43,43])
**VARIABLES**
DISCRETE aux316 #( - M_00004_00011 + 1)
{-46..-5}
**CONSTRAINTS**
w-inintervalset(aux316, [-46,-46,-44,-44,-41,-40,-35,-35,-30,-30,-23,-23,-21,-21,-15,-15,-13,-13,-6,-5])
**VARIABLES**
DISCRETE aux317 #( - M_00004_00001 + M_00004_00004)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux317, [-25,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux318 #( - M_00004_00003 + M_00004_00004)
{-39..45}
**CONSTRAINTS**
w-inintervalset(aux318, [-39,-38,-36,-33,-31,43,45,45])
**VARIABLES**
DISCRETE aux319 #( - M_00004_00004 + M_00004_00005)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux319, [-45,-45,-43,31,33,36,38,43])
**VARIABLES**
DISCRETE aux320 #( - M_00004_00006 + M_00004_00007)
{-45..41}
**CONSTRAINTS**
w-inintervalset(aux320, [-45,-45,-43,12,14,32,34,39,41,41])
**VARIABLES**
DISCRETE aux321 #( - M_00004_00006 + M_00004_00009)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux321, [-43,-38,-36,-33,-31,12,14,41,43,43])
**VARIABLES**
DISCRETE aux322 #( - M_00004_00002 + M_00004_00005)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux322, [-45,-45,-43,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux323 #( - M_00004_00005 + M_00004_00006)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux323, [-45,-45,-43,43])
**VARIABLES**
DISCRETE aux324 #( - M_00004_00009 + 1)
{-46..-5}
**CONSTRAINTS**
w-inintervalset(aux324, [-46,-46,-44,-44,-41,-40,-35,-35,-30,-30,-23,-23,-21,-21,-15,-15,-13,-13,-6,-5])
**VARIABLES**
DISCRETE aux325 #( - M_00004_00003 + M_00004_00006)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux325, [-45,-45,-43,42])
**VARIABLES**
DISCRETE aux326 #( - M_00004_00002 + M_00004_00003)
{-39..42}
**CONSTRAINTS**
w-inintervalset(aux326, [-39,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux327 #( - M_00004_00001 + M_00004_00002)
{-38..35}
**CONSTRAINTS**
w-inintervalset(aux327, [-38,-38,-35,-33,-31,-31,-29,23,25,29,31,31,33,33,35,35])
**VARIABLES**
DISCRETE aux328 #( - M_00004_00004 + M_00004_00007)
{-45..25}
**CONSTRAINTS**
w-inintervalset(aux328, [-45,-45,-43,12,14,25])
**VARIABLES**
DISCRETE aux329 #( - M_00004_00005 + M_00004_00008)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux329, [-45,-45,-43,12,14,41,43,43])
**VARIABLES**
DISCRETE aux330 #( - M_00005_00003 + M_00005_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux330, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux331 #( - M_00005_00002 + M_00005_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux331, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux332 #( - M_00005_00001 + M_00005_00002)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux332, [-45,-45,-43,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux333 #( - M_00005_00004 + M_00005_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux333, [-45,-45,-43,12,14,41,43,43])
**VARIABLES**
DISCRETE aux334 #( - M_00005_00005 + M_00005_00008)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux334, [-45,-45,-43,12,14,41,43,43])
**VARIABLES**
DISCRETE aux335 #(-1 - M_00005_00011)
{-48..-2}
**CONSTRAINTS**
w-inintervalset(aux335, [-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux336 #( - M_00005_00008 + M_00005_00009)
{-41..43}
**CONSTRAINTS**
w-inintervalset(aux336, [-41,12,14,41,43,43])
**VARIABLES**
DISCRETE aux337 #( - M_00005_00009 + M_00005_00010)
{-41..46}
**CONSTRAINTS**
w-inintervalset(aux337, [-41,-38,-36,-33,-31,-14,-12,41,43,44,46,46])
**VARIABLES**
DISCRETE aux338 #( - M_00005_00008 + M_00005_00011)
{-46..43}
**CONSTRAINTS**
w-inintervalset(aux338, [-46,-46,-44,-43,-41,12,14,41,43,43])
**VARIABLES**
DISCRETE aux339 #( - M_00005_00010 + M_00005_00011)
{-46..16}
**CONSTRAINTS**
w-inintervalset(aux339, [-46,-46,-44,-43,-41,12,14,16])
**VARIABLES**
DISCRETE aux340 #( - M_00005_00007 + M_00005_00008)
{-43..43}
**CONSTRAINTS**
w-inintervalset(aux340, [-43,-43,-41,-14,-12,12,14,41,43,43])
**VARIABLES**
DISCRETE aux341 #( - M_00005_00007 + M_00005_00010)
{-41..43}
**CONSTRAINTS**
w-inintervalset(aux341, [-41,-38,-36,-33,-31,-14,-12,12,14,41,43,43])
**VARIABLES**
DISCRETE aux342 #( - M_00005_00001 + M_00005_00004)
{-45..42}
**CONSTRAINTS**
w-inintervalset(aux342, [-45,-45,-43,29,31,31,33,35,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux343 #( - M_00005_00003 + M_00005_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux343, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux344 #( - M_00005_00004 + M_00005_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux344, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux345 #( - M_00005_00006 + M_00005_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux345, [-45,-45,-43,12,14,41,43,43])
**VARIABLES**
DISCRETE aux346 #( - M_00005_00006 + M_00005_00009)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux346, [-48,-48,-46,12,14,41,43,43])
**VARIABLES**
DISCRETE aux347 #( - M_00005_00002 + M_00005_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux347, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux348 #( - M_00005_00005 + M_00005_00006)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux348, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux349 #( - M_00006_00003 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux349, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux350 #( - M_00006_00004 + M_00006_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux350, [-45,-45,-43,12,14,41,43,43])
**VARIABLES**
DISCRETE aux351 #( - M_00006_00002 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux351, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux352 #(-1 - M_00006_00010)
{-48..-2}
**CONSTRAINTS**
w-inintervalset(aux352, [-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux353 #( - M_00006_00007 + M_00006_00008)
{-46..43}
**CONSTRAINTS**
w-inintervalset(aux353, [-46,-46,-44,-43,-41,12,14,41,43,43])
**VARIABLES**
DISCRETE aux354 #( - M_00006_00008 + M_00006_00009)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux354, [-46,-46,-44,-43,-41,41,43,44,46,46])
**VARIABLES**
DISCRETE aux355 #( - M_00006_00009 + M_00006_00010)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux355, [-46,-46,-44,-43,-41,41,43,44,46,46])
**VARIABLES**
DISCRETE aux356 #( - M_00006_00007 + M_00006_00010)
{-46..43}
**CONSTRAINTS**
w-inintervalset(aux356, [-46,-46,-44,-43,-41,12,14,41,43,43])
**VARIABLES**
DISCRETE aux357 #( - M_00006_00006 + M_00006_00007)
{-45..43}
**CONSTRAINTS**
w-inintervalset(aux357, [-45,-45,-43,41,43,43])
**VARIABLES**
DISCRETE aux358 #( - M_00006_00006 + M_00006_00009)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux358, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux359 #( - M_00006_00005 + M_00006_00006)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux359, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux360 #( - M_00006_00005 + M_00006_00008)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux360, [-48,-48,-46,12,14,41,43,43])
**VARIABLES**
DISCRETE aux361 #( - M_00006_00001 + M_00006_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux361, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux362 #( - M_00006_00001 + M_00006_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux362, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux363 #( - M_00006_00002 + M_00006_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux363, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux364 #( - M_00006_00004 + M_00006_00005)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux364, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux365 #( - M_00006_00003 + M_00006_00006)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux365, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux366 #( - M_00007_00002 + M_00007_00003)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux366, [-45,43,45,45])
**VARIABLES**
DISCRETE aux367 #( - M_00007_00003 + M_00007_00006)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux367, [-48,-48,-46,45])
**VARIABLES**
DISCRETE aux368 #( - M_00007_00001 + M_00007_00002)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux368, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux369 #( - M_00007_00003 + M_00007_00004)
{-45..48}
**CONSTRAINTS**
w-inintervalset(aux369, [-45,-45,-43,46,48,48])
**VARIABLES**
DISCRETE aux370 #( - M_00007_00002 + M_00007_00005)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux370, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux371 #( - M_00007_00009 + -1)
{-48..-2}
**CONSTRAINTS**
w-inintervalset(aux371, [-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux372 #( - M_00007_00006 + M_00007_00009)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux372, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux373 #( - M_00007_00004 + M_00007_00007)
{-48..43}
**CONSTRAINTS**
w-inintervalset(aux373, [-48,-48,-46,12,14,41,43,43])
**VARIABLES**
DISCRETE aux374 #( - M_00007_00008 + M_00007_00009)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux374, [-46,-46,-44,-43,-41,41,43,44,46,46])
**VARIABLES**
DISCRETE aux375 #( - M_00007_00006 + M_00007_00007)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux375, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux376 #( - M_00007_00004 + M_00007_00005)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux376, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux377 #( - M_00007_00001 + M_00007_00004)
{-45..45}
**CONSTRAINTS**
w-inintervalset(aux377, [-45,-45,-43,43,45,45])
**VARIABLES**
DISCRETE aux378 #( - M_00007_00005 + M_00007_00008)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux378, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux379 #( - M_00007_00007 + M_00007_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux379, [-46,-46,-44,-43,-41,41,43,44,46,46])
**VARIABLES**
DISCRETE aux380 #( - M_00007_00005 + M_00007_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux380, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux381 #( - M_00008_00001 + M_00008_00004)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux381, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux382 #( - M_00008_00003 + M_00008_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux382, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux383 #( - M_00008_00008 + -1)
{-48..-2}
**CONSTRAINTS**
w-inintervalset(aux383, [-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux384 #( - M_00008_00004 + M_00008_00007)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux384, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux385 #( - M_00008_00005 + M_00008_00008)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux385, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux386 #( - M_00008_00002 + M_00008_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux386, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux387 #( - M_00008_00003 + M_00008_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux387, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux388 #( - M_00008_00004 + M_00008_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux388, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux389 #( - M_00008_00002 + M_00008_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux389, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux390 #( - M_00008_00005 + M_00008_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux390, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux391 #( - M_00008_00006 + M_00008_00007)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux391, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux392 #( - M_00008_00007 + M_00008_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux392, [-46,-46,-44,-43,-41,41,43,44,46,46])
**VARIABLES**
DISCRETE aux393 #( - M_00008_00001 + M_00008_00002)
{-48..45}
**CONSTRAINTS**
w-inintervalset(aux393, [-48,-48,-46,43,45,45])
**VARIABLES**
DISCRETE aux394 #( - M_00009_00005 + M_00009_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux394, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux395 #( - M_00009_00002 + M_00009_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux395, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux396 #( - M_00009_00004 + M_00009_00007)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux396, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux397 #( - M_00009_00002 + M_00009_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux397, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux398 #( - M_00009_00004 + M_00009_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux398, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux399 #( - M_00009_00006 + M_00009_00007)
{-48..46}
**CONSTRAINTS**
w-inintervalset(aux399, [-48,-48,-46,41,43,44,46,46])
**VARIABLES**
DISCRETE aux400 #(-1 - M_00009_00007)
{-48..-2}
**CONSTRAINTS**
w-inintervalset(aux400, [-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux401 #( - M_00009_00001 + M_00009_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux401, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux402 #( - M_00009_00003 + M_00009_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux402, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux403 #( - M_00009_00001 + M_00009_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux403, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux404 #( - M_00009_00003 + M_00009_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux404, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux405 #( - M_00010_00001 + M_00010_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux405, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux406 #( - M_00010_00001 + M_00010_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux406, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux407 #( - M_00010_00004 + M_00010_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux407, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux408 #( - M_00010_00005 + M_00010_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux408, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux409 #( - M_00010_00003 + M_00010_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux409, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux410 #( - M_00010_00003 + M_00010_00006)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux410, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux411 #( - M_00010_00002 + M_00010_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux411, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux412 #( - M_00010_00002 + M_00010_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux412, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux413 #( - M_00010_00006 + -1)
{-50..-2}
**CONSTRAINTS**
w-inintervalset(aux413, [-50,-50,-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux414 #( - M_00011_00001 + M_00011_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux414, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux415 #( - M_00011_00002 + M_00011_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux415, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux416 #( - M_00011_00001 + M_00011_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux416, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux417 #( - M_00011_00004 + M_00011_00005)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux417, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux418 #( - M_00011_00003 + M_00011_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux418, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux419 #( - M_00011_00005 + -1)
{-50..-2}
**CONSTRAINTS**
w-inintervalset(aux419, [-50,-50,-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux420 #( - M_00011_00002 + M_00011_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux420, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux421 #( - M_00012_00004 + -1)
{-50..-2}
**CONSTRAINTS**
w-inintervalset(aux421, [-50,-50,-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux422 #( - M_00012_00002 + M_00012_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux422, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux423 #( - M_00012_00003 + M_00012_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux423, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux424 #( - M_00012_00001 + M_00012_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux424, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux425 #( - M_00012_00001 + M_00012_00004)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux425, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux426 #(-1 - M_00013_00003)
{-50..-2}
**CONSTRAINTS**
w-inintervalset(aux426, [-50,-50,-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
DISCRETE aux427 #( - M_00013_00001 + M_00013_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux427, [-48,-48,-46,46,48,48])
**VARIABLES**
DISCRETE aux428 #( - M_00013_00002 + M_00013_00003)
{-39..39}
DISCRETE aux429 #( - M_00014_00001 + M_00014_00002)
{-39..39}
DISCRETE aux430 #(-1 - M_00014_00002)
{-50..-2}
**CONSTRAINTS**
w-inintervalset(aux430, [-50,-50,-48,-48,-46,-46,-43,-42,-37,-37,-32,-32,-25,-25,-23,-23,-17,-17,-15,-15,-8,-7,-5,-5,-2,-2])
**VARIABLES**
**VARIABLES**
ALIAS cards[15]=[16, 14, 7, 45, 42, 49, 24, 4, 22, 31, 47, 36, 41, 6, 1]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00002_00013],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00005_00011],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00006_00010],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00007_00009],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00008_00008],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00009_00007],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00010_00006],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00011_00005],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00012_00004],[M_00013_00001],[M_00013_00002],[M_00013_00003],[M_00014_00001],[M_00014_00002],[M_00015_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00005_00011, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00006_00010, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00007_00009, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00008_00008, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00009_00007, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00010_00006, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00011_00005, M_00012_00001, M_00012_00002, M_00012_00003, M_00012_00004, M_00013_00001, M_00013_00002, M_00013_00003, M_00014_00001, M_00014_00002, M_00015_00001]
**CONSTRAINTS**
div(M_00014_00002, 13, aux270)
reify(gaceq(M_00007_00008,M_00006_00008), aux13)
div(M_00002_00003, 13, aux14)
div(M_00002_00013, 13, aux15)
div(M_00002_00010, 13, aux16)
div(M_00002_00012, 13, aux17)
reify(gaceq(M_00007_00008,M_00006_00009), aux18)
reify(gaceq(M_00007_00004,M_00008_00004), aux19)
reify(gaceq(M_00003_00009,M_00004_00008), aux20)
reify(gaceq(M_00005_00001,M_00006_00001), aux21)
div(M_00007_00001, 13, aux22)
div(M_00007_00009, 13, aux23)
div(M_00011_00002, 13, aux24)
div(M_00011_00004, 13, aux25)
reify(gaceq(M_00002_00006,M_00003_00005), aux26)
div(M_00010_00006, 13, aux27)
div(M_00010_00001, 13, aux28)
reify(gaceq(M_00008_00006,M_00009_00006), aux29)
reify(gaceq(M_00007_00002,M_00008_00002), aux30)
div(M_00012_00004, 13, aux31)
div(M_00012_00003, 13, aux32)
div(M_00012_00002, 13, aux33)
div(M_00012_00001, 13, aux34)
reify(gaceq(M_00007_00002,M_00006_00002), aux35)
reify(gaceq(M_00007_00005,M_00006_00005), aux36)
reify(gaceq(M_00005_00007,M_00006_00006), aux37)
div(M_00002_00006, 13, aux38)
div(M_00002_00009, 13, aux39)
reify(gaceq(M_00010_00005,M_00011_00004), aux40)
reify(gaceq(M_00007_00003,M_00008_00003), aux41)
reify(gaceq(M_00002_00008,M_00003_00008), aux42)
reify(gaceq(M_00004_00005,M_00005_00004), aux43)
reify(gaceq(M_00010_00004,M_00009_00005), aux44)
reify(gaceq(M_00010_00004,M_00009_00004), aux45)
reify(gaceq(M_00010_00001,M_00011_00001), aux46)
reify(gaceq(M_00008_00008,M_00009_00007), aux47)
reify(gaceq(M_00002_00012,M_00003_00011), aux48)
reify(gaceq(M_00002_00010,M_00003_00009), aux49)
reify(gaceq(M_00013_00003,M_00014_00002), aux50)
reify(gaceq(M_00013_00001,M_00014_00001), aux51)
reify(gaceq(M_00010_00006,M_00009_00006), aux52)
reify(gaceq(M_00010_00002,M_00009_00003), aux53)
reify(gaceq(M_00003_00002,M_00004_00002), aux54)
reify(gaceq(M_00004_00006,M_00005_00005), aux55)
div(M_00004_00003, 13, aux56)
div(M_00004_00002, 13, aux57)
div(M_00004_00010, 13, aux58)
div(M_00004_00011, 13, aux59)
reify(gaceq(M_00007_00007,M_00006_00008), aux60)
reify(gaceq(M_00004_00002,M_00005_00002), aux61)
reify(gaceq(M_00005_00004,M_00006_00004), aux62)
reify(gaceq(M_00003_00008,M_00004_00007), aux63)
reify(gaceq(M_00004_00010,M_00005_00009), aux64)
reify(gaceq(M_00010_00006,M_00011_00005), aux65)
div(M_00002_00007, 13, aux66)
div(M_00002_00008, 13, aux67)
div(M_00002_00011, 13, aux68)
div(M_00002_00005, 13, 3)
div(M_00002_00004, 13, 3)
div(M_00002_00002, 13, aux71)
reify(gaceq(M_00010_00003,M_00011_00003), aux72)
reify(gaceq(M_00002_00008,M_00003_00007), aux73)
reify(gaceq(M_00011_00004,M_00012_00004), aux74)
reify(gaceq(M_00011_00003,M_00012_00002), aux75)
reify(gaceq(M_00008_00004,M_00009_00004), aux76)
reify(gaceq(M_00007_00006,M_00008_00005), aux77)
reify(gaceq(M_00008_00004,M_00009_00003), aux78)
reify(gaceq(M_00003_00007,M_00004_00006), aux79)
reify(gaceq(M_00003_00009,M_00004_00009), aux80)
reify(gaceq(M_00002_00001,M_00003_00001), aux81)
reify(gaceq(M_00003_00005,M_00004_00004), aux82)
reify(gaceq(M_00007_00001,M_00006_00001), aux83)
reify(gaceq(M_00005_00005,M_00006_00005), aux84)
reify(gaceq(M_00011_00004,M_00012_00003), aux85)
div(M_00008_00005, 13, aux86)
div(M_00008_00004, 13, aux87)
reify(gaceq(M_00005_00009,M_00006_00009), aux88)
reify(gaceq(M_00003_00011,M_00004_00010), aux89)
reify(gaceq(M_00010_00004,M_00011_00003), aux90)
div(M_00009_00004, 13, aux91)
reify(gaceq(M_00007_00001,M_00008_00001), aux92)
div(M_00003_00007, 13, aux93)
div(M_00003_00001, 13, aux94)
div(M_00003_00010, 13, aux95)
div(M_00005_00001, 13, aux96)
div(M_00005_00011, 13, aux97)
reify(gaceq(M_00003_00004,M_00004_00004), aux98)
reify(gaceq(M_00002_00003,M_00003_00003), aux99)
div(M_00008_00001, 13, aux100)
div(M_00008_00008, 13, aux101)
reify(gaceq(M_00003_00008,M_00004_00008), aux102)
div(M_00006_00009, 13, aux103)
div(M_00006_00008, 13, aux104)
div(M_00006_00003, 13, aux105)
div(M_00006_00002, 13, aux106)
reify(gaceq(M_00003_00012,M_00004_00011), aux107)
reify(gaceq(M_00002_00004,M_00003_00004), aux108)
reify(gaceq(M_00005_00009,M_00006_00008), aux109)
reify(gaceq(M_00010_00003,M_00011_00002), aux110)
reify(gaceq(M_00010_00005,M_00011_00005), aux111)
reify(gaceq(M_00005_00010,M_00006_00009), aux112)
reify(gaceq(M_00002_00005,M_00003_00005), aux113)
reify(gaceq(M_00008_00001,M_00009_00001), aux114)
reify(gaceq(M_00010_00004,M_00011_00004), aux115)
reify(gaceq(M_00002_00005,M_00003_00004), aux116)
reify(gaceq(M_00010_00005,M_00009_00005), aux117)
reify(gaceq(M_00004_00010,M_00005_00010), aux118)
reify(gaceq(M_00004_00004,M_00005_00003), aux119)
reify(gaceq(M_00004_00005,M_00005_00005), aux120)
reify(gaceq(M_00008_00002,M_00009_00002), aux121)
reify(gaceq(M_00005_00006,M_00006_00006), aux122)
reify(gaceq(M_00002_00003,M_00003_00002), aux123)
reify(gaceq(M_00002_00012,M_00003_00012), aux124)
reify(gaceq(M_00002_00009,M_00003_00009), aux125)
reify(gaceq(M_00002_00010,M_00003_00010), aux126)
reify(gaceq(M_00002_00011,M_00003_00011), aux127)
reify(gaceq(M_00004_00007,M_00005_00006), aux128)
reify(gaceq(M_00004_00001,M_00005_00001), aux129)
reify(gaceq(M_00010_00002,M_00011_00002), aux130)
div(M_00009_00005, 13, aux131)
div(M_00009_00006, 13, aux132)
div(M_00009_00003, 13, aux133)
div(M_00009_00002, 13, aux134)
reify(gaceq(M_00007_00006,M_00006_00007), aux135)
reify(gaceq(M_00004_00004,M_00005_00004), aux136)
reify(gaceq(M_00007_00003,M_00008_00002), aux137)
reify(gaceq(M_00007_00008,M_00008_00008), aux138)
div(M_00011_00005, 13, aux139)
div(M_00011_00001, 13, aux140)
div(M_00011_00003, 13, aux141)
reify(gaceq(M_00005_00011,M_00006_00010), aux142)
reify(gaceq(M_00003_00006,M_00004_00005), aux143)
reify(gaceq(M_00008_00007,M_00009_00007), aux144)
reify(gaceq(M_00008_00003,M_00009_00002), aux145)
reify(gaceq(M_00005_00008,M_00006_00007), aux146)
reify(gaceq(M_00004_00008,M_00005_00008), aux147)
reify(gaceq(M_00010_00003,M_00009_00004), aux148)
div(M_00006_00004, 13, aux149)
div(M_00006_00005, 13, aux150)
div(M_00006_00006, 13, aux151)
div(M_00006_00007, 13, aux152)
reify(gaceq(M_00002_00007,M_00003_00007), aux153)
div(M_00006_00010, 13, aux154)
div(M_00006_00001, 13, aux155)
reify(gaceq(M_00003_00007,M_00004_00007), aux156)
div(M_00003_00011, 13, aux157)
div(M_00003_00012, 13, aux158)
div(M_00003_00002, 13, aux159)
div(M_00003_00003, 13, aux160)
div(M_00003_00004, 13, 3)
reify(gaceq(M_00007_00006,M_00006_00006), aux162)
reify(gaceq(M_00005_00005,M_00006_00004), aux163)
reify(gaceq(M_00003_00005,M_00004_00005), aux164)
reify(gaceq(M_00003_00011,M_00004_00011), aux165)
reify(gaceq(M_00003_00003,M_00004_00002), aux166)
reify(gaceq(M_00011_00005,M_00012_00004), aux167)
reify(gaceq(M_00005_00003,M_00006_00002), aux168)
reify(gaceq(M_00005_00010,M_00006_00010), aux169)
div(M_00010_00005, 13, aux170)
div(M_00010_00003, 13, aux171)
div(M_00010_00004, 13, aux172)
div(M_00010_00002, 13, aux173)
reify(gaceq(M_00010_00003,M_00009_00003), aux174)
reify(gaceq(M_00002_00009,M_00003_00008), aux175)
reify(gaceq(M_00003_00001,M_00004_00001), aux176)
div(M_00005_00009, 13, aux177)
div(M_00005_00002, 13, aux178)
div(M_00005_00003, 13, aux179)
div(M_00005_00010, 13, aux180)
reify(gaceq(M_00011_00001,M_00012_00001), aux181)
reify(gaceq(M_00005_00008,M_00006_00008), aux182)
reify(gaceq(M_00004_00003,M_00005_00002), aux183)
reify(gaceq(M_00007_00005,M_00008_00005), aux184)
reify(gaceq(M_00004_00008,M_00005_00007), aux185)
reify(gaceq(M_00007_00009,M_00006_00010), aux186)
div(M_00007_00002, 13, aux187)
div(M_00007_00003, 13, aux188)
div(M_00007_00008, 13, aux189)
div(M_00007_00007, 13, aux190)
reify(gaceq(M_00005_00003,M_00006_00003), aux191)
reify(gaceq(M_00008_00003,M_00009_00003), aux192)
reify(gaceq(M_00004_00009,M_00005_00008), aux193)
reify(gaceq(M_00004_00006,M_00005_00006), aux194)
reify(gaceq(M_00008_00005,M_00009_00005), aux195)
reify(gaceq(M_00008_00005,M_00009_00004), aux196)
reify(gaceq(M_00003_00010,M_00004_00010), aux197)
div(M_00007_00006, 13, aux198)
div(M_00007_00004, 13, aux199)
div(M_00007_00005, 13, aux200)
reify(gaceq(M_00004_00011,M_00005_00010), aux201)
reify(gaceq(M_00002_00007,M_00003_00006), aux202)
reify(gaceq(M_00003_00004,M_00004_00003), aux203)
reify(gaceq(M_00005_00002,M_00006_00002), aux204)
reify(gaceq(M_00007_00004,M_00008_00003), aux205)
reify(gaceq(M_00004_00007,M_00005_00007), aux206)
reify(gaceq(M_00010_00005,M_00009_00006), aux207)
reify(gaceq(M_00005_00004,M_00006_00003), aux208)
div(M_00013_00002, 13, aux209)
div(M_00004_00007, 13, aux210)
div(M_00004_00009, 13, aux211)
div(M_00004_00008, 13, aux212)
div(M_00004_00004, 13, aux213)
div(M_00004_00005, 13, aux214)
div(M_00004_00006, 13, aux215)
reify(gaceq(M_00002_00013,M_00003_00012), aux216)
reify(gaceq(M_00011_00002,M_00012_00002), aux217)
reify(gaceq(M_00011_00003,M_00012_00003), aux218)
reify(gaceq(M_00002_00002,M_00003_00002), aux219)
reify(gaceq(M_00010_00001,M_00009_00001), aux220)
reify(gaceq(M_00002_00011,M_00003_00010), aux221)
reify(gaceq(M_00008_00006,M_00009_00005), aux222)
reify(gaceq(M_00007_00003,M_00006_00004), aux223)
reify(gaceq(M_00012_00001,M_00013_00001), aux224)
reify(gaceq(M_00012_00002,M_00013_00002), aux225)
reify(gaceq(M_00012_00004,M_00013_00003), aux226)
reify(gaceq(M_00002_00006,M_00003_00006), aux227)
reify(gaceq(M_00007_00009,M_00008_00008), aux228)
reify(gaceq(M_00004_00003,M_00005_00003), aux229)
div(M_00008_00003, 13, aux230)
div(M_00008_00006, 13, aux231)
div(M_00008_00002, 13, aux232)
div(M_00008_00007, 13, aux233)
reify(gaceq(M_00010_00006,M_00009_00007), aux234)
reify(gaceq(M_00007_00009,M_00006_00009), aux235)
reify(gaceq(M_00007_00002,M_00006_00003), aux236)
reify(gaceq(M_00007_00007,M_00008_00007), aux237)
reify(gaceq(M_00005_00006,M_00006_00005), aux238)
div(M_00003_00009, 13, aux239)
div(M_00003_00008, 13, aux240)
div(M_00003_00006, 13, aux241)
div(M_00003_00005, 13, aux242)
reify(gaceq(M_00007_00007,M_00008_00006), aux243)
reify(gaceq(M_00007_00005,M_00008_00004), aux244)
reify(gaceq(M_00002_00004,M_00003_00003), aux245)
reify(gaceq(M_00007_00007,M_00006_00007), aux246)
reify(gaceq(M_00012_00003,M_00013_00003), aux247)
reify(gaceq(M_00012_00003,M_00013_00002), aux248)
reify(gaceq(M_00007_00006,M_00008_00006), aux249)
div(M_00005_00004, 13, aux250)
div(M_00005_00005, 13, aux251)
div(M_00005_00008, 13, aux252)
div(M_00005_00006, 13, aux253)
div(M_00005_00007, 13, aux254)
reify(gaceq(M_00007_00008,M_00008_00007), aux255)
reify(gaceq(M_00007_00003,M_00006_00003), aux256)
reify(gaceq(M_00010_00002,M_00009_00002), aux257)
reify(gaceq(M_00007_00005,M_00006_00006), aux258)
div(M_00009_00007, 13, aux259)
div(M_00009_00001, 13, aux260)
reify(gaceq(M_00008_00007,M_00009_00006), aux261)
div(M_00004_00001, 13, aux262)
reify(gaceq(M_00005_00007,M_00006_00007), aux263)
reify(gaceq(M_00004_00009,M_00005_00009), aux264)
reify(gaceq(M_00007_00004,M_00006_00005), aux265)
reify(gaceq(M_00003_00010,M_00004_00009), aux266)
reify(gaceq(M_00003_00003,M_00004_00003), aux267)
reify(gaceq(M_00007_00004,M_00006_00004), aux268)
reify(gaceq(M_00003_00006,M_00004_00006), aux269)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00005_00011],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00006_00010],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00007_00009],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00008_00008],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00009_00007],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00010_00006],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00011_00005],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003, M_00012_00004],[-1],[0])
gccweak([M_00013_00001, M_00013_00002, M_00013_00003],[-1],[0])
gccweak([M_00014_00001, M_00014_00002],[-1],[0])
gccweak([M_00015_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,47),w-literal(M_00002_00011,36),w-literal(M_00002_00013,6),w-literal(M_00002_00012,41)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,45),w-literal(M_00002_00005,42),w-literal(M_00002_00006,49),w-literal(M_00002_00007,24),w-literal(M_00002_00008,4),w-literal(M_00002_00009,22),w-literal(M_00002_00010,31),w-literal(M_00002_00011,47),w-literal(M_00002_00012,36),w-literal(M_00002_00013,41)}),watched-and({w-literal(M_00002_00001,16),w-literal(M_00002_00002,14),w-literal(M_00002_00003,7),w-literal(M_00002_00004,42),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,47),w-literal(M_00002_00011,36),w-literal(M_00002_00013,6),w-literal(M_00002_00012,41)}),watched-and({w-literal(M_00002_00001,14),w-literal(M_00002_00002,7),w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,49),w-literal(M_00002_00006,24),w-literal(M_00002_00007,4),w-literal(M_00002_00008,22),w-literal(M_00002_00009,31),w-literal(M_00002_00010,47),w-literal(M_00002_00011,36),w-literal(M_00002_00013,6),w-literal(M_00002_00012,41)})})
watched-or({watched-and({watched-or({w-literal(aux15,0),modulo(aux271,13,0)}),w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux125,1),w-literal(aux126,1),w-literal(aux127,1),w-literal(aux124,1)}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux272,13,0),gaceq(aux39,aux16)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux126,1),w-literal(aux127,1),gaceq(M_00002_00012,M_00003_00009),w-literal(aux216,1),watched-or({modulo(aux273,13,0),gaceq(aux39,aux17)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux108,1),w-literal(aux113,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux274,13,0),gaceq(aux14,aux38)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux275,13,0),w-literal(aux38,3)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux276,13,0),gaceq(aux38,aux66)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux277,13,0),gaceq(aux67,aux39)})}),watched-and({w-literal(aux219,1),w-literal(aux99,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux116,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),modulo(aux278,13,0)}),watched-and({w-literal(aux81,1),w-literal(aux99,1),w-literal(aux108,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),modulo(aux279,13,0)}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux123,1),w-literal(aux245,1),w-literal(aux116,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux280,13,0),div(M_00002_00001, 13, aux71)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux281,13,0),gaceq(aux66,aux67)})}),watched-and({w-literal(aux81,1),w-literal(aux123,1),w-literal(aux245,1),w-literal(aux116,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux282,13,0),gaceq(aux71,aux14)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux116,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1)}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux245,1),w-literal(aux116,1),w-literal(aux26,1),w-literal(aux202,1),w-literal(aux73,1),w-literal(aux175,1),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux283,13,0),w-literal(aux14,3)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux153,1),w-literal(aux42,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux49,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux284,13,0),gaceq(aux38,aux39)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux125,1),w-literal(aux221,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux285,13,0),gaceq(aux16,aux68)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux125,1),w-literal(aux126,1),w-literal(aux48,1),w-literal(aux216,1),watched-or({modulo(aux286,13,0),gaceq(aux68,aux17)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux125,1),w-literal(aux127,1),w-literal(aux124,1),gaceq(M_00002_00013,M_00003_00010),watched-or({modulo(aux287,13,0),gaceq(aux16,aux15)})}),watched-and({w-literal(aux81,1),w-literal(aux219,1),w-literal(aux99,1),w-literal(aux108,1),w-literal(aux113,1),w-literal(aux227,1),w-literal(aux153,1),w-literal(aux42,1),w-literal(aux125,1),w-literal(aux126,1),w-literal(aux127,1),w-literal(aux216,1),watched-or({modulo(aux288,13,0),gaceq(aux17,aux15)})})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux267,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux82,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux289,13,0),w-literal(aux94,3)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux98,1),w-literal(aux164,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux290,13,0),gaceq(aux160,aux241)})}),watched-and({watched-or({modulo(aux291,13,0),w-literal(aux158,0)}),w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux102,1),w-literal(aux80,1),w-literal(aux197,1),w-literal(aux165,1)}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux292,13,0),gaceq(aux241,aux93)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux164,1),w-literal(aux269,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),modulo(aux293,13,0)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux166,1),w-literal(aux203,1),w-literal(aux82,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux294,13,0),gaceq(aux94,aux159)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux203,1),w-literal(aux82,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux295,13,0),w-literal(aux160,3)})}),watched-and({w-literal(aux176,1),w-literal(aux166,1),w-literal(aux203,1),w-literal(aux82,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux296,13,0),gaceq(aux159,aux160)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux269,1),w-literal(aux156,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux297,13,0),gaceq(aux242,aux240)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux156,1),w-literal(aux102,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux298,13,0),gaceq(aux241,aux239)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux102,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux299,13,0),gaceq(aux239,aux95)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux102,1),w-literal(aux80,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux300,13,0),gaceq(aux95,aux157)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux102,1),w-literal(aux197,1),w-literal(aux165,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux301,13,0),gaceq(aux239,aux158)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux102,1),w-literal(aux80,1),w-literal(aux197,1),w-literal(aux107,1),watched-or({modulo(aux302,13,0),gaceq(aux157,aux158)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux303,13,0),gaceq(aux240,aux239)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux156,1),w-literal(aux80,1),w-literal(aux197,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux107,1),watched-or({modulo(aux304,13,0),gaceq(aux240,aux157)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux102,1),w-literal(aux80,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux89,1),w-literal(aux107,1),modulo(aux305,13,0)}),watched-and({w-literal(aux176,1),w-literal(aux267,1),w-literal(aux98,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux306,13,0),gaceq(aux159,aux242)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux82,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux307,13,0),w-literal(aux242,3)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux143,1),w-literal(aux79,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux308,13,0),gaceq(aux242,aux241)})}),watched-and({w-literal(aux176,1),w-literal(aux54,1),w-literal(aux267,1),w-literal(aux98,1),w-literal(aux164,1),w-literal(aux269,1),w-literal(aux63,1),w-literal(aux20,1),w-literal(aux266,1),w-literal(aux89,1),w-literal(aux107,1),watched-or({modulo(aux309,13,0),gaceq(aux93,aux240)})})})
watched-or({watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux147,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux211,aux58),modulo(aux310,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux147,1),w-literal(aux264,1),w-literal(aux201,1),watched-or({gaceq(aux58,aux59),modulo(aux311,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux212,aux211),modulo(aux312,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux264,1),w-literal(aux118,1),gaceq(M_00004_00011,M_00005_00008),watched-or({gaceq(aux212,aux59),modulo(aux313,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux210,aux212),modulo(aux314,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux147,1),w-literal(aux264,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux201,1),watched-or({gaceq(aux210,aux58),modulo(aux315,13,0)})}),watched-and({w-literal(M_00005_00011,1),watched-or({modulo(aux316,13,0),w-literal(aux59,0)}),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux147,1),w-literal(aux264,1),w-literal(aux118,1)}),watched-and({w-literal(M_00005_00011,1),w-literal(aux61,1),w-literal(aux229,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux43,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux262,aux213),modulo(aux317,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux119,1),w-literal(aux43,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux56,aux213),modulo(aux318,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux43,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux213,aux214),modulo(aux319,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux215,aux210),modulo(aux320,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux206,1),w-literal(aux147,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux215,aux211),modulo(aux321,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux229,1),w-literal(aux136,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux57,aux214),modulo(aux322,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux214,aux215),modulo(aux323,13,0)})}),watched-and({w-literal(M_00005_00009,1),watched-or({modulo(aux324,13,0),w-literal(aux211,0)}),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux120,1),w-literal(aux194,1),w-literal(aux206,1),w-literal(aux147,1),w-literal(aux118,1),gaceq(M_00004_00011,M_00005_00011)}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux136,1),w-literal(aux120,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux56,aux215),modulo(aux325,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux183,1),w-literal(aux119,1),w-literal(aux43,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux57,aux56),modulo(aux326,13,0)})}),watched-and({w-literal(M_00005_00011,1),gaceq(M_00004_00002,M_00005_00001),w-literal(aux183,1),w-literal(aux119,1),w-literal(aux43,1),w-literal(aux55,1),w-literal(aux128,1),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux262,aux57),modulo(aux327,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux120,1),w-literal(aux194,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux185,1),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux213,aux210),modulo(aux328,13,0)})}),watched-and({w-literal(M_00005_00011,1),w-literal(aux129,1),w-literal(aux61,1),w-literal(aux229,1),w-literal(aux136,1),w-literal(aux194,1),w-literal(aux206,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux193,1),w-literal(aux64,1),w-literal(aux201,1),watched-or({gaceq(aux214,aux212),modulo(aux329,13,0)})})})
watched-or({watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux62,1),w-literal(aux84,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux330,13,0),gaceq(aux179,aux253)})}),watched-and({w-literal(aux21,1),w-literal(aux168,1),w-literal(aux208,1),w-literal(aux163,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux331,13,0),gaceq(aux178,aux179)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux168,1),w-literal(aux208,1),w-literal(aux163,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux332,13,0),gaceq(aux96,aux178)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux84,1),w-literal(aux122,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux333,13,0),gaceq(aux250,aux254)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux122,1),w-literal(aux263,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux334,13,0),gaceq(aux251,aux252)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux263,1),w-literal(aux182,1),w-literal(aux88,1),w-literal(aux169,1),modulo(aux335,13,0)}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux263,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux336,13,0),gaceq(aux252,aux177)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux263,1),w-literal(aux182,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux337,13,0),gaceq(aux177,aux180)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux263,1),w-literal(aux88,1),w-literal(aux169,1),gaceq(M_00005_00011,M_00006_00008),watched-or({modulo(aux338,13,0),gaceq(aux252,aux97)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux263,1),w-literal(aux182,1),w-literal(aux88,1),w-literal(aux142,1),watched-or({modulo(aux339,13,0),gaceq(aux180,aux97)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux340,13,0),gaceq(aux254,aux252)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux122,1),w-literal(aux182,1),w-literal(aux88,1),gaceq(M_00005_00010,M_00006_00007),w-literal(aux142,1),watched-or({modulo(aux341,13,0),gaceq(aux254,aux180)})}),watched-and({w-literal(aux204,1),w-literal(aux191,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux163,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux342,13,0),gaceq(aux96,aux250)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux208,1),w-literal(aux163,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux343,13,0),gaceq(aux179,aux250)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux163,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux344,13,0),gaceq(aux250,aux251)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux345,13,0),gaceq(aux253,aux254)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux84,1),w-literal(aux263,1),w-literal(aux182,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux346,13,0),gaceq(aux253,aux177)})}),watched-and({w-literal(aux21,1),w-literal(aux191,1),w-literal(aux62,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux347,13,0),gaceq(aux178,aux251)})}),watched-and({w-literal(aux21,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux62,1),w-literal(aux238,1),w-literal(aux37,1),w-literal(aux146,1),w-literal(aux109,1),w-literal(aux112,1),w-literal(aux142,1),watched-or({modulo(aux348,13,0),gaceq(aux251,aux253)})})})
watched-or({watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux223,1),w-literal(aux265,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux105,aux149),modulo(aux349,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux36,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux149,aux152),modulo(aux350,13,0)})}),watched-and({w-literal(aux83,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux106,aux150),modulo(aux351,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux162,1),w-literal(aux246,1),w-literal(aux13,1),w-literal(aux235,1),modulo(aux352,13,0)}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux162,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux152,aux104),modulo(aux353,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux162,1),w-literal(aux246,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux104,aux103),modulo(aux354,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux162,1),w-literal(aux246,1),w-literal(aux13,1),w-literal(aux186,1),watched-or({gaceq(aux103,aux154),modulo(aux355,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux162,1),gaceq(M_00007_00007,M_00006_00010),w-literal(aux13,1),w-literal(aux235,1),watched-or({gaceq(aux152,aux154),modulo(aux356,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux151,aux152),modulo(aux357,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux36,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux246,1),w-literal(aux13,1),w-literal(aux186,1),watched-or({gaceq(aux151,aux103),modulo(aux358,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux150,aux151),modulo(aux359,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux268,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux162,1),w-literal(aux246,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux150,aux104),modulo(aux360,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux265,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux155,aux149),modulo(aux361,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux236,1),w-literal(aux223,1),w-literal(aux265,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux155,aux106),modulo(aux362,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux236,1),w-literal(aux223,1),w-literal(aux265,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux106,aux105),modulo(aux363,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),w-literal(aux256,1),w-literal(aux265,1),w-literal(aux258,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux149,aux150),modulo(aux364,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux35,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux268,1),w-literal(aux36,1),w-literal(aux135,1),w-literal(aux60,1),w-literal(aux18,1),w-literal(aux186,1),watched-or({gaceq(aux105,aux151),modulo(aux365,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux366,13,0),gaceq(aux187,aux188)}),w-literal(aux92,1),w-literal(aux137,1),w-literal(aux205,1),w-literal(aux244,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux367,13,0),gaceq(aux188,aux198)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux19,1),w-literal(aux184,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux368,13,0),gaceq(aux22,aux187)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux137,1),w-literal(aux205,1),w-literal(aux244,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux369,13,0),gaceq(aux188,aux199)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux205,1),w-literal(aux244,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux370,13,0),gaceq(aux187,aux200)}),w-literal(aux92,1),w-literal(aux41,1),w-literal(aux19,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({modulo(aux371,13,0),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux184,1),w-literal(aux249,1),w-literal(aux237,1),w-literal(aux138,1)}),watched-and({watched-or({modulo(aux372,13,0),gaceq(aux198,aux23)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux184,1),w-literal(aux237,1),w-literal(aux138,1),gaceq(M_00007_00009,M_00008_00006)}),watched-and({watched-or({modulo(aux373,13,0),gaceq(aux199,aux190)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux184,1),w-literal(aux249,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux374,13,0),gaceq(aux189,aux23)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux184,1),w-literal(aux249,1),w-literal(aux237,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux375,13,0),gaceq(aux198,aux190)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux184,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux376,13,0),gaceq(aux199,aux200)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux244,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux377,13,0),gaceq(aux22,aux199)}),w-literal(aux30,1),w-literal(aux41,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux244,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux378,13,0),gaceq(aux200,aux189)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux249,1),w-literal(aux237,1),gaceq(M_00007_00008,M_00008_00005),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux379,13,0),gaceq(aux190,aux189)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux184,1),w-literal(aux249,1),w-literal(aux255,1),w-literal(aux228,1)}),watched-and({watched-or({modulo(aux380,13,0),gaceq(aux200,aux198)}),w-literal(aux92,1),w-literal(aux30,1),w-literal(aux41,1),w-literal(aux19,1),w-literal(aux77,1),w-literal(aux243,1),w-literal(aux255,1),w-literal(aux228,1)})})
watched-or({watched-and({watched-or({gaceq(aux100,aux87),modulo(aux381,13,0)}),w-literal(aux121,1),w-literal(aux192,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux196,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux230,aux231),modulo(aux382,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux76,1),w-literal(aux195,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux76,1),w-literal(aux195,1),w-literal(aux29,1),w-literal(aux144,1),modulo(aux383,13,0)}),watched-and({watched-or({gaceq(aux87,aux233),modulo(aux384,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux195,1),w-literal(aux29,1),gaceq(M_00008_00007,M_00009_00004),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux86,aux101),modulo(aux385,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux76,1),w-literal(aux29,1),w-literal(aux144,1),gaceq(M_00008_00008,M_00009_00005)}),watched-and({watched-or({gaceq(aux232,aux86),modulo(aux386,13,0)}),w-literal(aux114,1),w-literal(aux192,1),w-literal(aux76,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux230,aux87),modulo(aux387,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux78,1),w-literal(aux196,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux87,aux86),modulo(aux388,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux196,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux232,aux230),modulo(aux389,13,0)}),w-literal(aux114,1),w-literal(aux145,1),w-literal(aux78,1),w-literal(aux196,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux86,aux231),modulo(aux390,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux76,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux231,aux233),modulo(aux391,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux76,1),w-literal(aux195,1),w-literal(aux261,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux233,aux101),modulo(aux392,13,0)}),w-literal(aux114,1),w-literal(aux121,1),w-literal(aux192,1),w-literal(aux76,1),w-literal(aux195,1),w-literal(aux29,1),w-literal(aux47,1)}),watched-and({watched-or({gaceq(aux100,aux232),modulo(aux393,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux145,1),w-literal(aux78,1),w-literal(aux196,1),w-literal(aux222,1),w-literal(aux261,1),w-literal(aux47,1)})})
watched-or({watched-and({watched-or({modulo(aux394,13,0),gaceq(aux131,aux132)}),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux174,1),w-literal(aux45,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux395,13,0),gaceq(aux134,aux131)}),w-literal(aux220,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux174,1),w-literal(aux45,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux396,13,0),gaceq(aux91,aux259)}),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux174,1),gaceq(M_00010_00004,M_00009_00007),w-literal(aux117,1),w-literal(aux52,1)}),watched-and({watched-or({modulo(aux397,13,0),gaceq(aux134,aux133)}),w-literal(aux220,1),w-literal(aux53,1),w-literal(aux148,1),w-literal(aux44,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux398,13,0),gaceq(aux91,aux131)}),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux174,1),w-literal(aux44,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux399,13,0),gaceq(aux132,aux259)}),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux174,1),w-literal(aux45,1),w-literal(aux117,1),w-literal(aux234,1)}),watched-and({modulo(aux400,13,0),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux174,1),w-literal(aux45,1),w-literal(aux117,1),w-literal(aux52,1)}),watched-and({watched-or({modulo(aux401,13,0),gaceq(aux260,aux91)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux257,1),w-literal(aux174,1),w-literal(aux44,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux402,13,0),gaceq(aux133,aux132)}),w-literal(aux220,1),w-literal(aux257,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux45,1),w-literal(aux117,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux403,13,0),gaceq(aux260,aux134)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux53,1),w-literal(aux148,1),w-literal(aux44,1),w-literal(aux207,1),w-literal(aux234,1)}),watched-and({watched-or({modulo(aux404,13,0),gaceq(aux133,aux91)}),w-literal(aux220,1),w-literal(aux257,1),w-literal(aux148,1),w-literal(aux44,1),w-literal(aux207,1),w-literal(aux234,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux110,1),w-literal(aux90,1),w-literal(aux40,1),w-literal(aux65,1),watched-or({gaceq(aux28,aux173),modulo(aux405,13,0)})}),watched-and({w-literal(aux130,1),w-literal(aux72,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux40,1),w-literal(aux65,1),watched-or({gaceq(aux28,aux172),modulo(aux406,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux130,1),w-literal(aux72,1),w-literal(aux40,1),w-literal(aux65,1),watched-or({gaceq(aux172,aux170),modulo(aux407,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux130,1),w-literal(aux72,1),w-literal(aux115,1),w-literal(aux65,1),watched-or({gaceq(aux170,aux27),modulo(aux408,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux130,1),w-literal(aux90,1),w-literal(aux40,1),w-literal(aux65,1),watched-or({gaceq(aux171,aux172),modulo(aux409,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux130,1),w-literal(aux115,1),w-literal(aux111,1),gaceq(M_00010_00006,M_00011_00003),watched-or({gaceq(aux171,aux27),modulo(aux410,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux110,1),w-literal(aux90,1),w-literal(aux40,1),w-literal(aux65,1),watched-or({gaceq(aux173,aux171),modulo(aux411,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux72,1),w-literal(aux115,1),gaceq(M_00010_00005,M_00011_00002),w-literal(aux65,1),watched-or({gaceq(aux173,aux170),modulo(aux412,13,0)})}),watched-and({w-literal(aux46,1),w-literal(aux130,1),w-literal(aux72,1),w-literal(aux115,1),w-literal(aux111,1),modulo(aux413,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux140,aux24),modulo(aux414,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux75,1),w-literal(aux85,1),w-literal(aux167,1)}),watched-and({watched-or({gaceq(aux24,aux139),modulo(aux415,13,0)}),w-literal(aux181,1),w-literal(aux218,1),w-literal(aux74,1),gaceq(M_00011_00005,M_00012_00002)}),watched-and({watched-or({gaceq(aux140,aux25),modulo(aux416,13,0)}),w-literal(aux217,1),w-literal(aux218,1),gaceq(M_00011_00004,M_00012_00001),w-literal(aux167,1)}),watched-and({watched-or({gaceq(aux25,aux139),modulo(aux417,13,0)}),w-literal(aux181,1),w-literal(aux217,1),w-literal(aux218,1),w-literal(aux167,1)}),watched-and({watched-or({gaceq(aux141,aux25),modulo(aux418,13,0)}),w-literal(aux181,1),w-literal(aux217,1),w-literal(aux85,1),w-literal(aux167,1)}),watched-and({modulo(aux419,13,0),w-literal(aux181,1),w-literal(aux217,1),w-literal(aux218,1),w-literal(aux74,1)}),watched-and({watched-or({gaceq(aux24,aux141),modulo(aux420,13,0)}),w-literal(aux181,1),w-literal(aux75,1),w-literal(aux85,1),w-literal(aux167,1)})})
watched-or({watched-and({modulo(aux421,13,0),w-literal(aux224,1),w-literal(aux225,1),w-literal(aux247,1)}),watched-and({w-literal(aux224,1),w-literal(aux248,1),w-literal(aux226,1),watched-or({gaceq(aux33,aux32),modulo(aux422,13,0)})}),watched-and({w-literal(aux224,1),w-literal(aux225,1),w-literal(aux226,1),watched-or({gaceq(aux32,aux31),modulo(aux423,13,0)})}),watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux248,1),w-literal(aux226,1),watched-or({gaceq(aux34,aux33),modulo(aux424,13,0)})}),watched-and({w-literal(aux225,1),w-literal(aux247,1),gaceq(M_00012_00004,M_00013_00001),watched-or({gaceq(aux34,aux31),modulo(aux425,13,0)})})})
watched-or({watched-and({w-literal(aux51,1),gaceq(M_00013_00002,M_00014_00002),modulo(aux426,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),w-literal(aux50,1),watched-or({div(M_00013_00001, 13, aux209),modulo(aux427,13,0)})}),watched-and({w-literal(aux51,1),w-literal(aux50,1),watched-or({div(M_00013_00003, 13, aux209),modulo(aux428,13,0)})})})
watched-or({watched-and({gaceq(M_00015_00001,M_00014_00002),watched-or({div(M_00014_00001, 13, aux270),modulo(aux429,13,0)})}),watched-and({modulo(aux430,13,0),gaceq(M_00015_00001,M_00014_00001)})})
weightedsumleq([-1,1],[M_00002_00013,1],aux271)
weightedsumgeq([-1,1],[M_00002_00013,1],aux271)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux272)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux272)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux273)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux273)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux274)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux274)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux275)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux275)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux276)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux276)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux277)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux277)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux278)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux278)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux279)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux279)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux280)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux280)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux281)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux281)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux282)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux282)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux283)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux283)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux284)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux284)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux285)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux285)
weightedsumleq([-1,1],[M_00002_00011,M_00002_00012],aux286)
weightedsumgeq([-1,1],[M_00002_00011,M_00002_00012],aux286)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00013],aux287)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00013],aux287)
weightedsumleq([-1,1],[M_00002_00012,M_00002_00013],aux288)
weightedsumgeq([-1,1],[M_00002_00012,M_00002_00013],aux288)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux289)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux289)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux290)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux290)
weightedsumleq([-1,1],[M_00003_00012,1],aux291)
weightedsumgeq([-1,1],[M_00003_00012,1],aux291)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux292)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux292)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux293)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux293)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux294)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux294)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux295)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux295)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux296)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux296)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux297)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux297)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux298)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux298)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux299)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux299)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux300)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux300)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux301)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux301)
weightedsumleq([-1,1],[M_00003_00011,M_00003_00012],aux302)
weightedsumgeq([-1,1],[M_00003_00011,M_00003_00012],aux302)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux303)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux303)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux304)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux304)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux305)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux305)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux306)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux306)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux307)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux307)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux308)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux308)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux309)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux309)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux310)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux310)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux311)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux311)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux312)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux312)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux313)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux313)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux314)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux314)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux315)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux315)
weightedsumleq([-1,1],[M_00004_00011,1],aux316)
weightedsumgeq([-1,1],[M_00004_00011,1],aux316)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux317)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux317)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux318)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux318)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux319)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux319)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux320)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux320)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux321)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux321)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux322)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux322)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux323)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux323)
weightedsumleq([-1,1],[M_00004_00009,1],aux324)
weightedsumgeq([-1,1],[M_00004_00009,1],aux324)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux325)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux325)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux326)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux326)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux327)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux327)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux328)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux328)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux329)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux329)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux330)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux330)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux331)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux331)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux332)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux332)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux333)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux333)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux334)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux334)
weightedsumleq([1,-1],[-1,M_00005_00011],aux335)
weightedsumgeq([1,-1],[-1,M_00005_00011],aux335)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux336)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux336)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux337)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux337)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00011],aux338)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00011],aux338)
weightedsumleq([-1,1],[M_00005_00010,M_00005_00011],aux339)
weightedsumgeq([-1,1],[M_00005_00010,M_00005_00011],aux339)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux340)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux340)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux341)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux341)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux342)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux342)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux343)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux343)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux344)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux344)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux345)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux345)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux346)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux346)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux347)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux347)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux348)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux348)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux349)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux349)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux350)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux350)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux351)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux351)
weightedsumleq([1,-1],[-1,M_00006_00010],aux352)
weightedsumgeq([1,-1],[-1,M_00006_00010],aux352)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux353)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux353)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux354)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux354)
weightedsumleq([-1,1],[M_00006_00009,M_00006_00010],aux355)
weightedsumgeq([-1,1],[M_00006_00009,M_00006_00010],aux355)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00010],aux356)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00010],aux356)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux357)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux357)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux358)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux358)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux359)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux359)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux360)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux360)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux361)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux361)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux362)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux362)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux363)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux363)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux364)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux364)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux365)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux365)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux366)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux366)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux367)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux367)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux368)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux368)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux369)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux369)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux370)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux370)
weightedsumleq([-1,1],[M_00007_00009,-1],aux371)
weightedsumgeq([-1,1],[M_00007_00009,-1],aux371)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00009],aux372)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00009],aux372)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux373)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux373)
weightedsumleq([-1,1],[M_00007_00008,M_00007_00009],aux374)
weightedsumgeq([-1,1],[M_00007_00008,M_00007_00009],aux374)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux375)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux375)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux376)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux376)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux377)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux377)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux378)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux378)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux379)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux379)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux380)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux380)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux381)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux381)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux382)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux382)
weightedsumleq([-1,1],[M_00008_00008,-1],aux383)
weightedsumgeq([-1,1],[M_00008_00008,-1],aux383)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux384)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux384)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00008],aux385)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00008],aux385)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux386)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux386)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux387)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux387)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux388)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux388)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux389)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux389)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux390)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux390)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux391)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux391)
weightedsumleq([-1,1],[M_00008_00007,M_00008_00008],aux392)
weightedsumgeq([-1,1],[M_00008_00007,M_00008_00008],aux392)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux393)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux393)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux394)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux394)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux395)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux395)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00007],aux396)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00007],aux396)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux397)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux397)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux398)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux398)
weightedsumleq([-1,1],[M_00009_00006,M_00009_00007],aux399)
weightedsumgeq([-1,1],[M_00009_00006,M_00009_00007],aux399)
weightedsumleq([1,-1],[-1,M_00009_00007],aux400)
weightedsumgeq([1,-1],[-1,M_00009_00007],aux400)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux401)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux401)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux402)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux402)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux403)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux403)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux404)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux404)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux405)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux405)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux406)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux406)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux407)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux407)
weightedsumleq([-1,1],[M_00010_00005,M_00010_00006],aux408)
weightedsumgeq([-1,1],[M_00010_00005,M_00010_00006],aux408)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux409)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux409)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00006],aux410)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00006],aux410)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux411)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux411)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux412)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux412)
weightedsumleq([-1,1],[M_00010_00006,-1],aux413)
weightedsumgeq([-1,1],[M_00010_00006,-1],aux413)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux414)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux414)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00005],aux415)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00005],aux415)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux416)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux416)
weightedsumleq([-1,1],[M_00011_00004,M_00011_00005],aux417)
weightedsumgeq([-1,1],[M_00011_00004,M_00011_00005],aux417)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux418)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux418)
weightedsumleq([-1,1],[M_00011_00005,-1],aux419)
weightedsumgeq([-1,1],[M_00011_00005,-1],aux419)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux420)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux420)
weightedsumleq([-1,1],[M_00012_00004,-1],aux421)
weightedsumgeq([-1,1],[M_00012_00004,-1],aux421)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux422)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux422)
weightedsumleq([-1,1],[M_00012_00003,M_00012_00004],aux423)
weightedsumgeq([-1,1],[M_00012_00003,M_00012_00004],aux423)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux424)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux424)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00004],aux425)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00004],aux425)
weightedsumleq([1,-1],[-1,M_00013_00003],aux426)
weightedsumgeq([1,-1],[-1,M_00013_00003],aux426)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux427)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux427)
weightedsumleq([-1,1],[M_00013_00002,M_00013_00003],aux428)
weightedsumgeq([-1,1],[M_00013_00002,M_00013_00003],aux428)
weightedsumleq([-1,1],[M_00014_00001,M_00014_00002],aux429)
weightedsumgeq([-1,1],[M_00014_00001,M_00014_00002],aux429)
weightedsumleq([1,-1],[-1,M_00014_00002],aux430)
weightedsumgeq([1,-1],[-1,M_00014_00002],aux430)
**EOF**
