MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 153
# CSE_active_eliminated_expressions = 775
# CSE_active_total_size = 459
**VARIABLES**
DISCRETE M_00002_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [1,1,3,3])
**VARIABLES**
DISCRETE M_00002_00002 #
{3..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [3,3,7,7,10,12,21,21])
**VARIABLES**
DISCRETE M_00002_00003 #
{21..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00004 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00005 #
{7..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [7,7,10,10])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,7,10,12,21,21,27,27,37,37,39,39])
**VARIABLES**
DISCRETE M_00002_00007 #
{39..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [39,39,46,46])
**VARIABLES**
DISCRETE M_00002_00008 #
{27..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00002_00009 #
{12..27}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [12,12,21,21,27,27])
**VARIABLES**
DISCRETE M_00002_00010 #
{12..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00003_00001 #
{1..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [1,1,3,3,7,7,10,12,21,21])
**VARIABLES**
DISCRETE M_00003_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00003 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,7,10,12,21,21,27,27,37,37,39,39])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00007 #
{27..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00008 #
{12..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00009 #
{12..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00004_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00007 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [11,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00008 #
{12..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00005_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00007 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [11,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00008 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [11,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00007 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [11,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00008_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [7,7,10,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00009_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [1,1,3,3,7,7,10,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
BOOL aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002/13)
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..3}
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux20 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux25 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux29 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux30 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..3}
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux34 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux35 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux38 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux39 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux44 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux45 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux46 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..2}
BOOL aux50 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux52 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux54 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux55 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux56 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux57 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux58 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux59 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux63 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux64 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux74 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux76 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux77 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux80 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux81 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux82 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux83 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux84 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux87 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux90 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux94 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
BOOL aux97 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{2..3}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux103 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux104 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux108 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux109 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux116 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux117 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux122 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux123 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux124 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux125 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux126 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux127 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux135 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux136 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux137 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux139 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
DISCRETE aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux142 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux145 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux146 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux147 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux149 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux151 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux153 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux154 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux155 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux156 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux157 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux158 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux159 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux160 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
BOOL aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux164 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux165 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux166 #
{0..3}
DISCRETE aux167 #( - M_00002_00005 + M_00002_00008)
{17..36}
**CONSTRAINTS**
w-inintervalset(aux167, [17,17,20,20,27,27,29,30,32,32,36,36])
**VARIABLES**
DISCRETE aux168 #( - M_00002_00002 + M_00002_00003)
{11..44}
**CONSTRAINTS**
w-inintervalset(aux168, [11,11,14,18,20,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux169 #( - M_00002_00003 + M_00002_00004)
{-37..26}
**CONSTRAINTS**
w-inintervalset(aux169, [-37,-34,-29,-25,-20,-15,-12,-6,-2,2,6,10,12,12,16,16,18,20,25,26])
**VARIABLES**
DISCRETE aux170 #( - M_00002_00005 + M_00002_00006)
{-3..32}
**CONSTRAINTS**
w-inintervalset(aux170, [-3,-3,0,5,11,11,14,14,17,17,20,20,27,27,29,30,32,32])
**VARIABLES**
DISCRETE aux171 #( - M_00002_00001 + M_00002_00004)
{7..46}
**CONSTRAINTS**
w-inintervalset(aux171, [7,11,18,18,20,20,24,24,26,26,34,34,36,36,38,38,43,46])
**VARIABLES**
DISCRETE aux172 #( - M_00002_00004 + M_00002_00005)
{-40..-3}
**CONSTRAINTS**
w-inintervalset(aux172, [-40,-39,-37,-36,-32,-32,-30,-29,-27,-27,-20,-20,-17,-17,-14,-14,-11,-11,-5,-3])
**VARIABLES**
DISCRETE aux173 #( - M_00002_00002 + M_00002_00005)
{-14..7}
**CONSTRAINTS**
w-inintervalset(aux173, [-14,-14,-11,-11,-5,0,3,4,7,7])
**VARIABLES**
DISCRETE aux174 #( - M_00002_00001 + M_00002_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux174, [2,2,4,4,6,11,18,18])
**VARIABLES**
DISCRETE aux175 #( - M_00002_00010 + 11)
{-26..-1}
**CONSTRAINTS**
w-inintervalset(aux175, [-26,-26,-16,-16,-10,-10,-1,-1])
**VARIABLES**
DISCRETE aux176 #( - M_00002_00003 + M_00002_00006)
{-14..18}
**CONSTRAINTS**
w-inintervalset(aux176, [-14,-14,-12,-6,-2,-2,0,0,2,2,6,6,10,10,12,12,16,16,18,18])
**VARIABLES**
DISCRETE aux177 #( - M_00002_00004 + M_00002_00007)
{-8..36}
**CONSTRAINTS**
w-inintervalset(aux177, [-8,-7,-1,0,2,2,7,7,9,9,12,12,18,19,25,25,27,29,34,36])
**VARIABLES**
DISCRETE aux178 #( - M_00002_00007 + M_00002_00010)
{-27..-9}
**CONSTRAINTS**
w-inintervalset(aux178, [-27,-27,-25,-25,-19,-18,-12,-12,-9,-9])
**VARIABLES**
DISCRETE aux179 #( - M_00002_00007 + M_00002_00008)
{-19..7}
**CONSTRAINTS**
w-inintervalset(aux179, [-19,-19,-12,-12,-9,-9,-7,-7,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux180 #( - M_00002_00008 + M_00002_00009)
{-19..-15}
**CONSTRAINTS**
w-inintervalset(aux180, [-19,-18,-16,-15])
**VARIABLES**
DISCRETE aux181 #( - M_00002_00009 + M_00002_00010)
{-15..25}
**CONSTRAINTS**
w-inintervalset(aux181, [-15,-15,-9,-9,-6,-6,0,0,6,6,9,10,15,16,25,25])
**VARIABLES**
DISCRETE aux182 #( - M_00002_00006 + M_00002_00007)
{7..39}
**CONSTRAINTS**
w-inintervalset(aux182, [7,7,9,9,12,12,18,19,25,25,27,29,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux183 #( - M_00002_00006 + M_00002_00009)
{-27..20}
**CONSTRAINTS**
w-inintervalset(aux183, [-27,-27,-25,-25,-18,-18,-16,-15,-12,-12,-10,-9,-6,-6,0,2,5,6,9,11,14,17,20,20])
**VARIABLES**
DISCRETE aux184 #( - M_00003_00002 + M_00003_00003)
{-37..44}
**CONSTRAINTS**
w-inintervalset(aux184, [-37,-34,-29,-25,-20,-15,-12,-6,-2,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux185 #( - M_00003_00003 + M_00003_00004)
{-40..26}
**CONSTRAINTS**
w-inintervalset(aux185, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,2,6,12,15,20,25,26])
**VARIABLES**
DISCRETE aux186 #( - M_00003_00005 + M_00003_00006)
{-3..39}
**CONSTRAINTS**
w-inintervalset(aux186, [-3,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux187 #( - M_00003_00005 + M_00003_00008)
{-27..39}
**CONSTRAINTS**
w-inintervalset(aux187, [-27,-27,-25,-25,-18,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,-2,0,2,5,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux188 #( - M_00003_00009 + 11)
{-26..-1}
**CONSTRAINTS**
w-inintervalset(aux188, [-26,-26,-16,-16,-10,-10,-1,-1])
**VARIABLES**
DISCRETE aux189 #( - M_00003_00007 + 11)
{-35..-16}
**CONSTRAINTS**
w-inintervalset(aux189, [-35,-35,-28,-28,-26,-26,-16,-16])
**VARIABLES**
DISCRETE aux190 #( - M_00003_00001 + M_00003_00004)
{-14..46}
**CONSTRAINTS**
w-inintervalset(aux190, [-14,-14,-11,-9,-5,11,14,18,20,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux191 #( - M_00003_00004 + M_00003_00005)
{-40..32}
**CONSTRAINTS**
w-inintervalset(aux191, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,6,9,12,14,18,20,20,25,30,32,32])
**VARIABLES**
DISCRETE aux192 #( - M_00003_00002 + M_00003_00005)
{-40..36}
**CONSTRAINTS**
w-inintervalset(aux192, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,18,20,20,24,30,32,32,34,34,36,36])
**VARIABLES**
DISCRETE aux193 #( - M_00003_00001 + M_00003_00002)
{-7..44}
**CONSTRAINTS**
w-inintervalset(aux193, [-7,-7,-5,11,14,18,20,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux194 #( - M_00003_00003 + M_00003_00006)
{-40..36}
**CONSTRAINTS**
w-inintervalset(aux194, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,2,6,7,9,12,15,19,25,29,34,36])
**VARIABLES**
DISCRETE aux195 #( - M_00003_00004 + M_00003_00007)
{-20..39}
**CONSTRAINTS**
w-inintervalset(aux195, [-20,-19,-12,-12,-10,-7,-2,0,2,2,6,7,9,10,12,12,15,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux196 #( - M_00003_00006 + M_00003_00007)
{-19..39}
**CONSTRAINTS**
w-inintervalset(aux196, [-19,-19,-12,-12,-10,-9,-7,-7,-2,-2,0,0,2,2,6,7,9,10,12,12,15,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux197 #( - M_00003_00007 + M_00003_00008)
{-34..7}
**CONSTRAINTS**
w-inintervalset(aux197, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,-2,0,0,2,2,7,7])
**VARIABLES**
DISCRETE aux198 #( - M_00003_00006 + M_00003_00009)
{-34..30}
**CONSTRAINTS**
w-inintervalset(aux198, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,-2,0,2,5,6,9,11,14,17,20,20,25,27,30,30])
**VARIABLES**
DISCRETE aux199 #( - M_00003_00008 + M_00003_00009)
{-34..25}
**CONSTRAINTS**
w-inintervalset(aux199, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,-2,0,0,6,6,9,10,15,16,25,25])
**VARIABLES**
DISCRETE aux200 #( - M_00004_00007 + M_00004_00008)
{-34..25}
**CONSTRAINTS**
w-inintervalset(aux200, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,-2,0,2,6,7,9,10,12,12,15,16,18,19,25,25])
**VARIABLES**
DISCRETE aux201 #( - M_00004_00008 + M_00004_00009)
{-35..25}
**CONSTRAINTS**
w-inintervalset(aux201, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,0,6,6,9,10,15,16,25,25])
**VARIABLES**
DISCRETE aux202 #( - M_00004_00006 + M_00004_00007)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux202, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux203 #( - M_00004_00006 + M_00004_00009)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux203, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,2,4,6,9,11,14,17,20,20,25,27,30,30])
**VARIABLES**
DISCRETE aux204 #( - M_00004_00005 + M_00004_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux204, [-39,-39,-36,-34,-32,-32,-30,-25,-20,-14,-12,-9,-7,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux205 #( - M_00004_00005 + M_00004_00008)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux205, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,-2,0,2,5,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux206 #( - M_00004_00001 + M_00004_00002)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux206, [-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux207 #( - M_00004_00002 + M_00004_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux207, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux208 #( - M_00004_00004 + M_00004_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux208, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux209 #( - M_00004_00004 + M_00004_00007)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux209, [-36,-34,-28,-25,-20,-18,-16,-15,-12,-12,-10,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux210 #( - M_00004_00009 + -1)
{-38..-12}
**CONSTRAINTS**
w-inintervalset(aux210, [-38,-38,-28,-28,-22,-22,-13,-12])
**VARIABLES**
DISCRETE aux211 #( - M_00004_00003 + M_00004_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux211, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux212 #( - M_00004_00001 + M_00004_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux212, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux213 #( - M_00004_00002 + M_00004_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux213, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,36,39,39,43,43])
**VARIABLES**
DISCRETE aux214 #( - M_00004_00003 + M_00004_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux214, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux215 #( - M_00005_00002 + M_00005_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux215, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux216 #( - M_00005_00001 + M_00005_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux216, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux217 #( - M_00005_00002 + M_00005_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux217, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,36,39,39,43,43])
**VARIABLES**
DISCRETE aux218 #(-1 - M_00005_00008)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux218, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-12])
**VARIABLES**
DISCRETE aux219 #( - M_00005_00005 + M_00005_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux219, [-39,-39,-36,-34,-32,-32,-30,-25,-20,-14,-12,-9,-7,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux220 #( - M_00005_00006 + M_00005_00007)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux220, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux221 #( - M_00005_00005 + M_00005_00008)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux221, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux222 #( - M_00005_00007 + M_00005_00008)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux222, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,2,6,7,9,10,12,12,15,16,18,19,25,28,34,35])
**VARIABLES**
DISCRETE aux223 #( - M_00005_00004 + M_00005_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux223, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux224 #( - M_00005_00004 + M_00005_00007)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux224, [-36,-34,-28,-25,-20,-18,-16,-15,-12,-12,-10,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux225 #( - M_00005_00001 + M_00005_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux225, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux226 #( - M_00005_00003 + M_00005_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux226, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux227 #( - M_00005_00003 + M_00005_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux227, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux228 #( - M_00006_00001 + M_00006_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux228, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux229 #( - M_00006_00004 + M_00006_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux229, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux230 #(-1 - M_00006_00007)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux230, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-12])
**VARIABLES**
DISCRETE aux231 #( - M_00006_00005 + M_00006_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux231, [-39,-39,-36,-34,-32,-32,-30,-25,-20,-14,-12,-9,-7,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux232 #( - M_00006_00004 + M_00006_00007)
{-36..39}
**CONSTRAINTS**
w-inintervalset(aux232, [-36,-34,-28,-25,-20,-18,-16,-15,-12,-12,-10,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux233 #( - M_00006_00006 + M_00006_00007)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux233, [-35,-34,-28,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,2,4,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux234 #( - M_00006_00003 + M_00006_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux234, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux235 #( - M_00006_00003 + M_00006_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux235, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux236 #( - M_00006_00002 + M_00006_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux236, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux237 #( - M_00006_00002 + M_00006_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux237, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,36,39,39,43,43])
**VARIABLES**
DISCRETE aux238 #( - M_00006_00001 + M_00006_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux238, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux239 #( - M_00007_00004 + M_00007_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux239, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux240 #( - M_00007_00001 + M_00007_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux240, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux241 #( - M_00007_00005 + M_00007_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux241, [-39,-39,-36,-34,-32,-32,-30,-25,-20,-14,-12,-9,-7,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux242 #( - M_00007_00002 + M_00007_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux242, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,36,39,39,43,43])
**VARIABLES**
DISCRETE aux243 #( - M_00007_00003 + M_00007_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux243, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux244 #( - M_00007_00001 + M_00007_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux244, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux245 #( - M_00007_00002 + M_00007_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux245, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux246 #( - M_00007_00006 + -1)
{-47..-8}
**CONSTRAINTS**
w-inintervalset(aux246, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-11,-8,-8])
**VARIABLES**
DISCRETE aux247 #( - M_00007_00003 + M_00007_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux247, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux248 #( - M_00008_00001 + M_00008_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux248, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux249 #( - M_00008_00002 + M_00008_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux249, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,36,39,39,43,43])
**VARIABLES**
DISCRETE aux250 #( - M_00008_00002 + M_00008_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux250, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux251 #( - M_00008_00003 + M_00008_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux251, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux252 #( - M_00008_00005 + -1)
{-47..-8}
**CONSTRAINTS**
w-inintervalset(aux252, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-11,-8,-8])
**VARIABLES**
DISCRETE aux253 #( - M_00008_00004 + M_00008_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux253, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,7,9,12,14,20,25,30,32,32,34,36,39,39])
**VARIABLES**
DISCRETE aux254 #( - M_00008_00001 + M_00008_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux254, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux255 #( - M_00009_00003 + M_00009_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux255, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,25,30,32,32,34,37,39,40])
**VARIABLES**
DISCRETE aux256 #( - M_00009_00001 + M_00009_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux256, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux257 #( - M_00009_00002 + M_00009_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux257, [-40,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,40,43,44])
**VARIABLES**
DISCRETE aux258 #(-1 - M_00009_00004)
{-48..-8}
**CONSTRAINTS**
w-inintervalset(aux258, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-11,-8,-8])
**VARIABLES**
DISCRETE aux259 #( - M_00009_00001 + M_00009_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux259, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux260 #( - M_00010_00001 + M_00010_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux260, [-44,-43,-40,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux261 #( - M_00010_00002 + M_00010_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux261, [-39,-39,-37,-34,-32,-32,-30,-25,-20,-14,-12,12,14,20,24,30,32,32,34,37,39,39])
**VARIABLES**
DISCRETE aux262 #( - M_00010_00003 + -1)
{-48..-8}
**CONSTRAINTS**
w-inintervalset(aux262, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-11,-8,-8])
**VARIABLES**
DISCRETE aux263 #( - M_00011_00001 + M_00011_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux263, [-39,-39,-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,39])
**VARIABLES**
DISCRETE aux264 #( - M_00011_00002 + -1)
{-48..-4}
**CONSTRAINTS**
w-inintervalset(aux264, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-11,-8,-8,-4,-4])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[1, 3, 21, 47, 10, 7, 39, 46, 27, 12, 37, 11]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux166)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00007, 13, 3)
div(M_00002_00005, 13, 0)
div(M_00002_00002, 13, aux17)
div(M_00002_00003, 13, aux18)
reify(gaceq(M_00003_00009,M_00004_00008), aux19)
reify(gaceq(M_00007_00002,M_00008_00002), aux20)
div(M_00007_00001, 13, aux21)
div(M_00007_00006, 13, aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00007_00003,M_00006_00003), aux24)
reify(gaceq(M_00005_00002,M_00006_00002), aux25)
div(M_00010_00002, 13, aux26)
reify(gaceq(M_00008_00002,M_00009_00002), aux27)
reify(gaceq(M_00008_00003,M_00009_00003), aux28)
reify(gaceq(M_00002_00008,M_00003_00007), aux29)
reify(gaceq(M_00005_00007,M_00006_00006), aux30)
div(M_00002_00004, 13, aux31)
div(M_00002_00006, 13, aux32)
reify(gaceq(M_00004_00005,M_00005_00004), aux33)
reify(gaceq(M_00003_00005,M_00004_00005), aux34)
reify(gaceq(M_00002_00010,M_00003_00009), aux35)
reify(gaceq(M_00010_00003,M_00009_00003), aux36)
reify(gaceq(M_00010_00002,M_00009_00003), aux37)
reify(gaceq(M_00004_00006,M_00005_00005), aux38)
reify(gaceq(M_00004_00001,M_00005_00001), aux39)
div(M_00004_00008, 13, aux40)
div(M_00004_00003, 13, aux41)
div(M_00004_00002, 13, aux42)
div(M_00004_00007, 13, aux43)
reify(gaceq(M_00002_00005,M_00003_00005), aux44)
reify(gaceq(M_00004_00006,M_00005_00006), aux45)
reify(gaceq(M_00003_00008,M_00004_00007), aux46)
div(M_00002_00008, 13, aux47)
div(M_00002_00010, 13, aux48)
div(M_00002_00001, 13, 0)
reify(gaceq(M_00007_00006,M_00008_00005), aux50)
reify(gaceq(M_00008_00004,M_00009_00003), aux51)
reify(gaceq(M_00003_00007,M_00004_00006), aux52)
reify(gaceq(M_00003_00005,M_00004_00004), aux53)
reify(gaceq(M_00005_00001,M_00006_00001), aux54)
reify(gaceq(M_00005_00006,M_00006_00006), aux55)
reify(gaceq(M_00007_00001,M_00008_00001), aux56)
reify(gaceq(M_00004_00004,M_00005_00004), aux57)
reify(gaceq(M_00004_00005,M_00005_00005), aux58)
reify(gaceq(M_00002_00004,M_00003_00004), aux59)
div(M_00003_00001, 13, aux60)
div(M_00005_00008, 13, aux61)
div(M_00005_00001, 13, aux62)
reify(gaceq(M_00005_00003,M_00006_00003), aux63)
reify(gaceq(M_00002_00002,M_00003_00002), aux64)
div(M_00008_00003, 13, aux65)
div(M_00008_00001, 13, aux66)
div(M_00008_00005, 13, aux67)
div(M_00006_00006, 13, aux68)
div(M_00006_00005, 13, aux69)
div(M_00006_00003, 13, aux70)
div(M_00006_00002, 13, aux71)
reify(gaceq(M_00010_00003,M_00011_00002), aux72)
reify(gaceq(M_00010_00001,M_00011_00001), aux73)
reify(gaceq(M_00002_00005,M_00003_00004), aux74)
reify(gaceq(M_00004_00004,M_00005_00003), aux75)
reify(gaceq(M_00002_00007,M_00003_00007), aux76)
reify(gaceq(M_00005_00004,M_00006_00004), aux77)
reify(gaceq(M_00002_00009,M_00003_00009), aux78)
reify(gaceq(M_00002_00003,M_00003_00002), aux79)
reify(gaceq(M_00002_00008,M_00003_00008), aux80)
reify(gaceq(M_00003_00006,M_00004_00006), aux81)
reify(gaceq(M_00004_00007,M_00005_00006), aux82)
reify(gaceq(M_00007_00006,M_00006_00007), aux83)
reify(gaceq(M_00002_00009,M_00003_00008), aux84)
reify(gaceq(M_00007_00005,M_00008_00005), aux85)
reify(gaceq(M_00007_00003,M_00008_00002), aux86)
reify(gaceq(M_00003_00006,M_00004_00005), aux87)
reify(gaceq(M_00008_00003,M_00009_00002), aux88)
reify(gaceq(M_00008_00004,M_00009_00004), aux89)
reify(gaceq(M_00005_00008,M_00006_00007), aux90)
reify(gaceq(M_00010_00001,M_00009_00001), aux91)
reify(gaceq(M_00010_00002,M_00009_00002), aux92)
reify(gaceq(M_00010_00003,M_00009_00004), aux93)
div(M_00006_00004, 13, aux94)
div(M_00006_00001, 13, aux95)
div(M_00006_00007, 13, aux96)
reify(gaceq(M_00002_00003,M_00003_00003), aux97)
div(M_00003_00007, 13, aux98)
div(M_00003_00008, 13, aux99)
div(M_00003_00009, 13, aux100)
div(M_00003_00002, 13, aux101)
div(M_00003_00003, 13, aux102)
reify(gaceq(M_00005_00005,M_00006_00004), aux103)
reify(gaceq(M_00005_00005,M_00006_00005), aux104)
reify(gaceq(M_00003_00003,M_00004_00002), aux105)
reify(gaceq(M_00005_00003,M_00006_00002), aux106)
reify(gaceq(M_00005_00007,M_00006_00007), aux107)
reify(gaceq(M_00003_00001,M_00004_00001), aux108)
reify(gaceq(M_00003_00003,M_00004_00003), aux109)
div(M_00005_00007, 13, aux110)
div(M_00005_00006, 13, aux111)
div(M_00005_00002, 13, aux112)
div(M_00005_00003, 13, aux113)
reify(gaceq(M_00004_00008,M_00005_00008), aux114)
reify(gaceq(M_00004_00003,M_00005_00002), aux115)
reify(gaceq(M_00004_00008,M_00005_00007), aux116)
reify(gaceq(M_00003_00004,M_00004_00004), aux117)
div(M_00007_00002, 13, aux118)
div(M_00007_00004, 13, aux119)
div(M_00007_00003, 13, aux120)
div(M_00007_00005, 13, aux121)
reify(gaceq(M_00007_00002,M_00006_00002), aux122)
reify(gaceq(M_00004_00009,M_00005_00008), aux123)
reify(gaceq(M_00007_00001,M_00006_00001), aux124)
reify(gaceq(M_00008_00005,M_00009_00004), aux125)
reify(gaceq(M_00008_00001,M_00009_00001), aux126)
reify(gaceq(M_00002_00007,M_00003_00006), aux127)
reify(gaceq(M_00003_00004,M_00004_00003), aux128)
reify(gaceq(M_00003_00008,M_00004_00008), aux129)
reify(gaceq(M_00007_00004,M_00008_00003), aux130)
reify(gaceq(M_00005_00004,M_00006_00003), aux131)
reify(gaceq(M_00003_00007,M_00004_00007), aux132)
div(M_00004_00004, 13, aux133)
div(M_00004_00005, 13, aux134)
div(M_00004_00006, 13, aux135)
reify(gaceq(M_00002_00006,M_00003_00006), aux136)
reify(gaceq(M_00003_00002,M_00004_00002), aux137)
reify(gaceq(M_00007_00003,M_00006_00004), aux138)
reify(gaceq(M_00004_00002,M_00005_00002), aux139)
div(M_00008_00004, 13, aux140)
div(M_00008_00002, 13, aux141)
reify(gaceq(M_00007_00004,M_00008_00004), aux142)
reify(gaceq(M_00007_00006,M_00006_00006), aux143)
reify(gaceq(M_00007_00002,M_00006_00003), aux144)
reify(gaceq(M_00005_00006,M_00006_00005), aux145)
reify(gaceq(M_00007_00003,M_00008_00003), aux146)
div(M_00003_00004, 13, aux147)
div(M_00003_00006, 13, aux148)
div(M_00003_00005, 13, aux149)
reify(gaceq(M_00007_00005,M_00008_00004), aux150)
reify(gaceq(M_00002_00004,M_00003_00003), aux151)
div(M_00005_00004, 13, aux152)
div(M_00005_00005, 13, aux153)
reify(gaceq(M_00004_00003,M_00005_00003), aux154)
reify(gaceq(M_00002_00001,M_00003_00001), aux155)
reify(gaceq(M_00007_00005,M_00006_00006), aux156)
div(M_00009_00003, 13, aux157)
div(M_00009_00004, 13, aux158)
div(M_00009_00001, 13, aux159)
div(M_00009_00002, 13, aux160)
div(M_00004_00009, 13, aux161)
div(M_00004_00001, 13, aux162)
reify(gaceq(M_00004_00007,M_00005_00007), aux163)
reify(gaceq(M_00007_00004,M_00006_00004), aux164)
reify(gaceq(M_00007_00004,M_00006_00005), aux165)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7),w-literal(M_00002_00007,39),w-literal(M_00002_00008,46),w-literal(M_00002_00009,27),w-literal(M_00002_00010,12)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)}),watched-and({w-literal(M_00002_00001,3),w-literal(M_00002_00002,21),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,10),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00004,39),w-literal(M_00002_00005,10),w-literal(M_00002_00006,7),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00010,37)})})
watched-or({watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux136,1),w-literal(aux76,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux84,1),w-literal(aux35,1),modulo(aux167,13,0)}),watched-and({w-literal(aux155,1),w-literal(aux79,1),w-literal(aux151,1),w-literal(aux74,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux168,13,0),gaceq(aux17,aux18)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux151,1),w-literal(aux74,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux169,13,0),gaceq(aux18,aux31)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux170,13,0),w-literal(aux32,0)})}),watched-and({w-literal(aux64,1),w-literal(aux97,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux74,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux171,13,0),w-literal(aux31,0)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux74,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux172,13,0),w-literal(aux31,0)})}),watched-and({w-literal(aux155,1),w-literal(aux97,1),w-literal(aux59,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux173,13,0),w-literal(aux17,0)})}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux79,1),w-literal(aux151,1),w-literal(aux74,1),w-literal(aux23,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux174,13,0),w-literal(aux17,0)})}),watched-and({watched-or({w-literal(aux48,0),modulo(aux175,13,0)}),w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux136,1),w-literal(aux76,1),w-literal(aux80,1),w-literal(aux78,1)}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux59,1),w-literal(aux44,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux176,13,0),gaceq(aux18,aux32)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux44,1),w-literal(aux136,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux177,13,0),w-literal(aux31,3)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux136,1),w-literal(aux80,1),w-literal(aux78,1),gaceq(M_00002_00010,M_00003_00007),modulo(aux178,13,0)}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux136,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux179,13,0),w-literal(aux47,3)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux136,1),w-literal(aux76,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux180,13,0),gaceq(aux47,aux14)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux136,1),w-literal(aux76,1),w-literal(aux80,1),w-literal(aux35,1),watched-or({modulo(aux181,13,0),gaceq(aux14,aux48)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux127,1),w-literal(aux29,1),w-literal(aux84,1),w-literal(aux35,1),watched-or({modulo(aux182,13,0),w-literal(aux32,3)})}),watched-and({w-literal(aux155,1),w-literal(aux64,1),w-literal(aux97,1),w-literal(aux59,1),w-literal(aux44,1),w-literal(aux76,1),w-literal(aux80,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux35,1),watched-or({modulo(aux183,13,0),gaceq(aux32,aux14)})})})
watched-or({watched-and({w-literal(aux108,1),w-literal(aux105,1),w-literal(aux128,1),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux184,13,0),gaceq(aux101,aux102)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux185,13,0),gaceq(aux102,aux147)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux186,13,0),gaceq(aux149,aux148)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux81,1),w-literal(aux132,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux19,1),watched-or({modulo(aux187,13,0),gaceq(aux149,aux99)}),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux188,13,0),w-literal(aux100,0)}),w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux81,1),w-literal(aux132,1),w-literal(aux129,1),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux81,1),w-literal(aux129,1),gaceq(M_00003_00009,M_00004_00009),modulo(aux189,13,0),w-literal(M_00004_00007,11)}),watched-and({w-literal(aux137,1),w-literal(aux109,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux190,13,0),gaceq(aux60,aux147)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux191,13,0),gaceq(aux147,aux149)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux109,1),w-literal(aux117,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux192,13,0),gaceq(aux101,aux149)}),w-literal(M_00004_00009,11)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux105,1),w-literal(aux128,1),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux193,13,0),gaceq(aux60,aux101)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux117,1),w-literal(aux34,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux194,13,0),gaceq(aux102,aux148)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux34,1),w-literal(aux81,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux195,13,0),gaceq(aux147,aux98)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux52,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux196,13,0),gaceq(aux148,aux98)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux81,1),w-literal(aux46,1),w-literal(aux19,1),watched-or({modulo(aux197,13,0),gaceq(aux98,aux99)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux132,1),w-literal(aux129,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux198,13,0),gaceq(aux148,aux100)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux108,1),w-literal(aux137,1),w-literal(aux109,1),w-literal(aux117,1),w-literal(aux34,1),w-literal(aux81,1),w-literal(aux132,1),w-literal(aux19,1),watched-or({modulo(aux199,13,0),gaceq(aux99,aux100)}),w-literal(M_00004_00009,11)})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux58,1),w-literal(aux45,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux43,aux40),modulo(aux200,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux58,1),w-literal(aux45,1),w-literal(aux163,1),w-literal(aux123,1),watched-or({gaceq(aux40,aux161),modulo(aux201,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux58,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux135,aux43),modulo(aux202,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux58,1),w-literal(aux163,1),w-literal(aux114,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux135,aux161),modulo(aux203,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux134,aux135),modulo(aux204,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux45,1),w-literal(aux163,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux123,1),watched-or({gaceq(aux134,aux40),modulo(aux205,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux115,1),w-literal(aux75,1),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux162,aux42),modulo(aux206,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux115,1),w-literal(aux75,1),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux42,aux41),modulo(aux207,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux133,aux134),modulo(aux208,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux58,1),w-literal(aux45,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux133,aux43),modulo(aux209,13,0)})}),watched-and({modulo(aux210,13,0),w-literal(aux39,1),w-literal(aux139,1),w-literal(aux154,1),w-literal(aux57,1),w-literal(aux58,1),w-literal(aux45,1),w-literal(aux163,1),w-literal(aux114,1)}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux75,1),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux41,aux133),modulo(aux211,13,0)})}),watched-and({w-literal(aux139,1),w-literal(aux154,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux162,aux133),modulo(aux212,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux154,1),w-literal(aux57,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux38,1),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux42,aux134),modulo(aux213,13,0)})}),watched-and({w-literal(aux39,1),w-literal(aux139,1),w-literal(aux57,1),w-literal(aux58,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux82,1),w-literal(aux116,1),w-literal(aux123,1),watched-or({gaceq(aux41,aux135),modulo(aux214,13,0)})})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux106,1),w-literal(aux131,1),w-literal(aux103,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux215,13,0),gaceq(aux112,aux113)})}),watched-and({w-literal(aux25,1),w-literal(aux63,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux103,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux216,13,0),gaceq(aux62,aux152)})}),watched-and({w-literal(aux54,1),w-literal(aux63,1),w-literal(aux77,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux217,13,0),gaceq(aux112,aux153)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux77,1),w-literal(aux104,1),w-literal(aux55,1),w-literal(aux107,1),modulo(aux218,13,0)}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux77,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux219,13,0),gaceq(aux153,aux111)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux77,1),w-literal(aux104,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux220,13,0),gaceq(aux111,aux110)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux77,1),w-literal(aux55,1),w-literal(aux107,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux221,13,0),gaceq(aux153,aux61)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux77,1),w-literal(aux104,1),w-literal(aux55,1),w-literal(aux90,1),watched-or({modulo(aux222,13,0),gaceq(aux110,aux61)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux103,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux223,13,0),gaceq(aux152,aux153)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux63,1),w-literal(aux104,1),w-literal(aux55,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux90,1),watched-or({modulo(aux224,13,0),gaceq(aux152,aux110)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux106,1),w-literal(aux131,1),w-literal(aux103,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux225,13,0),gaceq(aux62,aux112)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux131,1),w-literal(aux103,1),w-literal(aux145,1),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux226,13,0),gaceq(aux113,aux152)})}),watched-and({w-literal(aux54,1),w-literal(aux25,1),w-literal(aux77,1),w-literal(aux104,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux30,1),w-literal(aux90,1),watched-or({modulo(aux227,13,0),gaceq(aux113,aux111)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux122,1),w-literal(aux24,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux95,aux94),modulo(aux228,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux24,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux94,aux69),modulo(aux229,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux24,1),w-literal(aux164,1),w-literal(aux13,1),w-literal(aux143,1),modulo(aux230,13,0)}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux24,1),w-literal(aux164,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux69,aux68),modulo(aux231,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux24,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux143,1),watched-or({gaceq(aux94,aux96),modulo(aux232,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux24,1),w-literal(aux164,1),w-literal(aux13,1),w-literal(aux83,1),watched-or({gaceq(aux68,aux96),modulo(aux233,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),w-literal(aux138,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux70,aux94),modulo(aux234,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux122,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux164,1),w-literal(aux13,1),w-literal(aux83,1),watched-or({gaceq(aux70,aux68),modulo(aux235,13,0)})}),watched-and({w-literal(aux124,1),w-literal(aux144,1),w-literal(aux138,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux71,aux70),modulo(aux236,13,0)})}),watched-and({w-literal(aux124,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux24,1),w-literal(aux164,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux71,aux69),modulo(aux237,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux144,1),w-literal(aux138,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux83,1),watched-or({gaceq(aux95,aux71),modulo(aux238,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux239,13,0),gaceq(aux119,aux121)}),w-literal(aux56,1),w-literal(aux20,1),w-literal(aux146,1),w-literal(aux150,1),w-literal(aux50,1)}),watched-and({watched-or({modulo(aux240,13,0),gaceq(aux21,aux119)}),w-literal(aux20,1),w-literal(aux146,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux150,1),w-literal(aux50,1)}),watched-and({watched-or({modulo(aux241,13,0),gaceq(aux121,aux22)}),w-literal(aux56,1),w-literal(aux20,1),w-literal(aux146,1),w-literal(aux142,1),w-literal(aux50,1)}),watched-and({watched-or({modulo(aux242,13,0),gaceq(aux118,aux121)}),w-literal(aux56,1),w-literal(aux146,1),w-literal(aux142,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux50,1)}),watched-and({watched-or({modulo(aux243,13,0),gaceq(aux120,aux22)}),w-literal(aux56,1),w-literal(aux20,1),w-literal(aux142,1),w-literal(aux85,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux244,13,0),gaceq(aux21,aux118)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux86,1),w-literal(aux130,1),w-literal(aux150,1),w-literal(aux50,1)}),watched-and({watched-or({modulo(aux245,13,0),gaceq(aux118,aux120)}),w-literal(aux56,1),w-literal(aux86,1),w-literal(aux130,1),w-literal(aux150,1),w-literal(aux50,1)}),watched-and({modulo(aux246,13,0),w-literal(aux56,1),w-literal(aux20,1),w-literal(aux146,1),w-literal(aux142,1),w-literal(aux85,1)}),watched-and({watched-or({modulo(aux247,13,0),gaceq(aux120,aux119)}),w-literal(aux56,1),w-literal(aux20,1),w-literal(aux130,1),w-literal(aux150,1),w-literal(aux50,1)})})
watched-or({watched-and({watched-or({gaceq(aux66,aux141),modulo(aux248,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux88,1),w-literal(aux51,1),w-literal(aux125,1)}),watched-and({watched-or({gaceq(aux141,aux67),modulo(aux249,13,0)}),w-literal(aux126,1),w-literal(aux28,1),w-literal(aux89,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux141,aux65),modulo(aux250,13,0)}),w-literal(aux126,1),w-literal(aux88,1),w-literal(aux51,1),w-literal(aux125,1)}),watched-and({watched-or({gaceq(aux65,aux140),modulo(aux251,13,0)}),w-literal(aux126,1),w-literal(aux27,1),w-literal(aux51,1),w-literal(aux125,1)}),watched-and({w-literal(aux126,1),w-literal(aux27,1),w-literal(aux28,1),w-literal(aux89,1),modulo(aux252,13,0)}),watched-and({watched-or({gaceq(aux140,aux67),modulo(aux253,13,0)}),w-literal(aux126,1),w-literal(aux27,1),w-literal(aux28,1),w-literal(aux125,1)}),watched-and({watched-or({gaceq(aux66,aux140),modulo(aux254,13,0)}),w-literal(aux27,1),w-literal(aux28,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux125,1)})})
watched-or({watched-and({watched-or({modulo(aux255,13,0),gaceq(aux157,aux158)}),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux93,1)}),watched-and({watched-or({modulo(aux256,13,0),gaceq(aux159,aux158)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux92,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux257,13,0),gaceq(aux160,aux157)}),w-literal(aux91,1),w-literal(aux37,1),w-literal(aux93,1)}),watched-and({modulo(aux258,13,0),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux259,13,0),gaceq(aux159,aux160)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux37,1),w-literal(aux93,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux72,1),watched-or({div(M_00010_00001, 13, aux26),modulo(aux260,13,0)})}),watched-and({w-literal(aux73,1),w-literal(aux72,1),watched-or({div(M_00010_00003, 13, aux26),modulo(aux261,13,0)})}),watched-and({w-literal(aux73,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux262,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux166),modulo(aux263,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux264,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux167)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux167)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux168)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux168)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux169)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux169)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux170)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux170)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux171)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux171)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux172)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux172)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux173)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux173)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux174)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux174)
weightedsumleq([-1,1],[M_00002_00010,11],aux175)
weightedsumgeq([-1,1],[M_00002_00010,11],aux175)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux176)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux176)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux177)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux177)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux178)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux178)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux179)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux179)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux180)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux180)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux181)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux181)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux182)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux182)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux183)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux183)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux184)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux184)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux185)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux185)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux186)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux186)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux187)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux187)
weightedsumleq([-1,1],[M_00003_00009,11],aux188)
weightedsumgeq([-1,1],[M_00003_00009,11],aux188)
weightedsumleq([-1,1],[M_00003_00007,11],aux189)
weightedsumgeq([-1,1],[M_00003_00007,11],aux189)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux190)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux190)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux191)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux191)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux192)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux192)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux193)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux193)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux194)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux194)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux195)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux195)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux196)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux196)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux197)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux197)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux198)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux198)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux199)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux199)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux200)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux200)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux201)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux201)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux202)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux202)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux203)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux203)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux204)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux204)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux205)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux205)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux206)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux206)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux207)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux207)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux208)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux208)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux209)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux209)
weightedsumleq([-1,1],[M_00004_00009,-1],aux210)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux210)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux211)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux211)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux212)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux212)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux213)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux213)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux214)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux214)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux215)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux215)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux216)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux216)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux217)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux217)
weightedsumleq([1,-1],[-1,M_00005_00008],aux218)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux218)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux219)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux219)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux220)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux220)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux221)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux221)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux222)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux222)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux223)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux223)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux224)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux224)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux225)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux225)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux226)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux226)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux227)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux227)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux228)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux228)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux229)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux229)
weightedsumleq([1,-1],[-1,M_00006_00007],aux230)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux230)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux231)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux231)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux232)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux232)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux233)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux233)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux234)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux234)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux235)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux235)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux236)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux236)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux237)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux237)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux238)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux238)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux239)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux239)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux240)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux240)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux241)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux241)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux242)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux242)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux243)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux243)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux244)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux244)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux245)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux245)
weightedsumleq([-1,1],[M_00007_00006,-1],aux246)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux246)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux247)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux247)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux248)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux248)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux249)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux249)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux250)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux250)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux251)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux251)
weightedsumleq([-1,1],[M_00008_00005,-1],aux252)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux252)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux253)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux253)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux254)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux254)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux255)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux255)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux256)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux256)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux257)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux257)
weightedsumleq([1,-1],[-1,M_00009_00004],aux258)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux258)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux259)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux259)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux260)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux260)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux261)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux261)
weightedsumleq([-1,1],[M_00010_00003,-1],aux262)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux262)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux263)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux263)
weightedsumleq([-1,1],[M_00011_00002,-1],aux264)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux264)
**EOF**
