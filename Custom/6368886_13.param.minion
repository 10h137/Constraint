MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 192
# CSE_active_eliminated_expressions = 1103
# CSE_active_total_size = 576
**VARIABLES**
DISCRETE M_00002_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [1,1,3,3])
**VARIABLES**
DISCRETE M_00002_00002 #
{3..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [3,3,7,7,9,10,12,12,21,21])
**VARIABLES**
DISCRETE M_00002_00003 #
{21..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00004 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [10,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00005 #
{7..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [7,7,9,10])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,7,9,10,12,12,21,21,27,27,37,37,39,39])
**VARIABLES**
DISCRETE M_00002_00007 #
{39..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [39,39,46,46])
**VARIABLES**
DISCRETE M_00002_00008 #
{27..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00002_00009 #
{12..27}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [12,12,21,21,27,27])
**VARIABLES**
DISCRETE M_00002_00010 #
{9..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00002_00011 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00002_00012 #
{0..9}
**CONSTRAINTS**
w-inintervalset(M_00002_00012, [0,1,3,3,7,7,9,9])
**VARIABLES**
DISCRETE M_00003_00001 #
{1..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [1,1,3,3,7,7,9,10,12,12,21,21])
**VARIABLES**
DISCRETE M_00003_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00003 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [10,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,7,9,10,12,12,21,21,27,27,37,37,39,39])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00007 #
{27..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00008 #
{12..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00009 #
{9..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00003_00010 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00003_00011 #
{0..9}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [0,1,3,3,7,7,9,9])
**VARIABLES**
DISCRETE M_00004_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [1,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00008 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00004_00010 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00005_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [1,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00008 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00008_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00013_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [0,1,3,3,7,7,9,10,12,12,21,21,27,27,37,37,39,39,46,47])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
BOOL aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002/13)
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..3}
DISCRETE aux19 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..2}
BOOL aux20 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux31 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux32 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
DISCRETE aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..3}
DISCRETE aux35 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux40 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux41 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux42 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux45 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
BOOL aux50 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux51 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux52 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux54 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..2}
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux60 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux61 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux62 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux64 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux65 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux66 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux67 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux68 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux69 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux70 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux74 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
BOOL aux77 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux78 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux83 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux88 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux91 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux92 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux97 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux98 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux99 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux100 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux101 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux102 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux105 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux106 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux107 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux111 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux114 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux118 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux119 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..2}
DISCRETE aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux126 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux127 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux132 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux137 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux140 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux141 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux142 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux143 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux148 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux152 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux155 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux156 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux157 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux158 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux159 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux160 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux161 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux162 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux163 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux164 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux165 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
DISCRETE aux166 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux167 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux168 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux169 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux170 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux171 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux172 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux173 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux174 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux175 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux176 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{2..3}
DISCRETE aux177 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
BOOL aux178 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux179 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux181 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux182 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux183 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux184 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux185 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux186 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux187 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux188 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux189 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux190 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux191 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux195 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
DISCRETE aux196 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..2}
BOOL aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux198 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux199 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux200 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux201 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux202 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux203 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux204 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux205 #
{0..3}
DISCRETE aux206 #( - M_00002_00012 + -1)
{-10..-1}
**CONSTRAINTS**
w-inintervalset(aux206, [-10,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux207 #( - M_00002_00001 + M_00002_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux207, [2,2,4,4,6,9,11,11,18,18])
**VARIABLES**
DISCRETE aux208 #( - M_00002_00005 + M_00002_00008)
{17..36}
**CONSTRAINTS**
w-inintervalset(aux208, [17,18,20,20,27,30,32,32,36,36])
**VARIABLES**
DISCRETE aux209 #( - M_00002_00004 + M_00002_00007)
{-8..36}
**CONSTRAINTS**
w-inintervalset(aux209, [-8,-7,-1,0,2,2,7,7,9,9,12,12,18,19,25,25,27,27,29,29,34,34,36,36])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00003 + M_00002_00004)
{-37..26}
**CONSTRAINTS**
w-inintervalset(aux210, [-37,-34,-29,-29,-27,-25,-20,-15,-12,-6,-2,2,6,10,12,12,16,16,18,20,25,26])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00002 + M_00002_00003)
{11..44}
**CONSTRAINTS**
w-inintervalset(aux211, [11,12,14,18,20,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00006 + M_00002_00009)
{-27..20}
**CONSTRAINTS**
w-inintervalset(aux212, [-27,-27,-25,-25,-18,-18,-16,-15,-12,-12,-10,-9,-6,-6,0,0,2,3,5,6,9,9,11,12,14,15,17,18,20,20])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00009 + M_00002_00010)
{-18..25}
**CONSTRAINTS**
w-inintervalset(aux213, [-18,-17,-15,-15,-12,-11,-9,-9,-6,-6,-3,-2,0,0,6,6,9,10,15,16,25,25])
**VARIABLES**
DISCRETE aux214 #( - M_00002_00010 + M_00002_00011)
{-37..28}
**CONSTRAINTS**
w-inintervalset(aux214, [-37,-36,-34,-34,-30,-30,-28,-24,-21,-20,-18,-14,-12,-5,-3,3,6,6,9,12,15,18,25,25,27,28])
**VARIABLES**
DISCRETE aux215 #( - M_00002_00009 + M_00002_00012)
{-27..-3}
**CONSTRAINTS**
w-inintervalset(aux215, [-27,-26,-24,-24,-21,-20,-18,-18,-14,-14,-12,-11,-9,-9,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux216 #( - M_00002_00011 + M_00002_00012)
{-37..9}
**CONSTRAINTS**
w-inintervalset(aux216, [-37,-36,-34,-34,-30,-30,-28,-26,-24,-24,-21,-20,-18,-18,-14,-14,-12,4,6,9])
**VARIABLES**
DISCRETE aux217 #( - M_00002_00008 + M_00002_00009)
{-19..-15}
**CONSTRAINTS**
w-inintervalset(aux217, [-19,-18,-16,-15])
**VARIABLES**
DISCRETE aux218 #( - M_00002_00008 + M_00002_00011)
{-27..-9}
**CONSTRAINTS**
w-inintervalset(aux218, [-27,-24,-20,-15,-12,-12,-10,-9])
**VARIABLES**
DISCRETE aux219 #( - M_00002_00007 + M_00002_00010)
{-30..-9}
**CONSTRAINTS**
w-inintervalset(aux219, [-30,-29,-27,-27,-25,-25,-19,-18,-12,-12,-9,-9])
**VARIABLES**
DISCRETE aux220 #( - M_00002_00002 + M_00002_00005)
{-14..7}
**CONSTRAINTS**
w-inintervalset(aux220, [-14,-14,-12,-11,-5,-5,-3,4,6,7])
**VARIABLES**
DISCRETE aux221 #( - M_00002_00004 + M_00002_00005)
{-40..-3}
**CONSTRAINTS**
w-inintervalset(aux221, [-40,-36,-32,-32,-30,-27,-20,-20,-18,-17,-14,-14,-12,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux222 #( - M_00002_00005 + M_00002_00006)
{-3..32}
**CONSTRAINTS**
w-inintervalset(aux222, [-3,3,5,5,11,12,14,14,17,18,20,20,27,30,32,32])
**VARIABLES**
DISCRETE aux223 #( - M_00002_00007 + M_00002_00008)
{-19..7}
**CONSTRAINTS**
w-inintervalset(aux223, [-19,-19,-12,-12,-9,-9,-7,-7,-2,-2,0,0,7,7])
**VARIABLES**
DISCRETE aux224 #( - M_00002_00001 + M_00002_00004)
{7..46}
**CONSTRAINTS**
w-inintervalset(aux224, [7,7,9,9,11,11,18,18,20,20,24,24,26,26,34,34,36,36,38,38,43,46])
**VARIABLES**
DISCRETE aux225 #( - M_00002_00003 + M_00002_00006)
{-14..18}
**CONSTRAINTS**
w-inintervalset(aux225, [-14,-14,-12,-6,-2,-2,0,0,2,2,6,6,10,10,12,12,16,16,18,18])
**VARIABLES**
DISCRETE aux226 #( - M_00002_00006 + M_00002_00007)
{7..39}
**CONSTRAINTS**
w-inintervalset(aux226, [7,7,9,9,12,12,18,19,25,25,27,27,29,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00001 + M_00003_00004)
{-14..46}
**CONSTRAINTS**
w-inintervalset(aux227, [-14,-14,-12,-11,-9,-9,-5,-5,-3,9,11,12,14,18,20,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00003 + M_00003_00004)
{-40..26}
**CONSTRAINTS**
w-inintervalset(aux228, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,2,6,12,15,20,25,26])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00004 + M_00003_00005)
{-40..32}
**CONSTRAINTS**
w-inintervalset(aux229, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,3,5,6,9,12,14,18,20,20,25,25,27,30,32,32])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00006 + M_00003_00007)
{-19..39}
**CONSTRAINTS**
w-inintervalset(aux230, [-19,-19,-12,-12,-10,-9,-7,-7,-2,-2,0,0,2,2,6,7,9,10,12,12,15,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00006 + M_00003_00009)
{-37..30}
**CONSTRAINTS**
w-inintervalset(aux231, [-37,-36,-34,-34,-30,-27,-25,-25,-19,-15,-12,-9,-6,-6,-3,3,5,6,9,12,14,18,20,20,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00002 + M_00003_00005)
{-40..36}
**CONSTRAINTS**
w-inintervalset(aux232, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,7,9,12,14,18,20,20,24,25,27,30,32,32,34,34,36,36])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00005 + M_00003_00006)
{-3..39}
**CONSTRAINTS**
w-inintervalset(aux233, [-3,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux234 #( - M_00003_00003 + M_00003_00006)
{-40..36}
**CONSTRAINTS**
w-inintervalset(aux234, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,0,2,2,6,7,9,12,15,19,25,25,27,27,29,29,34,34,36,36])
**VARIABLES**
DISCRETE aux235 #( - M_00003_00002 + M_00003_00003)
{-37..44}
**CONSTRAINTS**
w-inintervalset(aux235, [-37,-34,-29,-29,-27,-25,-20,-15,-12,-6,-2,3,5,12,14,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux236 #( - M_00003_00001 + M_00003_00002)
{-7..44}
**CONSTRAINTS**
w-inintervalset(aux236, [-7,9,11,12,14,18,20,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux237 #( - M_00003_00004 + M_00003_00007)
{-20..39}
**CONSTRAINTS**
w-inintervalset(aux237, [-20,-19,-12,-12,-10,-7,-2,0,2,2,6,7,9,10,12,12,15,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux238 #( - M_00003_00005 + M_00003_00008)
{-27..39}
**CONSTRAINTS**
w-inintervalset(aux238, [-27,-27,-25,-25,-18,-18,-16,-15,-12,-12,-10,-9,-6,-6,-2,-2,0,0,2,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux239 #( - M_00003_00011 + -1)
{-10..-1}
**CONSTRAINTS**
w-inintervalset(aux239, [-10,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux240 #( - M_00003_00008 + M_00003_00009)
{-37..25}
**CONSTRAINTS**
w-inintervalset(aux240, [-37,-36,-34,-34,-30,-27,-25,-25,-19,-15,-12,-9,-6,-6,-3,-2,0,0,6,6,9,10,15,16,25,25])
**VARIABLES**
DISCRETE aux241 #( - M_00003_00009 + M_00003_00010)
{-37..28}
**CONSTRAINTS**
w-inintervalset(aux241, [-37,-36,-34,-34,-30,-30,-28,-24,-21,-20,-18,-14,-12,-5,-3,3,6,6,9,12,15,18,25,25,27,28])
**VARIABLES**
DISCRETE aux242 #( - M_00003_00008 + M_00003_00011)
{-46..-3}
**CONSTRAINTS**
w-inintervalset(aux242, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-30,-28,-26,-24,-24,-21,-20,-18,-18,-14,-14,-12,-11,-9,-9,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux243 #( - M_00003_00010 + M_00003_00011)
{-37..9}
**CONSTRAINTS**
w-inintervalset(aux243, [-37,-36,-34,-34,-30,-30,-28,-26,-24,-24,-21,-20,-18,-18,-14,-14,-12,4,6,9])
**VARIABLES**
DISCRETE aux244 #( - M_00003_00007 + M_00003_00008)
{-34..7}
**CONSTRAINTS**
w-inintervalset(aux244, [-34,-34,-27,-27,-25,-25,-19,-18,-16,-15,-12,-12,-10,-9,-7,-6,-2,-2,0,0,2,2,7,7])
**VARIABLES**
DISCRETE aux245 #( - M_00003_00007 + M_00003_00010)
{-46..10}
**CONSTRAINTS**
w-inintervalset(aux245, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-20,-15,-12,-12,-10,-9,-6,-6,-2,-2,0,0,10,10])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00010 + -1)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux246, [-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00008 + M_00004_00009)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux247, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,18,20,21,24,28,30,30,34,34,36,37])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00009 + M_00004_00010)
{-37..28}
**CONSTRAINTS**
w-inintervalset(aux248, [-37,-36,-34,-34,-30,-30,-28,-24,-21,-20,-18,-14,-12,12,14,18,20,21,24,28])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00007 + M_00004_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux249, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00007 + M_00004_00010)
{-46..10}
**CONSTRAINTS**
w-inintervalset(aux250, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,10])
**VARIABLES**
DISCRETE aux251 #( - M_00004_00006 + M_00004_00007)
{-46..39}
**CONSTRAINTS**
w-inintervalset(aux251, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux252 #( - M_00004_00006 + M_00004_00009)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux252, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,3,5,6,9,12,14,18,20,20,25,25,27,28,30,30])
**VARIABLES**
DISCRETE aux253 #( - M_00004_00002 + M_00004_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux253, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,12,14,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux254 #( - M_00004_00003 + M_00004_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux254, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,3,5,12,14,20,25,30,32,32,34,40])
**VARIABLES**
DISCRETE aux255 #( - M_00004_00005 + M_00004_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux255, [-39,-39,-37,-36,-34,-34,-32,-32,-30,-27,-25,-25,-20,-14,-12,-9,-7,-5,-3,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux256 #( - M_00004_00005 + M_00004_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux256, [-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux257 #( - M_00004_00001 + M_00004_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux257, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux258 #( - M_00004_00004 + M_00004_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux258, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux259 #( - M_00004_00002 + M_00004_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux259, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,7,9,12,14,20,24,25,27,30,32,32,34,34,36,37,39,39,43,43])
**VARIABLES**
DISCRETE aux260 #( - M_00004_00001 + M_00004_00002)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux260, [-37,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux261 #( - M_00004_00003 + M_00004_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux261, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux262 #( - M_00004_00004 + M_00004_00007)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux262, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00003 + M_00005_00004)
{-47..40}
**CONSTRAINTS**
w-inintervalset(aux263, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,3,5,12,14,20,25,30,32,32,34,40])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00001 + M_00005_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux264, [-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00002 + M_00005_00005)
{-47..43}
**CONSTRAINTS**
w-inintervalset(aux265, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,7,9,12,14,20,24,25,27,30,32,32,34,34,36,37,39,39,43,43])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00003 + M_00005_00006)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux266, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,3,5,7,9,12,14,20,25,25,27,30,32,32,34,34,36,37,39,39])
**VARIABLES**
DISCRETE aux267 #(-1 - M_00005_00009)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux267, [-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux268 #( - M_00005_00006 + M_00005_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux268, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux269 #( - M_00005_00007 + M_00005_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux269, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux270 #( - M_00005_00006 + M_00005_00009)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux270, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,18,20,21,24,28,30,30,34,34,36,37])
**VARIABLES**
DISCRETE aux271 #( - M_00005_00008 + M_00005_00009)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux271, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,18,20,21,24,28,30,30,34,34,36,37])
**VARIABLES**
DISCRETE aux272 #( - M_00005_00005 + M_00005_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux272, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux273 #( - M_00005_00005 + M_00005_00008)
{-46..39}
**CONSTRAINTS**
w-inintervalset(aux273, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39])
**VARIABLES**
DISCRETE aux274 #( - M_00005_00001 + M_00005_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux274, [-44,-43,-40,-34,-32,-32,-30,-24,-20,-14,-12,12,14,20,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux275 #( - M_00005_00002 + M_00005_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux275, [-40,-34,-32,-32,-30,-25,-20,-14,-12,-5,-3,12,14,20,24,30,32,32,34,40,43,44])
**VARIABLES**
DISCRETE aux276 #( - M_00005_00004 + M_00005_00005)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux276, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39])
**VARIABLES**
DISCRETE aux277 #( - M_00005_00004 + M_00005_00007)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux277, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00002 + M_00006_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux278, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00001 + M_00006_00004)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux279, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,46])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00001 + M_00006_00002)
{-44..47}
**CONSTRAINTS**
w-inintervalset(aux280, [-44,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux281 #( - M_00006_00002 + M_00006_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux281, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux282 #(-1 - M_00006_00008)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux282, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux283 #( - M_00006_00005 + M_00006_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux283, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux284 #( - M_00006_00006 + M_00006_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux284, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux285 #( - M_00006_00005 + M_00006_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux285, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux286 #( - M_00006_00007 + M_00006_00008)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux286, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux287 #( - M_00006_00004 + M_00006_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux287, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux288 #( - M_00006_00004 + M_00006_00007)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux288, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux289 #( - M_00006_00003 + M_00006_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux289, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux290 #( - M_00006_00003 + M_00006_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux290, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux291 #( - M_00007_00004 + M_00007_00007)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux291, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux292 #( - M_00007_00002 + M_00007_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux292, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00004 + M_00007_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux293, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00006 + M_00007_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux294, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux295 #( - M_00007_00007 + -1)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux295, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux296 #( - M_00007_00003 + M_00007_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux296, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux297 #( - M_00007_00001 + M_00007_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux297, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux298 #( - M_00007_00003 + M_00007_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux298, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux299 #( - M_00007_00005 + M_00007_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux299, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux300 #( - M_00007_00001 + M_00007_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux300, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux301 #( - M_00007_00002 + M_00007_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux301, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux302 #( - M_00008_00001 + M_00008_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux302, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux303 #( - M_00008_00005 + M_00008_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux303, [-46,-45,-43,-43,-39,-36,-34,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux304 #( - M_00008_00004 + M_00008_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux304, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux305 #( - M_00008_00003 + M_00008_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux305, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux306 #( - M_00008_00002 + M_00008_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux306, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux307 #( - M_00008_00001 + M_00008_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux307, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux308 #( - M_00008_00006 + -1)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux308, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux309 #( - M_00008_00003 + M_00008_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux309, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux310 #( - M_00008_00002 + M_00008_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux310, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux311 #( - M_00009_00001 + M_00009_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux311, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux312 #(-1 - M_00009_00005)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux312, [-47,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux313 #( - M_00009_00001 + M_00009_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux313, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux314 #( - M_00009_00002 + M_00009_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux314, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux315 #( - M_00009_00002 + M_00009_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux315, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux316 #( - M_00009_00003 + M_00009_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux316, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux317 #( - M_00009_00004 + M_00009_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux317, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux318 #( - M_00010_00002 + M_00010_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux318, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux319 #( - M_00010_00003 + M_00010_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux319, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux320 #( - M_00010_00001 + M_00010_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux320, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux321 #( - M_00010_00001 + M_00010_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux321, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux322 #( - M_00010_00004 + -1)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux322, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux323 #( - M_00011_00001 + M_00011_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux323, [-47,-43,-40,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,40,43,47])
**VARIABLES**
DISCRETE aux324 #( - M_00011_00002 + M_00011_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux324, [-39,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,39])
**VARIABLES**
DISCRETE aux325 #( - M_00011_00003 + -1)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux325, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux326 #( - M_00012_00001 + M_00012_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux326, [-39,-34,-32,-32,-30,-24,-21,-14,-12,12,14,21,24,30,32,32,34,39])
**VARIABLES**
DISCRETE aux327 #( - M_00012_00002 + -1)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux327, [-48,-47,-40,-40,-38,-38,-28,-28,-22,-22,-13,-13,-11,-10,-8,-8,-4,-4,-2,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[1, 3, 21, 47, 10, 7, 39, 46, 27, 12, 37, 0, 9]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux205)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00008, 13, aux14)
div(M_00002_00007, 13, 3)
div(M_00002_00005, 13, 0)
div(M_00002_00002, 13, aux17)
div(M_00002_00003, 13, aux18)
div(M_00002_00011, 13, aux19)
reify(gaceq(M_00003_00009,M_00004_00008), aux20)
div(M_00007_00001, 13, aux21)
div(M_00007_00007, 13, aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00007_00002,M_00006_00002), aux24)
div(M_00010_00004, 13, aux25)
div(M_00010_00001, 13, aux26)
div(M_00010_00003, 13, aux27)
div(M_00010_00002, 13, aux28)
reify(gaceq(M_00008_00004,M_00009_00004), aux29)
reify(gaceq(M_00004_00004,M_00005_00004), aux30)
reify(gaceq(M_00002_00008,M_00003_00007), aux31)
reify(gaceq(M_00005_00007,M_00006_00006), aux32)
div(M_00002_00004, 13, aux33)
div(M_00002_00006, 13, aux34)
div(M_00002_00009, 13, aux35)
reify(gaceq(M_00010_00001,M_00009_00001), aux36)
reify(gaceq(M_00003_00006,M_00004_00006), aux37)
reify(gaceq(M_00004_00005,M_00005_00004), aux38)
reify(gaceq(M_00010_00004,M_00009_00005), aux39)
reify(gaceq(M_00003_00002,M_00004_00002), aux40)
reify(gaceq(M_00002_00010,M_00003_00009), aux41)
reify(gaceq(M_00002_00008,M_00003_00008), aux42)
reify(gaceq(M_00010_00004,M_00009_00004), aux43)
reify(gaceq(M_00010_00002,M_00009_00003), aux44)
reify(gaceq(M_00004_00006,M_00005_00005), aux45)
div(M_00004_00008, 13, aux46)
div(M_00004_00009, 13, aux47)
div(M_00004_00003, 13, aux48)
div(M_00004_00002, 13, aux49)
reify(gaceq(M_00007_00007,M_00006_00008), aux50)
reify(gaceq(M_00005_00004,M_00006_00004), aux51)
reify(gaceq(M_00003_00008,M_00004_00007), aux52)
reify(gaceq(M_00004_00007,M_00005_00007), aux53)
reify(gaceq(M_00004_00010,M_00005_00009), aux54)
div(M_00002_00010, 13, aux55)
div(M_00002_00012, 13, 0)
div(M_00002_00001, 13, 0)
reify(gaceq(M_00011_00003,M_00012_00002), aux58)
reify(gaceq(M_00011_00001,M_00012_00001), aux59)
reify(gaceq(M_00005_00005,M_00006_00005), aux60)
reify(gaceq(M_00003_00008,M_00004_00008), aux61)
reify(gaceq(M_00007_00006,M_00008_00005), aux62)
reify(gaceq(M_00008_00004,M_00009_00003), aux63)
reify(gaceq(M_00007_00003,M_00006_00003), aux64)
reify(gaceq(M_00003_00007,M_00004_00006), aux65)
reify(gaceq(M_00005_00003,M_00006_00003), aux66)
reify(gaceq(M_00003_00005,M_00004_00004), aux67)
reify(gaceq(M_00005_00007,M_00006_00007), aux68)
reify(gaceq(M_00002_00003,M_00003_00003), aux69)
reify(gaceq(M_00003_00011,M_00004_00010), aux70)
reify(gaceq(M_00010_00004,M_00011_00003), aux71)
reify(gaceq(M_00010_00001,M_00011_00001), aux72)
reify(gaceq(M_00010_00002,M_00011_00002), aux73)
reify(gaceq(M_00002_00006,M_00003_00006), aux74)
div(M_00003_00011, 13, 0)
div(M_00003_00001, 13, aux76)
reify(gaceq(M_00003_00004,M_00004_00004), aux77)
reify(gaceq(M_00007_00002,M_00008_00002), aux78)
div(M_00005_00001, 13, aux79)
div(M_00005_00009, 13, aux80)
div(M_00008_00001, 13, aux81)
div(M_00008_00006, 13, aux82)
reify(gaceq(M_00004_00006,M_00005_00006), aux83)
div(M_00006_00007, 13, aux84)
div(M_00006_00006, 13, aux85)
div(M_00006_00003, 13, aux86)
div(M_00006_00002, 13, aux87)
reify(gaceq(M_00005_00009,M_00006_00008), aux88)
reify(gaceq(M_00010_00003,M_00011_00003), aux89)
reify(gaceq(M_00010_00003,M_00011_00002), aux90)
reify(gaceq(M_00002_00005,M_00003_00004), aux91)
reify(gaceq(M_00010_00002,M_00009_00002), aux92)
reify(gaceq(M_00010_00003,M_00009_00003), aux93)
reify(gaceq(M_00004_00004,M_00005_00003), aux94)
reify(gaceq(M_00002_00003,M_00003_00002), aux95)
reify(gaceq(M_00002_00011,M_00003_00011), aux96)
reify(gaceq(M_00002_00009,M_00003_00009), aux97)
reify(gaceq(M_00002_00002,M_00003_00002), aux98)
reify(gaceq(M_00002_00010,M_00003_00010), aux99)
reify(gaceq(M_00004_00001,M_00005_00001), aux100)
reify(gaceq(M_00004_00007,M_00005_00006), aux101)
reify(gaceq(M_00007_00001,M_00006_00001), aux102)
div(M_00009_00004, 13, aux103)
div(M_00009_00002, 13, aux104)
reify(gaceq(M_00003_00005,M_00004_00005), aux105)
reify(gaceq(M_00007_00006,M_00006_00007), aux106)
reify(gaceq(M_00002_00009,M_00003_00008), aux107)
reify(gaceq(M_00007_00006,M_00008_00006), aux108)
reify(gaceq(M_00007_00003,M_00008_00002), aux109)
div(M_00011_00002, 13, aux110)
reify(gaceq(M_00003_00006,M_00004_00005), aux111)
reify(gaceq(M_00008_00003,M_00009_00002), aux112)
reify(gaceq(M_00008_00005,M_00009_00005), aux113)
reify(gaceq(M_00005_00008,M_00006_00007), aux114)
reify(gaceq(M_00010_00003,M_00009_00004), aux115)
div(M_00006_00004, 13, aux116)
div(M_00006_00005, 13, aux117)
reify(gaceq(M_00004_00003,M_00005_00003), aux118)
reify(gaceq(M_00002_00007,M_00003_00007), aux119)
div(M_00006_00001, 13, aux120)
div(M_00006_00008, 13, aux121)
div(M_00003_00010, 13, aux122)
div(M_00003_00009, 13, aux123)
div(M_00003_00002, 13, aux124)
div(M_00003_00003, 13, aux125)
reify(gaceq(M_00004_00002,M_00005_00002), aux126)
reify(gaceq(M_00005_00005,M_00006_00004), aux127)
reify(gaceq(M_00003_00010,M_00004_00010), aux128)
reify(gaceq(M_00003_00003,M_00004_00002), aux129)
reify(gaceq(M_00005_00003,M_00006_00002), aux130)
reify(gaceq(M_00005_00008,M_00006_00008), aux131)
reify(gaceq(M_00003_00007,M_00004_00007), aux132)
div(M_00005_00007, 13, aux133)
div(M_00005_00008, 13, aux134)
div(M_00005_00002, 13, aux135)
div(M_00005_00003, 13, aux136)
reify(gaceq(M_00005_00006,M_00006_00006), aux137)
reify(gaceq(M_00004_00009,M_00005_00009), aux138)
reify(gaceq(M_00004_00003,M_00005_00002), aux139)
reify(gaceq(M_00005_00002,M_00006_00002), aux140)
reify(gaceq(M_00002_00004,M_00003_00004), aux141)
reify(gaceq(M_00002_00001,M_00003_00001), aux142)
reify(gaceq(M_00004_00008,M_00005_00007), aux143)
div(M_00007_00002, 13, aux144)
div(M_00007_00003, 13, aux145)
div(M_00007_00006, 13, aux146)
div(M_00007_00005, 13, aux147)
reify(gaceq(M_00004_00009,M_00005_00008), aux148)
reify(gaceq(M_00008_00003,M_00009_00003), aux149)
reify(gaceq(M_00008_00005,M_00009_00004), aux150)
div(M_00007_00004, 13, aux151)
reify(gaceq(M_00002_00007,M_00003_00006), aux152)
reify(gaceq(M_00003_00004,M_00004_00003), aux153)
reify(gaceq(M_00007_00004,M_00008_00003), aux154)
reify(gaceq(M_00003_00003,M_00004_00003), aux155)
reify(gaceq(M_00003_00009,M_00004_00009), aux156)
reify(gaceq(M_00005_00004,M_00006_00003), aux157)
div(M_00004_00007, 13, aux158)
reify(gaceq(M_00008_00001,M_00009_00001), aux159)
div(M_00004_00004, 13, aux160)
div(M_00004_00005, 13, aux161)
div(M_00004_00006, 13, aux162)
reify(gaceq(M_00002_00012,M_00003_00011), aux163)
reify(gaceq(M_00008_00006,M_00009_00005), aux164)
reify(gaceq(M_00007_00003,M_00006_00004), aux165)
div(M_00008_00003, 13, aux166)
div(M_00008_00004, 13, aux167)
div(M_00008_00005, 13, aux168)
div(M_00008_00002, 13, aux169)
reify(gaceq(M_00008_00002,M_00009_00002), aux170)
reify(gaceq(M_00002_00011,M_00003_00010), aux171)
reify(gaceq(M_00007_00005,M_00008_00005), aux172)
reify(gaceq(M_00007_00007,M_00006_00007), aux173)
reify(gaceq(M_00007_00002,M_00006_00003), aux174)
reify(gaceq(M_00005_00006,M_00006_00005), aux175)
div(M_00003_00007, 13, aux176)
div(M_00003_00008, 13, aux177)
reify(gaceq(M_00007_00004,M_00008_00004), aux178)
div(M_00003_00004, 13, aux179)
div(M_00003_00006, 13, aux180)
div(M_00003_00005, 13, aux181)
reify(gaceq(M_00007_00007,M_00008_00006), aux182)
reify(gaceq(M_00007_00005,M_00008_00004), aux183)
reify(gaceq(M_00003_00001,M_00004_00001), aux184)
reify(gaceq(M_00002_00004,M_00003_00003), aux185)
reify(gaceq(M_00007_00005,M_00006_00005), aux186)
div(M_00005_00004, 13, aux187)
div(M_00005_00005, 13, aux188)
div(M_00005_00006, 13, aux189)
reify(gaceq(M_00005_00001,M_00006_00001), aux190)
reify(gaceq(M_00007_00005,M_00006_00006), aux191)
div(M_00009_00005, 13, aux192)
div(M_00009_00003, 13, aux193)
div(M_00009_00001, 13, aux194)
div(M_00004_00001, 13, aux195)
div(M_00004_00010, 13, aux196)
reify(gaceq(M_00004_00008,M_00005_00008), aux197)
reify(gaceq(M_00007_00004,M_00006_00005), aux198)
reify(gaceq(M_00007_00003,M_00008_00003), aux199)
reify(gaceq(M_00002_00005,M_00003_00005), aux200)
reify(gaceq(M_00003_00010,M_00004_00009), aux201)
reify(gaceq(M_00007_00001,M_00008_00001), aux202)
reify(gaceq(M_00004_00005,M_00005_00005), aux203)
reify(gaceq(M_00007_00004,M_00006_00004), aux204)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,10),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7),w-literal(M_00002_00007,39),w-literal(M_00002_00008,46),w-literal(M_00002_00009,27),w-literal(M_00002_00010,9),w-literal(M_00002_00012,0),w-literal(M_00002_00011,37)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7),w-literal(M_00002_00007,39),w-literal(M_00002_00008,46),w-literal(M_00002_00009,27),w-literal(M_00002_00010,12),w-literal(M_00002_00011,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,3),w-literal(M_00002_00002,21),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00004,39),w-literal(M_00002_00005,10),w-literal(M_00002_00006,7),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39),w-literal(M_00002_00007,46),w-literal(M_00002_00008,27),w-literal(M_00002_00009,12),w-literal(M_00002_00011,0),w-literal(M_00002_00010,37),w-literal(M_00002_00012,9)})})
watched-or({watched-and({modulo(aux206,13,0),w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux42,1),w-literal(aux97,1),w-literal(aux99,1),w-literal(aux96,1)}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux95,1),w-literal(aux185,1),w-literal(aux91,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux207,13,0),w-literal(aux17,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux74,1),w-literal(aux119,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),modulo(aux208,13,0)}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux200,1),w-literal(aux74,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux209,13,0),w-literal(aux33,3)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux185,1),w-literal(aux91,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux210,13,0),gaceq(aux18,aux33)})}),watched-and({w-literal(aux142,1),w-literal(aux95,1),w-literal(aux185,1),w-literal(aux91,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux211,13,0),gaceq(aux17,aux18)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux119,1),w-literal(aux42,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux212,13,0),gaceq(aux34,aux35)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux42,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux213,13,0),gaceq(aux35,aux55)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux42,1),w-literal(aux97,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux214,13,0),gaceq(aux55,aux19)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux42,1),w-literal(aux99,1),w-literal(aux96,1),gaceq(M_00002_00012,M_00003_00009),watched-or({modulo(aux215,13,0),w-literal(aux35,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux42,1),w-literal(aux97,1),w-literal(aux99,1),w-literal(aux163,1),watched-or({modulo(aux216,13,0),w-literal(aux19,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux217,13,0),gaceq(aux14,aux35)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux119,1),w-literal(aux97,1),w-literal(aux99,1),gaceq(M_00002_00011,M_00003_00008),w-literal(aux163,1),watched-or({modulo(aux218,13,0),gaceq(aux14,aux19)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux42,1),w-literal(aux97,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux171,1),w-literal(aux163,1),modulo(aux219,13,0)}),watched-and({w-literal(aux142,1),w-literal(aux69,1),w-literal(aux141,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux220,13,0),w-literal(aux17,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux91,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux221,13,0),w-literal(aux33,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux222,13,0),w-literal(aux34,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux74,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux223,13,0),w-literal(aux14,3)})}),watched-and({w-literal(aux98,1),w-literal(aux69,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux91,1),w-literal(aux23,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux224,13,0),w-literal(aux33,0)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux141,1),w-literal(aux200,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux225,13,0),gaceq(aux18,aux34)})}),watched-and({w-literal(aux142,1),w-literal(aux98,1),w-literal(aux69,1),w-literal(aux141,1),w-literal(aux200,1),w-literal(aux152,1),w-literal(aux31,1),w-literal(aux107,1),w-literal(aux41,1),w-literal(aux171,1),w-literal(aux163,1),watched-or({modulo(aux226,13,0),w-literal(aux34,3)})})})
watched-or({watched-and({w-literal(aux40,1),w-literal(aux155,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux67,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux227,13,0),gaceq(aux76,aux179)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux153,1),w-literal(aux67,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux228,13,0),gaceq(aux125,aux179)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux67,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux229,13,0),gaceq(aux179,aux181)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux230,13,0),gaceq(aux180,aux176)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux132,1),w-literal(aux61,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux231,13,0),gaceq(aux180,aux123)})}),watched-and({w-literal(aux184,1),w-literal(aux155,1),w-literal(aux77,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux232,13,0),gaceq(aux124,aux181)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux233,13,0),gaceq(aux181,aux180)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux77,1),w-literal(aux105,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux234,13,0),gaceq(aux125,aux180)})}),watched-and({w-literal(aux184,1),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux67,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux235,13,0),gaceq(aux124,aux125)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux129,1),w-literal(aux153,1),w-literal(aux67,1),w-literal(aux111,1),w-literal(aux65,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux236,13,0),gaceq(aux76,aux124)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux105,1),w-literal(aux37,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux237,13,0),gaceq(aux179,aux176)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux37,1),w-literal(aux132,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux238,13,0),gaceq(aux181,aux177)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux132,1),w-literal(aux61,1),w-literal(aux156,1),w-literal(aux128,1),modulo(aux239,13,0)}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux132,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux240,13,0),gaceq(aux177,aux123)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux132,1),w-literal(aux61,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux241,13,0),gaceq(aux123,aux122)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux132,1),w-literal(aux156,1),w-literal(aux128,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux242,13,0),w-literal(aux177,0)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux132,1),w-literal(aux61,1),w-literal(aux156,1),w-literal(aux70,1),watched-or({modulo(aux243,13,0),w-literal(aux122,0)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux52,1),w-literal(aux20,1),w-literal(aux201,1),w-literal(aux70,1),watched-or({modulo(aux244,13,0),gaceq(aux176,aux177)})}),watched-and({w-literal(aux184,1),w-literal(aux40,1),w-literal(aux155,1),w-literal(aux77,1),w-literal(aux105,1),w-literal(aux37,1),w-literal(aux61,1),w-literal(aux156,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux70,1),watched-or({modulo(aux245,13,0),gaceq(aux176,aux122)})})})
watched-or({watched-and({modulo(aux246,13,0),w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux83,1),w-literal(aux53,1),w-literal(aux197,1),w-literal(aux138,1)}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux83,1),w-literal(aux53,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux46,aux47),modulo(aux247,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux83,1),w-literal(aux53,1),w-literal(aux197,1),w-literal(aux54,1),watched-or({gaceq(aux47,aux196),modulo(aux248,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux83,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux158,aux46),modulo(aux249,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux83,1),w-literal(aux197,1),w-literal(aux138,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux158,aux196),modulo(aux250,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux162,aux158),modulo(aux251,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux203,1),w-literal(aux53,1),w-literal(aux197,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux54,1),watched-or({gaceq(aux162,aux47),modulo(aux252,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux139,1),w-literal(aux94,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux49,aux48),modulo(aux253,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux94,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux48,aux160),modulo(aux254,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux161,aux162),modulo(aux255,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux30,1),w-literal(aux83,1),w-literal(aux53,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux161,aux46),modulo(aux256,13,0)})}),watched-and({w-literal(aux126,1),w-literal(aux118,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux195,aux160),modulo(aux257,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux160,aux161),modulo(aux258,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux118,1),w-literal(aux30,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux49,aux161),modulo(aux259,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux139,1),w-literal(aux94,1),w-literal(aux38,1),w-literal(aux45,1),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux195,aux49),modulo(aux260,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux30,1),w-literal(aux203,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux101,1),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux48,aux162),modulo(aux261,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux203,1),w-literal(aux83,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux143,1),w-literal(aux148,1),w-literal(aux54,1),watched-or({gaceq(aux160,aux158),modulo(aux262,13,0)})})})
watched-or({watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux157,1),w-literal(aux127,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux263,13,0),gaceq(aux136,aux187)})}),watched-and({w-literal(aux140,1),w-literal(aux66,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux127,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux264,13,0),gaceq(aux79,aux187)})}),watched-and({w-literal(aux190,1),w-literal(aux66,1),w-literal(aux51,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux265,13,0),gaceq(aux135,aux188)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux51,1),w-literal(aux60,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux266,13,0),gaceq(aux136,aux189)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux60,1),w-literal(aux137,1),w-literal(aux68,1),w-literal(aux131,1),modulo(aux267,13,0)}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux60,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux268,13,0),gaceq(aux189,aux133)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux60,1),w-literal(aux137,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux269,13,0),gaceq(aux133,aux134)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux60,1),w-literal(aux68,1),w-literal(aux131,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux270,13,0),gaceq(aux189,aux80)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux60,1),w-literal(aux137,1),w-literal(aux68,1),w-literal(aux88,1),watched-or({modulo(aux271,13,0),gaceq(aux134,aux80)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux272,13,0),gaceq(aux188,aux189)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux51,1),w-literal(aux137,1),w-literal(aux68,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux88,1),watched-or({modulo(aux273,13,0),gaceq(aux188,aux134)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux130,1),w-literal(aux157,1),w-literal(aux127,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux274,13,0),gaceq(aux79,aux135)})}),watched-and({w-literal(aux190,1),w-literal(aux130,1),w-literal(aux157,1),w-literal(aux127,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux275,13,0),gaceq(aux135,aux136)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux127,1),w-literal(aux175,1),w-literal(aux32,1),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux276,13,0),gaceq(aux187,aux188)})}),watched-and({w-literal(aux190,1),w-literal(aux140,1),w-literal(aux66,1),w-literal(aux60,1),w-literal(aux137,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux114,1),w-literal(aux88,1),watched-or({modulo(aux277,13,0),gaceq(aux187,aux133)})})})
watched-or({watched-and({w-literal(aux102,1),w-literal(aux174,1),w-literal(aux165,1),w-literal(aux198,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux87,aux86),modulo(aux278,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux198,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux120,aux116),modulo(aux279,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux174,1),w-literal(aux165,1),w-literal(aux198,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux120,aux87),modulo(aux280,13,0)})}),watched-and({w-literal(aux102,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux64,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux87,aux117),modulo(aux281,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux204,1),w-literal(aux186,1),w-literal(aux13,1),w-literal(aux173,1),modulo(aux282,13,0)}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux204,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux117,aux85),modulo(aux283,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux204,1),w-literal(aux186,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux85,aux84),modulo(aux284,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux204,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux173,1),watched-or({gaceq(aux117,aux121),modulo(aux285,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux204,1),w-literal(aux186,1),w-literal(aux13,1),w-literal(aux50,1),watched-or({gaceq(aux84,aux121),modulo(aux286,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),w-literal(aux198,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux116,aux117),modulo(aux287,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux64,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux186,1),w-literal(aux13,1),w-literal(aux50,1),watched-or({gaceq(aux116,aux84),modulo(aux288,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux165,1),w-literal(aux198,1),w-literal(aux191,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux86,aux116),modulo(aux289,13,0)})}),watched-and({w-literal(aux102,1),w-literal(aux24,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux204,1),w-literal(aux186,1),w-literal(aux106,1),w-literal(aux50,1),watched-or({gaceq(aux86,aux85),modulo(aux290,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux291,13,0),gaceq(aux151,aux22)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux199,1),w-literal(aux172,1),w-literal(aux108,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux292,13,0),gaceq(aux144,aux145)}),w-literal(aux202,1),w-literal(aux109,1),w-literal(aux154,1),w-literal(aux183,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux293,13,0),gaceq(aux151,aux147)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux199,1),w-literal(aux183,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux146,aux22)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux199,1),w-literal(aux178,1),w-literal(aux172,1),w-literal(aux182,1)}),watched-and({modulo(aux295,13,0),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux199,1),w-literal(aux178,1),w-literal(aux172,1),w-literal(aux108,1)}),watched-and({watched-or({modulo(aux296,13,0),gaceq(aux145,aux146)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux178,1),w-literal(aux172,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux297,13,0),gaceq(aux21,aux151)}),w-literal(aux78,1),w-literal(aux199,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux183,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux298,13,0),gaceq(aux145,aux151)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux154,1),w-literal(aux183,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux299,13,0),gaceq(aux147,aux146)}),w-literal(aux202,1),w-literal(aux78,1),w-literal(aux199,1),w-literal(aux178,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux300,13,0),gaceq(aux21,aux144)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux109,1),w-literal(aux154,1),w-literal(aux183,1),w-literal(aux62,1),w-literal(aux182,1)}),watched-and({watched-or({modulo(aux301,13,0),gaceq(aux144,aux147)}),w-literal(aux202,1),w-literal(aux199,1),w-literal(aux178,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux62,1),w-literal(aux182,1)})})
watched-or({watched-and({watched-or({gaceq(aux81,aux167),modulo(aux302,13,0)}),w-literal(aux170,1),w-literal(aux149,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux150,1),w-literal(aux164,1)}),watched-and({watched-or({gaceq(aux168,aux82),modulo(aux303,13,0)}),w-literal(aux159,1),w-literal(aux170,1),w-literal(aux149,1),w-literal(aux29,1),w-literal(aux164,1)}),watched-and({watched-or({gaceq(aux167,aux168),modulo(aux304,13,0)}),w-literal(aux159,1),w-literal(aux170,1),w-literal(aux149,1),w-literal(aux150,1),w-literal(aux164,1)}),watched-and({watched-or({gaceq(aux166,aux167),modulo(aux305,13,0)}),w-literal(aux159,1),w-literal(aux170,1),w-literal(aux63,1),w-literal(aux150,1),w-literal(aux164,1)}),watched-and({watched-or({gaceq(aux169,aux166),modulo(aux306,13,0)}),w-literal(aux159,1),w-literal(aux112,1),w-literal(aux63,1),w-literal(aux150,1),w-literal(aux164,1)}),watched-and({watched-or({gaceq(aux81,aux169),modulo(aux307,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux112,1),w-literal(aux63,1),w-literal(aux150,1),w-literal(aux164,1)}),watched-and({w-literal(aux159,1),w-literal(aux170,1),w-literal(aux149,1),w-literal(aux29,1),w-literal(aux113,1),modulo(aux308,13,0)}),watched-and({watched-or({gaceq(aux166,aux82),modulo(aux309,13,0)}),w-literal(aux159,1),w-literal(aux170,1),w-literal(aux29,1),w-literal(aux113,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux169,aux168),modulo(aux310,13,0)}),w-literal(aux159,1),w-literal(aux149,1),w-literal(aux29,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux164,1)})})
watched-or({watched-and({watched-or({modulo(aux311,13,0),gaceq(aux194,aux103)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux39,1)}),watched-and({modulo(aux312,13,0),w-literal(aux36,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux313,13,0),gaceq(aux194,aux104)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux44,1),w-literal(aux115,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux314,13,0),gaceq(aux104,aux192)}),w-literal(aux36,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux93,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux315,13,0),gaceq(aux104,aux193)}),w-literal(aux36,1),w-literal(aux44,1),w-literal(aux115,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux316,13,0),gaceq(aux193,aux103)}),w-literal(aux36,1),w-literal(aux92,1),w-literal(aux115,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux317,13,0),gaceq(aux103,aux192)}),w-literal(aux36,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux39,1)})})
watched-or({watched-and({w-literal(aux72,1),w-literal(aux90,1),w-literal(aux71,1),watched-or({gaceq(aux28,aux27),modulo(aux318,13,0)})}),watched-and({w-literal(aux72,1),w-literal(aux73,1),w-literal(aux71,1),watched-or({gaceq(aux27,aux25),modulo(aux319,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux90,1),w-literal(aux71,1),watched-or({gaceq(aux26,aux28),modulo(aux320,13,0)})}),watched-and({w-literal(aux73,1),w-literal(aux89,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux26,aux25),modulo(aux321,13,0)})}),watched-and({w-literal(aux72,1),w-literal(aux73,1),w-literal(aux89,1),modulo(aux322,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux110),modulo(aux323,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux58,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux110),modulo(aux324,13,0)}),w-literal(aux59,1),w-literal(aux58,1)}),watched-and({modulo(aux325,13,0),w-literal(aux59,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux205),modulo(aux326,13,0)})}),watched-and({modulo(aux327,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00012,-1],aux206)
weightedsumgeq([-1,1],[M_00002_00012,-1],aux206)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux207)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux207)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux208)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux208)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux209)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux209)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux210)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux210)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux211)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux211)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux212)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux212)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux213)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux213)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux214)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux214)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux215)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux215)
weightedsumleq([-1,1],[M_00002_00011,M_00002_00012],aux216)
weightedsumgeq([-1,1],[M_00002_00011,M_00002_00012],aux216)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux217)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux217)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux218)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux218)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux219)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux219)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux220)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux220)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux221)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux221)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux222)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux222)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux223)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux223)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux224)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux224)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux225)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux225)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux226)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux226)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux227)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux227)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux228)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux228)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux229)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux229)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux230)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux230)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux231)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux231)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux232)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux232)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux233)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux233)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux234)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux234)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux235)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux235)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux236)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux236)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux237)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux237)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux238)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux238)
weightedsumleq([-1,1],[M_00003_00011,-1],aux239)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux239)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux240)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux240)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux241)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux241)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux242)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux242)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux243)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux243)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux244)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux244)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux245)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux245)
weightedsumleq([-1,1],[M_00004_00010,-1],aux246)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux246)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux247)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux247)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux248)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux248)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux249)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux249)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux250)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux250)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux251)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux251)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux252)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux252)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux253)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux253)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux254)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux254)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux255)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux255)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux256)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux256)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux257)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux257)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux258)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux258)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux259)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux259)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux260)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux260)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux261)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux261)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux262)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux262)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux263)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux263)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux264)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux264)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux265)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux265)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux266)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux266)
weightedsumleq([1,-1],[-1,M_00005_00009],aux267)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux267)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux268)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux268)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux269)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux269)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux270)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux270)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux271)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux271)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux272)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux272)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux273)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux273)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux274)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux274)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux275)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux275)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux276)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux276)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux277)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux277)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux278)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux278)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux279)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux279)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux280)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux280)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux281)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux281)
weightedsumleq([1,-1],[-1,M_00006_00008],aux282)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux282)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux283)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux283)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux284)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux284)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux285)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux285)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux286)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux286)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux287)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux287)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux288)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux288)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux289)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux289)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux290)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux290)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux291)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux291)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux292)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux292)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux293)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux293)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux294)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux294)
weightedsumleq([-1,1],[M_00007_00007,-1],aux295)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux295)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux296)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux296)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux297)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux297)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux298)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux298)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux299)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux299)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux300)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux300)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux301)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux301)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux302)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux302)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux303)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux303)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux304)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux304)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux305)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux305)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux306)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux306)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux307)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux307)
weightedsumleq([-1,1],[M_00008_00006,-1],aux308)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux308)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux309)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux309)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux310)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux310)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux311)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux311)
weightedsumleq([1,-1],[-1,M_00009_00005],aux312)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux312)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux313)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux313)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux314)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux314)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux315)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux315)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux316)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux316)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux317)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux317)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux318)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux318)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux319)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux319)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux320)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux320)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux321)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux321)
weightedsumleq([-1,1],[M_00010_00004,-1],aux322)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux322)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux323)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux323)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux324)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux324)
weightedsumleq([-1,1],[M_00011_00003,-1],aux325)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux325)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux326)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux326)
weightedsumleq([-1,1],[M_00012_00002,-1],aux327)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux327)
**EOF**
