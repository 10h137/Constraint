MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 193
# CSE_active_eliminated_expressions = 1016
# CSE_active_total_size = 579
**VARIABLES**
DISCRETE M_00002_00001 #
{1..3}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [1,1,3,3])
**VARIABLES**
DISCRETE M_00002_00002 #
{3..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [3,3,7,7,10,10,12,13,21,21])
**VARIABLES**
DISCRETE M_00002_00003 #
{21..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00004 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00002_00005 #
{7..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [7,7,10,10])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39])
**VARIABLES**
DISCRETE M_00003_00001 #
{1..21}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [1,1,3,3,7,7,10,10,12,13,21,21])
**VARIABLES**
DISCRETE M_00003_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00003 #
{10..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..39}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00007 #
{27..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00003_00008 #
{12..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [12,13,21,21,27,27])
**VARIABLES**
DISCRETE M_00004_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [1,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00006 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00007 #
{12..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00004_00008 #
{12..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00004_00010 #
{0..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [1,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00003 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00005_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00007 #
{12..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00005_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00005_00010 #
{13..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [13,13,21,21,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [1,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00002 #
{3..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00006_00008 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00006_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00007_00001 #
{1..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [1,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00007_00008 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00008_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00008_00007 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00009_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00009_00006 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00010_00005 #
{0..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,46])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00011_00004 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00012_00003 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00013_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00013_00002 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
DISCRETE M_00014_00001 #
{0..47}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [0,1,3,3,7,7,10,10,12,13,21,21,27,27,29,29,37,37,39,39,46,47])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002/13)
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{1..3}
BOOL aux17 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux18 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..2}
BOOL aux21 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux22 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux27 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux29 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..3}
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux34 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux35 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux38 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux41 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux42 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..2}
BOOL aux47 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux48 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux50 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux51 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux52 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux56 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux58 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux59 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux60 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux61 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux62 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux66 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux67 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux68 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux69 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
{1..2}
BOOL aux74 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
DISCRETE aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..2}
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux81 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux82 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux85 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux88 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux94 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux96 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux97 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux98 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux99 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux104 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux111 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux114 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux115 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux118 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux121 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..2}
DISCRETE aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{2..3}
DISCRETE aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux125 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux126 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux128 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux133 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux134 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..2}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux140 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux141 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux142 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux143 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux148 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux150 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux151 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux153 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux154 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux155 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux156 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux157 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux159 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux160 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
DISCRETE aux161 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux162 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux164 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux165 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux166 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux167 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux168 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux169 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux170 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux171 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux172 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux173 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux175 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux176 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux178 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux179 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux180 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux181 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux182 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux185 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux186 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux187 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux188 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux189 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux191 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux193 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux194 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux196 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux197 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux198 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux199 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux202 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
BOOL aux204 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux205 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux206 #
{0..3}
DISCRETE aux207 #( - M_00002_00006 + 12)
{-27..5}
**CONSTRAINTS**
w-inintervalset(aux207, [-27,-27,-25,-25,-17,-17,-15,-15,-9,-9,-1,0,2,2,5,5])
**VARIABLES**
DISCRETE aux208 #( - M_00002_00006 + 46)
{7..39}
**CONSTRAINTS**
w-inintervalset(aux208, [7,7,9,9,17,17,19,19,25,25,33,34,36,36,39,39])
**VARIABLES**
DISCRETE aux209 #( - M_00002_00003 + M_00002_00004)
{-37..26}
**CONSTRAINTS**
w-inintervalset(aux209, [-37,-33,-29,-29,-27,-24,-20,-14,-12,-6,-2,2,6,10,12,12,16,20,25,26])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00004 + M_00002_00005)
{-40..-3}
**CONSTRAINTS**
w-inintervalset(aux210, [-40,-39,-37,-36,-32,-32,-30,-29,-27,-27,-22,-22,-20,-19,-17,-17,-14,-14,-11,-11,-6,-5,-3,-3])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00003 + M_00002_00006)
{-14..18}
**CONSTRAINTS**
w-inintervalset(aux211, [-14,-14,-12,-6,-2,-2,0,0,2,2,6,6,8,8,10,10,12,12,16,16,18,18])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00005 + M_00002_00006)
{-3..32}
**CONSTRAINTS**
w-inintervalset(aux212, [-3,-3,0,0,2,3,5,6,11,11,14,14,17,17,19,20,22,22,27,27,29,30,32,32])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00002 + M_00002_00003)
{11..44}
**CONSTRAINTS**
w-inintervalset(aux213, [11,11,14,20,22,22,24,27,29,30,32,37,39,40,43,44])
**VARIABLES**
DISCRETE aux214 #( - M_00002_00002 + M_00002_00005)
{-14..7}
**CONSTRAINTS**
w-inintervalset(aux214, [-14,-14,-11,-11,-6,-5,-3,-2,0,0,3,4,7,7])
**VARIABLES**
DISCRETE aux215 #( - M_00002_00005 + 27)
{17..20}
**CONSTRAINTS**
w-inintervalset(aux215, [17,17,20,20])
**VARIABLES**
DISCRETE aux216 #( - M_00002_00004 + 46)
{-1..36}
**CONSTRAINTS**
w-inintervalset(aux216, [-1,0,7,7,9,9,17,17,19,19,25,25,33,34,36,36])
**VARIABLES**
DISCRETE aux217 #( - M_00002_00001 + M_00002_00002)
{2..18}
**CONSTRAINTS**
w-inintervalset(aux217, [2,2,4,4,6,7,9,12,18,18])
**VARIABLES**
DISCRETE aux218 #( - M_00002_00001 + M_00002_00004)
{7..46}
**CONSTRAINTS**
w-inintervalset(aux218, [7,7,9,12,18,18,20,20,24,24,26,26,28,28,34,34,36,36,38,38,43,46])
**VARIABLES**
DISCRETE aux219 #( - M_00003_00006 + M_00003_00007)
{-19..34}
**CONSTRAINTS**
w-inintervalset(aux219, [-19,-19,-17,-17,-12,-12,-10,-7,-2,-2,0,0,2,2,6,10,12,12,14,20,22,22,24,27,29,30,32,34])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00002 + M_00003_00003)
{-37..44}
**CONSTRAINTS**
w-inintervalset(aux220, [-37,-33,-29,-29,-27,-24,-20,-14,-12,-6,-3,3,5,12,14,20,22,22,24,27,29,30,32,37,39,40,43,44])
**VARIABLES**
DISCRETE aux221 #( - M_00003_00003 + M_00003_00006)
{-35..36}
**CONSTRAINTS**
w-inintervalset(aux221, [-35,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,6,12,14,19,24,27,29,29,33,34,36,36])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00003 + M_00003_00004)
{-40..26}
**CONSTRAINTS**
w-inintervalset(aux222, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,6,12,14,20,24,26])
**VARIABLES**
DISCRETE aux223 #( - M_00003_00006 + 37)
{-9..30}
**CONSTRAINTS**
w-inintervalset(aux223, [-9,-9,-2,-2,0,0,8,8,10,10,16,16,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00002 + M_00003_00005)
{-40..36}
**CONSTRAINTS**
w-inintervalset(aux224, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,27,29,30,32,32,34,34,36,36])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00001 + M_00003_00004)
{-14..46}
**CONSTRAINTS**
w-inintervalset(aux225, [-14,-14,-11,-11,-9,-8,-6,-5,-3,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00007 + M_00003_00008)
{-19..-15}
DISCRETE aux227 #( - M_00003_00005 + M_00003_00008)
{-27..20}
**CONSTRAINTS**
w-inintervalset(aux227, [-27,-24,-18,-14,-12,-12,-10,-8,-6,-6,-2,3,5,6,8,9,11,11,14,15,17,17,20,20])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00001 + M_00003_00002)
{-7..44}
**CONSTRAINTS**
w-inintervalset(aux228, [-7,12,14,20,22,22,24,30,32,40,43,44])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00004 + M_00003_00005)
{-40..32}
**CONSTRAINTS**
w-inintervalset(aux229, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,6,8,12,14,20,22,22,24,27,29,30,32,32])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00004 + M_00003_00007)
{-20..36}
**CONSTRAINTS**
w-inintervalset(aux230, [-20,-17,-12,-12,-10,-7,-2,0,2,2,6,10,12,12,14,20,22,22,24,27,29,30,32,34,36,36])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00005 + M_00003_00006)
{-3..39}
**CONSTRAINTS**
w-inintervalset(aux231, [-3,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00008 + 29)
{2..17}
**CONSTRAINTS**
w-inintervalset(aux232, [2,2,8,8,16,17])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00008 + 37)
{10..25}
**CONSTRAINTS**
w-inintervalset(aux233, [10,10,16,16,24,25])
**VARIABLES**
DISCRETE aux234 #( - M_00004_00008 + M_00004_00009)
{-37..8}
**CONSTRAINTS**
w-inintervalset(aux234, [-37,-36,-34,-34,-30,-24,-22,-8,-6,-5,-3,2,6,6,8,8])
**VARIABLES**
DISCRETE aux235 #( - M_00004_00009 + M_00004_00010)
{-37..29}
**CONSTRAINTS**
w-inintervalset(aux235, [-37,-36,-34,-34,-30,-24,-22,22,24,24,26,29])
**VARIABLES**
DISCRETE aux236 #( - M_00004_00007 + M_00004_00008)
{-17..25}
**CONSTRAINTS**
w-inintervalset(aux236, [-17,-14,-12,-12,-10,-8,-6,-6,-2,2,6,6,8,10,14,17,24,25])
**VARIABLES**
DISCRETE aux237 #( - M_00004_00007 + M_00004_00010)
{-46..17}
**CONSTRAINTS**
w-inintervalset(aux237, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,-8,-6,-5,-3,2,6,6,8,9,14,17])
**VARIABLES**
DISCRETE aux238 #( - M_00004_00006 + M_00004_00007)
{-34..39}
**CONSTRAINTS**
w-inintervalset(aux238, [-34,-33,-27,-24,-19,-14,-12,-12,-10,-6,-2,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00006 + M_00004_00009)
{-46..25}
**CONSTRAINTS**
w-inintervalset(aux239, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,3,5,6,8,11,14,17,19,20,22,22,24,25])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00010 + 13)
{-16..13}
**CONSTRAINTS**
w-inintervalset(aux240, [-16,-16,-14,-14,-8,-8,0,1,3,3,6,6,10,10,12,13])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00002 + M_00004_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux241, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,27,29,30,32,37,39,40,43,44])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00003 + M_00004_00004)
{-40..37}
**CONSTRAINTS**
w-inintervalset(aux242, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,37])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00005 + M_00004_00006)
{-32..39}
**CONSTRAINTS**
w-inintervalset(aux243, [-32,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00005 + M_00004_00008)
{-27..30}
**CONSTRAINTS**
w-inintervalset(aux244, [-27,-24,-19,-14,-12,-12,-10,-8,-6,-6,-2,3,5,6,8,11,14,17,19,20,22,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00001 + M_00004_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux245, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00008 + 13)
{-24..1}
**CONSTRAINTS**
w-inintervalset(aux246, [-24,-24,-16,-16,-14,-14,-8,-8,0,1])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00004 + M_00004_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux247, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00002 + M_00004_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux248, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39,43,43])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00001 + M_00004_00002)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux249, [-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00003 + M_00004_00006)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux250, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux251 #( - M_00004_00004 + M_00004_00007)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux251, [-35,-33,-27,-24,-20,-14,-12,-12,-10,-6,-2,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux252 #( - M_00005_00003 + M_00005_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux252, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,37,39,40])
**VARIABLES**
DISCRETE aux253 #( - M_00005_00005 + M_00005_00006)
{-46..39}
**CONSTRAINTS**
w-inintervalset(aux253, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux254 #( - M_00005_00005 + M_00005_00008)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux254, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,3,5,6,8,11,14,17,19,20,22,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux255 #( - M_00005_00001 + M_00005_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux255, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00004 + M_00005_00005)
{-40..39}
**CONSTRAINTS**
w-inintervalset(aux256, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00002 + M_00005_00005)
{-40..43}
**CONSTRAINTS**
w-inintervalset(aux257, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39,43,43])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00001 + M_00005_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux258, [-44,-43,-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux259 #( - M_00005_00003 + M_00005_00006)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux259, [-47,-43,-40,-32,-30,-24,-22,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux260 #( - M_00005_00004 + M_00005_00007)
{-35..39}
**CONSTRAINTS**
w-inintervalset(aux260, [-35,-33,-27,-24,-20,-14,-12,-12,-10,-6,-2,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux261 #(-1 - M_00005_00010)
{-30..-14}
**CONSTRAINTS**
w-inintervalset(aux261, [-30,-30,-28,-28,-22,-22,-14,-14])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00007 + M_00005_00008)
{-46..25}
**CONSTRAINTS**
w-inintervalset(aux262, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,-8,-6,-5,-3,2,6,6,8,10,14,17,24,25])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00008 + M_00005_00009)
{-37..29}
**CONSTRAINTS**
w-inintervalset(aux263, [-37,-36,-34,-34,-30,-24,-22,22,24,29])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00007 + M_00005_00010)
{-33..17}
**CONSTRAINTS**
w-inintervalset(aux264, [-33,-33,-26,-24,-19,-16,-14,-14,-12,-12,-10,-10,-8,-8,-6,-6,-2,-2,0,2,6,6,8,9,14,17])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00009 + M_00005_00010)
{-24..29}
**CONSTRAINTS**
w-inintervalset(aux265, [-24,-24,-16,-16,-14,-14,-10,-10,-8,-8,-6,-6,-2,-2,0,3,6,6,8,22,24,24,26,29])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00006 + M_00005_00007)
{-34..46}
**CONSTRAINTS**
w-inintervalset(aux266, [-34,-33,-27,-24,-19,-14,-12,-12,-10,-6,-2,3,5,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux267 #( - M_00005_00006 + M_00005_00009)
{-46..30}
**CONSTRAINTS**
w-inintervalset(aux267, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30])
**VARIABLES**
DISCRETE aux268 #( - M_00005_00002 + M_00005_00003)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux268, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,27,29,30,32,37,39,40,43,44])
**VARIABLES**
DISCRETE aux269 #( - M_00006_00002 + M_00006_00003)
{-47..44}
**CONSTRAINTS**
w-inintervalset(aux269, [-47,-43,-40,-32,-30,-24,-22,12,14,20,22,22,24,27,29,30,32,37,39,40,43,44])
**VARIABLES**
DISCRETE aux270 #( - M_00006_00003 + M_00006_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux270, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00001 + M_00006_00004)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux271, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux272 #(-1 - M_00006_00009)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux272, [-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00006 + M_00006_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux273, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00007 + M_00006_00008)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux274, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux275 #( - M_00006_00006 + M_00006_00009)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux275, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00008 + M_00006_00009)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux276, [-37,-36,-34,-34,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux277 #( - M_00006_00005 + M_00006_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux277, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00005 + M_00006_00008)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux278, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00004 + M_00006_00005)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux279, [-47,-43,-40,-32,-30,-24,-22,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00004 + M_00006_00007)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux280, [-47,-43,-40,-32,-30,-24,-22,3,5,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39])
**VARIABLES**
DISCRETE aux281 #( - M_00006_00001 + M_00006_00002)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux281, [-44,-43,-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux282 #( - M_00006_00003 + M_00006_00004)
{-40..47}
**CONSTRAINTS**
w-inintervalset(aux282, [-40,-39,-37,-32,-30,-29,-27,-24,-22,-22,-20,-14,-12,-5,-3,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux283 #( - M_00006_00002 + M_00006_00005)
{-47..43}
**CONSTRAINTS**
w-inintervalset(aux283, [-47,-43,-40,-32,-30,-24,-22,12,14,20,22,22,24,27,29,30,32,34,36,36,39,39,43,43])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00007 + M_00007_00008)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux284, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00005 + M_00007_00008)
{-46..37}
**CONSTRAINTS**
w-inintervalset(aux285, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,34,34,36,37])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00008 + -1)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux286, [-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00001 + M_00007_00004)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux287, [-47,-43,-40,-32,-30,-24,-22,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux288 #( - M_00007_00003 + M_00007_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux288, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux289 #( - M_00007_00002 + M_00007_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux289, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux290 #( - M_00007_00004 + M_00007_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux290, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux291 #( - M_00007_00005 + M_00007_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux291, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux292 #( - M_00007_00003 + M_00007_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux292, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00001 + M_00007_00002)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux293, [-47,-43,-40,-32,-30,-24,-22,12,14,20,22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00002 + M_00007_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux294, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux295 #( - M_00007_00006 + M_00007_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux295, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux296 #( - M_00007_00004 + M_00007_00007)
{-47..39}
**CONSTRAINTS**
w-inintervalset(aux296, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39])
**VARIABLES**
DISCRETE aux297 #( - M_00008_00007 + -1)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux297, [-47,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux298 #( - M_00008_00002 + M_00008_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux298, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux299 #( - M_00008_00003 + M_00008_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux299, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux300 #( - M_00008_00004 + M_00008_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux300, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux301 #( - M_00008_00001 + M_00008_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux301, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux302 #( - M_00008_00005 + M_00008_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux302, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux303 #( - M_00008_00006 + M_00008_00007)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux303, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux304 #( - M_00008_00002 + M_00008_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux304, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux305 #( - M_00008_00003 + M_00008_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux305, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux306 #( - M_00008_00004 + M_00008_00007)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux306, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux307 #( - M_00008_00001 + M_00008_00004)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux307, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,46])
**VARIABLES**
DISCRETE aux308 #( - M_00009_00004 + M_00009_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux308, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux309 #( - M_00009_00001 + M_00009_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux309, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux310 #( - M_00009_00005 + M_00009_00006)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux310, [-46,-45,-43,-43,-39,-36,-34,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux311 #( - M_00009_00002 + M_00009_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux311, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux312 #( - M_00009_00003 + M_00009_00006)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux312, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux313 #( - M_00009_00001 + M_00009_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux313, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux314 #(-1 - M_00009_00006)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux314, [-47,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux315 #( - M_00009_00002 + M_00009_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux315, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux316 #( - M_00009_00003 + M_00009_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux316, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux317 #( - M_00010_00003 + M_00010_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux317, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux318 #( - M_00010_00004 + M_00010_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux318, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux319 #( - M_00010_00002 + M_00010_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux319, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux320 #( - M_00010_00002 + M_00010_00005)
{-47..46}
**CONSTRAINTS**
w-inintervalset(aux320, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,34,36,39,43,43,45,46])
**VARIABLES**
DISCRETE aux321 #( - M_00010_00001 + M_00010_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux321, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux322 #( - M_00010_00001 + M_00010_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux322, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux323 #( - M_00010_00005 + -1)
{-47..-1}
**CONSTRAINTS**
w-inintervalset(aux323, [-47,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux324 #( - M_00011_00002 + M_00011_00003)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux324, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux325 #( - M_00011_00003 + M_00011_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux325, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux326 #( - M_00011_00004 + -1)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux326, [-48,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux327 #( - M_00011_00001 + M_00011_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux327, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux328 #( - M_00011_00001 + M_00011_00004)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux328, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux329 #( - M_00012_00001 + M_00012_00002)
{-47..47}
**CONSTRAINTS**
w-inintervalset(aux329, [-47,-43,-40,-32,-30,-24,-22,22,24,30,32,40,43,47])
**VARIABLES**
DISCRETE aux330 #( - M_00012_00002 + M_00012_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux330, [-39,-32,-30,-24,-22,22,24,30,32,39])
**VARIABLES**
DISCRETE aux331 #( - M_00012_00003 + -1)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux331, [-48,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux332 #(-1 - M_00013_00002)
{-48..-1}
**CONSTRAINTS**
w-inintervalset(aux332, [-48,-47,-40,-40,-38,-38,-30,-30,-28,-28,-22,-22,-14,-13,-11,-11,-8,-8,-4,-4,-2,-1])
**VARIABLES**
DISCRETE aux333 #( - M_00013_00001 + M_00013_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux333, [-39,-32,-30,-24,-22,22,24,30,32,39])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[1, 3, 21, 47, 10, 7, 39, 46, 27, 12, 37, 0, 29, 13]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux206)
reify(gaceq(M_00007_00007,M_00006_00007), aux13)
div(M_00002_00005, 13, 0)
div(M_00002_00002, 13, aux15)
div(M_00002_00003, 13, aux16)
reify(gaceq(M_00007_00008,M_00006_00009), aux17)
reify(gaceq(M_00004_00001,M_00005_00001), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00008, 13, aux20)
reify(gaceq(M_00002_00006,M_00003_00005), aux21)
reify(gaceq(M_00004_00003,M_00005_00003), aux22)
div(M_00010_00005, 13, aux23)
div(M_00010_00001, 13, aux24)
div(M_00010_00003, 13, aux25)
reify(gaceq(M_00008_00005,M_00009_00005), aux26)
reify(gaceq(M_00003_00002,M_00004_00002), aux27)
div(M_00012_00002, 13, aux28)
reify(gaceq(M_00005_00007,M_00006_00006), aux29)
div(M_00002_00004, 13, aux30)
div(M_00002_00006, 13, aux31)
reify(gaceq(M_00010_00005,M_00011_00004), aux32)
reify(gaceq(M_00010_00003,M_00009_00003), aux33)
reify(gaceq(M_00004_00002,M_00005_00002), aux34)
reify(gaceq(M_00007_00001,M_00008_00001), aux35)
reify(gaceq(M_00004_00005,M_00005_00004), aux36)
reify(gaceq(M_00010_00004,M_00009_00005), aux37)
reify(gaceq(M_00005_00001,M_00006_00001), aux38)
reify(gaceq(M_00010_00005,M_00009_00005), aux39)
reify(gaceq(M_00010_00002,M_00009_00003), aux40)
reify(gaceq(M_00004_00006,M_00005_00005), aux41)
reify(gaceq(M_00010_00001,M_00009_00001), aux42)
div(M_00004_00009, 13, aux43)
div(M_00004_00003, 13, aux44)
div(M_00004_00002, 13, aux45)
div(M_00004_00010, 13, aux46)
reify(gaceq(M_00007_00007,M_00006_00008), aux47)
reify(gaceq(M_00007_00002,M_00008_00002), aux48)
reify(gaceq(M_00010_00001,M_00011_00001), aux49)
reify(gaceq(M_00003_00008,M_00004_00007), aux50)
reify(gaceq(M_00008_00002,M_00009_00002), aux51)
reify(gaceq(M_00004_00010,M_00005_00009), aux52)
div(M_00002_00001, 13, 0)
reify(gaceq(M_00011_00003,M_00012_00002), aux54)
reify(gaceq(M_00011_00003,M_00012_00003), aux55)
reify(gaceq(M_00007_00006,M_00008_00005), aux56)
reify(gaceq(M_00008_00004,M_00009_00003), aux57)
reify(gaceq(M_00004_00007,M_00005_00007), aux58)
reify(gaceq(M_00003_00007,M_00004_00006), aux59)
reify(gaceq(M_00003_00006,M_00004_00006), aux60)
reify(gaceq(M_00002_00002,M_00003_00002), aux61)
reify(gaceq(M_00003_00005,M_00004_00004), aux62)
reify(gaceq(M_00011_00002,M_00012_00002), aux63)
reify(gaceq(M_00011_00001,M_00012_00001), aux64)
reify(gaceq(M_00011_00004,M_00012_00003), aux65)
reify(gaceq(M_00005_00008,M_00006_00008), aux66)
div(M_00008_00004, 13, aux67)
reify(gaceq(M_00002_00003,M_00003_00003), aux68)
reify(gaceq(M_00002_00001,M_00003_00001), aux69)
reify(gaceq(M_00010_00004,M_00011_00003), aux70)
div(M_00003_00001, 13, aux71)
div(M_00005_00001, 13, aux72)
div(M_00005_00010, 13, aux73)
reify(gaceq(M_00007_00001,M_00006_00001), aux74)
div(M_00008_00001, 13, aux75)
div(M_00008_00007, 13, aux76)
div(M_00006_00008, 13, aux77)
div(M_00006_00007, 13, aux78)
div(M_00006_00003, 13, aux79)
div(M_00006_00002, 13, aux80)
reify(gaceq(M_00005_00002,M_00006_00002), aux81)
reify(gaceq(M_00005_00009,M_00006_00008), aux82)
reify(gaceq(M_00010_00003,M_00011_00002), aux83)
reify(gaceq(M_00010_00004,M_00011_00004), aux84)
reify(gaceq(M_00005_00010,M_00006_00009), aux85)
reify(gaceq(M_00010_00002,M_00011_00002), aux86)
reify(gaceq(M_00010_00003,M_00011_00003), aux87)
reify(gaceq(M_00002_00005,M_00003_00004), aux88)
reify(gaceq(M_00010_00004,M_00009_00004), aux89)
reify(gaceq(M_00004_00009,M_00005_00009), aux90)
reify(gaceq(M_00004_00004,M_00005_00003), aux91)
reify(gaceq(M_00002_00003,M_00003_00002), aux92)
reify(gaceq(M_00002_00006,M_00003_00006), aux93)
reify(gaceq(M_00003_00004,M_00004_00004), aux94)
reify(gaceq(M_00002_00005,M_00003_00005), aux95)
reify(gaceq(M_00004_00007,M_00005_00006), aux96)
reify(gaceq(M_00007_00003,M_00006_00003), aux97)
reify(gaceq(M_00003_00003,M_00004_00003), aux98)
reify(gaceq(M_00005_00003,M_00006_00003), aux99)
div(M_00009_00005, 13, aux100)
div(M_00009_00003, 13, aux101)
div(M_00009_00004, 13, aux102)
div(M_00009_00002, 13, aux103)
reify(gaceq(M_00007_00006,M_00006_00007), aux104)
reify(gaceq(M_00007_00003,M_00008_00002), aux105)
reify(gaceq(M_00007_00007,M_00008_00007), aux106)
div(M_00011_00001, 13, aux107)
div(M_00011_00002, 13, aux108)
div(M_00011_00003, 13, aux109)
div(M_00011_00004, 13, aux110)
reify(gaceq(M_00003_00006,M_00004_00005), aux111)
reify(gaceq(M_00008_00006,M_00009_00006), aux112)
reify(gaceq(M_00008_00003,M_00009_00002), aux113)
reify(gaceq(M_00003_00001,M_00004_00001), aux114)
reify(gaceq(M_00005_00008,M_00006_00007), aux115)
reify(gaceq(M_00010_00003,M_00009_00004), aux116)
div(M_00006_00004, 13, aux117)
div(M_00006_00005, 13, aux118)
div(M_00006_00006, 13, aux119)
div(M_00006_00001, 13, aux120)
div(M_00006_00009, 13, aux121)
div(M_00003_00007, 13, aux122)
div(M_00003_00002, 13, aux123)
div(M_00003_00003, 13, aux124)
reify(gaceq(M_00005_00005,M_00006_00004), aux125)
reify(gaceq(M_00010_00002,M_00009_00002), aux126)
reify(gaceq(M_00003_00003,M_00004_00002), aux127)
reify(gaceq(M_00004_00005,M_00005_00005), aux128)
reify(gaceq(M_00005_00003,M_00006_00002), aux129)
reify(gaceq(M_00005_00009,M_00006_00009), aux130)
div(M_00010_00004, 13, aux131)
div(M_00010_00002, 13, aux132)
reify(gaceq(M_00005_00006,M_00006_00006), aux133)
reify(gaceq(M_00008_00003,M_00009_00003), aux134)
div(M_00005_00009, 13, aux135)
div(M_00005_00008, 13, aux136)
div(M_00005_00002, 13, aux137)
div(M_00005_00003, 13, aux138)
reify(gaceq(M_00004_00003,M_00005_00002), aux139)
reify(gaceq(M_00005_00005,M_00006_00005), aux140)
reify(gaceq(M_00005_00007,M_00006_00007), aux141)
reify(gaceq(M_00004_00008,M_00005_00007), aux142)
reify(gaceq(M_00007_00003,M_00008_00003), aux143)
div(M_00007_00002, 13, aux144)
div(M_00007_00003, 13, aux145)
div(M_00007_00006, 13, aux146)
div(M_00007_00007, 13, aux147)
reify(gaceq(M_00004_00009,M_00005_00008), aux148)
reify(gaceq(M_00008_00004,M_00009_00004), aux149)
reify(gaceq(M_00002_00004,M_00003_00004), aux150)
reify(gaceq(M_00008_00005,M_00009_00004), aux151)
div(M_00007_00004, 13, aux152)
div(M_00007_00005, 13, aux153)
reify(gaceq(M_00007_00004,M_00006_00004), aux154)
reify(gaceq(M_00003_00004,M_00004_00003), aux155)
reify(gaceq(M_00007_00004,M_00008_00003), aux156)
reify(gaceq(M_00010_00005,M_00009_00006), aux157)
reify(gaceq(M_00005_00004,M_00006_00003), aux158)
reify(gaceq(M_00003_00007,M_00004_00007), aux159)
div(M_00004_00007, 13, aux160)
div(M_00004_00008, 13, aux161)
div(M_00004_00004, 13, aux162)
div(M_00004_00005, 13, aux163)
div(M_00004_00006, 13, aux164)
reify(gaceq(M_00005_00004,M_00006_00004), aux165)
reify(gaceq(M_00004_00004,M_00005_00004), aux166)
reify(gaceq(M_00008_00006,M_00009_00005), aux167)
reify(gaceq(M_00007_00003,M_00006_00004), aux168)
reify(gaceq(M_00007_00004,M_00008_00004), aux169)
reify(gaceq(M_00007_00005,M_00006_00005), aux170)
div(M_00008_00003, 13, aux171)
div(M_00008_00005, 13, aux172)
div(M_00008_00006, 13, aux173)
div(M_00008_00002, 13, aux174)
reify(gaceq(M_00007_00002,M_00006_00002), aux175)
reify(gaceq(M_00007_00008,M_00006_00008), aux176)
reify(gaceq(M_00007_00002,M_00006_00003), aux177)
reify(gaceq(M_00007_00006,M_00008_00006), aux178)
reify(gaceq(M_00005_00006,M_00006_00005), aux179)
reify(gaceq(M_00003_00005,M_00004_00005), aux180)
div(M_00003_00008, 13, aux181)
div(M_00003_00004, 13, aux182)
div(M_00003_00006, 13, aux183)
div(M_00003_00005, 13, aux184)
reify(gaceq(M_00007_00007,M_00008_00006), aux185)
reify(gaceq(M_00008_00001,M_00009_00001), aux186)
reify(gaceq(M_00007_00006,M_00006_00006), aux187)
reify(gaceq(M_00007_00005,M_00008_00004), aux188)
reify(gaceq(M_00007_00005,M_00008_00005), aux189)
reify(gaceq(M_00002_00004,M_00003_00003), aux190)
reify(gaceq(M_00012_00001,M_00013_00001), aux191)
reify(gaceq(M_00012_00003,M_00013_00002), aux192)
div(M_00005_00004, 13, aux193)
div(M_00005_00005, 13, aux194)
div(M_00005_00006, 13, aux195)
div(M_00005_00007, 13, aux196)
reify(gaceq(M_00007_00008,M_00008_00007), aux197)
reify(gaceq(M_00007_00005,M_00006_00006), aux198)
reify(gaceq(M_00004_00006,M_00005_00006), aux199)
div(M_00009_00006, 13, aux200)
div(M_00009_00001, 13, aux201)
reify(gaceq(M_00008_00007,M_00009_00006), aux202)
div(M_00004_00001, 13, aux203)
reify(gaceq(M_00004_00008,M_00005_00008), aux204)
reify(gaceq(M_00007_00004,M_00006_00005), aux205)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00004,39),w-literal(M_00002_00005,10),w-literal(M_00002_00006,7)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00003,21),w-literal(M_00002_00005,10),w-literal(M_00002_00004,47),w-literal(M_00002_00006,7)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,3),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39)}),watched-and({w-literal(M_00002_00001,1),w-literal(M_00002_00002,10),w-literal(M_00002_00003,21),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,39)}),watched-and({w-literal(M_00002_00001,3),w-literal(M_00002_00002,21),w-literal(M_00002_00004,10),w-literal(M_00002_00003,47),w-literal(M_00002_00005,7),w-literal(M_00002_00006,39)})})
watched-or({watched-and({w-literal(M_00003_00006,12),w-literal(M_00003_00007,46),w-literal(M_00003_00008,27),watched-or({w-literal(aux31,0),modulo(aux207,13,0)}),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux150,1),w-literal(aux95,1)}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),watched-or({w-literal(aux31,3),modulo(aux208,13,0)}),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux150,1),w-literal(aux95,1)}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux190,1),w-literal(aux88,1),w-literal(aux21,1),watched-or({modulo(aux209,13,0),gaceq(aux16,aux30)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux88,1),w-literal(aux21,1),watched-or({modulo(aux210,13,0),w-literal(aux30,0)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux150,1),w-literal(aux95,1),gaceq(M_00002_00006,M_00003_00003),watched-or({modulo(aux211,13,0),gaceq(aux16,aux31)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux150,1),w-literal(aux21,1),watched-or({modulo(aux212,13,0),w-literal(aux31,0)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux92,1),w-literal(aux190,1),w-literal(aux88,1),w-literal(aux21,1),watched-or({modulo(aux213,13,0),gaceq(aux15,aux16)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux69,1),w-literal(aux68,1),w-literal(aux150,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux21,1),watched-or({modulo(aux214,13,0),w-literal(aux15,0)})}),watched-and({w-literal(M_00003_00005,27),w-literal(M_00003_00008,12),w-literal(M_00003_00007,46),modulo(aux215,13,0),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux150,1),w-literal(aux93,1)}),watched-and({w-literal(M_00003_00004,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),watched-or({w-literal(aux30,3),modulo(aux216,13,0)}),w-literal(aux69,1),w-literal(aux61,1),w-literal(aux68,1),w-literal(aux95,1),w-literal(aux93,1)}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),gaceq(M_00002_00002,M_00003_00001),w-literal(aux92,1),w-literal(aux190,1),w-literal(aux88,1),w-literal(aux21,1),watched-or({modulo(aux217,13,0),w-literal(aux15,0)})}),watched-and({w-literal(M_00003_00006,46),w-literal(M_00003_00007,27),w-literal(M_00003_00008,12),w-literal(aux61,1),w-literal(aux68,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux88,1),w-literal(aux21,1),watched-or({modulo(aux218,13,0),w-literal(aux30,0)})})})
watched-or({watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux180,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux219,13,0),gaceq(aux183,aux122)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux127,1),w-literal(aux155,1),w-literal(aux62,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux220,13,0),gaceq(aux123,aux124)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux94,1),w-literal(aux180,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux221,13,0),gaceq(aux124,aux183)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux155,1),w-literal(aux62,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux222,13,0),gaceq(aux124,aux182)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({watched-or({modulo(aux223,13,0),w-literal(aux183,2)}),w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux180,1),w-literal(aux159,1),gaceq(M_00003_00008,M_00004_00008),w-literal(M_00004_00006,37),w-literal(M_00004_00009,0),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux98,1),w-literal(aux94,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux224,13,0),gaceq(aux123,aux184)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux27,1),w-literal(aux98,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux62,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux225,13,0),gaceq(aux71,aux182)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux180,1),w-literal(aux60,1),w-literal(aux50,1),watched-or({modulo(aux226,13,0),gaceq(aux122,aux181)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux60,1),w-literal(aux159,1),gaceq(M_00003_00008,M_00004_00005),watched-or({modulo(aux227,13,0),gaceq(aux184,aux181)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux127,1),w-literal(aux155,1),w-literal(aux62,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux228,13,0),gaceq(aux71,aux123)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux62,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux229,13,0),gaceq(aux182,aux184)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux180,1),w-literal(aux60,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux50,1),watched-or({modulo(aux230,13,0),gaceq(aux182,aux122)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux111,1),w-literal(aux59,1),w-literal(aux50,1),watched-or({modulo(aux231,13,0),gaceq(aux184,aux183)}),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)}),watched-and({watched-or({modulo(aux232,13,0),w-literal(aux181,2)}),w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux180,1),w-literal(aux60,1),w-literal(aux159,1),w-literal(M_00004_00008,29),w-literal(M_00004_00009,37),w-literal(M_00004_00010,0)}),watched-and({watched-or({modulo(aux233,13,0),w-literal(aux181,2)}),w-literal(aux114,1),w-literal(aux27,1),w-literal(aux98,1),w-literal(aux94,1),w-literal(aux180,1),w-literal(aux60,1),w-literal(aux159,1),w-literal(M_00004_00009,0),w-literal(M_00004_00008,37),w-literal(M_00004_00010,29)})})
watched-or({watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux58,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux161,aux43),modulo(aux234,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux58,1),w-literal(aux204,1),w-literal(aux52,1),watched-or({gaceq(aux43,aux46),modulo(aux235,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux160,aux161),modulo(aux236,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux204,1),w-literal(aux90,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux160,aux46),modulo(aux237,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux164,aux160),modulo(aux238,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux58,1),w-literal(aux204,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux52,1),watched-or({gaceq(aux164,aux43),modulo(aux239,13,0)})}),watched-and({w-literal(M_00005_00010,13),watched-or({modulo(aux240,13,0),w-literal(aux46,1)}),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux58,1),w-literal(aux204,1),w-literal(aux90,1)}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux139,1),w-literal(aux91,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux45,aux44),modulo(aux241,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux91,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux44,aux162),modulo(aux242,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux163,aux164),modulo(aux243,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux199,1),w-literal(aux58,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux163,aux161),modulo(aux244,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux34,1),w-literal(aux22,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux203,aux162),modulo(aux245,13,0)})}),watched-and({w-literal(M_00005_00008,13),watched-or({modulo(aux246,13,0),w-literal(aux161,1)}),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux166,1),w-literal(aux128,1),w-literal(aux199,1),w-literal(aux58,1),w-literal(aux90,1),gaceq(M_00004_00010,M_00005_00010)}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux162,aux163),modulo(aux247,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux22,1),w-literal(aux166,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux45,aux163),modulo(aux248,13,0)})}),watched-and({w-literal(M_00005_00010,13),gaceq(M_00004_00002,M_00005_00001),w-literal(aux139,1),w-literal(aux91,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux203,aux45),modulo(aux249,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux166,1),w-literal(aux128,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux96,1),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux44,aux164),modulo(aux250,13,0)})}),watched-and({w-literal(M_00005_00010,13),w-literal(aux18,1),w-literal(aux34,1),w-literal(aux22,1),w-literal(aux128,1),w-literal(aux199,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux142,1),w-literal(aux148,1),w-literal(aux52,1),watched-or({gaceq(aux162,aux160),modulo(aux251,13,0)})})})
watched-or({watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux158,1),w-literal(aux125,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux252,13,0),gaceq(aux138,aux193)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux253,13,0),gaceq(aux194,aux195)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux133,1),w-literal(aux141,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux254,13,0),gaceq(aux194,aux136)})}),watched-and({w-literal(aux81,1),w-literal(aux99,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux125,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux255,13,0),gaceq(aux72,aux193)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux125,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux256,13,0),gaceq(aux193,aux194)})}),watched-and({w-literal(aux38,1),w-literal(aux99,1),w-literal(aux165,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux257,13,0),gaceq(aux137,aux194)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux129,1),w-literal(aux158,1),w-literal(aux125,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux258,13,0),gaceq(aux72,aux137)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux165,1),w-literal(aux140,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux259,13,0),gaceq(aux138,aux195)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux140,1),w-literal(aux133,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux260,13,0),gaceq(aux193,aux196)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux133,1),w-literal(aux141,1),w-literal(aux66,1),w-literal(aux130,1),modulo(aux261,13,0)}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux133,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux262,13,0),gaceq(aux196,aux136)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux133,1),w-literal(aux141,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux263,13,0),gaceq(aux136,aux135)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux133,1),w-literal(aux66,1),w-literal(aux130,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux264,13,0),gaceq(aux196,aux73)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux133,1),w-literal(aux141,1),w-literal(aux66,1),w-literal(aux85,1),watched-or({modulo(aux265,13,0),gaceq(aux135,aux73)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux266,13,0),gaceq(aux195,aux196)})}),watched-and({w-literal(aux38,1),w-literal(aux81,1),w-literal(aux99,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux141,1),w-literal(aux66,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux85,1),watched-or({modulo(aux267,13,0),gaceq(aux195,aux135)})}),watched-and({w-literal(aux38,1),w-literal(aux129,1),w-literal(aux158,1),w-literal(aux125,1),w-literal(aux179,1),w-literal(aux29,1),w-literal(aux115,1),w-literal(aux82,1),w-literal(aux85,1),watched-or({modulo(aux268,13,0),gaceq(aux137,aux138)})})})
watched-or({watched-and({w-literal(aux74,1),w-literal(aux177,1),w-literal(aux168,1),w-literal(aux205,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux80,aux79),modulo(aux269,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux154,1),w-literal(aux170,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux79,aux119),modulo(aux270,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux205,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux120,aux117),modulo(aux271,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux170,1),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux176,1),modulo(aux272,13,0)}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux170,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux119,aux78),modulo(aux273,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux170,1),w-literal(aux187,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux78,aux77),modulo(aux274,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux170,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux13,1),w-literal(aux176,1),watched-or({gaceq(aux119,aux121),modulo(aux275,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux170,1),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux17,1),watched-or({gaceq(aux77,aux121),modulo(aux276,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux118,aux119),modulo(aux277,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux154,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux17,1),watched-or({gaceq(aux118,aux77),modulo(aux278,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),w-literal(aux205,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux117,aux118),modulo(aux279,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux97,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux170,1),w-literal(aux187,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux117,aux78),modulo(aux280,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux177,1),w-literal(aux168,1),w-literal(aux205,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux120,aux80),modulo(aux281,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux175,1),w-literal(aux168,1),w-literal(aux205,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux79,aux117),modulo(aux282,13,0)})}),watched-and({w-literal(aux74,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux97,1),w-literal(aux154,1),w-literal(aux198,1),w-literal(aux104,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux80,aux118),modulo(aux283,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux284,13,0),gaceq(aux147,aux20)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux169,1),w-literal(aux189,1),w-literal(aux178,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux153,aux20)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux169,1),w-literal(aux178,1),w-literal(aux106,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux286,13,0),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux169,1),w-literal(aux189,1),w-literal(aux178,1),w-literal(aux106,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux19,aux152)}),w-literal(aux48,1),w-literal(aux143,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux188,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux288,13,0),gaceq(aux145,aux152)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux156,1),w-literal(aux188,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux144,aux145)}),w-literal(aux35,1),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux188,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux290,13,0),gaceq(aux152,aux153)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux188,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux291,13,0),gaceq(aux153,aux146)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux169,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux292,13,0),gaceq(aux145,aux146)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux169,1),w-literal(aux189,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux293,13,0),gaceq(aux19,aux144)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux105,1),w-literal(aux156,1),w-literal(aux188,1),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux144,aux153)}),w-literal(aux35,1),w-literal(aux143,1),w-literal(aux169,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux56,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux295,13,0),gaceq(aux146,aux147)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux169,1),w-literal(aux189,1),w-literal(aux185,1),w-literal(aux197,1)}),watched-and({watched-or({modulo(aux296,13,0),gaceq(aux152,aux147)}),w-literal(aux35,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux189,1),w-literal(aux178,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux197,1)})})
watched-or({watched-and({w-literal(aux186,1),w-literal(aux51,1),w-literal(aux134,1),w-literal(aux149,1),w-literal(aux26,1),w-literal(aux112,1),modulo(aux297,13,0)}),watched-and({watched-or({gaceq(aux174,aux171),modulo(aux298,13,0)}),w-literal(aux186,1),w-literal(aux113,1),w-literal(aux57,1),w-literal(aux151,1),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux171,aux67),modulo(aux299,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux57,1),w-literal(aux151,1),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux67,aux172),modulo(aux300,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux134,1),w-literal(aux151,1),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux75,aux174),modulo(aux301,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux113,1),w-literal(aux57,1),w-literal(aux151,1),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux172,aux173),modulo(aux302,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux134,1),w-literal(aux149,1),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux173,aux76),modulo(aux303,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux134,1),w-literal(aux149,1),w-literal(aux26,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux174,aux172),modulo(aux304,13,0)}),w-literal(aux186,1),w-literal(aux134,1),w-literal(aux149,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux167,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux171,aux173),modulo(aux305,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux149,1),w-literal(aux26,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux67,aux76),modulo(aux306,13,0)}),w-literal(aux186,1),w-literal(aux51,1),w-literal(aux134,1),w-literal(aux26,1),w-literal(aux112,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux75,aux67),modulo(aux307,13,0)}),w-literal(aux51,1),w-literal(aux134,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux151,1),w-literal(aux167,1),w-literal(aux202,1)})})
watched-or({watched-and({watched-or({modulo(aux308,13,0),gaceq(aux102,aux100)}),w-literal(aux42,1),w-literal(aux126,1),w-literal(aux33,1),w-literal(aux37,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux309,13,0),gaceq(aux201,aux102)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux126,1),w-literal(aux33,1),w-literal(aux37,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux310,13,0),gaceq(aux100,aux200)}),w-literal(aux42,1),w-literal(aux126,1),w-literal(aux33,1),w-literal(aux89,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux311,13,0),gaceq(aux103,aux100)}),w-literal(aux42,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux33,1),w-literal(aux89,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux312,13,0),gaceq(aux101,aux200)}),w-literal(aux42,1),w-literal(aux126,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux89,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux313,13,0),gaceq(aux201,aux103)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux40,1),w-literal(aux116,1),w-literal(aux37,1),w-literal(aux157,1)}),watched-and({modulo(aux314,13,0),w-literal(aux42,1),w-literal(aux126,1),w-literal(aux33,1),w-literal(aux89,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux315,13,0),gaceq(aux103,aux101)}),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux116,1),w-literal(aux37,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux316,13,0),gaceq(aux101,aux102)}),w-literal(aux42,1),w-literal(aux126,1),w-literal(aux116,1),w-literal(aux37,1),w-literal(aux157,1)})})
watched-or({watched-and({w-literal(aux49,1),w-literal(aux86,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux25,aux131),modulo(aux317,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux86,1),w-literal(aux87,1),w-literal(aux32,1),watched-or({gaceq(aux131,aux23),modulo(aux318,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux83,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux132,aux25),modulo(aux319,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux87,1),w-literal(aux84,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux132,aux23),modulo(aux320,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux83,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux24,aux132),modulo(aux321,13,0)})}),watched-and({w-literal(aux86,1),w-literal(aux87,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux32,1),watched-or({gaceq(aux24,aux131),modulo(aux322,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux86,1),w-literal(aux87,1),w-literal(aux84,1),modulo(aux323,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux108,aux109),modulo(aux324,13,0)}),w-literal(aux64,1),w-literal(aux54,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux109,aux110),modulo(aux325,13,0)}),w-literal(aux64,1),w-literal(aux63,1),w-literal(aux65,1)}),watched-and({modulo(aux326,13,0),w-literal(aux64,1),w-literal(aux63,1),w-literal(aux55,1)}),watched-and({watched-or({gaceq(aux107,aux108),modulo(aux327,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux54,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux107,aux110),modulo(aux328,13,0)}),w-literal(aux63,1),w-literal(aux55,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux192,1),watched-or({div(M_00012_00001, 13, aux28),modulo(aux329,13,0)})}),watched-and({w-literal(aux191,1),w-literal(aux192,1),watched-or({div(M_00012_00003, 13, aux28),modulo(aux330,13,0)})}),watched-and({modulo(aux331,13,0),w-literal(aux191,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux332,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux206),modulo(aux333,13,0)})})})
weightedsumleq([-1,1],[M_00002_00006,12],aux207)
weightedsumgeq([-1,1],[M_00002_00006,12],aux207)
weightedsumleq([-1,1],[M_00002_00006,46],aux208)
weightedsumgeq([-1,1],[M_00002_00006,46],aux208)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux209)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux209)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux210)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux210)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux211)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux211)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux212)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux212)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux213)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux213)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux214)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux214)
weightedsumleq([-1,1],[M_00002_00005,27],aux215)
weightedsumgeq([-1,1],[M_00002_00005,27],aux215)
weightedsumleq([-1,1],[M_00002_00004,46],aux216)
weightedsumgeq([-1,1],[M_00002_00004,46],aux216)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux217)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux217)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux218)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux218)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux219)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux219)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux220)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux220)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux221)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux221)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux222)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux222)
weightedsumleq([-1,1],[M_00003_00006,37],aux223)
weightedsumgeq([-1,1],[M_00003_00006,37],aux223)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux224)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux224)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux225)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux225)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux226)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux226)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux227)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux227)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux228)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux228)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux229)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux229)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux230)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux230)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux231)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux231)
weightedsumleq([-1,1],[M_00003_00008,29],aux232)
weightedsumgeq([-1,1],[M_00003_00008,29],aux232)
weightedsumleq([-1,1],[M_00003_00008,37],aux233)
weightedsumgeq([-1,1],[M_00003_00008,37],aux233)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux234)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux234)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux235)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux235)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux236)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux236)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux237)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux237)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux238)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux238)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux239)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux239)
weightedsumleq([-1,1],[M_00004_00010,13],aux240)
weightedsumgeq([-1,1],[M_00004_00010,13],aux240)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux241)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux241)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux242)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux242)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux243)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux243)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux244)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux244)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux245)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux245)
weightedsumleq([-1,1],[M_00004_00008,13],aux246)
weightedsumgeq([-1,1],[M_00004_00008,13],aux246)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux247)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux247)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux248)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux248)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux249)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux249)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux250)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux250)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux251)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux251)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux252)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux252)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux253)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux253)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux254)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux254)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux255)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux255)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux256)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux256)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux257)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux257)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux258)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux258)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux260)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux260)
weightedsumleq([1,-1],[-1,M_00005_00010],aux261)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux261)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux263)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux263)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux264)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux264)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux265)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux265)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux266)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux266)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux267)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux267)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux269)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux269)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux270)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux270)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux271)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux271)
weightedsumleq([1,-1],[-1,M_00006_00009],aux272)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux272)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux273)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux273)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux274)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux274)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux275)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux275)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux276)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux276)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux277)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux277)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux279)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux279)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux280)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux280)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux281)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux281)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux283)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux283)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux284)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux284)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux285)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux285)
weightedsumleq([-1,1],[M_00007_00008,-1],aux286)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux286)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux287)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux287)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux288)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux288)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux289)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux289)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux290)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux290)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux291)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux291)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux292)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux292)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux295)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux295)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux296)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux296)
weightedsumleq([-1,1],[M_00008_00007,-1],aux297)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux297)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux298)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux298)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux299)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux299)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux300)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux300)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux301)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux301)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux302)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux302)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux303)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux303)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux304)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux304)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux305)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux305)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux306)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux306)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux307)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux307)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux308)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux308)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux309)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux309)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux310)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux310)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux311)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux311)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux312)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux312)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux313)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux313)
weightedsumleq([1,-1],[-1,M_00009_00006],aux314)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux314)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux315)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux315)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux316)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux316)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux317)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux317)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux318)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux318)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux319)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux319)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux320)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux320)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux321)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux321)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux322)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux322)
weightedsumleq([-1,1],[M_00010_00005,-1],aux323)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux323)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux324)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux324)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux325)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux325)
weightedsumleq([-1,1],[M_00011_00004,-1],aux326)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux326)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux327)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux327)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux328)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux328)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux329)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux329)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux330)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux330)
weightedsumleq([-1,1],[M_00012_00003,-1],aux331)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux331)
weightedsumleq([1,-1],[-1,M_00013_00002],aux332)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux332)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux333)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux333)
**EOF**
