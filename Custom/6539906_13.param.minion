MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 188
# CSE_active_eliminated_expressions = 1043
# CSE_active_total_size = 564
**VARIABLES**
DISCRETE M_00002_00002 #
{16..29}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [16,16,24,24,29,29])
**VARIABLES**
DISCRETE M_00002_00003 #
{29..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{33..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00002_00005 #
{38..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [38,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00002_00006 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [13,13,16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00002_00007 #
{13..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [13,13,16,16,24,24])
**VARIABLES**
DISCRETE M_00002_00008 #
{2..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [2,2,7,7,12,13,16,16,24,24])
**VARIABLES**
DISCRETE M_00002_00009 #
{2..7}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [2,2,7,7])
**VARIABLES**
DISCRETE M_00002_00010 #
{12..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00002_00011 #
{37..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [37,38,44,44])
**VARIABLES**
DISCRETE M_00002_00012 #
{12..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00012, [12,13,16,16,24,24,29,29,33,33,37,37])
**VARIABLES**
DISCRETE M_00003_00001 #
{46..48}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [46,46,48,48])
**VARIABLES**
DISCRETE M_00003_00002 #
{16..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00003_00003 #
{29..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00003_00004 #
{33..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00003_00005 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [13,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00003_00006 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [13,13,16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00003_00007 #
{2..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [2,2,7,7,12,13,16,16,24,24])
**VARIABLES**
DISCRETE M_00003_00008 #
{2..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,37])
**VARIABLES**
DISCRETE M_00003_00009 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00003_00010 #
{12..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00003_00011 #
{12..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00004_00001 #
{33..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00002 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [13,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00004_00003 #
{16..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00004_00004 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00004_00006 #
{2..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00004_00007 #
{2..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00004_00008 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00004_00009 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00004_00010 #
{12..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00005_00001 #
{13..48}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [13,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00005_00002 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [13,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00005_00003 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00005_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00005_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{2..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00005_00008 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00005_00009 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00006_00001 #
{7..48}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00006_00002 #
{7..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00006_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00006_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00006_00007 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00006_00008 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00007_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00007_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00007_00007 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00008_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00008_00006 #
{2..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00009_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00009_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00010_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00010_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00011_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00011_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
DISCRETE M_00012_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46])
**VARIABLES**
DISCRETE M_00013_00001 #
{2..48}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [2,2,7,7,12,13,16,16,24,24,29,29,33,33,37,38,44,44,46,46,48,48])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..2}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004/13)
{2..3}
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005/13)
{2..3}
DISCRETE aux20 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{0..3}
BOOL aux21 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux24 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux31 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux33 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux34 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux36 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux39 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{1..3}
DISCRETE aux43 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{1..3}
BOOL aux44 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux45 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux46 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux47 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux48 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux49 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011/13)
{2..3}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00012/13)
{0..2}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00002/13)
{1..2}
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux56 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux57 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux58 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux60 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux61 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux62 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux63 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux64 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux65 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux66 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux70 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..3}
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
BOOL aux73 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux74 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{1..3}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
BOOL aux77 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux80 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux85 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux86 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux94 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux96 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux97 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux98 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux99 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux102 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux103 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux107 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux110 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux112 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux113 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux114 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{2..3}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004/13)
{2..3}
BOOL aux122 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux123 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux124 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux126 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux129 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux130 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{1..3}
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux135 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux137 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux139 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux140 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux142 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux145 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux146 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux147 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux149 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux150 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux151 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux154 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux155 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux156 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux157 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux158 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux159 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux160 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux161 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux162 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux163 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
DISCRETE aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux165 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux166 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux167 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux168 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux169 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux171 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux172 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux173 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux174 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux175 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
BOOL aux176 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux177 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..2}
DISCRETE aux178 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux179 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux180 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux181 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux182 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux185 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
BOOL aux186 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux187 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux190 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux191 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{2..3}
DISCRETE aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..3}
BOOL aux194 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux195 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux196 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux197 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux198 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux199 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux200 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux201 #
{0..3}
DISCRETE aux202 #( - M_00002_00002 + M_00002_00005)
{9..30}
**CONSTRAINTS**
w-inintervalset(aux202, [9,9,14,15,17,17,20,20,22,22,28,28,30,30])
**VARIABLES**
DISCRETE aux203 #( - M_00002_00004 + M_00002_00005)
{-8..13}
**CONSTRAINTS**
w-inintervalset(aux203, [-8,-8,-6,-6,-2,-2,0,2,5,9,11,11,13,13])
**VARIABLES**
DISCRETE aux204 #( - M_00002_00005 + M_00002_00006)
{-33..-8}
**CONSTRAINTS**
w-inintervalset(aux204, [-33,-33,-31,-30,-28,-28,-25,-25,-22,-22,-20,-20,-17,-17,-15,-13,-11,-11,-9,-8])
**VARIABLES**
DISCRETE aux205 #( - M_00002_00007 + M_00002_00008)
{-22..11}
**CONSTRAINTS**
w-inintervalset(aux205, [-22,-22,-17,-17,-14,-14,-12,-11,-9,-8,-6,-6,-4,-3,-1,0,3,3,8,8,11,11])
**VARIABLES**
DISCRETE aux206 #( - M_00002_00007 + M_00002_00010)
{-1..31}
**CONSTRAINTS**
w-inintervalset(aux206, [-1,0,3,3,5,5,8,9,11,11,13,14,16,17,20,22,24,25,28,28,31,31])
**VARIABLES**
DISCRETE aux207 #( - M_00002_00003 + M_00002_00006)
{-25..9}
**CONSTRAINTS**
w-inintervalset(aux207, [-25,-24,-22,-20,-17,-16,-14,-13,-9,-8,-5,-4,-1,1,4,5,8,9])
**VARIABLES**
DISCRETE aux208 #( - M_00002_00012 + -1)
{-38..-13}
**CONSTRAINTS**
w-inintervalset(aux208, [-38,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13])
**VARIABLES**
DISCRETE aux209 #( - M_00002_00006 + M_00002_00007)
{-25..11}
**CONSTRAINTS**
w-inintervalset(aux209, [-25,-24,-22,-20,-17,-16,-14,-13,-11,-11,-9,-8,-5,-5,-3,-3,0,0,3,3,8,8,11,11])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00005 + M_00002_00008)
{-44..-22}
**CONSTRAINTS**
w-inintervalset(aux210, [-44,-44,-42,-42,-39,-39,-37,-36,-34,-30,-28,-28,-26,-25,-22,-22])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00003 + M_00002_00004)
{-5..17}
**CONSTRAINTS**
w-inintervalset(aux211, [-5,-4,-1,1,4,9,11,11,13,13,15,15,17,17])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00002 + M_00002_00003)
{4..22}
**CONSTRAINTS**
w-inintervalset(aux212, [4,5,8,9,13,14,17,17,21,22])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00008 + M_00002_00011)
{13..35}
**CONSTRAINTS**
w-inintervalset(aux213, [13,14,20,22,24,26,28,28,30,32,35,35])
**VARIABLES**
DISCRETE aux214 #(M_00002_00004 + -48)
{-15..-2}
**CONSTRAINTS**
w-inintervalset(aux214, [-15,-15,-11,-10,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux215 #( - M_00002_00009 + M_00002_00010)
{10..37}
**CONSTRAINTS**
w-inintervalset(aux215, [10,11,14,14,17,17,22,22,26,27,30,31,35,37])
**VARIABLES**
DISCRETE aux216 #( - M_00002_00010 + M_00002_00011)
{-7..32}
**CONSTRAINTS**
w-inintervalset(aux216, [-7,-6,-1,1,4,9,11,11,13,15,20,22,24,26,28,28,31,32])
**VARIABLES**
DISCRETE aux217 #( - M_00002_00009 + M_00002_00012)
{5..35}
**CONSTRAINTS**
w-inintervalset(aux217, [5,6,9,11,14,14,17,17,22,22,26,27,30,31,35,35])
**VARIABLES**
DISCRETE aux218 #( - M_00002_00011 + M_00002_00012)
{-25..-7}
**CONSTRAINTS**
w-inintervalset(aux218, [-25,-24,-22,-20,-15,-13,-11,-11,-9,-7])
**VARIABLES**
DISCRETE aux219 #( - M_00002_00008 + M_00002_00009)
{-22..5}
**CONSTRAINTS**
w-inintervalset(aux219, [-22,-22,-17,-17,-14,-14,-11,-9,-6,-5,0,0,5,5])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00001 + M_00003_00004)
{-15..-2}
**CONSTRAINTS**
w-inintervalset(aux220, [-15,-15,-13,-13,-11,-8,-4,-4,-2,-2])
**VARIABLES**
DISCRETE aux221 #( - M_00003_00003 + M_00003_00004)
{-8..17}
**CONSTRAINTS**
w-inintervalset(aux221, [-8,-4,-2,2,4,9,11,11,13,13,15,15,17,17])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00004 + M_00003_00005)
{-33..13}
**CONSTRAINTS**
w-inintervalset(aux222, [-33,-33,-31,-30,-28,-28,-25,-24,-22,-20,-17,-17,-15,-13,-11,-11,-9,-4,-2,2,4,9,11,11,13,13])
**VARIABLES**
DISCRETE aux223 #( - M_00003_00006 + M_00003_00007)
{-26..11}
**CONSTRAINTS**
w-inintervalset(aux223, [-26,-24,-22,-20,-17,-16,-14,-11,-9,-8,-6,-3,-1,0,3,3,8,8,11,11])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00006 + M_00003_00009)
{-36..31}
**CONSTRAINTS**
w-inintervalset(aux224, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-11,-9,-8,-6,-3,-1,1,3,9,11,11,13,17,20,22,24,25,28,28,31,31])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00002 + M_00003_00005)
{-25..30}
**CONSTRAINTS**
w-inintervalset(aux225, [-25,-24,-22,-20,-17,-16,-14,-13,-11,-11,-9,-8,-5,-3,-1,1,4,9,11,11,13,15,17,17,20,22,28,28,30,30])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00005 + M_00003_00006)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux226, [-33,-33,-31,-30,-28,-28,-25,-24,-22,-20,-17,-13,-11,-11,-9,-3,-1,1,3,5,8,9,11,11])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00001 + M_00003_00002)
{-32..-10}
**CONSTRAINTS**
w-inintervalset(aux227, [-32,-32,-30,-30,-24,-24,-22,-22,-19,-19,-17,-17,-15,-15,-13,-13,-11,-10])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00004 + M_00003_00007)
{-44..-9}
**CONSTRAINTS**
w-inintervalset(aux228, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-28,-26,-24,-22,-20,-17,-17,-14,-13,-9,-9])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00003 + M_00003_00006)
{-33..9}
**CONSTRAINTS**
w-inintervalset(aux229, [-33,-33,-31,-30,-28,-28,-25,-24,-22,-20,-17,-13,-11,-11,-9,-4,-1,1,4,5,8,9])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00002 + M_00003_00003)
{-5..30}
**CONSTRAINTS**
w-inintervalset(aux230, [-5,-4,-1,1,4,9,11,11,13,15,17,17,20,22,28,28,30,30])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00005 + M_00003_00008)
{-44..-1}
**CONSTRAINTS**
w-inintervalset(aux231, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-11,-9,-3,-1,-1])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00011 + -1)
{-45..-13}
**CONSTRAINTS**
w-inintervalset(aux232, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00008 + M_00003_00009)
{-30..42}
**CONSTRAINTS**
w-inintervalset(aux233, [-30,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux234 #( - M_00003_00009 + M_00003_00010)
{-7..42}
**CONSTRAINTS**
w-inintervalset(aux234, [-7,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux235 #( - M_00003_00008 + M_00003_00011)
{-25..42}
**CONSTRAINTS**
w-inintervalset(aux235, [-25,-24,-21,-20,-17,-16,-13,-11,-9,-8,-5,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux236 #( - M_00003_00010 + M_00003_00011)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux236, [-32,-31,-28,-28,-26,-24,-22,-20,-17,-11,-9,-3,-1,1,3,9,11,17,20,22,24,26,28,28,31,32])
**VARIABLES**
DISCRETE aux237 #( - M_00003_00007 + M_00003_00008)
{-22..24}
**CONSTRAINTS**
w-inintervalset(aux237, [-22,-22,-17,-17,-14,-14,-12,-8,-6,-3,-1,1,3,6,8,14,16,17,20,22,24,24])
**VARIABLES**
DISCRETE aux238 #( - M_00003_00007 + M_00003_00010)
{-12..42}
**CONSTRAINTS**
w-inintervalset(aux238, [-12,-11,-8,-8,-4,-3,-1,1,3,6,8,14,16,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00010 + -1)
{-45..-13}
**CONSTRAINTS**
w-inintervalset(aux239, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00008 + M_00004_00009)
{-35..42}
**CONSTRAINTS**
w-inintervalset(aux240, [-35,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00009 + M_00004_00010)
{-32..42}
**CONSTRAINTS**
w-inintervalset(aux241, [-32,-31,-28,-28,-26,-24,-22,-20,-17,-11,-9,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00007 + M_00004_00008)
{-36..42}
**CONSTRAINTS**
w-inintervalset(aux242, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00007 + M_00004_00010)
{-26..42}
**CONSTRAINTS**
w-inintervalset(aux243, [-26,-24,-22,-20,-17,-16,-14,-11,-9,-8,-5,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00006 + M_00004_00007)
{-36..35}
**CONSTRAINTS**
w-inintervalset(aux244, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,6,8,14,16,17,20,22,24,27,30,31,35,35])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00006 + M_00004_00009)
{-36..42}
**CONSTRAINTS**
w-inintervalset(aux245, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00002 + M_00004_00003)
{-17..33}
**CONSTRAINTS**
w-inintervalset(aux246, [-17,-17,-15,-13,-11,-11,-9,-4,-2,9,11,11,13,17,20,22,24,25,28,28,30,31,33,33])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00003 + M_00004_00004)
{-39..30}
**CONSTRAINTS**
w-inintervalset(aux247, [-39,-39,-37,-37,-34,-30,-28,-28,-26,-24,-22,-20,-17,-11,-9,2,4,9,11,11,13,15,17,17,20,22,28,28,30,30])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00005 + M_00004_00006)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux248, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-3,-1,1,3,6,8,9,11,14,16,17,20,22,24,26,30,31])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00005 + M_00004_00008)
{-44..37}
**CONSTRAINTS**
w-inintervalset(aux249, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,9,11,17,20,22,24,26,28,28,30,32,37,37])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00001 + M_00004_00004)
{-41..13}
**CONSTRAINTS**
w-inintervalset(aux250, [-41,-41,-39,-39,-37,-30,-28,-28,-26,-24,-22,-19,-17,-17,-15,-13,-11,-4,-2,2,4,9,11,11,13,13])
**VARIABLES**
DISCRETE aux251 #( - M_00004_00004 + M_00004_00005)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux251, [-39,-39,-37,-37,-34,-30,-28,-28,-26,-24,-22,-20,-17,-11,-9,9,11,17,20,22,24,26,28,28,30,34,37,37,39,39])
**VARIABLES**
DISCRETE aux252 #( - M_00004_00002 + M_00004_00005)
{-33..30}
**CONSTRAINTS**
w-inintervalset(aux252, [-33,-30,-28,-28,-26,-24,-22,-20,-17,-11,-9,9,11,11,13,17,20,22,24,25,28,28,30,30])
**VARIABLES**
DISCRETE aux253 #( - M_00004_00001 + M_00004_00002)
{-35..5}
**CONSTRAINTS**
w-inintervalset(aux253, [-35,-35,-33,-30,-28,-28,-25,-24,-22,-19,-17,-17,-15,-13,-11,-4,-2,2,4,5])
**VARIABLES**
DISCRETE aux254 #( - M_00004_00003 + M_00004_00006)
{-44..9}
**CONSTRAINTS**
w-inintervalset(aux254, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-11,-9,-3,-1,1,4,5,8,9])
**VARIABLES**
DISCRETE aux255 #( - M_00004_00004 + M_00004_00007)
{-44..25}
**CONSTRAINTS**
w-inintervalset(aux255, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-3,-1,1,3,6,8,9,11,14,16,17,20,22,24,25])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00003 + M_00005_00004)
{-44..39}
**CONSTRAINTS**
w-inintervalset(aux256, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,9,11,17,20,22,24,26,28,28,30,34,37,37,39,39])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00001 + M_00005_00004)
{-46..33}
**CONSTRAINTS**
w-inintervalset(aux257, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,9,11,11,13,17,20,22,24,25,28,28,30,31,33,33])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00002 + M_00005_00005)
{-44..33}
**CONSTRAINTS**
w-inintervalset(aux258, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-11,-9,9,11,11,13,17,20,22,24,25,28,28,30,31,33,33])
**VARIABLES**
DISCRETE aux259 #( - M_00005_00003 + M_00005_00006)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux259, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-3,-1,1,3,6,8,9,11,14,16,17,20,22,24,26,30,31])
**VARIABLES**
DISCRETE aux260 #(-1 - M_00005_00009)
{-45..-3}
**CONSTRAINTS**
w-inintervalset(aux260, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00006 + M_00005_00007)
{-36..42}
**CONSTRAINTS**
w-inintervalset(aux261, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00007 + M_00005_00008)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux262, [-42,-42,-37,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00006 + M_00005_00009)
{-36..42}
**CONSTRAINTS**
w-inintervalset(aux263, [-36,-35,-31,-30,-27,-24,-22,-20,-17,-16,-14,-8,-6,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00008 + M_00005_00009)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux264, [-42,-42,-37,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00005 + M_00005_00006)
{-44..36}
**CONSTRAINTS**
w-inintervalset(aux265, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,-3,-1,1,3,6,8,14,16,17,20,22,24,27,30,31,35,36])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00005 + M_00005_00008)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux266, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux267 #( - M_00005_00001 + M_00005_00002)
{-35..33}
**CONSTRAINTS**
w-inintervalset(aux267, [-35,-35,-33,-30,-28,-28,-25,-24,-22,-19,-17,-13,-11,9,11,11,13,17,20,22,24,25,28,28,30,31,33,33])
**VARIABLES**
DISCRETE aux268 #( - M_00005_00002 + M_00005_00003)
{-39..33}
**CONSTRAINTS**
w-inintervalset(aux268, [-39,-39,-37,-37,-34,-30,-28,-28,-26,-24,-22,-20,-17,-11,-9,9,11,11,13,17,20,22,24,25,28,28,30,31,33,33])
**VARIABLES**
DISCRETE aux269 #( - M_00005_00004 + M_00005_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux269, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux270 #( - M_00005_00004 + M_00005_00007)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux270, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00002 + M_00006_00003)
{-44..39}
**CONSTRAINTS**
w-inintervalset(aux271, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,9,11,17,20,22,24,26,28,28,30,34,37,37,39,39])
**VARIABLES**
DISCRETE aux272 #( - M_00006_00001 + M_00006_00004)
{-46..39}
**CONSTRAINTS**
w-inintervalset(aux272, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,9,11,17,20,22,24,26,28,28,30,34,37,37,39,39])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00001 + M_00006_00002)
{-41..39}
**CONSTRAINTS**
w-inintervalset(aux273, [-41,-41,-39,-39,-37,-30,-28,-28,-26,-24,-22,-19,-17,9,11,17,20,22,24,26,28,28,30,34,37,37,39,39])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00002 + M_00006_00005)
{-44..33}
**CONSTRAINTS**
w-inintervalset(aux274, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,9,11,17,20,22,24,26,28,28,30,33])
**VARIABLES**
DISCRETE aux275 #(-1 - M_00006_00008)
{-45..-3}
**CONSTRAINTS**
w-inintervalset(aux275, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00005 + M_00006_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux276, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux277 #( - M_00006_00006 + M_00006_00007)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux277, [-42,-42,-37,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00005 + M_00006_00008)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux278, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00007 + M_00006_00008)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux279, [-42,-42,-37,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00004 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux280, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux281 #( - M_00006_00004 + M_00006_00007)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux281, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux282 #( - M_00006_00003 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux282, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux283 #( - M_00006_00003 + M_00006_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux283, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00004 + M_00007_00007)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux284, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00002 + M_00007_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux285, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00004 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux286, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00006 + M_00007_00007)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux287, [-42,-42,-37,-35,-32,-30,-28,-24,-22,-20,-17,-3,-1,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux288 #( - M_00007_00007 + -1)
{-45..-3}
**CONSTRAINTS**
w-inintervalset(aux288, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux289 #( - M_00007_00003 + M_00007_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux289, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux290 #( - M_00007_00001 + M_00007_00004)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux290, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux291 #( - M_00007_00003 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux291, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux292 #( - M_00007_00005 + M_00007_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux292, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00001 + M_00007_00002)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux293, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00002 + M_00007_00005)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux294, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42])
**VARIABLES**
DISCRETE aux295 #( - M_00008_00001 + M_00008_00004)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux295, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux296 #( - M_00008_00005 + M_00008_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux296, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux297 #( - M_00008_00004 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux297, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux298 #( - M_00008_00003 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux298, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux299 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux299, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux300 #( - M_00008_00001 + M_00008_00002)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux300, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux301 #( - M_00008_00006 + -1)
{-45..-3}
**CONSTRAINTS**
w-inintervalset(aux301, [-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux302 #( - M_00008_00003 + M_00008_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux302, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,1,3,17,20,22,24,28,30,32,35,37,42,42])
**VARIABLES**
DISCRETE aux303 #( - M_00008_00002 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux303, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux304 #( - M_00009_00001 + M_00009_00004)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux304, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux305 #(-1 - M_00009_00005)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux305, [-47,-47,-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux306 #( - M_00009_00001 + M_00009_00002)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux306, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux307 #( - M_00009_00002 + M_00009_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux307, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux308 #( - M_00009_00002 + M_00009_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux308, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux309 #( - M_00009_00003 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux309, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux310 #( - M_00009_00004 + M_00009_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux310, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux311 #( - M_00010_00002 + M_00010_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux311, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux312 #( - M_00010_00003 + M_00010_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux312, [-44,-44,-42,-42,-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux313 #( - M_00010_00001 + M_00010_00002)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux313, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux314 #( - M_00010_00001 + M_00010_00004)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux314, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux315 #( - M_00010_00004 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux315, [-47,-47,-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux316 #( - M_00011_00001 + M_00011_00002)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux316, [-46,-46,-44,-44,-42,-41,-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39,42,42,44,44])
**VARIABLES**
DISCRETE aux317 #( - M_00011_00002 + M_00011_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux317, [-39,-39,-37,-30,-28,-24,-22,-20,-17,17,20,22,24,28,30,37,39,39])
**VARIABLES**
DISCRETE aux318 #( - M_00011_00003 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux318, [-47,-47,-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
DISCRETE aux319 #( - M_00012_00001 + M_00012_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux319, [-39,-39,-37,-30,-28,-24,-22,-19,-17,17,20,22,24,28,30,37,39,39])
**VARIABLES**
DISCRETE aux320 #( - M_00012_00002 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux320, [-47,-47,-45,-45,-39,-38,-34,-34,-30,-30,-25,-25,-17,-17,-14,-13,-8,-8,-3,-3])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[48, 16, 29, 33, 46, 38, 13, 24, 2, 7, 44, 37, 12]
**SEARCH**
PRINT[[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux201)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00009, 13, 0)
div(M_00002_00006, 13, aux15)
div(M_00002_00007, 13, 1)
div(M_00002_00004, 13, aux17)
div(M_00002_00005, 13, aux18)
div(M_00002_00003, 13, 2)
div(M_00002_00010, 13, aux20)
reify(gaceq(M_00003_00009,M_00004_00008), aux21)
div(M_00007_00001, 13, aux22)
div(M_00007_00007, 13, aux23)
reify(gaceq(M_00007_00002,M_00006_00002), aux24)
div(M_00010_00004, 13, aux25)
div(M_00010_00001, 13, aux26)
div(M_00010_00003, 13, aux27)
div(M_00010_00002, 13, aux28)
reify(gaceq(M_00008_00004,M_00009_00004), aux29)
reify(gaceq(M_00004_00004,M_00005_00004), aux30)
reify(gaceq(M_00005_00007,M_00006_00006), aux31)
reify(gaceq(M_00010_00001,M_00009_00001), aux32)
reify(gaceq(M_00003_00006,M_00004_00006), aux33)
reify(gaceq(M_00004_00005,M_00005_00004), aux34)
reify(gaceq(M_00010_00004,M_00009_00005), aux35)
reify(gaceq(M_00003_00002,M_00004_00002), aux36)
reify(gaceq(M_00010_00004,M_00009_00004), aux37)
reify(gaceq(M_00010_00002,M_00009_00003), aux38)
reify(gaceq(M_00004_00006,M_00005_00005), aux39)
div(M_00004_00008, 13, aux40)
div(M_00004_00009, 13, aux41)
div(M_00004_00003, 13, aux42)
div(M_00004_00002, 13, aux43)
reify(gaceq(M_00007_00007,M_00006_00008), aux44)
reify(gaceq(M_00002_00010,M_00003_00009), aux45)
reify(gaceq(M_00005_00004,M_00006_00004), aux46)
reify(gaceq(M_00003_00008,M_00004_00007), aux47)
reify(gaceq(M_00004_00007,M_00005_00007), aux48)
reify(gaceq(M_00004_00010,M_00005_00009), aux49)
div(M_00002_00008, 13, aux50)
div(M_00002_00011, 13, aux51)
div(M_00002_00012, 13, aux52)
div(M_00002_00002, 13, aux53)
reify(gaceq(M_00011_00003,M_00012_00002), aux54)
reify(gaceq(M_00011_00001,M_00012_00001), aux55)
reify(gaceq(M_00005_00005,M_00006_00005), aux56)
reify(gaceq(M_00003_00008,M_00004_00008), aux57)
reify(gaceq(M_00007_00006,M_00008_00005), aux58)
reify(gaceq(M_00008_00004,M_00009_00003), aux59)
reify(gaceq(M_00007_00003,M_00006_00003), aux60)
reify(gaceq(M_00003_00007,M_00004_00006), aux61)
reify(gaceq(M_00002_00006,M_00003_00005), aux62)
reify(gaceq(M_00005_00003,M_00006_00003), aux63)
reify(gaceq(M_00003_00005,M_00004_00004), aux64)
reify(gaceq(M_00005_00007,M_00006_00007), aux65)
reify(gaceq(M_00003_00011,M_00004_00010), aux66)
reify(gaceq(M_00010_00004,M_00011_00003), aux67)
reify(gaceq(M_00010_00001,M_00011_00001), aux68)
reify(gaceq(M_00010_00002,M_00011_00002), aux69)
reify(gaceq(M_00002_00008,M_00003_00007), aux70)
div(M_00003_00011, 13, aux71)
div(M_00003_00002, 13, aux72)
reify(gaceq(M_00003_00004,M_00004_00004), aux73)
reify(gaceq(M_00007_00002,M_00008_00002), aux74)
div(M_00005_00001, 13, aux75)
div(M_00005_00009, 13, aux76)
reify(gaceq(M_00002_00003,M_00003_00003), aux77)
div(M_00008_00001, 13, aux78)
div(M_00008_00006, 13, aux79)
reify(gaceq(M_00004_00006,M_00005_00006), aux80)
div(M_00006_00007, 13, aux81)
div(M_00006_00006, 13, aux82)
div(M_00006_00003, 13, aux83)
div(M_00006_00002, 13, aux84)
reify(gaceq(M_00002_00004,M_00003_00004), aux85)
reify(gaceq(M_00005_00009,M_00006_00008), aux86)
reify(gaceq(M_00010_00003,M_00011_00003), aux87)
reify(gaceq(M_00010_00003,M_00011_00002), aux88)
reify(gaceq(M_00010_00002,M_00009_00002), aux89)
reify(gaceq(M_00010_00003,M_00009_00003), aux90)
reify(gaceq(M_00004_00004,M_00005_00003), aux91)
reify(gaceq(M_00002_00004,M_00003_00003), aux92)
reify(gaceq(M_00002_00011,M_00003_00011), aux93)
reify(gaceq(M_00002_00009,M_00003_00009), aux94)
reify(gaceq(M_00002_00005,M_00003_00004), aux95)
reify(gaceq(M_00002_00010,M_00003_00010), aux96)
reify(gaceq(M_00004_00001,M_00005_00001), aux97)
reify(gaceq(M_00004_00007,M_00005_00006), aux98)
reify(gaceq(M_00007_00001,M_00006_00001), aux99)
div(M_00009_00004, 13, aux100)
div(M_00009_00002, 13, aux101)
reify(gaceq(M_00003_00005,M_00004_00005), aux102)
reify(gaceq(M_00007_00006,M_00006_00007), aux103)
reify(gaceq(M_00007_00006,M_00008_00006), aux104)
reify(gaceq(M_00007_00003,M_00008_00002), aux105)
div(M_00011_00002, 13, aux106)
reify(gaceq(M_00003_00006,M_00004_00005), aux107)
reify(gaceq(M_00008_00003,M_00009_00002), aux108)
reify(gaceq(M_00008_00005,M_00009_00005), aux109)
reify(gaceq(M_00005_00008,M_00006_00007), aux110)
reify(gaceq(M_00010_00003,M_00009_00004), aux111)
div(M_00006_00004, 13, aux112)
div(M_00006_00005, 13, aux113)
reify(gaceq(M_00004_00003,M_00005_00003), aux114)
div(M_00006_00001, 13, aux115)
div(M_00006_00008, 13, aux116)
div(M_00003_00010, 13, aux117)
div(M_00003_00007, 13, aux118)
div(M_00003_00009, 13, aux119)
div(M_00003_00003, 13, aux120)
div(M_00003_00004, 13, aux121)
reify(gaceq(M_00004_00002,M_00005_00002), aux122)
reify(gaceq(M_00005_00005,M_00006_00004), aux123)
reify(gaceq(M_00003_00010,M_00004_00010), aux124)
reify(gaceq(M_00003_00003,M_00004_00002), aux125)
reify(gaceq(M_00002_00007,M_00003_00006), aux126)
reify(gaceq(M_00005_00003,M_00006_00002), aux127)
reify(gaceq(M_00005_00008,M_00006_00008), aux128)
reify(gaceq(M_00002_00009,M_00003_00008), aux129)
reify(gaceq(M_00003_00007,M_00004_00007), aux130)
div(M_00005_00007, 13, aux131)
div(M_00005_00008, 13, aux132)
div(M_00005_00002, 13, aux133)
div(M_00005_00003, 13, aux134)
reify(gaceq(M_00002_00012,M_00003_00011), aux135)
reify(gaceq(M_00005_00006,M_00006_00006), aux136)
reify(gaceq(M_00004_00009,M_00005_00009), aux137)
reify(gaceq(M_00004_00003,M_00005_00002), aux138)
reify(gaceq(M_00005_00002,M_00006_00002), aux139)
reify(gaceq(M_00004_00008,M_00005_00007), aux140)
div(M_00007_00002, 13, aux141)
div(M_00007_00003, 13, aux142)
div(M_00007_00006, 13, aux143)
div(M_00007_00005, 13, aux144)
reify(gaceq(M_00004_00009,M_00005_00008), aux145)
reify(gaceq(M_00008_00003,M_00009_00003), aux146)
reify(gaceq(M_00008_00005,M_00009_00004), aux147)
div(M_00007_00004, 13, aux148)
reify(gaceq(M_00003_00004,M_00004_00003), aux149)
reify(gaceq(M_00007_00004,M_00008_00003), aux150)
reify(gaceq(M_00003_00003,M_00004_00003), aux151)
reify(gaceq(M_00003_00009,M_00004_00009), aux152)
reify(gaceq(M_00005_00004,M_00006_00003), aux153)
div(M_00004_00007, 13, aux154)
reify(gaceq(M_00008_00001,M_00009_00001), aux155)
div(M_00004_00004, 13, aux156)
div(M_00004_00005, 13, aux157)
div(M_00004_00006, 13, aux158)
reify(gaceq(M_00002_00002,M_00003_00002), aux159)
reify(gaceq(M_00002_00011,M_00003_00010), aux160)
reify(gaceq(M_00008_00006,M_00009_00005), aux161)
reify(gaceq(M_00007_00003,M_00006_00004), aux162)
reify(gaceq(M_00002_00005,M_00003_00005), aux163)
div(M_00008_00003, 13, aux164)
div(M_00008_00004, 13, aux165)
div(M_00008_00005, 13, aux166)
div(M_00008_00002, 13, aux167)
reify(gaceq(M_00002_00008,M_00003_00008), aux168)
reify(gaceq(M_00008_00002,M_00009_00002), aux169)
reify(gaceq(M_00007_00005,M_00008_00005), aux170)
reify(gaceq(M_00007_00007,M_00006_00007), aux171)
reify(gaceq(M_00007_00002,M_00006_00003), aux172)
reify(gaceq(M_00002_00006,M_00003_00006), aux173)
reify(gaceq(M_00005_00006,M_00006_00005), aux174)
div(M_00003_00008, 13, aux175)
reify(gaceq(M_00007_00004,M_00008_00004), aux176)
div(M_00003_00006, 13, aux177)
div(M_00003_00005, 13, aux178)
reify(gaceq(M_00007_00007,M_00008_00006), aux179)
reify(gaceq(M_00007_00005,M_00008_00004), aux180)
reify(gaceq(M_00003_00001,M_00004_00001), aux181)
reify(gaceq(M_00007_00005,M_00006_00005), aux182)
div(M_00005_00004, 13, aux183)
div(M_00005_00005, 13, aux184)
div(M_00005_00006, 13, aux185)
reify(gaceq(M_00005_00001,M_00006_00001), aux186)
reify(gaceq(M_00007_00005,M_00006_00006), aux187)
div(M_00009_00005, 13, aux188)
div(M_00009_00003, 13, aux189)
div(M_00009_00001, 13, aux190)
reify(gaceq(M_00002_00007,M_00003_00007), aux191)
div(M_00004_00001, 13, aux192)
div(M_00004_00010, 13, aux193)
reify(gaceq(M_00004_00008,M_00005_00008), aux194)
reify(gaceq(M_00007_00004,M_00006_00005), aux195)
reify(gaceq(M_00007_00003,M_00008_00003), aux196)
reify(gaceq(M_00003_00010,M_00004_00009), aux197)
reify(gaceq(M_00007_00001,M_00008_00001), aux198)
reify(gaceq(M_00004_00005,M_00005_00005), aux199)
reify(gaceq(M_00007_00004,M_00006_00004), aux200)
gccweak([M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,29),w-literal(M_00002_00004,33),w-literal(M_00002_00005,46),w-literal(M_00002_00006,38),w-literal(M_00002_00007,13),w-literal(M_00002_00008,24),w-literal(M_00002_00009,2),w-literal(M_00002_00010,12),w-literal(M_00002_00011,44),w-literal(M_00002_00012,37)}),watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,29),w-literal(M_00002_00004,33),w-literal(M_00002_00005,46),w-literal(M_00002_00006,38),w-literal(M_00002_00007,13),w-literal(M_00002_00008,24),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)}),watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,33),w-literal(M_00002_00004,46),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,24),w-literal(M_00002_00008,2),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)}),watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,29),w-literal(M_00002_00004,33),w-literal(M_00002_00005,46),w-literal(M_00002_00006,38),w-literal(M_00002_00007,24),w-literal(M_00002_00008,2),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)}),watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,38),w-literal(M_00002_00004,33),w-literal(M_00002_00006,13),w-literal(M_00002_00005,46),w-literal(M_00002_00007,24),w-literal(M_00002_00008,2),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)}),watched-and({w-literal(M_00002_00002,16),w-literal(M_00002_00003,29),w-literal(M_00002_00004,46),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,24),w-literal(M_00002_00008,2),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)}),watched-and({w-literal(M_00002_00002,29),w-literal(M_00002_00003,33),w-literal(M_00002_00004,46),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,24),w-literal(M_00002_00008,2),w-literal(M_00002_00009,7),w-literal(M_00002_00010,44),w-literal(M_00002_00011,37),w-literal(M_00002_00012,12)})})
watched-or({watched-and({w-literal(M_00003_00001,48),w-literal(aux77,1),w-literal(aux85,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux202,13,0),gaceq(aux53,aux18)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux95,1),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux203,13,0),gaceq(aux17,aux18)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux204,13,0),gaceq(aux18,aux15)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux205,13,0),w-literal(aux50,1)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux168,1),w-literal(aux94,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux206,13,0),w-literal(aux20,1)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux85,1),w-literal(aux163,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux207,13,0),w-literal(aux15,2)})}),watched-and({w-literal(M_00003_00001,48),modulo(aux208,13,0),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux168,1),w-literal(aux94,1),w-literal(aux96,1),w-literal(aux93,1)}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux209,13,0),w-literal(aux15,1)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux173,1),w-literal(aux191,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),modulo(aux210,13,0)}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux92,1),w-literal(aux95,1),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux211,13,0),w-literal(aux17,2)})}),watched-and({w-literal(M_00003_00001,48),gaceq(M_00002_00003,M_00003_00002),w-literal(aux92,1),w-literal(aux95,1),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux212,13,0),w-literal(aux53,2)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux94,1),w-literal(aux96,1),gaceq(M_00002_00011,M_00003_00008),w-literal(aux135,1),modulo(aux213,13,0)}),watched-and({watched-or({w-literal(aux17,3),modulo(aux214,13,0)}),w-literal(aux159,1),w-literal(aux77,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux95,1),w-literal(aux62,1),w-literal(aux126,1),w-literal(aux70,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1)}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux168,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux215,13,0),w-literal(aux20,0)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux168,1),w-literal(aux94,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux216,13,0),gaceq(aux20,aux51)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux168,1),w-literal(aux96,1),w-literal(aux93,1),gaceq(M_00002_00012,M_00003_00009),watched-or({modulo(aux217,13,0),w-literal(aux52,0)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux168,1),w-literal(aux94,1),w-literal(aux96,1),w-literal(aux135,1),watched-or({modulo(aux218,13,0),gaceq(aux51,aux52)})}),watched-and({w-literal(M_00003_00001,48),w-literal(aux159,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux163,1),w-literal(aux173,1),w-literal(aux191,1),w-literal(aux129,1),w-literal(aux45,1),w-literal(aux160,1),w-literal(aux135,1),watched-or({modulo(aux219,13,0),w-literal(aux50,0)})})})
watched-or({watched-and({w-literal(aux36,1),w-literal(aux151,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux64,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux220,13,0),div(M_00003_00001, 13, aux121)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux149,1),w-literal(aux64,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux221,13,0),gaceq(aux120,aux121)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux64,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux222,13,0),gaceq(aux121,aux178)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux223,13,0),gaceq(aux177,aux118)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux130,1),w-literal(aux57,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux224,13,0),gaceq(aux177,aux119)})}),watched-and({w-literal(aux181,1),w-literal(aux151,1),w-literal(aux73,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux225,13,0),gaceq(aux72,aux178)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux226,13,0),gaceq(aux178,aux177)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux125,1),w-literal(aux149,1),w-literal(aux64,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),modulo(aux227,13,0)}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux102,1),w-literal(aux33,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),modulo(aux228,13,0)}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux73,1),w-literal(aux102,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux229,13,0),gaceq(aux120,aux177)})}),watched-and({w-literal(aux181,1),w-literal(aux125,1),w-literal(aux149,1),w-literal(aux64,1),w-literal(aux107,1),w-literal(aux61,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux230,13,0),gaceq(aux72,aux120)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux33,1),w-literal(aux130,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux231,13,0),gaceq(aux178,aux175)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux57,1),w-literal(aux152,1),w-literal(aux124,1),modulo(aux232,13,0)}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux233,13,0),gaceq(aux175,aux119)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux57,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux234,13,0),gaceq(aux119,aux117)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux152,1),w-literal(aux124,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux235,13,0),gaceq(aux175,aux71)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux57,1),w-literal(aux152,1),w-literal(aux66,1),watched-or({modulo(aux236,13,0),gaceq(aux117,aux71)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux47,1),w-literal(aux21,1),w-literal(aux197,1),w-literal(aux66,1),watched-or({modulo(aux237,13,0),gaceq(aux118,aux175)})}),watched-and({w-literal(aux181,1),w-literal(aux36,1),w-literal(aux151,1),w-literal(aux73,1),w-literal(aux102,1),w-literal(aux33,1),w-literal(aux57,1),w-literal(aux152,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux66,1),watched-or({modulo(aux238,13,0),gaceq(aux118,aux117)})})})
watched-or({watched-and({modulo(aux239,13,0),w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux80,1),w-literal(aux48,1),w-literal(aux194,1),w-literal(aux137,1)}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux80,1),w-literal(aux48,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux40,aux41),modulo(aux240,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux80,1),w-literal(aux48,1),w-literal(aux194,1),w-literal(aux49,1),watched-or({gaceq(aux41,aux193),modulo(aux241,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux80,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux154,aux40),modulo(aux242,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux80,1),w-literal(aux194,1),w-literal(aux137,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux154,aux193),modulo(aux243,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux158,aux154),modulo(aux244,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux199,1),w-literal(aux48,1),w-literal(aux194,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux49,1),watched-or({gaceq(aux158,aux41),modulo(aux245,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux138,1),w-literal(aux91,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux43,aux42),modulo(aux246,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux91,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux42,aux156),modulo(aux247,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux157,aux158),modulo(aux248,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux30,1),w-literal(aux80,1),w-literal(aux48,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux157,aux40),modulo(aux249,13,0)})}),watched-and({w-literal(aux122,1),w-literal(aux114,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux192,aux156),modulo(aux250,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux156,aux157),modulo(aux251,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux114,1),w-literal(aux30,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux43,aux157),modulo(aux252,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux138,1),w-literal(aux91,1),w-literal(aux34,1),w-literal(aux39,1),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux192,aux43),modulo(aux253,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux30,1),w-literal(aux199,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux98,1),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux42,aux158),modulo(aux254,13,0)})}),watched-and({w-literal(aux97,1),w-literal(aux122,1),w-literal(aux114,1),w-literal(aux199,1),w-literal(aux80,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux140,1),w-literal(aux145,1),w-literal(aux49,1),watched-or({gaceq(aux156,aux154),modulo(aux255,13,0)})})})
watched-or({watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux153,1),w-literal(aux123,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux256,13,0),gaceq(aux134,aux183)})}),watched-and({w-literal(aux139,1),w-literal(aux63,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux123,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux257,13,0),gaceq(aux75,aux183)})}),watched-and({w-literal(aux186,1),w-literal(aux63,1),w-literal(aux46,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux258,13,0),gaceq(aux133,aux184)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux46,1),w-literal(aux56,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux259,13,0),gaceq(aux134,aux185)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux56,1),w-literal(aux136,1),w-literal(aux65,1),w-literal(aux128,1),modulo(aux260,13,0)}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux56,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux261,13,0),gaceq(aux185,aux131)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux56,1),w-literal(aux136,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux262,13,0),gaceq(aux131,aux132)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux56,1),w-literal(aux65,1),w-literal(aux128,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux263,13,0),gaceq(aux185,aux76)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux56,1),w-literal(aux136,1),w-literal(aux65,1),w-literal(aux86,1),watched-or({modulo(aux264,13,0),gaceq(aux132,aux76)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux265,13,0),gaceq(aux184,aux185)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux46,1),w-literal(aux136,1),w-literal(aux65,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux86,1),watched-or({modulo(aux266,13,0),gaceq(aux184,aux132)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux123,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux267,13,0),gaceq(aux75,aux133)})}),watched-and({w-literal(aux186,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux123,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux268,13,0),gaceq(aux133,aux134)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux123,1),w-literal(aux174,1),w-literal(aux31,1),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux269,13,0),gaceq(aux183,aux184)})}),watched-and({w-literal(aux186,1),w-literal(aux139,1),w-literal(aux63,1),w-literal(aux56,1),w-literal(aux136,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux110,1),w-literal(aux86,1),watched-or({modulo(aux270,13,0),gaceq(aux183,aux131)})})})
watched-or({watched-and({w-literal(aux99,1),w-literal(aux172,1),w-literal(aux162,1),w-literal(aux195,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux84,aux83),modulo(aux271,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux195,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux115,aux112),modulo(aux272,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux172,1),w-literal(aux162,1),w-literal(aux195,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux115,aux84),modulo(aux273,13,0)})}),watched-and({w-literal(aux99,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux60,1),w-literal(aux200,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux84,aux113),modulo(aux274,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux200,1),w-literal(aux182,1),w-literal(aux13,1),w-literal(aux171,1),modulo(aux275,13,0)}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux200,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux113,aux82),modulo(aux276,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux200,1),w-literal(aux182,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux82,aux81),modulo(aux277,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux200,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux171,1),watched-or({gaceq(aux113,aux116),modulo(aux278,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux200,1),w-literal(aux182,1),w-literal(aux13,1),w-literal(aux44,1),watched-or({gaceq(aux81,aux116),modulo(aux279,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux195,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux112,aux113),modulo(aux280,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux60,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux182,1),w-literal(aux13,1),w-literal(aux44,1),watched-or({gaceq(aux112,aux81),modulo(aux281,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),w-literal(aux162,1),w-literal(aux195,1),w-literal(aux187,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux83,aux112),modulo(aux282,13,0)})}),watched-and({w-literal(aux99,1),w-literal(aux24,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux200,1),w-literal(aux182,1),w-literal(aux103,1),w-literal(aux44,1),watched-or({gaceq(aux83,aux82),modulo(aux283,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux284,13,0),gaceq(aux148,aux23)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux196,1),w-literal(aux170,1),w-literal(aux104,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux141,aux142)}),w-literal(aux198,1),w-literal(aux105,1),w-literal(aux150,1),w-literal(aux180,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux148,aux144)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux196,1),w-literal(aux180,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux143,aux23)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux196,1),w-literal(aux176,1),w-literal(aux170,1),w-literal(aux179,1)}),watched-and({modulo(aux288,13,0),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux196,1),w-literal(aux176,1),w-literal(aux170,1),w-literal(aux104,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux142,aux143)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux176,1),w-literal(aux170,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux290,13,0),gaceq(aux22,aux148)}),w-literal(aux74,1),w-literal(aux196,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux180,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux291,13,0),gaceq(aux142,aux148)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux150,1),w-literal(aux180,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux292,13,0),gaceq(aux144,aux143)}),w-literal(aux198,1),w-literal(aux74,1),w-literal(aux196,1),w-literal(aux176,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux293,13,0),gaceq(aux22,aux141)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux105,1),w-literal(aux150,1),w-literal(aux180,1),w-literal(aux58,1),w-literal(aux179,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux141,aux144)}),w-literal(aux198,1),w-literal(aux196,1),w-literal(aux176,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux58,1),w-literal(aux179,1)})})
watched-or({watched-and({watched-or({gaceq(aux78,aux165),modulo(aux295,13,0)}),w-literal(aux169,1),w-literal(aux146,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux147,1),w-literal(aux161,1)}),watched-and({watched-or({gaceq(aux166,aux79),modulo(aux296,13,0)}),w-literal(aux155,1),w-literal(aux169,1),w-literal(aux146,1),w-literal(aux29,1),w-literal(aux161,1)}),watched-and({watched-or({gaceq(aux165,aux166),modulo(aux297,13,0)}),w-literal(aux155,1),w-literal(aux169,1),w-literal(aux146,1),w-literal(aux147,1),w-literal(aux161,1)}),watched-and({watched-or({gaceq(aux164,aux165),modulo(aux298,13,0)}),w-literal(aux155,1),w-literal(aux169,1),w-literal(aux59,1),w-literal(aux147,1),w-literal(aux161,1)}),watched-and({watched-or({gaceq(aux167,aux164),modulo(aux299,13,0)}),w-literal(aux155,1),w-literal(aux108,1),w-literal(aux59,1),w-literal(aux147,1),w-literal(aux161,1)}),watched-and({watched-or({gaceq(aux78,aux167),modulo(aux300,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux108,1),w-literal(aux59,1),w-literal(aux147,1),w-literal(aux161,1)}),watched-and({w-literal(aux155,1),w-literal(aux169,1),w-literal(aux146,1),w-literal(aux29,1),w-literal(aux109,1),modulo(aux301,13,0)}),watched-and({watched-or({gaceq(aux164,aux79),modulo(aux302,13,0)}),w-literal(aux155,1),w-literal(aux169,1),w-literal(aux29,1),w-literal(aux109,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux167,aux166),modulo(aux303,13,0)}),w-literal(aux155,1),w-literal(aux146,1),w-literal(aux29,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux161,1)})})
watched-or({watched-and({watched-or({modulo(aux304,13,0),gaceq(aux190,aux100)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux89,1),w-literal(aux90,1),w-literal(aux35,1)}),watched-and({modulo(aux305,13,0),w-literal(aux32,1),w-literal(aux89,1),w-literal(aux90,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux306,13,0),gaceq(aux190,aux101)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux38,1),w-literal(aux111,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux307,13,0),gaceq(aux101,aux188)}),w-literal(aux32,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux90,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux308,13,0),gaceq(aux101,aux189)}),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux111,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux309,13,0),gaceq(aux189,aux100)}),w-literal(aux32,1),w-literal(aux89,1),w-literal(aux111,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux310,13,0),gaceq(aux100,aux188)}),w-literal(aux32,1),w-literal(aux89,1),w-literal(aux90,1),w-literal(aux35,1)})})
watched-or({watched-and({w-literal(aux68,1),w-literal(aux88,1),w-literal(aux67,1),watched-or({gaceq(aux28,aux27),modulo(aux311,13,0)})}),watched-and({w-literal(aux68,1),w-literal(aux69,1),w-literal(aux67,1),watched-or({gaceq(aux27,aux25),modulo(aux312,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux88,1),w-literal(aux67,1),watched-or({gaceq(aux26,aux28),modulo(aux313,13,0)})}),watched-and({w-literal(aux69,1),w-literal(aux87,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux26,aux25),modulo(aux314,13,0)})}),watched-and({w-literal(aux68,1),w-literal(aux69,1),w-literal(aux87,1),modulo(aux315,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux106),modulo(aux316,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux54,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux106),modulo(aux317,13,0)}),w-literal(aux55,1),w-literal(aux54,1)}),watched-and({modulo(aux318,13,0),w-literal(aux55,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux201),modulo(aux319,13,0)})}),watched-and({modulo(aux320,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux202)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux202)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux203)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux203)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux204)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux204)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux205)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux205)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux206)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux206)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux207)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux207)
weightedsumleq([-1,1],[M_00002_00012,-1],aux208)
weightedsumgeq([-1,1],[M_00002_00012,-1],aux208)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux209)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux209)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux210)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux210)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux211)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux211)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux212)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux212)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux213)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux213)
sumleq([M_00002_00004,-48],aux214)
sumgeq([M_00002_00004,-48],aux214)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux215)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux215)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux216)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux216)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux217)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux217)
weightedsumleq([-1,1],[M_00002_00011,M_00002_00012],aux218)
weightedsumgeq([-1,1],[M_00002_00011,M_00002_00012],aux218)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux219)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux219)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux220)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux220)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux221)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux221)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux222)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux222)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux223)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux223)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux224)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux224)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux225)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux225)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux226)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux226)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux227)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux227)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux228)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux228)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux229)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux229)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux230)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux230)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumleq([-1,1],[M_00003_00011,-1],aux232)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux232)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux233)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux233)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux235)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux235)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux236)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux236)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux237)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux237)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux238)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux238)
weightedsumleq([-1,1],[M_00004_00010,-1],aux239)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux239)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux240)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux240)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux241)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux241)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux242)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux242)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux243)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux243)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux244)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux244)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux245)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux245)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux247)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux247)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux248)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux248)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux250)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux250)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux251)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux251)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux252)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux252)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux253)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux253)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux254)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux254)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux255)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux255)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux256)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux256)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux257)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux257)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux258)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux258)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux259)
weightedsumleq([1,-1],[-1,M_00005_00009],aux260)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux260)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux261)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux261)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux262)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux263)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux263)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux264)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux264)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux265)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux265)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux266)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux266)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux268)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux269)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux269)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux270)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux270)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux271)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux271)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux272)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux272)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux273)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux273)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux274)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux274)
weightedsumleq([1,-1],[-1,M_00006_00008],aux275)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux275)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux276)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux276)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux277)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux277)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux278)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux279)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux279)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux280)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux280)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux281)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux281)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux282)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux283)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux283)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux284)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux284)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux285)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux285)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux286)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux286)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux287)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux287)
weightedsumleq([-1,1],[M_00007_00007,-1],aux288)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux288)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux289)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux289)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux290)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux290)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux291)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux291)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux292)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux292)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux293)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux294)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux295)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux295)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux296)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux296)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux297)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux297)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux298)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux298)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux299)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux299)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux300)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux300)
weightedsumleq([-1,1],[M_00008_00006,-1],aux301)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux301)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux302)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux302)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux303)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux303)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux304)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux304)
weightedsumleq([1,-1],[-1,M_00009_00005],aux305)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux305)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux306)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux306)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux307)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux307)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux308)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux308)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux309)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux309)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux310)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux310)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux311)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux311)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux312)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux312)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux313)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux313)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux314)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux314)
weightedsumleq([-1,1],[M_00010_00004,-1],aux315)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux315)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux316)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux316)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux317)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux317)
weightedsumleq([-1,1],[M_00011_00003,-1],aux318)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux318)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux319)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux319)
weightedsumleq([-1,1],[M_00012_00002,-1],aux320)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux320)
**EOF**
