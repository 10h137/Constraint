MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 142
# CSE_active_eliminated_expressions = 664
# CSE_active_total_size = 426
**VARIABLES**
DISCRETE M_00002_00003 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{40..42}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [40,40,42,42])
**VARIABLES**
DISCRETE M_00002_00005 #
{12..40}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [12,12,16,16,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00002_00006 #
{4..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [4,4,10,12])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,10,10])
**VARIABLES**
DISCRETE M_00002_00008 #
{10..29}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [10,12,16,16,29,29])
**VARIABLES**
DISCRETE M_00003_00002 #
{16..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00003_00003 #
{40..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00004 #
{12..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [12,12,16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..40}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,10,12])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,10,12,16,16,29,29])
**VARIABLES**
DISCRETE M_00003_00008 #
{11..34}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [11,12,16,16,29,29,31,31,34,34])
**VARIABLES**
DISCRETE M_00003_00009 #
{34..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00003_00010 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [11,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00004_00001 #
{16..42}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00004_00002 #
{16..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00003 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [12,12,16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..40}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,10,12,16,16,29,29])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..34}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,10,12,16,16,29,29,31,31,34,34])
**VARIABLES**
DISCRETE M_00004_00008 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [11,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00001 #
{16..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00002 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [12,12,16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00005_00007 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00008 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [11,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00001 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [12,12,16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00007 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00004 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00003 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00012_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [4,4,10,12,16,16,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux14 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux15 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux18 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux19 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux20 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux22 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux24 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux25 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..3}
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
BOOL aux28 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux29 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux32 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux33 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{1..3}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux39 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux43 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux45 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux46 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux47 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux48 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux49 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux50 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux51 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux52 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux53 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{2..3}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{1..3}
BOOL aux60 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux71 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux72 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux74 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux76 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux77 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux78 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux81 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux84 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..3}
BOOL aux93 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux94 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux99 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux106 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux107 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux112 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux113 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux114 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux115 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux116 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux117 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux123 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux124 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux125 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux127 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux128 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux134 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux136 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux137 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux138 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux142 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux143 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux144 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux145 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux153 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux154 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux155 #
{0..3}
DISCRETE aux156 #( - M_00002_00005 + M_00002_00006)
{-36..-8}
**CONSTRAINTS**
w-inintervalset(aux156, [-36,-36,-30,-27,-25,-17,-12,-12,-8,-8])
**VARIABLES**
DISCRETE aux157 #( - M_00002_00005 + M_00002_00008)
{-30..17}
**CONSTRAINTS**
w-inintervalset(aux157, [-30,-28,-24,-17,-15,-15,-13,-13,-11,-11,-6,-4,-2,0,4,4,13,13,17,17])
**VARIABLES**
DISCRETE aux158 #( - M_00002_00007 + M_00002_00008)
{6..19}
**CONSTRAINTS**
w-inintervalset(aux158, [6,8,12,12,19,19])
**VARIABLES**
DISCRETE aux159 #( - M_00002_00004 + M_00002_00005)
{-28..-2}
**CONSTRAINTS**
w-inintervalset(aux159, [-28,-28,-26,-26,-24,-24,-13,-13,-11,-11,-9,-8,-6,-6,-2,-2])
**VARIABLES**
DISCRETE aux160 #( - M_00002_00003 + M_00002_00004)
{-5..-2}
**CONSTRAINTS**
w-inintervalset(aux160, [-5,-5,-3,-2])
**VARIABLES**
DISCRETE aux161 #(M_00002_00003 + -16)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux161, [26,26,29,29])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00008 + 11)
{-18..1}
**CONSTRAINTS**
w-inintervalset(aux162, [-18,-18,-5,-5,-1,1])
**VARIABLES**
DISCRETE aux163 #(M_00002_00005 + -16)
{-4..24}
**CONSTRAINTS**
w-inintervalset(aux163, [-4,-4,0,0,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux164 #( - M_00002_00008 + 34)
{5..24}
**CONSTRAINTS**
w-inintervalset(aux164, [5,5,18,18,22,24])
**VARIABLES**
DISCRETE aux165 #( - M_00003_00003 + M_00003_00004)
{-30..0}
**CONSTRAINTS**
w-inintervalset(aux165, [-30,-28,-26,-26,-24,-24,-16,-16,-14,-13,-11,-11,-9,-8,-6,-5,-3,-2,0,0])
**VARIABLES**
DISCRETE aux166 #( - M_00003_00004 + M_00003_00005)
{-38..0}
**CONSTRAINTS**
w-inintervalset(aux166, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,-8,-6,0])
**VARIABLES**
DISCRETE aux167 #( - M_00003_00006 + M_00003_00007)
{-8..25}
**CONSTRAINTS**
w-inintervalset(aux167, [-8,-6,-2,2,4,8,12,12,17,19,25,25])
**VARIABLES**
DISCRETE aux168 #( - M_00003_00010 + -1)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux168, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-12])
**VARIABLES**
DISCRETE aux169 #(M_00003_00002 + -31)
{-15..11}
**CONSTRAINTS**
w-inintervalset(aux169, [-15,-15,-2,-2,0,0,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux170 #( - M_00003_00002 + M_00003_00005)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux170, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,-8,-6,-2,0,0,2,3,5,6,9,9,11,11,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux171 #( - M_00003_00005 + M_00003_00006)
{-36..6}
**CONSTRAINTS**
w-inintervalset(aux171, [-36,-36,-30,-27,-25,-17,-12,-12,-8,-4,-2,2,6,6])
**VARIABLES**
DISCRETE aux172 #( - M_00003_00002 + M_00003_00003)
{-2..29}
**CONSTRAINTS**
w-inintervalset(aux172, [-2,-2,0,0,2,3,5,6,8,9,11,11,13,14,16,16,24,24,26,26,29,29])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00004 + M_00003_00007)
{-38..17}
**CONSTRAINTS**
w-inintervalset(aux173, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-8,-8,-6,-4,-2,0,4,4,13,13,17,17])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00005 + M_00003_00008)
{-29..30}
**CONSTRAINTS**
w-inintervalset(aux174, [-29,-28,-24,-22,-20,-17,-15,-15,-13,-13,-11,-11,-9,-9,-6,8,12,13,15,15,17,25,27,27,30,30])
**VARIABLES**
DISCRETE aux175 #(M_00003_00004 + -31)
{-19..11}
**CONSTRAINTS**
w-inintervalset(aux175, [-19,-19,-15,-15,-2,-2,0,0,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00007 + M_00003_00008)
{5..30}
**CONSTRAINTS**
w-inintervalset(aux176, [5,8,12,13,15,15,17,25,27,27,30,30])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00008 + M_00003_00009)
{12..23}
**CONSTRAINTS**
w-inintervalset(aux177, [12,18,22,23])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00007 + M_00003_00010)
{-18..42}
**CONSTRAINTS**
w-inintervalset(aux178, [-18,-17,-13,-13,-5,-4,-1,2,4,8,11,13,15,36,38,38,41,42])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00009 + M_00003_00010)
{-35..12}
**CONSTRAINTS**
w-inintervalset(aux179, [-35,-33,-31,-28,-26,-26,-24,-22,-18,-11,-9,-8,-6,6,8,8,11,12])
**VARIABLES**
DISCRETE aux180 #( - M_00003_00003 + M_00003_00006)
{-41..-30}
**CONSTRAINTS**
w-inintervalset(aux180, [-41,-41,-38,-38,-36,-30])
**VARIABLES**
DISCRETE aux181 #( - M_00004_00007 + M_00004_00008)
{-18..42}
**CONSTRAINTS**
w-inintervalset(aux181, [-18,-17,-15,-15,-13,-13,-5,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux182 #( - M_00004_00008 + M_00004_00009)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux182, [-35,-33,-31,-28,-26,-26,-24,-22,-20,-11,-9,-8,-6,6,8,9,11,20,22,24,26,26,28,31,33,35])
**VARIABLES**
DISCRETE aux183 #( - M_00004_00006 + M_00004_00007)
{-18..30}
**CONSTRAINTS**
w-inintervalset(aux183, [-18,-17,-13,-12,-8,-4,-2,2,4,8,12,13,15,15,17,25,27,27,30,30])
**VARIABLES**
DISCRETE aux184 #( - M_00004_00006 + M_00004_00009)
{-18..42}
**CONSTRAINTS**
w-inintervalset(aux184, [-18,-17,-13,-13,-5,-4,-1,2,4,8,11,13,15,36,38,38,41,42])
**VARIABLES**
DISCRETE aux185 #( - M_00004_00005 + M_00004_00006)
{-36..25}
**CONSTRAINTS**
w-inintervalset(aux185, [-36,-36,-30,-27,-25,-17,-15,-15,-13,-11,-8,-4,-2,2,4,8,12,13,17,19,25,25])
**VARIABLES**
DISCRETE aux186 #( - M_00004_00005 + M_00004_00008)
{-29..42}
**CONSTRAINTS**
w-inintervalset(aux186, [-29,-28,-24,-22,-20,-17,-15,-15,-13,-13,-11,-11,-9,-9,-6,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux187 #( - M_00004_00001 + M_00004_00002)
{-18..26}
**CONSTRAINTS**
w-inintervalset(aux187, [-18,-18,-15,-15,-13,-13,-11,-11,-9,-8,-6,-5,-3,-2,0,0,2,3,5,6,8,9,11,11,13,16,18,18,24,24,26,26])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00002 + M_00004_00003)
{-33..29}
**CONSTRAINTS**
w-inintervalset(aux188, [-33,-33,-30,-28,-26,-26,-24,-24,-22,-22,-19,-13,-11,-11,-9,-8,-6,-2,0,0,2,3,5,6,8,9,11,11,13,16,18,18,24,24,26,26,29,29])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00004 + M_00004_00005)
{-38..28}
**CONSTRAINTS**
w-inintervalset(aux189, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,9,11,13,15,15,17,25,27,28])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00004 + M_00004_00007)
{-38..30}
**CONSTRAINTS**
w-inintervalset(aux190, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,8,12,13,15,15,17,25,27,27,30,30])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00009 + -1)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux191, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-12])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00003 + M_00004_00004)
{-41..28}
**CONSTRAINTS**
w-inintervalset(aux192, [-41,-41,-38,-38,-36,-11,-9,-8,-6,0,2,6,8,9,11,11,13,13,15,15,17,19,22,22,24,24,26,26,28,28])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00001 + M_00004_00004)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux193, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,-8,-6,-2,0,0,2,3,5,6,8,9,11,11,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00002 + M_00004_00005)
{-41..24}
**CONSTRAINTS**
w-inintervalset(aux194, [-41,-41,-38,-38,-36,-11,-9,-8,-6,-2,0,0,2,3,5,6,9,9,11,11,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00003 + M_00004_00006)
{-41..17}
**CONSTRAINTS**
w-inintervalset(aux195, [-41,-41,-38,-38,-36,-15,-13,-11,-8,-8,-6,-4,-2,0,4,4,13,13,17,17])
**VARIABLES**
DISCRETE aux196 #( - M_00005_00002 + M_00005_00003)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux196, [-41,-41,-38,-38,-36,-11,-9,-8,-6,0,2,6,8,9,11,11,13,19,22,22,24,24,26,26,28,30])
**VARIABLES**
DISCRETE aux197 #( - M_00005_00001 + M_00005_00004)
{-41..26}
**CONSTRAINTS**
w-inintervalset(aux197, [-41,-41,-38,-38,-36,-11,-9,-8,-6,-2,0,0,2,3,5,6,8,9,11,11,13,13,15,15,18,18,24,24,26,26])
**VARIABLES**
DISCRETE aux198 #( - M_00005_00002 + M_00005_00005)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux198, [-41,-41,-38,-38,-36,-11,-9,-8,-6,6,8,9,11,19,22,22,24,24,26,26,28,30])
**VARIABLES**
DISCRETE aux199 #(-1 - M_00005_00008)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux199, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-12])
**VARIABLES**
DISCRETE aux200 #( - M_00005_00005 + M_00005_00006)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux200, [-42,-41,-38,-38,-36,-11,-9,9,11,13,15,15,17,32,36,36,38,38])
**VARIABLES**
DISCRETE aux201 #( - M_00005_00006 + M_00005_00007)
{-31..42}
**CONSTRAINTS**
w-inintervalset(aux201, [-31,-17,-15,-15,-13,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00005 + M_00005_00008)
{-35..42}
**CONSTRAINTS**
w-inintervalset(aux202, [-35,-33,-31,-28,-26,-26,-24,-22,-20,-11,-9,-8,-6,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux203 #( - M_00005_00007 + M_00005_00008)
{-35..42}
**CONSTRAINTS**
w-inintervalset(aux203, [-35,-33,-31,-28,-26,-26,-24,-22,-20,-11,-9,-8,-6,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00004 + M_00005_00005)
{-38..36}
**CONSTRAINTS**
w-inintervalset(aux204, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,9,11,36])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00004 + M_00005_00007)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux205, [-38,-38,-36,-36,-32,-17,-15,-15,-13,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00001 + M_00005_00002)
{-33..29}
**CONSTRAINTS**
w-inintervalset(aux206, [-33,-33,-30,-28,-26,-26,-24,-24,-22,-22,-19,-13,-11,-11,-9,-8,-6,-2,0,0,2,3,5,6,8,9,11,11,13,16,18,18,24,24,26,26,29,29])
**VARIABLES**
DISCRETE aux207 #( - M_00005_00003 + M_00005_00004)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux207, [-41,-41,-38,-38,-36,-11,-9,9,11,13,15,15,17,32,36,36])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00003 + M_00005_00006)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux208, [-41,-41,-38,-38,-36,-11,-9,9,11,13,15,15,17,30])
**VARIABLES**
DISCRETE aux209 #( - M_00006_00001 + M_00006_00004)
{-41..34}
**CONSTRAINTS**
w-inintervalset(aux209, [-41,-41,-38,-38,-36,-11,-9,-8,-6,6,8,9,11,19,22,22,24,24,26,26,28,30,33,34])
**VARIABLES**
DISCRETE aux210 #( - M_00006_00004 + M_00006_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux210, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux211 #(-1 - M_00006_00007)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux211, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
DISCRETE aux212 #( - M_00006_00005 + M_00006_00006)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux212, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux213 #( - M_00006_00004 + M_00006_00007)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux213, [-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux214 #( - M_00006_00006 + M_00006_00007)
{-38..42}
**CONSTRAINTS**
w-inintervalset(aux214, [-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux215 #( - M_00006_00003 + M_00006_00004)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux215, [-41,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux216 #( - M_00006_00003 + M_00006_00006)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux216, [-41,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00002 + M_00006_00003)
{-41..38}
**CONSTRAINTS**
w-inintervalset(aux217, [-41,-41,-38,-38,-36,-11,-9,9,11,36,38,38])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00002 + M_00006_00005)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux218, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38])
**VARIABLES**
DISCRETE aux219 #( - M_00006_00001 + M_00006_00002)
{-41..33}
**CONSTRAINTS**
w-inintervalset(aux219, [-41,-41,-38,-38,-36,-11,-9,-8,-6,6,8,9,11,19,22,22,24,24,26,26,28,30,33,33])
**VARIABLES**
DISCRETE aux220 #( - M_00007_00004 + M_00007_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux220, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux221 #( - M_00007_00001 + M_00007_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux221, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux222 #( - M_00007_00005 + M_00007_00006)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux222, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux223 #( - M_00007_00002 + M_00007_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux223, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux224 #( - M_00007_00003 + M_00007_00006)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux224, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux225 #( - M_00007_00001 + M_00007_00002)
{-42..41}
**CONSTRAINTS**
w-inintervalset(aux225, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,41])
**VARIABLES**
DISCRETE aux226 #( - M_00007_00002 + M_00007_00003)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux226, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux227 #( - M_00007_00006 + -1)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux227, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
DISCRETE aux228 #( - M_00007_00003 + M_00007_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux228, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux229 #( - M_00008_00001 + M_00008_00002)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux229, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux230 #( - M_00008_00002 + M_00008_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux230, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux231 #( - M_00008_00002 + M_00008_00003)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux231, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux232 #( - M_00008_00003 + M_00008_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux232, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux233 #( - M_00008_00005 + -1)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux233, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
DISCRETE aux234 #( - M_00008_00004 + M_00008_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux234, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux235 #( - M_00008_00001 + M_00008_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux235, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux236 #( - M_00009_00003 + M_00009_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux236, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux237 #( - M_00009_00001 + M_00009_00004)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux237, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux238 #( - M_00009_00002 + M_00009_00003)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux238, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux239 #(-1 - M_00009_00004)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux239, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
DISCRETE aux240 #( - M_00009_00001 + M_00009_00002)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux240, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux241 #( - M_00010_00001 + M_00010_00002)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux241, [-42,-41,-38,-38,-36,-11,-9,9,11,36,38,38,41,42])
**VARIABLES**
DISCRETE aux242 #( - M_00010_00002 + M_00010_00003)
{-34..26}
**CONSTRAINTS**
w-inintervalset(aux242, [-34,-11,-9,9,11,26])
**VARIABLES**
DISCRETE aux243 #( - M_00010_00003 + -1)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux243, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
DISCRETE aux244 #( - M_00011_00001 + M_00011_00002)
{-34..26}
**CONSTRAINTS**
w-inintervalset(aux244, [-34,-11,-9,9,11,26])
**VARIABLES**
DISCRETE aux245 #( - M_00011_00002 + -1)
{-47..-5}
**CONSTRAINTS**
w-inintervalset(aux245, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-17,-17,-13,-11,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[31, 16, 45, 42, 40, 12, 4, 10, 29, 34, 46, 11]
**SEARCH**
PRINT[[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux155)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
reify(gaceq(M_00003_00009,M_00004_00008), aux14)
reify(gaceq(M_00007_00002,M_00008_00002), aux15)
div(M_00007_00001, 13, aux16)
div(M_00007_00006, 13, aux17)
reify(gaceq(M_00007_00003,M_00006_00003), aux18)
reify(gaceq(M_00005_00002,M_00006_00002), aux19)
reify(gaceq(M_00003_00010,M_00004_00009), aux20)
div(M_00010_00002, 13, aux21)
reify(gaceq(M_00008_00002,M_00009_00002), aux22)
reify(gaceq(M_00008_00003,M_00009_00003), aux23)
reify(gaceq(M_00002_00007,M_00003_00006), aux24)
reify(gaceq(M_00005_00007,M_00006_00006), aux25)
div(M_00002_00005, 13, aux26)
div(M_00002_00008, 13, aux27)
reify(gaceq(M_00004_00005,M_00005_00004), aux28)
reify(gaceq(M_00003_00005,M_00004_00005), aux29)
reify(gaceq(M_00010_00003,M_00009_00003), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
reify(gaceq(M_00004_00006,M_00005_00005), aux32)
reify(gaceq(M_00004_00001,M_00005_00001), aux33)
div(M_00004_00008, 13, aux34)
div(M_00004_00003, 13, aux35)
div(M_00004_00002, 13, aux36)
div(M_00004_00007, 13, aux37)
reify(gaceq(M_00004_00006,M_00005_00006), aux38)
reify(gaceq(M_00003_00008,M_00004_00007), aux39)
div(M_00002_00006, 13, 0)
div(M_00002_00007, 13, 0)
div(M_00002_00004, 13, 3)
reify(gaceq(M_00007_00006,M_00008_00005), aux43)
reify(gaceq(M_00008_00004,M_00009_00003), aux44)
reify(gaceq(M_00003_00007,M_00004_00006), aux45)
reify(gaceq(M_00003_00005,M_00004_00004), aux46)
reify(gaceq(M_00005_00001,M_00006_00001), aux47)
reify(gaceq(M_00005_00006,M_00006_00006), aux48)
reify(gaceq(M_00007_00001,M_00008_00001), aux49)
reify(gaceq(M_00002_00003,M_00003_00003), aux50)
reify(gaceq(M_00004_00004,M_00005_00004), aux51)
reify(gaceq(M_00004_00005,M_00005_00005), aux52)
reify(gaceq(M_00002_00008,M_00003_00007), aux53)
div(M_00003_00009, 13, aux54)
div(M_00003_00006, 13, 0)
div(M_00003_00003, 13, 3)
div(M_00003_00010, 13, aux57)
div(M_00005_00008, 13, aux58)
div(M_00005_00001, 13, aux59)
reify(gaceq(M_00005_00003,M_00006_00003), aux60)
div(M_00008_00003, 13, aux61)
div(M_00008_00001, 13, aux62)
div(M_00008_00005, 13, aux63)
div(M_00006_00006, 13, aux64)
div(M_00006_00005, 13, aux65)
div(M_00006_00003, 13, aux66)
div(M_00006_00002, 13, aux67)
reify(gaceq(M_00010_00003,M_00011_00002), aux68)
reify(gaceq(M_00010_00001,M_00011_00001), aux69)
reify(gaceq(M_00004_00004,M_00005_00003), aux70)
reify(gaceq(M_00002_00006,M_00003_00005), aux71)
reify(gaceq(M_00005_00004,M_00006_00004), aux72)
reify(gaceq(M_00002_00004,M_00003_00003), aux73)
reify(gaceq(M_00002_00005,M_00003_00005), aux74)
reify(gaceq(M_00002_00006,M_00003_00006), aux75)
reify(gaceq(M_00002_00004,M_00003_00004), aux76)
reify(gaceq(M_00004_00007,M_00005_00006), aux77)
reify(gaceq(M_00007_00006,M_00006_00007), aux78)
reify(gaceq(M_00007_00005,M_00008_00005), aux79)
reify(gaceq(M_00007_00003,M_00008_00002), aux80)
reify(gaceq(M_00003_00006,M_00004_00005), aux81)
reify(gaceq(M_00008_00003,M_00009_00002), aux82)
reify(gaceq(M_00008_00004,M_00009_00004), aux83)
reify(gaceq(M_00005_00008,M_00006_00007), aux84)
reify(gaceq(M_00010_00001,M_00009_00001), aux85)
reify(gaceq(M_00010_00002,M_00009_00002), aux86)
reify(gaceq(M_00010_00003,M_00009_00004), aux87)
div(M_00006_00004, 13, aux88)
div(M_00006_00001, 13, aux89)
div(M_00006_00007, 13, aux90)
div(M_00003_00008, 13, aux91)
div(M_00003_00002, 13, aux92)
reify(gaceq(M_00005_00005,M_00006_00004), aux93)
reify(gaceq(M_00005_00005,M_00006_00005), aux94)
reify(gaceq(M_00003_00003,M_00004_00002), aux95)
reify(gaceq(M_00003_00009,M_00004_00009), aux96)
reify(gaceq(M_00005_00003,M_00006_00002), aux97)
reify(gaceq(M_00005_00007,M_00006_00007), aux98)
reify(gaceq(M_00003_00003,M_00004_00003), aux99)
div(M_00005_00007, 13, aux100)
div(M_00005_00006, 13, aux101)
div(M_00005_00002, 13, aux102)
div(M_00005_00003, 13, aux103)
reify(gaceq(M_00004_00008,M_00005_00008), aux104)
reify(gaceq(M_00004_00003,M_00005_00002), aux105)
reify(gaceq(M_00004_00008,M_00005_00007), aux106)
reify(gaceq(M_00003_00004,M_00004_00004), aux107)
div(M_00007_00002, 13, aux108)
div(M_00007_00004, 13, aux109)
div(M_00007_00003, 13, aux110)
div(M_00007_00005, 13, aux111)
reify(gaceq(M_00007_00002,M_00006_00002), aux112)
reify(gaceq(M_00004_00009,M_00005_00008), aux113)
reify(gaceq(M_00007_00001,M_00006_00001), aux114)
reify(gaceq(M_00008_00005,M_00009_00004), aux115)
reify(gaceq(M_00008_00001,M_00009_00001), aux116)
reify(gaceq(M_00003_00004,M_00004_00003), aux117)
reify(gaceq(M_00003_00008,M_00004_00008), aux118)
reify(gaceq(M_00007_00004,M_00008_00003), aux119)
reify(gaceq(M_00005_00004,M_00006_00003), aux120)
reify(gaceq(M_00003_00007,M_00004_00007), aux121)
div(M_00004_00004, 13, aux122)
div(M_00004_00005, 13, aux123)
div(M_00004_00006, 13, aux124)
reify(gaceq(M_00003_00002,M_00004_00002), aux125)
reify(gaceq(M_00007_00003,M_00006_00004), aux126)
reify(gaceq(M_00003_00006,M_00004_00006), aux127)
reify(gaceq(M_00004_00002,M_00005_00002), aux128)
div(M_00008_00004, 13, aux129)
div(M_00008_00002, 13, aux130)
reify(gaceq(M_00007_00004,M_00008_00004), aux131)
reify(gaceq(M_00007_00006,M_00006_00006), aux132)
reify(gaceq(M_00007_00002,M_00006_00003), aux133)
reify(gaceq(M_00005_00006,M_00006_00005), aux134)
reify(gaceq(M_00007_00003,M_00008_00003), aux135)
div(M_00003_00007, 13, aux136)
div(M_00003_00004, 13, aux137)
div(M_00003_00005, 13, aux138)
reify(gaceq(M_00007_00005,M_00008_00004), aux139)
reify(gaceq(M_00002_00005,M_00003_00004), aux140)
reify(gaceq(M_00002_00007,M_00003_00007), aux141)
div(M_00005_00004, 13, aux142)
div(M_00005_00005, 13, aux143)
reify(gaceq(M_00004_00003,M_00005_00003), aux144)
reify(gaceq(M_00007_00005,M_00006_00006), aux145)
div(M_00009_00003, 13, aux146)
div(M_00009_00004, 13, aux147)
div(M_00009_00001, 13, aux148)
div(M_00009_00002, 13, aux149)
div(M_00004_00009, 13, aux150)
div(M_00004_00001, 13, aux151)
reify(gaceq(M_00004_00007,M_00005_00007), aux152)
reify(gaceq(M_00007_00004,M_00006_00004), aux153)
reify(gaceq(M_00007_00004,M_00006_00005), aux154)
gccweak([M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00003,42),w-literal(M_00002_00004,40),w-literal(M_00002_00005,12),w-literal(M_00002_00006,4),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,40),w-literal(M_00002_00005,12),w-literal(M_00002_00006,4),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00006,4),w-literal(M_00002_00005,40),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,40),w-literal(M_00002_00006,12),w-literal(M_00002_00007,4),w-literal(M_00002_00008,10)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,40),w-literal(M_00002_00006,12),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)})})
watched-or({watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux71,1),w-literal(aux24,1),w-literal(aux53,1),watched-or({modulo(aux156,13,0),w-literal(aux26,0)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux74,1),w-literal(aux24,1),w-literal(aux53,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux75,1),w-literal(aux141,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux157,13,0),gaceq(aux26,aux27)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux74,1),w-literal(aux75,1),w-literal(aux53,1),watched-or({modulo(aux158,13,0),w-literal(aux27,0)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux50,1),w-literal(aux140,1),w-literal(aux71,1),w-literal(aux24,1),w-literal(aux53,1),watched-or({modulo(aux159,13,0),w-literal(aux26,3)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),w-literal(aux73,1),w-literal(aux140,1),w-literal(aux71,1),w-literal(aux24,1),w-literal(aux53,1),watched-or({modulo(aux160,13,0),div(M_00002_00003, 13, 3)})}),watched-and({w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),modulo(aux161,13,0),gaceq(M_00002_00003,M_00003_00002),w-literal(aux73,1),w-literal(aux140,1),w-literal(aux71,1),w-literal(aux24,1),w-literal(aux53,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,11),w-literal(M_00003_00009,34),w-literal(M_00003_00010,46),watched-or({w-literal(aux27,0),modulo(aux162,13,0)}),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux74,1),w-literal(aux75,1),w-literal(aux141,1)}),watched-and({w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),watched-or({w-literal(aux26,1),modulo(aux163,13,0)}),w-literal(aux50,1),w-literal(aux76,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux71,1),w-literal(aux24,1),w-literal(aux53,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,11),watched-or({w-literal(aux27,2),modulo(aux164,13,0)}),w-literal(aux50,1),w-literal(aux76,1),w-literal(aux74,1),w-literal(aux75,1),w-literal(aux141,1)})})
watched-or({watched-and({w-literal(aux125,1),w-literal(aux117,1),w-literal(aux46,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux165,13,0),w-literal(aux137,3)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux46,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux166,13,0),gaceq(aux137,aux138)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux167,13,0),w-literal(aux136,0)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux127,1),w-literal(aux121,1),w-literal(aux118,1),w-literal(aux96,1),modulo(aux168,13,0),w-literal(M_00004_00001,31)}),watched-and({watched-or({modulo(aux169,13,0),w-literal(aux92,2)}),gaceq(M_00003_00002,M_00004_00001),w-literal(aux95,1),w-literal(aux117,1),w-literal(aux46,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1)}),watched-and({w-literal(aux99,1),w-literal(aux107,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux170,13,0),gaceq(aux92,aux138)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux171,13,0),w-literal(aux138,0)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux95,1),w-literal(aux117,1),w-literal(aux46,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux172,13,0),w-literal(aux92,3)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux29,1),w-literal(aux127,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux173,13,0),gaceq(aux137,aux136)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux127,1),w-literal(aux121,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux174,13,0),gaceq(aux138,aux91)}),w-literal(M_00004_00001,31)}),watched-and({watched-or({modulo(aux175,13,0),w-literal(aux137,2)}),w-literal(aux125,1),w-literal(aux99,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux46,1),w-literal(aux81,1),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux127,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux176,13,0),gaceq(aux136,aux91)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux127,1),w-literal(aux121,1),w-literal(aux14,1),w-literal(aux20,1),watched-or({modulo(aux177,13,0),gaceq(aux91,aux54)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux127,1),w-literal(aux118,1),w-literal(aux96,1),gaceq(M_00003_00010,M_00004_00007),watched-or({modulo(aux178,13,0),gaceq(aux136,aux57)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux107,1),w-literal(aux29,1),w-literal(aux127,1),w-literal(aux121,1),w-literal(aux118,1),w-literal(aux20,1),watched-or({modulo(aux179,13,0),gaceq(aux54,aux57)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux107,1),w-literal(aux29,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux45,1),w-literal(aux39,1),w-literal(aux14,1),w-literal(aux20,1),modulo(aux180,13,0),w-literal(M_00004_00001,31)})})
watched-or({watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux52,1),w-literal(aux38,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux37,aux34),modulo(aux181,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux52,1),w-literal(aux38,1),w-literal(aux152,1),w-literal(aux113,1),watched-or({gaceq(aux34,aux150),modulo(aux182,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux52,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux124,aux37),modulo(aux183,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux52,1),w-literal(aux152,1),w-literal(aux104,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux124,aux150),modulo(aux184,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux123,aux124),modulo(aux185,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux38,1),w-literal(aux152,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux113,1),watched-or({gaceq(aux123,aux34),modulo(aux186,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux105,1),w-literal(aux70,1),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux151,aux36),modulo(aux187,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux105,1),w-literal(aux70,1),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux36,aux35),modulo(aux188,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux122,aux123),modulo(aux189,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux52,1),w-literal(aux38,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux122,aux37),modulo(aux190,13,0)})}),watched-and({modulo(aux191,13,0),w-literal(aux33,1),w-literal(aux128,1),w-literal(aux144,1),w-literal(aux51,1),w-literal(aux52,1),w-literal(aux38,1),w-literal(aux152,1),w-literal(aux104,1)}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux70,1),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux35,aux122),modulo(aux192,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux144,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux28,1),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux151,aux122),modulo(aux193,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux144,1),w-literal(aux51,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux32,1),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux36,aux123),modulo(aux194,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux128,1),w-literal(aux51,1),w-literal(aux52,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux77,1),w-literal(aux106,1),w-literal(aux113,1),watched-or({gaceq(aux35,aux124),modulo(aux195,13,0)})})})
watched-or({watched-and({w-literal(aux47,1),w-literal(aux97,1),w-literal(aux120,1),w-literal(aux93,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux196,13,0),gaceq(aux102,aux103)})}),watched-and({w-literal(aux19,1),w-literal(aux60,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux93,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux197,13,0),gaceq(aux59,aux142)})}),watched-and({w-literal(aux47,1),w-literal(aux60,1),w-literal(aux72,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux198,13,0),gaceq(aux102,aux143)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux72,1),w-literal(aux94,1),w-literal(aux48,1),w-literal(aux98,1),modulo(aux199,13,0)}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux72,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux200,13,0),gaceq(aux143,aux101)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux72,1),w-literal(aux94,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux201,13,0),gaceq(aux101,aux100)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux72,1),w-literal(aux48,1),w-literal(aux98,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux202,13,0),gaceq(aux143,aux58)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux72,1),w-literal(aux94,1),w-literal(aux48,1),w-literal(aux84,1),watched-or({modulo(aux203,13,0),gaceq(aux100,aux58)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux93,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux204,13,0),gaceq(aux142,aux143)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux60,1),w-literal(aux94,1),w-literal(aux48,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux84,1),watched-or({modulo(aux205,13,0),gaceq(aux142,aux100)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux97,1),w-literal(aux120,1),w-literal(aux93,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux206,13,0),gaceq(aux59,aux102)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux120,1),w-literal(aux93,1),w-literal(aux134,1),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux207,13,0),gaceq(aux103,aux142)})}),watched-and({w-literal(aux47,1),w-literal(aux19,1),w-literal(aux72,1),w-literal(aux94,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux25,1),w-literal(aux84,1),watched-or({modulo(aux208,13,0),gaceq(aux103,aux101)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux112,1),w-literal(aux18,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux89,aux88),modulo(aux209,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux18,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux88,aux65),modulo(aux210,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux18,1),w-literal(aux153,1),w-literal(aux13,1),w-literal(aux132,1),modulo(aux211,13,0)}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux18,1),w-literal(aux153,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux65,aux64),modulo(aux212,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux18,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux132,1),watched-or({gaceq(aux88,aux90),modulo(aux213,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux18,1),w-literal(aux153,1),w-literal(aux13,1),w-literal(aux78,1),watched-or({gaceq(aux64,aux90),modulo(aux214,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),w-literal(aux126,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux66,aux88),modulo(aux215,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux112,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux153,1),w-literal(aux13,1),w-literal(aux78,1),watched-or({gaceq(aux66,aux64),modulo(aux216,13,0)})}),watched-and({w-literal(aux114,1),w-literal(aux133,1),w-literal(aux126,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux67,aux66),modulo(aux217,13,0)})}),watched-and({w-literal(aux114,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux18,1),w-literal(aux153,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux67,aux65),modulo(aux218,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux133,1),w-literal(aux126,1),w-literal(aux154,1),w-literal(aux145,1),w-literal(aux78,1),watched-or({gaceq(aux89,aux67),modulo(aux219,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux220,13,0),gaceq(aux109,aux111)}),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux135,1),w-literal(aux139,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux221,13,0),gaceq(aux16,aux109)}),w-literal(aux15,1),w-literal(aux135,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux139,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux222,13,0),gaceq(aux111,aux17)}),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux135,1),w-literal(aux131,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux223,13,0),gaceq(aux108,aux111)}),w-literal(aux49,1),w-literal(aux135,1),w-literal(aux131,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux224,13,0),gaceq(aux110,aux17)}),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux131,1),w-literal(aux79,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux225,13,0),gaceq(aux16,aux108)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux80,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux226,13,0),gaceq(aux108,aux110)}),w-literal(aux49,1),w-literal(aux80,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux43,1)}),watched-and({modulo(aux227,13,0),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux135,1),w-literal(aux131,1),w-literal(aux79,1)}),watched-and({watched-or({modulo(aux228,13,0),gaceq(aux110,aux109)}),w-literal(aux49,1),w-literal(aux15,1),w-literal(aux119,1),w-literal(aux139,1),w-literal(aux43,1)})})
watched-or({watched-and({watched-or({gaceq(aux62,aux130),modulo(aux229,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux82,1),w-literal(aux44,1),w-literal(aux115,1)}),watched-and({watched-or({gaceq(aux130,aux63),modulo(aux230,13,0)}),w-literal(aux116,1),w-literal(aux23,1),w-literal(aux83,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux130,aux61),modulo(aux231,13,0)}),w-literal(aux116,1),w-literal(aux82,1),w-literal(aux44,1),w-literal(aux115,1)}),watched-and({watched-or({gaceq(aux61,aux129),modulo(aux232,13,0)}),w-literal(aux116,1),w-literal(aux22,1),w-literal(aux44,1),w-literal(aux115,1)}),watched-and({w-literal(aux116,1),w-literal(aux22,1),w-literal(aux23,1),w-literal(aux83,1),modulo(aux233,13,0)}),watched-and({watched-or({gaceq(aux129,aux63),modulo(aux234,13,0)}),w-literal(aux116,1),w-literal(aux22,1),w-literal(aux23,1),w-literal(aux115,1)}),watched-and({watched-or({gaceq(aux62,aux129),modulo(aux235,13,0)}),w-literal(aux22,1),w-literal(aux23,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux115,1)})})
watched-or({watched-and({watched-or({modulo(aux236,13,0),gaceq(aux146,aux147)}),w-literal(aux85,1),w-literal(aux86,1),w-literal(aux87,1)}),watched-and({watched-or({modulo(aux237,13,0),gaceq(aux148,aux147)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux86,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux238,13,0),gaceq(aux149,aux146)}),w-literal(aux85,1),w-literal(aux31,1),w-literal(aux87,1)}),watched-and({modulo(aux239,13,0),w-literal(aux85,1),w-literal(aux86,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux240,13,0),gaceq(aux148,aux149)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1),w-literal(aux87,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux68,1),watched-or({div(M_00010_00001, 13, aux21),modulo(aux241,13,0)})}),watched-and({w-literal(aux69,1),w-literal(aux68,1),watched-or({div(M_00010_00003, 13, aux21),modulo(aux242,13,0)})}),watched-and({w-literal(aux69,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux243,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux155),modulo(aux244,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux245,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux156)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux156)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux157)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux157)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux158)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux158)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux159)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux159)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux160)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux160)
sumleq([M_00002_00003,-16],aux161)
sumgeq([M_00002_00003,-16],aux161)
weightedsumleq([-1,1],[M_00002_00008,11],aux162)
weightedsumgeq([-1,1],[M_00002_00008,11],aux162)
sumleq([M_00002_00005,-16],aux163)
sumgeq([M_00002_00005,-16],aux163)
weightedsumleq([-1,1],[M_00002_00008,34],aux164)
weightedsumgeq([-1,1],[M_00002_00008,34],aux164)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux165)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux165)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux166)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux166)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux167)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux167)
weightedsumleq([-1,1],[M_00003_00010,-1],aux168)
weightedsumgeq([-1,1],[M_00003_00010,-1],aux168)
sumleq([M_00003_00002,-31],aux169)
sumgeq([M_00003_00002,-31],aux169)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux170)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux170)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux171)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux171)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux172)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux172)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux173)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux173)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux174)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux174)
sumleq([M_00003_00004,-31],aux175)
sumgeq([M_00003_00004,-31],aux175)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux176)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux176)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux177)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux177)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux178)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux178)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux179)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux179)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux180)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux180)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux181)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux181)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux182)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux182)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux183)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux183)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux184)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux184)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux185)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux185)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux186)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux186)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux187)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux187)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux188)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux188)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux189)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux189)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux190)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux190)
weightedsumleq([-1,1],[M_00004_00009,-1],aux191)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux191)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux192)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux192)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux193)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux193)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux194)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux194)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux195)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux195)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux196)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux196)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux197)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux197)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux198)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux198)
weightedsumleq([1,-1],[-1,M_00005_00008],aux199)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux199)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux200)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux200)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux201)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux201)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux202)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux202)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux203)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux203)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux204)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux204)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux205)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux205)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux206)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux206)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux207)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux207)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux208)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux208)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux209)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux209)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux210)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux210)
weightedsumleq([1,-1],[-1,M_00006_00007],aux211)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux211)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux212)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux212)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux213)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux213)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux214)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux214)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux215)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux215)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux216)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux216)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux217)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux217)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux218)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux218)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux219)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux219)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux220)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux220)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux221)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux221)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux222)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux222)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux223)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux223)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux224)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux224)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux225)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux225)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux226)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux226)
weightedsumleq([-1,1],[M_00007_00006,-1],aux227)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux227)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux228)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux228)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux229)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux229)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux230)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux230)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux231)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux231)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux232)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux232)
weightedsumleq([-1,1],[M_00008_00005,-1],aux233)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux233)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux234)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux234)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux235)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux235)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux236)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux236)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux237)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux237)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux238)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux238)
weightedsumleq([1,-1],[-1,M_00009_00004],aux239)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux239)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux240)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux240)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux241)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux241)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux242)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux242)
weightedsumleq([-1,1],[M_00010_00003,-1],aux243)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux243)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux244)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux244)
weightedsumleq([-1,1],[M_00011_00002,-1],aux245)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux245)
**EOF**
