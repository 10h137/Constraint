MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 194
# CSE_active_eliminated_expressions = 1000
# CSE_active_total_size = 582
**VARIABLES**
DISCRETE M_00002_00003 #
{42..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [42,42,45,45])
**VARIABLES**
DISCRETE M_00002_00004 #
{40..42}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [40,40,42,42])
**VARIABLES**
DISCRETE M_00002_00005 #
{12..40}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [12,13,16,16,25,25,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00002_00006 #
{4..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [4,4,10,10,12,12])
**VARIABLES**
DISCRETE M_00002_00007 #
{4..10}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [4,4,10,10])
**VARIABLES**
DISCRETE M_00002_00008 #
{10..29}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [10,10,12,13,16,16,25,25,29,29])
**VARIABLES**
DISCRETE M_00003_00002 #
{16..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00003_00003 #
{40..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00003_00004 #
{12..42}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00003_00005 #
{4..40}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00003_00006 #
{4..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [4,4,10,10,12,12])
**VARIABLES**
DISCRETE M_00003_00007 #
{4..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [4,4,10,10,12,13,16,16,25,25,29,29])
**VARIABLES**
DISCRETE M_00003_00008 #
{25..34}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [25,25,29,29,31,31,34,34])
**VARIABLES**
DISCRETE M_00003_00009 #
{34..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00003_00010 #
{25..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00004_00001 #
{16..42}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00004_00002 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [13,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00003 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00004_00005 #
{4..40}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40])
**VARIABLES**
DISCRETE M_00004_00006 #
{4..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [4,4,10,10,12,13,16,16,25,25,29,29])
**VARIABLES**
DISCRETE M_00004_00007 #
{4..34}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34])
**VARIABLES**
DISCRETE M_00004_00008 #
{25..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00004_00009 #
{25..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00001 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00002 #
{12..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00005_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00006 #
{4..42}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42])
**VARIABLES**
DISCRETE M_00005_00007 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00008 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [13,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00009 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00005_00010 #
{2..13}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [2,2,4,4,10,10,12,13])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,45])
**VARIABLES**
DISCRETE M_00006_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00005 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00006 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00007 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00008 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00006_00009 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00006 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00007 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00007_00008 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00006 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00008_00007 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00009_00006 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00010_00005 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00011_00004 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00012_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00012_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00012_00003 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00013_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00013_00002 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
DISCRETE M_00014_00001 #
{2..46}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [2,2,4,4,10,10,12,13,16,16,25,25,29,29,31,31,34,34,40,40,42,42,45,46])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux14 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux15 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..3}
BOOL aux18 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux22 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux23 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux25 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux26 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..3}
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{0..2}
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux31 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux33 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux34 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux35 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux36 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux38 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux39 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{1..3}
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux43 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux44 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux45 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux46 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux47 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux53 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux55 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux56 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux60 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux61 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux62 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux64 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{2..3}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{1..3}
DISCRETE aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
BOOL aux71 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
BOOL aux74 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux76 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux79 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux80 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux83 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux84 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux92 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux93 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux94 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux95 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux96 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux97 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux102 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux109 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux112 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
BOOL aux117 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..3}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..2}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..3}
BOOL aux122 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux123 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux124 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux131 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux132 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux133 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{1..3}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux140 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux141 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux142 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux143 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux144 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux149 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux151 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux153 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux154 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux155 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux156 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux157 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux158 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux160 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux161 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
DISCRETE aux162 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux164 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux165 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux166 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux167 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux168 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux169 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux170 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux171 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux172 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux173 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux175 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux176 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux177 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux179 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux181 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux182 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux185 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux186 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux187 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux188 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux189 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux191 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux192 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux194 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux196 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux198 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux199 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux200 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux202 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux203 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{1..3}
DISCRETE aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux205 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux206 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux207 #
{0..3}
DISCRETE aux208 #( - M_00002_00003 + M_00002_00004)
{-5..-2}
**CONSTRAINTS**
w-inintervalset(aux208, [-5,-5,-3,-2])
**VARIABLES**
DISCRETE aux209 #(M_00002_00005 + -16)
{-4..24}
**CONSTRAINTS**
w-inintervalset(aux209, [-4,-3,0,0,9,9,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00008 + 25)
{-4..15}
**CONSTRAINTS**
w-inintervalset(aux210, [-4,-4,0,0,9,9,12,13,15,15])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00008 + 34)
{5..24}
**CONSTRAINTS**
w-inintervalset(aux211, [5,5,9,9,18,18,21,22,24,24])
**VARIABLES**
DISCRETE aux212 #( - M_00002_00005 + M_00002_00006)
{-36..-8}
**CONSTRAINTS**
w-inintervalset(aux212, [-36,-36,-30,-30,-28,-27,-25,-24,-22,-21,-19,-19,-17,-17,-15,-15,-13,-12,-9,-8])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00005 + M_00002_00008)
{-30..17}
**CONSTRAINTS**
w-inintervalset(aux213, [-30,-30,-28,-27,-24,-24,-22,-21,-19,-15,-13,-11,-9,-9,-6,1,3,4,9,9,12,13,16,17])
**VARIABLES**
DISCRETE aux214 #( - M_00002_00007 + M_00002_00008)
{6..19}
**CONSTRAINTS**
w-inintervalset(aux214, [6,6,8,9,12,12,15,15,19,19])
**VARIABLES**
DISCRETE aux215 #( - M_00002_00004 + M_00002_00005)
{-28..-2}
**CONSTRAINTS**
w-inintervalset(aux215, [-28,-26,-24,-24,-17,-17,-15,-15,-13,-13,-11,-11,-9,-8,-6,-6,-2,-2])
**VARIABLES**
DISCRETE aux216 #(M_00002_00003 + -16)
{26..29}
**CONSTRAINTS**
w-inintervalset(aux216, [26,26,29,29])
**VARIABLES**
DISCRETE aux217 #( - M_00003_00003 + M_00003_00004)
{-30..0}
**CONSTRAINTS**
w-inintervalset(aux217, [-30,-26,-24,-24,-20,-20,-17,-13,-11,-11,-9,-8,-6,-5,-3,-2,0,0])
**VARIABLES**
DISCRETE aux218 #( - M_00003_00004 + M_00003_00005)
{-38..0}
**CONSTRAINTS**
w-inintervalset(aux218, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,0])
**VARIABLES**
DISCRETE aux219 #( - M_00003_00006 + M_00003_00007)
{-8..25}
**CONSTRAINTS**
w-inintervalset(aux219, [-8,-8,-6,-6,-2,-2,0,4,6,6,8,9,12,13,15,15,17,17,19,19,21,21,25,25])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00010 + 2)
{-44..-23}
**CONSTRAINTS**
w-inintervalset(aux220, [-44,-43,-40,-40,-38,-38,-32,-32,-29,-29,-27,-27,-23,-23])
**VARIABLES**
DISCRETE aux221 #(M_00003_00002 + -31)
{-15..11}
**CONSTRAINTS**
w-inintervalset(aux221, [-15,-15,-6,-6,-2,-2,0,0,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00002 + M_00003_00005)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux222, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,-2,0,0,2,6,9,9,11,11,13,13,15,15,18,18,24,24])
**VARIABLES**
DISCRETE aux223 #( - M_00003_00005 + M_00003_00006)
{-36..6}
**CONSTRAINTS**
w-inintervalset(aux223, [-36,-36,-30,-30,-28,-27,-25,-24,-22,-21,-19,-19,-17,-17,-15,-15,-13,-12,-9,-8,-6,-6,-4,0,2,2,6,6])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00002 + M_00003_00003)
{-2..29}
**CONSTRAINTS**
w-inintervalset(aux224, [-2,-2,0,0,2,3,5,6,8,9,11,11,13,17,20,20,24,24,26,26,29,29])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00004 + M_00003_00007)
{-38..17}
**CONSTRAINTS**
w-inintervalset(aux225, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,1,3,4,9,9,12,13,16,17])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00005 + M_00003_00008)
{-6..30}
**CONSTRAINTS**
w-inintervalset(aux226, [-6,-2,0,0,2,6,9,9,12,13,15,19,21,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux227 #(M_00003_00004 + -31)
{-19..11}
**CONSTRAINTS**
w-inintervalset(aux227, [-19,-18,-15,-15,-6,-6,-2,-2,0,0,3,3,9,9,11,11])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00007 + M_00003_00008)
{5..30}
**CONSTRAINTS**
w-inintervalset(aux228, [5,6,9,9,12,13,15,19,21,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00008 + M_00003_00009)
{9..12}
**CONSTRAINTS**
w-inintervalset(aux229, [9,9,11,12])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00007 + M_00003_00010)
{-4..36}
**CONSTRAINTS**
w-inintervalset(aux230, [-4,-4,0,0,2,2,4,6,9,9,11,13,15,22,24,30,32,36])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00009 + M_00003_00010)
{-21..12}
**CONSTRAINTS**
w-inintervalset(aux231, [-21,-20,-17,-11,-9,-8,-6,6,8,8,11,12])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00003 + M_00003_00006)
{-41..-30}
**CONSTRAINTS**
w-inintervalset(aux232, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-30])
**VARIABLES**
DISCRETE aux233 #( - M_00004_00003 + M_00004_00004)
{-41..28}
**CONSTRAINTS**
w-inintervalset(aux233, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,24,26,28])
**VARIABLES**
DISCRETE aux234 #( - M_00004_00008 + 13)
{-33..-12}
**CONSTRAINTS**
w-inintervalset(aux234, [-33,-32,-29,-29,-27,-27,-21,-21,-18,-18,-16,-16,-12,-12])
**VARIABLES**
DISCRETE aux235 #( - M_00004_00001 + M_00004_00004)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux235, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,-2,0,0,2,6,8,9,11,11,13,13,15,15,17,18,24,24])
**VARIABLES**
DISCRETE aux236 #( - M_00004_00002 + M_00004_00005)
{-41..24}
**CONSTRAINTS**
w-inintervalset(aux236, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,0,2,6,9,9,11,13,15,16,18,18,21,21,24,24])
**VARIABLES**
DISCRETE aux237 #( - M_00004_00003 + M_00004_00006)
{-41..17}
**CONSTRAINTS**
w-inintervalset(aux237, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-15,-13,-11,-9,-8,-6,1,3,4,9,9,12,13,16,17])
**VARIABLES**
DISCRETE aux238 #( - M_00004_00007 + M_00004_00008)
{-4..42}
**CONSTRAINTS**
w-inintervalset(aux238, [-4,-2,0,0,2,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00008 + M_00004_00009)
{-21..21}
**CONSTRAINTS**
w-inintervalset(aux239, [-21,-20,-17,-11,-9,-8,-6,6,8,9,11,17,20,21])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00006 + M_00004_00007)
{-8..30}
**CONSTRAINTS**
w-inintervalset(aux240, [-8,-8,-6,-6,-4,6,8,9,12,13,15,19,21,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00006 + M_00004_00009)
{-4..42}
**CONSTRAINTS**
w-inintervalset(aux241, [-4,-4,0,0,2,2,4,6,9,9,11,13,15,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00005 + M_00004_00006)
{-36..25}
**CONSTRAINTS**
w-inintervalset(aux242, [-36,-36,-30,-30,-28,-27,-25,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,4,6,6,8,9,12,13,15,17,19,19,21,21,25,25])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00005 + M_00004_00008)
{-15..42}
**CONSTRAINTS**
w-inintervalset(aux243, [-15,-15,-11,-11,-9,-9,-6,-2,0,0,2,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00007 + 2)
{-32..-2}
**CONSTRAINTS**
w-inintervalset(aux244, [-32,-32,-29,-29,-27,-27,-23,-23,-14,-14,-11,-10,-8,-8,-2,-2])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00001 + M_00004_00002)
{-18..26}
**CONSTRAINTS**
w-inintervalset(aux245, [-18,-15,-13,-11,-9,-8,-6,-2,0,0,2,6,8,9,11,11,13,18,20,20,24,24,26,26])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00002 + M_00004_00003)
{-33..32}
**CONSTRAINTS**
w-inintervalset(aux246, [-33,-32,-30,-26,-24,-24,-22,-11,-9,-8,-6,0,2,6,8,9,11,18,20,21,24,24,26,27,29,29,32,32])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00004 + M_00004_00005)
{-38..28}
**CONSTRAINTS**
w-inintervalset(aux247, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,25,27,28])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00004 + M_00004_00007)
{-38..30}
**CONSTRAINTS**
w-inintervalset(aux248, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,6,8,9,12,13,15,19,21,22,24,25,27,27,30,30])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00009 + 2)
{-44..-23}
**CONSTRAINTS**
w-inintervalset(aux249, [-44,-43,-40,-40,-38,-38,-32,-32,-29,-29,-27,-27,-23,-23])
**VARIABLES**
DISCRETE aux250 #( - M_00005_00003 + M_00005_00004)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux250, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,30,32,32,36,36])
**VARIABLES**
DISCRETE aux251 #( - M_00005_00005 + M_00005_00006)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux251, [-42,-41,-38,-38,-36,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,30,32,32,36,36,38,38])
**VARIABLES**
DISCRETE aux252 #( - M_00005_00005 + M_00005_00008)
{-27..42}
**CONSTRAINTS**
w-inintervalset(aux252, [-27,-26,-24,-24,-21,-20,-18,-11,-9,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux253 #( - M_00005_00001 + M_00005_00004)
{-41..27}
**CONSTRAINTS**
w-inintervalset(aux253, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,24,26,27])
**VARIABLES**
DISCRETE aux254 #( - M_00005_00004 + M_00005_00005)
{-38..36}
**CONSTRAINTS**
w-inintervalset(aux254, [-38,-38,-36,-36,-32,-32,-30,-24,-22,-21,-19,-15,-13,-11,-9,-8,-6,6,8,9,11,22,24,30,32,36])
**VARIABLES**
DISCRETE aux255 #( - M_00005_00002 + M_00005_00005)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux255, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,24,26,30])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00001 + M_00005_00002)
{-33..32}
**CONSTRAINTS**
w-inintervalset(aux256, [-33,-32,-30,-26,-24,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,24,26,30,32,32])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00003 + M_00005_00006)
{-41..30}
**CONSTRAINTS**
w-inintervalset(aux257, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,13,15,19,21,22,24,30])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00004 + M_00005_00007)
{-40..42}
**CONSTRAINTS**
w-inintervalset(aux258, [-40,-40,-38,-38,-36,-36,-32,-32,-30,-21,-19,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux259 #(-1 - M_00005_00010)
{-14..-3}
**CONSTRAINTS**
w-inintervalset(aux259, [-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux260 #( - M_00005_00007 + M_00005_00008)
{-21..44}
**CONSTRAINTS**
w-inintervalset(aux260, [-21,-20,-18,-11,-9,-8,-6,6,8,9,11,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00008 + M_00005_00009)
{-44..33}
**CONSTRAINTS**
w-inintervalset(aux261, [-44,-40,-38,-38,-36,-32,-30,-11,-9,-8,-6,6,8,9,11,18,20,21,24,24,26,27,29,30,32,33])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00007 + M_00005_00010)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux262, [-33,-32,-30,-27,-25,-21,-19,-8,-6,-6,-4,3,6,6,8,11])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00009 + M_00005_00010)
{-44..11}
**CONSTRAINTS**
w-inintervalset(aux263, [-44,-40,-38,-38,-36,-32,-30,-27,-25,-21,-19,-8,-6,-6,-4,3,6,6,8,11])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00006 + M_00005_00007)
{-27..42}
**CONSTRAINTS**
w-inintervalset(aux264, [-27,-21,-19,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00006 + M_00005_00009)
{-40..42}
**CONSTRAINTS**
w-inintervalset(aux265, [-40,-40,-38,-38,-36,-36,-32,-32,-30,-21,-19,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00002 + M_00005_00003)
{-41..33}
**CONSTRAINTS**
w-inintervalset(aux266, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,24,26,30,32,33])
**VARIABLES**
DISCRETE aux267 #( - M_00006_00002 + M_00006_00003)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux267, [-41,-41,-38,-38,-36,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,30,32,33,35,36,38,38,41,41])
**VARIABLES**
DISCRETE aux268 #( - M_00006_00003 + M_00006_00006)
{-43..42}
**CONSTRAINTS**
w-inintervalset(aux268, [-43,-43,-41,-40,-38,-38,-36,-35,-33,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux269 #( - M_00006_00001 + M_00006_00004)
{-41..36}
**CONSTRAINTS**
w-inintervalset(aux269, [-41,-40,-38,-38,-36,-35,-33,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36])
**VARIABLES**
DISCRETE aux270 #(-1 - M_00006_00009)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux270, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00006 + M_00006_00007)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux271, [-40,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux272 #( - M_00006_00007 + M_00006_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux272, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00006 + M_00006_00009)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux273, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,42])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00008 + M_00006_00009)
{-44..33}
**CONSTRAINTS**
w-inintervalset(aux274, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,33])
**VARIABLES**
DISCRETE aux275 #( - M_00006_00005 + M_00006_00006)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux275, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00005 + M_00006_00008)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux276, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux277 #( - M_00006_00004 + M_00006_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux277, [-42,-41,-38,-38,-36,-32,-30,-24,-22,-11,-9,-8,-6,6,8,30,32,36,38,38,40,42])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00004 + M_00006_00007)
{-40..44}
**CONSTRAINTS**
w-inintervalset(aux278, [-40,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00001 + M_00006_00002)
{-41..38}
**CONSTRAINTS**
w-inintervalset(aux279, [-41,-41,-38,-38,-36,-35,-33,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,30,32,36,38,38])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00003 + M_00006_00004)
{-43..42}
**CONSTRAINTS**
w-inintervalset(aux280, [-43,-43,-41,-40,-38,-38,-36,-35,-33,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux281 #( - M_00006_00002 + M_00006_00005)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux281, [-42,-41,-38,-38,-36,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,30,32,36,38,38])
**VARIABLES**
DISCRETE aux282 #( - M_00007_00007 + M_00007_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux282, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux283 #( - M_00007_00005 + M_00007_00008)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux283, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00008 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux284, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00001 + M_00007_00004)
{-43..42}
**CONSTRAINTS**
w-inintervalset(aux285, [-43,-40,-38,-38,-36,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00003 + M_00007_00004)
{-43..44}
**CONSTRAINTS**
w-inintervalset(aux286, [-43,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00002 + M_00007_00003)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux287, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux288 #( - M_00007_00004 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux288, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux289 #( - M_00007_00005 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux289, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux290 #( - M_00007_00003 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux290, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux291 #( - M_00007_00001 + M_00007_00002)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux291, [-42,-41,-38,-38,-36,-32,-30,-24,-22,-11,-9,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux292 #( - M_00007_00002 + M_00007_00005)
{-44..42}
**CONSTRAINTS**
w-inintervalset(aux292, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,9,11,22,24,30,32,36,38,38,41,42])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00006 + M_00007_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux293, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00004 + M_00007_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux294, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux295 #( - M_00008_00007 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux295, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux296 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux296, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux297 #( - M_00008_00003 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux297, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux298 #( - M_00008_00004 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux298, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux299 #( - M_00008_00001 + M_00008_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux299, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux300 #( - M_00008_00005 + M_00008_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux300, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux301 #( - M_00008_00006 + M_00008_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux301, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux302 #( - M_00008_00002 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux302, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux303 #( - M_00008_00003 + M_00008_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux303, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux304 #( - M_00008_00004 + M_00008_00007)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux304, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux305 #( - M_00008_00001 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux305, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux306 #( - M_00009_00004 + M_00009_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux306, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux307 #( - M_00009_00001 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux307, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux308 #( - M_00009_00005 + M_00009_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux308, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux309 #( - M_00009_00002 + M_00009_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux309, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux310 #( - M_00009_00003 + M_00009_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux310, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux311 #( - M_00009_00001 + M_00009_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux311, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux312 #(-1 - M_00009_00006)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux312, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux313 #( - M_00009_00002 + M_00009_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux313, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux314 #( - M_00009_00003 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux314, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux315 #( - M_00010_00003 + M_00010_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux315, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux316 #( - M_00010_00004 + M_00010_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux316, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux317 #( - M_00010_00002 + M_00010_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux317, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux318 #( - M_00010_00002 + M_00010_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux318, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux319 #( - M_00010_00001 + M_00010_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux319, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux320 #( - M_00010_00001 + M_00010_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux320, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux321 #( - M_00010_00005 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux321, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux322 #( - M_00011_00002 + M_00011_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux322, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux323 #( - M_00011_00003 + M_00011_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux323, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux324 #( - M_00011_00004 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux324, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux325 #( - M_00011_00001 + M_00011_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux325, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux326 #( - M_00011_00001 + M_00011_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux326, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux327 #( - M_00012_00001 + M_00012_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux327, [-44,-40,-38,-38,-36,-32,-30,-8,-6,6,8,30,32,36,38,38,40,44])
**VARIABLES**
DISCRETE aux328 #( - M_00012_00002 + M_00012_00003)
{-34..26}
**CONSTRAINTS**
w-inintervalset(aux328, [-34,-32,-30,-8,-6,6,8,26])
**VARIABLES**
DISCRETE aux329 #( - M_00012_00003 + -1)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux329, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux330 #(-1 - M_00013_00002)
{-47..-3}
**CONSTRAINTS**
w-inintervalset(aux330, [-47,-46,-43,-43,-41,-41,-35,-35,-32,-32,-30,-30,-26,-26,-17,-17,-14,-13,-11,-11,-5,-5,-3,-3])
**VARIABLES**
DISCRETE aux331 #( - M_00013_00001 + M_00013_00002)
{-34..26}
**CONSTRAINTS**
w-inintervalset(aux331, [-34,-32,-30,-8,-6,6,8,26])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[31, 16, 45, 42, 40, 12, 4, 10, 29, 34, 46, 25, 2, 13]
**SEARCH**
PRINT[[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux207)
reify(gaceq(M_00007_00007,M_00006_00007), aux13)
reify(gaceq(M_00007_00008,M_00006_00009), aux14)
reify(gaceq(M_00003_00009,M_00004_00008), aux15)
div(M_00007_00001, 13, aux16)
div(M_00007_00008, 13, aux17)
reify(gaceq(M_00003_00010,M_00004_00009), aux18)
div(M_00010_00005, 13, aux19)
div(M_00010_00001, 13, aux20)
div(M_00010_00003, 13, aux21)
reify(gaceq(M_00008_00005,M_00009_00005), aux22)
reify(gaceq(M_00004_00004,M_00005_00004), aux23)
div(M_00012_00002, 13, aux24)
reify(gaceq(M_00002_00007,M_00003_00006), aux25)
reify(gaceq(M_00005_00007,M_00006_00006), aux26)
div(M_00002_00005, 13, aux27)
div(M_00002_00008, 13, aux28)
reify(gaceq(M_00010_00005,M_00011_00004), aux29)
reify(gaceq(M_00010_00003,M_00009_00003), aux30)
reify(gaceq(M_00007_00001,M_00008_00001), aux31)
reify(gaceq(M_00004_00005,M_00005_00004), aux32)
reify(gaceq(M_00003_00005,M_00004_00005), aux33)
reify(gaceq(M_00010_00004,M_00009_00005), aux34)
reify(gaceq(M_00005_00001,M_00006_00001), aux35)
reify(gaceq(M_00010_00005,M_00009_00005), aux36)
reify(gaceq(M_00010_00002,M_00009_00003), aux37)
reify(gaceq(M_00004_00006,M_00005_00005), aux38)
reify(gaceq(M_00010_00001,M_00009_00001), aux39)
div(M_00004_00003, 13, aux40)
div(M_00004_00002, 13, aux41)
reify(gaceq(M_00007_00007,M_00006_00008), aux42)
reify(gaceq(M_00007_00002,M_00008_00002), aux43)
reify(gaceq(M_00010_00001,M_00011_00001), aux44)
reify(gaceq(M_00003_00008,M_00004_00007), aux45)
reify(gaceq(M_00004_00007,M_00005_00007), aux46)
reify(gaceq(M_00008_00002,M_00009_00002), aux47)
div(M_00002_00006, 13, 0)
div(M_00002_00007, 13, 0)
div(M_00002_00004, 13, 3)
reify(gaceq(M_00011_00003,M_00012_00002), aux51)
reify(gaceq(M_00011_00003,M_00012_00003), aux52)
reify(gaceq(M_00007_00006,M_00008_00005), aux53)
reify(gaceq(M_00008_00004,M_00009_00003), aux54)
reify(gaceq(M_00003_00007,M_00004_00006), aux55)
reify(gaceq(M_00003_00005,M_00004_00004), aux56)
reify(gaceq(M_00011_00002,M_00012_00002), aux57)
reify(gaceq(M_00011_00001,M_00012_00001), aux58)
reify(gaceq(M_00011_00004,M_00012_00003), aux59)
reify(gaceq(M_00005_00008,M_00006_00008), aux60)
div(M_00008_00004, 13, aux61)
reify(gaceq(M_00002_00003,M_00003_00003), aux62)
reify(gaceq(M_00010_00004,M_00011_00003), aux63)
reify(gaceq(M_00002_00008,M_00003_00007), aux64)
div(M_00003_00009, 13, aux65)
div(M_00003_00006, 13, 0)
div(M_00003_00003, 13, 3)
div(M_00003_00010, 13, aux68)
div(M_00005_00001, 13, aux69)
div(M_00005_00010, 13, aux70)
reify(gaceq(M_00007_00001,M_00006_00001), aux71)
div(M_00008_00001, 13, aux72)
div(M_00008_00007, 13, aux73)
reify(gaceq(M_00004_00006,M_00005_00006), aux74)
div(M_00006_00008, 13, aux75)
div(M_00006_00007, 13, aux76)
div(M_00006_00003, 13, aux77)
div(M_00006_00002, 13, aux78)
reify(gaceq(M_00005_00002,M_00006_00002), aux79)
reify(gaceq(M_00005_00009,M_00006_00008), aux80)
reify(gaceq(M_00010_00003,M_00011_00002), aux81)
reify(gaceq(M_00010_00004,M_00011_00004), aux82)
reify(gaceq(M_00005_00010,M_00006_00009), aux83)
reify(gaceq(M_00010_00002,M_00011_00002), aux84)
reify(gaceq(M_00010_00003,M_00011_00003), aux85)
reify(gaceq(M_00010_00004,M_00009_00004), aux86)
reify(gaceq(M_00004_00004,M_00005_00003), aux87)
reify(gaceq(M_00004_00008,M_00005_00008), aux88)
reify(gaceq(M_00002_00006,M_00003_00005), aux89)
reify(gaceq(M_00002_00004,M_00003_00003), aux90)
reify(gaceq(M_00002_00005,M_00003_00005), aux91)
reify(gaceq(M_00002_00006,M_00003_00006), aux92)
reify(gaceq(M_00002_00004,M_00003_00004), aux93)
reify(gaceq(M_00004_00001,M_00005_00001), aux94)
reify(gaceq(M_00004_00007,M_00005_00006), aux95)
reify(gaceq(M_00007_00003,M_00006_00003), aux96)
reify(gaceq(M_00005_00003,M_00006_00003), aux97)
div(M_00009_00005, 13, aux98)
div(M_00009_00003, 13, aux99)
div(M_00009_00004, 13, aux100)
div(M_00009_00002, 13, aux101)
reify(gaceq(M_00007_00006,M_00006_00007), aux102)
reify(gaceq(M_00007_00003,M_00008_00002), aux103)
reify(gaceq(M_00007_00007,M_00008_00007), aux104)
div(M_00011_00001, 13, aux105)
div(M_00011_00002, 13, aux106)
div(M_00011_00003, 13, aux107)
div(M_00011_00004, 13, aux108)
reify(gaceq(M_00003_00006,M_00004_00005), aux109)
reify(gaceq(M_00008_00006,M_00009_00006), aux110)
reify(gaceq(M_00008_00003,M_00009_00002), aux111)
reify(gaceq(M_00005_00008,M_00006_00007), aux112)
reify(gaceq(M_00010_00003,M_00009_00004), aux113)
div(M_00006_00004, 13, aux114)
div(M_00006_00005, 13, aux115)
div(M_00006_00006, 13, aux116)
reify(gaceq(M_00004_00003,M_00005_00003), aux117)
div(M_00006_00001, 13, aux118)
div(M_00006_00009, 13, aux119)
div(M_00003_00008, 13, aux120)
div(M_00003_00002, 13, aux121)
reify(gaceq(M_00004_00002,M_00005_00002), aux122)
reify(gaceq(M_00005_00005,M_00006_00004), aux123)
reify(gaceq(M_00010_00002,M_00009_00002), aux124)
reify(gaceq(M_00003_00003,M_00004_00002), aux125)
reify(gaceq(M_00003_00009,M_00004_00009), aux126)
reify(gaceq(M_00005_00003,M_00006_00002), aux127)
reify(gaceq(M_00005_00009,M_00006_00009), aux128)
div(M_00010_00004, 13, aux129)
div(M_00010_00002, 13, aux130)
reify(gaceq(M_00005_00006,M_00006_00006), aux131)
reify(gaceq(M_00008_00003,M_00009_00003), aux132)
reify(gaceq(M_00003_00003,M_00004_00003), aux133)
div(M_00005_00009, 13, aux134)
div(M_00005_00008, 13, aux135)
div(M_00005_00002, 13, aux136)
div(M_00005_00003, 13, aux137)
reify(gaceq(M_00004_00009,M_00005_00009), aux138)
reify(gaceq(M_00004_00003,M_00005_00002), aux139)
reify(gaceq(M_00005_00005,M_00006_00005), aux140)
reify(gaceq(M_00005_00007,M_00006_00007), aux141)
reify(gaceq(M_00004_00008,M_00005_00007), aux142)
reify(gaceq(M_00003_00004,M_00004_00004), aux143)
reify(gaceq(M_00007_00003,M_00008_00003), aux144)
div(M_00007_00002, 13, aux145)
div(M_00007_00003, 13, aux146)
div(M_00007_00006, 13, aux147)
div(M_00007_00007, 13, aux148)
reify(gaceq(M_00004_00009,M_00005_00008), aux149)
reify(gaceq(M_00008_00004,M_00009_00004), aux150)
reify(gaceq(M_00008_00005,M_00009_00004), aux151)
div(M_00007_00004, 13, aux152)
div(M_00007_00005, 13, aux153)
reify(gaceq(M_00007_00004,M_00006_00004), aux154)
reify(gaceq(M_00003_00004,M_00004_00003), aux155)
reify(gaceq(M_00003_00008,M_00004_00008), aux156)
reify(gaceq(M_00007_00004,M_00008_00003), aux157)
reify(gaceq(M_00010_00005,M_00009_00006), aux158)
reify(gaceq(M_00005_00004,M_00006_00003), aux159)
reify(gaceq(M_00003_00007,M_00004_00007), aux160)
div(M_00004_00007, 13, aux161)
div(M_00004_00008, 13, aux162)
div(M_00004_00004, 13, aux163)
div(M_00004_00005, 13, aux164)
div(M_00004_00006, 13, aux165)
reify(gaceq(M_00003_00002,M_00004_00002), aux166)
reify(gaceq(M_00005_00004,M_00006_00004), aux167)
reify(gaceq(M_00008_00006,M_00009_00005), aux168)
reify(gaceq(M_00007_00003,M_00006_00004), aux169)
reify(gaceq(M_00003_00006,M_00004_00006), aux170)
reify(gaceq(M_00007_00004,M_00008_00004), aux171)
reify(gaceq(M_00007_00005,M_00006_00005), aux172)
div(M_00008_00003, 13, aux173)
div(M_00008_00005, 13, aux174)
div(M_00008_00006, 13, aux175)
div(M_00008_00002, 13, aux176)
reify(gaceq(M_00007_00002,M_00006_00002), aux177)
reify(gaceq(M_00007_00008,M_00006_00008), aux178)
reify(gaceq(M_00007_00002,M_00006_00003), aux179)
reify(gaceq(M_00007_00006,M_00008_00006), aux180)
reify(gaceq(M_00005_00006,M_00006_00005), aux181)
div(M_00003_00007, 13, aux182)
div(M_00003_00004, 13, aux183)
div(M_00003_00005, 13, aux184)
reify(gaceq(M_00007_00007,M_00008_00006), aux185)
reify(gaceq(M_00008_00001,M_00009_00001), aux186)
reify(gaceq(M_00007_00006,M_00006_00006), aux187)
reify(gaceq(M_00007_00005,M_00008_00004), aux188)
reify(gaceq(M_00007_00005,M_00008_00005), aux189)
reify(gaceq(M_00002_00005,M_00003_00004), aux190)
reify(gaceq(M_00002_00007,M_00003_00007), aux191)
reify(gaceq(M_00012_00001,M_00013_00001), aux192)
reify(gaceq(M_00012_00003,M_00013_00002), aux193)
div(M_00005_00004, 13, aux194)
div(M_00005_00005, 13, aux195)
div(M_00005_00006, 13, aux196)
div(M_00005_00007, 13, aux197)
reify(gaceq(M_00007_00008,M_00008_00007), aux198)
reify(gaceq(M_00007_00005,M_00006_00006), aux199)
div(M_00009_00006, 13, aux200)
div(M_00009_00001, 13, aux201)
reify(gaceq(M_00008_00007,M_00009_00006), aux202)
div(M_00004_00009, 13, aux203)
div(M_00004_00001, 13, aux204)
reify(gaceq(M_00007_00004,M_00006_00005), aux205)
reify(gaceq(M_00004_00005,M_00005_00005), aux206)
gccweak([M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00003,42),w-literal(M_00002_00004,40),w-literal(M_00002_00005,12),w-literal(M_00002_00006,4),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,40),w-literal(M_00002_00005,12),w-literal(M_00002_00006,4),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00006,4),w-literal(M_00002_00005,40),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,40),w-literal(M_00002_00006,12),w-literal(M_00002_00007,4),w-literal(M_00002_00008,10)}),watched-and({w-literal(M_00002_00003,45),w-literal(M_00002_00004,42),w-literal(M_00002_00005,40),w-literal(M_00002_00006,12),w-literal(M_00002_00007,10),w-literal(M_00002_00008,29)})})
watched-or({watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux90,1),w-literal(aux190,1),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux64,1),watched-or({modulo(aux208,13,0),div(M_00002_00003, 13, 3)})}),watched-and({w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),watched-or({w-literal(aux27,1),modulo(aux209,13,0)}),w-literal(aux62,1),w-literal(aux93,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux64,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,25),w-literal(M_00003_00009,34),w-literal(M_00003_00010,46),watched-or({w-literal(aux28,1),modulo(aux210,13,0)}),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux191,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),watched-or({w-literal(aux28,2),modulo(aux211,13,0)}),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux191,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux64,1),watched-or({modulo(aux212,13,0),w-literal(aux27,0)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux91,1),w-literal(aux25,1),w-literal(aux64,1)}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux92,1),w-literal(aux191,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux213,13,0),gaceq(aux27,aux28)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux91,1),w-literal(aux92,1),w-literal(aux64,1),watched-or({modulo(aux214,13,0),w-literal(aux28,0)})}),watched-and({w-literal(M_00003_00002,16),w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),w-literal(aux62,1),w-literal(aux190,1),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux64,1),watched-or({modulo(aux215,13,0),w-literal(aux27,3)})}),watched-and({w-literal(M_00003_00008,34),w-literal(M_00003_00009,46),w-literal(M_00003_00010,25),modulo(aux216,13,0),gaceq(M_00002_00003,M_00003_00002),w-literal(aux90,1),w-literal(aux190,1),w-literal(aux89,1),w-literal(aux25,1),w-literal(aux64,1)})})
watched-or({watched-and({w-literal(aux166,1),w-literal(aux155,1),w-literal(aux56,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux217,13,0),w-literal(aux183,3)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux56,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux218,13,0),gaceq(aux183,aux184)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux219,13,0),w-literal(aux182,0)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux170,1),w-literal(aux160,1),w-literal(aux156,1),w-literal(aux126,1),modulo(aux220,13,0),w-literal(M_00004_00001,31)}),watched-and({watched-or({modulo(aux221,13,0),w-literal(aux121,2)}),gaceq(M_00003_00002,M_00004_00001),w-literal(aux125,1),w-literal(aux155,1),w-literal(aux56,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1)}),watched-and({w-literal(aux133,1),w-literal(aux143,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux222,13,0),gaceq(aux121,aux184)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux223,13,0),w-literal(aux184,0)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux125,1),w-literal(aux155,1),w-literal(aux56,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux224,13,0),w-literal(aux121,3)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux33,1),w-literal(aux170,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux225,13,0),gaceq(aux183,aux182)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux170,1),w-literal(aux160,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux226,13,0),gaceq(aux184,aux120)}),w-literal(M_00004_00001,31)}),watched-and({watched-or({modulo(aux227,13,0),w-literal(aux183,2)}),w-literal(aux166,1),w-literal(aux133,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux56,1),w-literal(aux109,1),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux170,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux228,13,0),gaceq(aux182,aux120)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux170,1),w-literal(aux160,1),w-literal(aux15,1),w-literal(aux18,1),watched-or({modulo(aux229,13,0),gaceq(aux120,aux65)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux170,1),w-literal(aux156,1),w-literal(aux126,1),gaceq(M_00003_00010,M_00004_00007),watched-or({modulo(aux230,13,0),gaceq(aux182,aux68)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux133,1),w-literal(aux143,1),w-literal(aux33,1),w-literal(aux170,1),w-literal(aux160,1),w-literal(aux156,1),w-literal(aux18,1),watched-or({modulo(aux231,13,0),gaceq(aux65,aux68)}),w-literal(M_00004_00001,31)}),watched-and({w-literal(aux166,1),w-literal(aux143,1),w-literal(aux33,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux55,1),w-literal(aux45,1),w-literal(aux15,1),w-literal(aux18,1),modulo(aux232,13,0),w-literal(M_00004_00001,31)})})
watched-or({watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux87,1),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux40,aux163),modulo(aux233,13,0)})}),watched-and({w-literal(M_00005_00010,2),w-literal(M_00005_00008,13),watched-or({modulo(aux234,13,0),w-literal(aux162,1)}),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux74,1),w-literal(aux46,1),w-literal(aux138,1)}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux122,1),w-literal(aux117,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux204,aux163),modulo(aux235,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux117,1),w-literal(aux23,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux41,aux164),modulo(aux236,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux23,1),w-literal(aux206,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux40,aux165),modulo(aux237,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux74,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux161,aux162),modulo(aux238,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux74,1),w-literal(aux46,1),w-literal(aux149,1),watched-or({gaceq(aux162,aux203),modulo(aux239,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux165,aux161),modulo(aux240,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux46,1),w-literal(aux88,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux165,aux203),modulo(aux241,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux164,aux165),modulo(aux242,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux74,1),w-literal(aux46,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux149,1),watched-or({gaceq(aux164,aux162),modulo(aux243,13,0)})}),watched-and({w-literal(M_00005_00007,2),w-literal(M_00005_00010,13),watched-or({modulo(aux244,13,0),w-literal(aux161,0)}),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux74,1),w-literal(aux88,1),w-literal(aux138,1)}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),gaceq(M_00004_00002,M_00005_00001),w-literal(aux139,1),w-literal(aux87,1),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux204,aux41),modulo(aux245,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux139,1),w-literal(aux87,1),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux41,aux40),modulo(aux246,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux32,1),w-literal(aux38,1),w-literal(aux95,1),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux163,aux164),modulo(aux247,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux206,1),w-literal(aux74,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux142,1),w-literal(aux149,1),watched-or({gaceq(aux163,aux161),modulo(aux248,13,0)})}),watched-and({w-literal(M_00005_00009,2),w-literal(M_00005_00010,13),modulo(aux249,13,0),w-literal(aux94,1),w-literal(aux122,1),w-literal(aux117,1),w-literal(aux23,1),w-literal(aux206,1),w-literal(aux74,1),w-literal(aux46,1),w-literal(aux88,1)})})
watched-or({watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux159,1),w-literal(aux123,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux250,13,0),gaceq(aux137,aux194)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux251,13,0),gaceq(aux195,aux196)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux131,1),w-literal(aux141,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux252,13,0),gaceq(aux195,aux135)})}),watched-and({w-literal(aux79,1),w-literal(aux97,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux123,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux253,13,0),gaceq(aux69,aux194)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux123,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux254,13,0),gaceq(aux194,aux195)})}),watched-and({w-literal(aux35,1),w-literal(aux97,1),w-literal(aux167,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux255,13,0),gaceq(aux136,aux195)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux127,1),w-literal(aux159,1),w-literal(aux123,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux256,13,0),gaceq(aux69,aux136)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux167,1),w-literal(aux140,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux257,13,0),gaceq(aux137,aux196)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux140,1),w-literal(aux131,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux258,13,0),gaceq(aux194,aux197)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux131,1),w-literal(aux141,1),w-literal(aux60,1),w-literal(aux128,1),modulo(aux259,13,0)}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux131,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux260,13,0),gaceq(aux197,aux135)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux131,1),w-literal(aux141,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux261,13,0),gaceq(aux135,aux134)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux131,1),w-literal(aux60,1),w-literal(aux128,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux262,13,0),gaceq(aux197,aux70)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux131,1),w-literal(aux141,1),w-literal(aux60,1),w-literal(aux83,1),watched-or({modulo(aux263,13,0),gaceq(aux134,aux70)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux264,13,0),gaceq(aux196,aux197)})}),watched-and({w-literal(aux35,1),w-literal(aux79,1),w-literal(aux97,1),w-literal(aux167,1),w-literal(aux140,1),w-literal(aux141,1),w-literal(aux60,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux83,1),watched-or({modulo(aux265,13,0),gaceq(aux196,aux134)})}),watched-and({w-literal(aux35,1),w-literal(aux127,1),w-literal(aux159,1),w-literal(aux123,1),w-literal(aux181,1),w-literal(aux26,1),w-literal(aux112,1),w-literal(aux80,1),w-literal(aux83,1),watched-or({modulo(aux266,13,0),gaceq(aux136,aux137)})})})
watched-or({watched-and({w-literal(aux71,1),w-literal(aux179,1),w-literal(aux169,1),w-literal(aux205,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux78,aux77),modulo(aux267,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux154,1),w-literal(aux172,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux77,aux116),modulo(aux268,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux205,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux118,aux114),modulo(aux269,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux178,1),modulo(aux270,13,0)}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux172,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux116,aux76),modulo(aux271,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux76,aux75),modulo(aux272,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux172,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux13,1),w-literal(aux178,1),watched-or({gaceq(aux116,aux119),modulo(aux273,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux14,1),watched-or({gaceq(aux75,aux119),modulo(aux274,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux115,aux116),modulo(aux275,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux154,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux187,1),w-literal(aux13,1),w-literal(aux14,1),watched-or({gaceq(aux115,aux75),modulo(aux276,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),w-literal(aux205,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux114,aux115),modulo(aux277,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux96,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux114,aux76),modulo(aux278,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux179,1),w-literal(aux169,1),w-literal(aux205,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux118,aux78),modulo(aux279,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux177,1),w-literal(aux169,1),w-literal(aux205,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux77,aux114),modulo(aux280,13,0)})}),watched-and({w-literal(aux71,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux96,1),w-literal(aux154,1),w-literal(aux199,1),w-literal(aux102,1),w-literal(aux42,1),w-literal(aux14,1),watched-or({gaceq(aux78,aux115),modulo(aux281,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux282,13,0),gaceq(aux148,aux17)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux171,1),w-literal(aux189,1),w-literal(aux180,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux283,13,0),gaceq(aux153,aux17)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux171,1),w-literal(aux180,1),w-literal(aux104,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux284,13,0),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux171,1),w-literal(aux189,1),w-literal(aux180,1),w-literal(aux104,1)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux16,aux152)}),w-literal(aux43,1),w-literal(aux144,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux188,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux146,aux152)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux157,1),w-literal(aux188,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux145,aux146)}),w-literal(aux31,1),w-literal(aux103,1),w-literal(aux157,1),w-literal(aux188,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux288,13,0),gaceq(aux152,aux153)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux188,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux289,13,0),gaceq(aux153,aux147)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux171,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux290,13,0),gaceq(aux146,aux147)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux171,1),w-literal(aux189,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux291,13,0),gaceq(aux16,aux145)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux103,1),w-literal(aux157,1),w-literal(aux188,1),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux292,13,0),gaceq(aux145,aux153)}),w-literal(aux31,1),w-literal(aux144,1),w-literal(aux171,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux53,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux293,13,0),gaceq(aux147,aux148)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux171,1),w-literal(aux189,1),w-literal(aux185,1),w-literal(aux198,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux152,aux148)}),w-literal(aux31,1),w-literal(aux43,1),w-literal(aux144,1),w-literal(aux189,1),w-literal(aux180,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux198,1)})})
watched-or({watched-and({w-literal(aux186,1),w-literal(aux47,1),w-literal(aux132,1),w-literal(aux150,1),w-literal(aux22,1),w-literal(aux110,1),modulo(aux295,13,0)}),watched-and({watched-or({gaceq(aux176,aux173),modulo(aux296,13,0)}),w-literal(aux186,1),w-literal(aux111,1),w-literal(aux54,1),w-literal(aux151,1),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux173,aux61),modulo(aux297,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux54,1),w-literal(aux151,1),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux61,aux174),modulo(aux298,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux132,1),w-literal(aux151,1),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux72,aux176),modulo(aux299,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux111,1),w-literal(aux54,1),w-literal(aux151,1),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux174,aux175),modulo(aux300,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux132,1),w-literal(aux150,1),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux175,aux73),modulo(aux301,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux132,1),w-literal(aux150,1),w-literal(aux22,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux176,aux174),modulo(aux302,13,0)}),w-literal(aux186,1),w-literal(aux132,1),w-literal(aux150,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux168,1),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux173,aux175),modulo(aux303,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux150,1),w-literal(aux22,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux202,1)}),watched-and({watched-or({gaceq(aux61,aux73),modulo(aux304,13,0)}),w-literal(aux186,1),w-literal(aux47,1),w-literal(aux132,1),w-literal(aux22,1),w-literal(aux110,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux72,aux61),modulo(aux305,13,0)}),w-literal(aux47,1),w-literal(aux132,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux151,1),w-literal(aux168,1),w-literal(aux202,1)})})
watched-or({watched-and({watched-or({modulo(aux306,13,0),gaceq(aux100,aux98)}),w-literal(aux39,1),w-literal(aux124,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux307,13,0),gaceq(aux201,aux100)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux124,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux308,13,0),gaceq(aux98,aux200)}),w-literal(aux39,1),w-literal(aux124,1),w-literal(aux30,1),w-literal(aux86,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux309,13,0),gaceq(aux101,aux98)}),w-literal(aux39,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux30,1),w-literal(aux86,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux310,13,0),gaceq(aux99,aux200)}),w-literal(aux39,1),w-literal(aux124,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux86,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux311,13,0),gaceq(aux201,aux101)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux37,1),w-literal(aux113,1),w-literal(aux34,1),w-literal(aux158,1)}),watched-and({modulo(aux312,13,0),w-literal(aux39,1),w-literal(aux124,1),w-literal(aux30,1),w-literal(aux86,1),w-literal(aux36,1)}),watched-and({watched-or({modulo(aux313,13,0),gaceq(aux101,aux99)}),w-literal(aux39,1),w-literal(aux37,1),w-literal(aux113,1),w-literal(aux34,1),w-literal(aux158,1)}),watched-and({watched-or({modulo(aux314,13,0),gaceq(aux99,aux100)}),w-literal(aux39,1),w-literal(aux124,1),w-literal(aux113,1),w-literal(aux34,1),w-literal(aux158,1)})})
watched-or({watched-and({w-literal(aux44,1),w-literal(aux84,1),w-literal(aux63,1),w-literal(aux29,1),watched-or({gaceq(aux21,aux129),modulo(aux315,13,0)})}),watched-and({w-literal(aux44,1),w-literal(aux84,1),w-literal(aux85,1),w-literal(aux29,1),watched-or({gaceq(aux129,aux19),modulo(aux316,13,0)})}),watched-and({w-literal(aux44,1),w-literal(aux81,1),w-literal(aux63,1),w-literal(aux29,1),watched-or({gaceq(aux130,aux21),modulo(aux317,13,0)})}),watched-and({w-literal(aux44,1),w-literal(aux85,1),w-literal(aux82,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux130,aux19),modulo(aux318,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux81,1),w-literal(aux63,1),w-literal(aux29,1),watched-or({gaceq(aux20,aux130),modulo(aux319,13,0)})}),watched-and({w-literal(aux84,1),w-literal(aux85,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux29,1),watched-or({gaceq(aux20,aux129),modulo(aux320,13,0)})}),watched-and({w-literal(aux44,1),w-literal(aux84,1),w-literal(aux85,1),w-literal(aux82,1),modulo(aux321,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux106,aux107),modulo(aux322,13,0)}),w-literal(aux58,1),w-literal(aux51,1),w-literal(aux59,1)}),watched-and({watched-or({gaceq(aux107,aux108),modulo(aux323,13,0)}),w-literal(aux58,1),w-literal(aux57,1),w-literal(aux59,1)}),watched-and({modulo(aux324,13,0),w-literal(aux58,1),w-literal(aux57,1),w-literal(aux52,1)}),watched-and({watched-or({gaceq(aux105,aux106),modulo(aux325,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux51,1),w-literal(aux59,1)}),watched-and({watched-or({gaceq(aux105,aux108),modulo(aux326,13,0)}),w-literal(aux57,1),w-literal(aux52,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux193,1),watched-or({div(M_00012_00001, 13, aux24),modulo(aux327,13,0)})}),watched-and({w-literal(aux192,1),w-literal(aux193,1),watched-or({div(M_00012_00003, 13, aux24),modulo(aux328,13,0)})}),watched-and({modulo(aux329,13,0),w-literal(aux192,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux330,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux207),modulo(aux331,13,0)})})})
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux208)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux208)
sumleq([M_00002_00005,-16],aux209)
sumgeq([M_00002_00005,-16],aux209)
weightedsumleq([-1,1],[M_00002_00008,25],aux210)
weightedsumgeq([-1,1],[M_00002_00008,25],aux210)
weightedsumleq([-1,1],[M_00002_00008,34],aux211)
weightedsumgeq([-1,1],[M_00002_00008,34],aux211)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux212)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux212)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux213)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux213)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux214)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux214)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux215)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux215)
sumleq([M_00002_00003,-16],aux216)
sumgeq([M_00002_00003,-16],aux216)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux217)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux217)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux218)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux218)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux219)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux219)
weightedsumleq([-1,1],[M_00003_00010,2],aux220)
weightedsumgeq([-1,1],[M_00003_00010,2],aux220)
sumleq([M_00003_00002,-31],aux221)
sumgeq([M_00003_00002,-31],aux221)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux222)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux222)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux223)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux223)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux224)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux224)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux225)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux225)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux226)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux226)
sumleq([M_00003_00004,-31],aux227)
sumgeq([M_00003_00004,-31],aux227)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux228)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux228)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux229)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux229)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux230)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux230)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux231)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux231)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux232)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux232)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux233)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux233)
weightedsumleq([-1,1],[M_00004_00008,13],aux234)
weightedsumgeq([-1,1],[M_00004_00008,13],aux234)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux235)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux235)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux236)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux236)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux237)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux237)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux238)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux238)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux239)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux239)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux240)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux240)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux241)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux241)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux242)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux242)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux243)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux243)
weightedsumleq([-1,1],[M_00004_00007,2],aux244)
weightedsumgeq([-1,1],[M_00004_00007,2],aux244)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux245)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux245)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux246)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux247)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux247)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux248)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux248)
weightedsumleq([-1,1],[M_00004_00009,2],aux249)
weightedsumgeq([-1,1],[M_00004_00009,2],aux249)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux250)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux250)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux251)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux251)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux252)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux252)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux253)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux253)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux254)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux254)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux255)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux255)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux256)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux256)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux257)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux257)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux258)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux258)
weightedsumleq([1,-1],[-1,M_00005_00010],aux259)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux259)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux260)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux260)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux261)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux261)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux262)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux262)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux263)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux263)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux264)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux264)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux265)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux265)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux266)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux266)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux267)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux267)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux268)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux268)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux269)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux269)
weightedsumleq([1,-1],[-1,M_00006_00009],aux270)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux270)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux271)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux271)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux272)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux272)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux273)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux273)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux274)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux274)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux275)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux275)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux276)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux276)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux277)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux277)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux278)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux278)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux279)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux279)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux280)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux280)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux281)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux281)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux282)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux282)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux283)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux283)
weightedsumleq([-1,1],[M_00007_00008,-1],aux284)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux284)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux285)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux285)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux286)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux286)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux287)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux287)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux288)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux288)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux289)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux289)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux290)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux290)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux291)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux291)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux292)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux292)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux293)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux293)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux294)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux294)
weightedsumleq([-1,1],[M_00008_00007,-1],aux295)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux295)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux296)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux296)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux297)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux297)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux298)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux298)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux299)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux299)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux300)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux300)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux301)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux301)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux302)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux302)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux303)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux303)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux304)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux304)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux305)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux305)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux306)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux306)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux307)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux307)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux308)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux308)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux309)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux309)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux310)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux310)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux311)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux311)
weightedsumleq([1,-1],[-1,M_00009_00006],aux312)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux312)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux313)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux313)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux314)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux314)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux315)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux315)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux316)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux316)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux317)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux317)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux318)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux318)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux319)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux319)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux320)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux320)
weightedsumleq([-1,1],[M_00010_00005,-1],aux321)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux321)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux322)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux322)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux323)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux323)
weightedsumleq([-1,1],[M_00011_00004,-1],aux324)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux324)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux325)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux325)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux326)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux326)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux327)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux327)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux328)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux328)
weightedsumleq([-1,1],[M_00012_00003,-1],aux329)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux329)
weightedsumleq([1,-1],[-1,M_00013_00002],aux330)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux330)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux331)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux331)
**EOF**
