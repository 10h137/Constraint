MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 184
# CSE_active_eliminated_expressions = 1019
# CSE_active_total_size = 552
**VARIABLES**
DISCRETE M_00002_00001 #
{18..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [18,19,23,24])
**VARIABLES**
DISCRETE M_00002_00002 #
{14..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [14,15,18,19,23,24])
**VARIABLES**
DISCRETE M_00002_00003 #
{10..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [10,10,12,12,14,14])
**VARIABLES**
DISCRETE M_00002_00004 #
{10..15}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [10,10,12,12,14,15])
**VARIABLES**
DISCRETE M_00002_00005 #
{15..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [15,15,18,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00002_00006 #
{19..43}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [19,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00002_00007 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [19,19,23,24,31,31,36,37])
**VARIABLES**
DISCRETE M_00002_00008 #
{31..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00002_00009 #
{31..36}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [31,31,36,36])
**VARIABLES**
DISCRETE M_00002_00010 #
{36..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00003_00001 #
{14..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [14,15,18,19,23,24])
**VARIABLES**
DISCRETE M_00003_00002 #
{10..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [10,10,12,12,14,15,18,19,23,24])
**VARIABLES**
DISCRETE M_00003_00003 #
{10..19}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [10,10,12,12,14,15,18,19])
**VARIABLES**
DISCRETE M_00003_00004 #
{10..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00003_00005 #
{15..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [15,15,18,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00003_00006 #
{19..43}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [19,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00003_00007 #
{19..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [19,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00003_00008 #
{31..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00003_00009 #
{31..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00003_00010 #
{23..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00003_00011 #
{12..23}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [12,12,14,15,18,19,23,23])
**VARIABLES**
DISCRETE M_00004_00001 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37])
**VARIABLES**
DISCRETE M_00004_00002 #
{10..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37])
**VARIABLES**
DISCRETE M_00004_00003 #
{10..43}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43])
**VARIABLES**
DISCRETE M_00004_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00005 #
{15..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [15,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00006 #
{19..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [19,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00007 #
{19..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [19,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00008 #
{31..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00009 #
{23..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00004_00010 #
{12..23}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [12,12,14,15,18,19,23,23])
**VARIABLES**
DISCRETE M_00005_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00005 #
{15..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [15,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00006 #
{19..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [19,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00007 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00008 #
{23..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00005_00009 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00005 #
{15..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [15,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00006 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00007 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00006_00008 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00005 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00006 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00007_00007 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00005 #
{14..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00008_00006 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00009_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00009_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00009_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00009_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00009_00005 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00010_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00010_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00010_00004 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00011_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00011_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00011_00003 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00012_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00012_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
DISCRETE M_00013_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [10,10,12,12,14,15,18,19,23,24,31,31,36,37,43,43,50,50])
**VARIABLES**
BOOL aux13 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
BOOL aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
BOOL aux19 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux20 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux24 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux30 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux31 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux32 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
BOOL aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
DISCRETE aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..3}
DISCRETE aux35 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
DISCRETE aux36 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..2}
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux40 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux41 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{2..3}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{1..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
BOOL aux49 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux50 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux51 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux52 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux54 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010/13)
{2..3}
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux59 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux60 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux61 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux63 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux64 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux65 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux66 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux67 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux68 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux69 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux73 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..3}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux78 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{1..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{1..3}
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux83 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux86 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux91 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux92 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux93 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux94 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux97 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux98 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux102 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux105 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux107 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux108 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{1..3}
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
DISCRETE aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{1..3}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{2..3}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{2..3}
BOOL aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
BOOL aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
BOOL aux117 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux118 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux119 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux121 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{1..3}
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{1..3}
DISCRETE aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux128 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux131 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux132 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux133 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{1..3}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{1..3}
BOOL aux138 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux140 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux141 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux142 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux143 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux146 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux148 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux149 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{1..3}
BOOL aux150 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..3}
DISCRETE aux153 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{1..3}
BOOL aux154 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux155 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux156 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
DISCRETE aux157 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux159 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{1..3}
DISCRETE aux160 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux161 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux162 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux165 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux166 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux167 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
BOOL aux168 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux169 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..3}
DISCRETE aux171 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux172 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux173 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux175 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux176 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux177 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux178 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux179 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{1..3}
DISCRETE aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{1..3}
BOOL aux181 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux182 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux183 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux184 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux185 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux186 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux187 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
BOOL aux189 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux190 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux191 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux192 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux193 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux194 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux195 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux196 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux197 #
{0..3}
DISCRETE aux198 #( - M_00002_00002 + M_00002_00005)
{-9..29}
**CONSTRAINTS**
w-inintervalset(aux198, [-9,-8,-6,-3,-1,1,3,10,12,14,16,25,28,29])
**VARIABLES**
DISCRETE aux199 #( - M_00002_00003 + M_00002_00006)
{5..29}
**CONSTRAINTS**
w-inintervalset(aux199, [5,5,7,7,9,14,17,17,19,19,21,27,29,29])
**VARIABLES**
DISCRETE aux200 #( - M_00002_00004 + M_00002_00007)
{9..27}
**CONSTRAINTS**
w-inintervalset(aux200, [9,14,16,17,19,19,21,27])
**VARIABLES**
DISCRETE aux201 #( - M_00002_00007 + M_00002_00008)
{-6..31}
**CONSTRAINTS**
w-inintervalset(aux201, [-6,-5,-1,1,5,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux202 #( - M_00002_00008 + M_00002_00009)
{-19..5}
**CONSTRAINTS**
w-inintervalset(aux202, [-19,-19,-14,-14,-12,-12,-7,-5,-1,0,5,5])
**VARIABLES**
DISCRETE aux203 #( - M_00002_00007 + M_00002_00010)
{13..31}
**CONSTRAINTS**
w-inintervalset(aux203, [13,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux204 #( - M_00002_00009 + M_00002_00010)
{5..14}
**CONSTRAINTS**
w-inintervalset(aux204, [5,7,12,12,14,14])
**VARIABLES**
DISCRETE aux205 #( - M_00002_00006 + M_00002_00007)
{-24..18}
**CONSTRAINTS**
w-inintervalset(aux205, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,8,12,14,17,18])
**VARIABLES**
DISCRETE aux206 #( - M_00002_00006 + M_00002_00009)
{-12..17}
**CONSTRAINTS**
w-inintervalset(aux206, [-12,-12,-7,-5,-1,0,5,5,7,8,12,13,17,17])
**VARIABLES**
DISCRETE aux207 #( - M_00002_00002 + M_00002_00003)
{-10..-1}
DISCRETE aux208 #( - M_00002_00003 + M_00002_00004)
{-4..5}
**CONSTRAINTS**
w-inintervalset(aux208, [-4,-4,-2,-2,0,5])
**VARIABLES**
DISCRETE aux209 #( - M_00002_00005 + M_00002_00006)
{-24..28}
**CONSTRAINTS**
w-inintervalset(aux209, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,9,12,14,16,22,24,25,28,28])
**VARIABLES**
DISCRETE aux210 #( - M_00002_00005 + M_00002_00008)
{-12..35}
**CONSTRAINTS**
w-inintervalset(aux210, [-12,-12,-7,-5,-1,1,5,8,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux211 #( - M_00002_00001 + M_00002_00004)
{-9..-3}
DISCRETE aux212 #( - M_00002_00010 + 23)
{-27..-13}
**CONSTRAINTS**
w-inintervalset(aux212, [-27,-27,-20,-20,-14,-13])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00004 + M_00002_00005)
{5..33}
**CONSTRAINTS**
w-inintervalset(aux213, [5,14,16,17,19,19,21,29,31,31,33,33])
**VARIABLES**
DISCRETE aux214 #( - M_00003_00001 + M_00003_00004)
{-14..29}
**CONSTRAINTS**
w-inintervalset(aux214, [-14,1,3,10,12,14,16,25,28,29])
**VARIABLES**
DISCRETE aux215 #( - M_00003_00003 + M_00003_00004)
{-9..33}
**CONSTRAINTS**
w-inintervalset(aux215, [-9,14,16,19,21,29,31,31,33,33])
**VARIABLES**
DISCRETE aux216 #( - M_00003_00004 + M_00003_00005)
{-24..33}
**CONSTRAINTS**
w-inintervalset(aux216, [-24,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,31,33,33])
**VARIABLES**
DISCRETE aux217 #( - M_00003_00006 + M_00003_00007)
{-24..31}
**CONSTRAINTS**
w-inintervalset(aux217, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux218 #( - M_00003_00006 + M_00003_00009)
{-12..31}
**CONSTRAINTS**
w-inintervalset(aux218, [-12,-12,-7,-5,-1,1,5,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux219 #( - M_00003_00002 + M_00003_00005)
{-9..33}
**CONSTRAINTS**
w-inintervalset(aux219, [-9,-8,-6,-3,-1,1,3,14,16,29,31,31,33,33])
**VARIABLES**
DISCRETE aux220 #( - M_00003_00005 + M_00003_00006)
{-24..28}
**CONSTRAINTS**
w-inintervalset(aux220, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,9,12,14,16,22,24,25,28,28])
**VARIABLES**
DISCRETE aux221 #( - M_00003_00003 + M_00003_00006)
{4..33}
**CONSTRAINTS**
w-inintervalset(aux221, [4,14,16,19,21,29,31,31,33,33])
**VARIABLES**
DISCRETE aux222 #( - M_00003_00002 + M_00003_00003)
{-14..5}
DISCRETE aux223 #( - M_00003_00001 + M_00003_00002)
{-14..6}
**CONSTRAINTS**
w-inintervalset(aux223, [-14,1,3,6])
**VARIABLES**
DISCRETE aux224 #( - M_00003_00004 + M_00003_00007)
{-12..40}
**CONSTRAINTS**
w-inintervalset(aux224, [-12,-12,-8,-4,-1,1,4,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux225 #( - M_00003_00005 + M_00003_00008)
{-12..35}
**CONSTRAINTS**
w-inintervalset(aux225, [-12,-12,-7,-5,-1,1,5,8,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00011 + -1)
{-24..-13}
**CONSTRAINTS**
w-inintervalset(aux226, [-24,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00008 + M_00003_00009)
{-19..19}
**CONSTRAINTS**
w-inintervalset(aux227, [-19,-19,-14,-12,-7,-5,-1,1,5,7,12,14,19,19])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00009 + M_00003_00010)
{-27..14}
**CONSTRAINTS**
w-inintervalset(aux228, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,5,7,12,14])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00010 + M_00003_00011)
{-27..-11}
**CONSTRAINTS**
w-inintervalset(aux229, [-27,-27,-25,-16,-14,-11])
**VARIABLES**
DISCRETE aux230 #( - M_00003_00007 + M_00003_00008)
{-19..31}
**CONSTRAINTS**
w-inintervalset(aux230, [-19,-19,-14,-12,-7,-5,-1,1,5,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00007 + M_00003_00010)
{-27..31}
**CONSTRAINTS**
w-inintervalset(aux231, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux232 #( - M_00004_00010 + -1)
{-24..-13}
**CONSTRAINTS**
w-inintervalset(aux232, [-24,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux233 #( - M_00004_00008 + M_00004_00009)
{-27..19}
**CONSTRAINTS**
w-inintervalset(aux233, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,5,7,12,14,19,19])
**VARIABLES**
DISCRETE aux234 #( - M_00004_00009 + M_00004_00010)
{-38..0}
**CONSTRAINTS**
w-inintervalset(aux234, [-38,-38,-36,-35,-32,-31,-29,-27,-25,-16,-14,-8,-6,-4,-1,0])
**VARIABLES**
DISCRETE aux235 #( - M_00004_00007 + M_00004_00008)
{-19..31}
**CONSTRAINTS**
w-inintervalset(aux235, [-19,-19,-14,-12,-7,-5,-1,1,5,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux236 #( - M_00004_00007 + M_00004_00010)
{-38..4}
**CONSTRAINTS**
w-inintervalset(aux236, [-38,-38,-36,-35,-32,-31,-29,-27,-25,-16,-14,-4,-1,0,4,4])
**VARIABLES**
DISCRETE aux237 #( - M_00004_00006 + M_00004_00007)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux237, [-31,-31,-27,-26,-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux238 #( - M_00004_00006 + M_00004_00009)
{-27..31}
**CONSTRAINTS**
w-inintervalset(aux238, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux239 #( - M_00004_00002 + M_00004_00003)
{-27..33}
**CONSTRAINTS**
w-inintervalset(aux239, [-27,-21,-19,-16,-14,14,16,29,31,31,33,33])
**VARIABLES**
DISCRETE aux240 #( - M_00004_00003 + M_00004_00004)
{-28..40}
**CONSTRAINTS**
w-inintervalset(aux240, [-28,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux241 #( - M_00004_00005 + M_00004_00006)
{-31..35}
**CONSTRAINTS**
w-inintervalset(aux241, [-31,-31,-27,-26,-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,9,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux242 #( - M_00004_00005 + M_00004_00008)
{-19..35}
**CONSTRAINTS**
w-inintervalset(aux242, [-19,-19,-14,-12,-7,-5,-1,1,5,8,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00001 + M_00004_00004)
{-18..36}
**CONSTRAINTS**
w-inintervalset(aux243, [-18,-16,-14,14,16,29,31,33,35,36])
**VARIABLES**
DISCRETE aux244 #( - M_00004_00004 + M_00004_00005)
{-31..40}
**CONSTRAINTS**
w-inintervalset(aux244, [-31,-31,-28,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00002 + M_00004_00005)
{-18..36}
**CONSTRAINTS**
w-inintervalset(aux245, [-18,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00001 + M_00004_00002)
{-27..19}
**CONSTRAINTS**
w-inintervalset(aux246, [-27,-21,-19,-16,-14,14,16,19])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00003 + M_00004_00006)
{-24..40}
**CONSTRAINTS**
w-inintervalset(aux247, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux248 #( - M_00004_00004 + M_00004_00007)
{-24..40}
**CONSTRAINTS**
w-inintervalset(aux248, [-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux249 #( - M_00005_00003 + M_00005_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux249, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux250 #( - M_00005_00001 + M_00005_00004)
{-31..40}
**CONSTRAINTS**
w-inintervalset(aux250, [-31,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux251 #( - M_00005_00002 + M_00005_00005)
{-31..40}
**CONSTRAINTS**
w-inintervalset(aux251, [-31,-31,-28,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux252 #( - M_00005_00003 + M_00005_00006)
{-31..40}
**CONSTRAINTS**
w-inintervalset(aux252, [-31,-31,-27,-26,-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux253 #(-1 - M_00005_00009)
{-51..-13}
**CONSTRAINTS**
w-inintervalset(aux253, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux254 #( - M_00005_00006 + M_00005_00007)
{-36..31}
**CONSTRAINTS**
w-inintervalset(aux254, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-4,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux255 #( - M_00005_00007 + M_00005_00008)
{-27..36}
**CONSTRAINTS**
w-inintervalset(aux255, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,4,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux256 #( - M_00005_00006 + M_00005_00009)
{-38..31}
**CONSTRAINTS**
w-inintervalset(aux256, [-38,-38,-36,-35,-32,-31,-29,-16,-14,-4,-1,1,4,8,12,14,17,20,24,24,26,27,31,31])
**VARIABLES**
DISCRETE aux257 #( - M_00005_00008 + M_00005_00009)
{-38..19}
**CONSTRAINTS**
w-inintervalset(aux257, [-38,-38,-36,-35,-32,-31,-29,-16,-14,-4,-1,1,5,8,12,14,19,19])
**VARIABLES**
DISCRETE aux258 #( - M_00005_00005 + M_00005_00006)
{-31..35}
**CONSTRAINTS**
w-inintervalset(aux258, [-31,-31,-27,-26,-24,-24,-20,-17,-14,-12,-8,-4,-1,1,4,9,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux259 #( - M_00005_00005 + M_00005_00008)
{-27..35}
**CONSTRAINTS**
w-inintervalset(aux259, [-27,-26,-20,-19,-14,-12,-8,-5,-1,1,4,9,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux260 #( - M_00005_00001 + M_00005_00002)
{-40..33}
**CONSTRAINTS**
w-inintervalset(aux260, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00002 + M_00005_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux261, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00004 + M_00005_00005)
{-35..40}
**CONSTRAINTS**
w-inintervalset(aux262, [-35,-35,-32,-31,-28,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00004 + M_00005_00007)
{-31..40}
**CONSTRAINTS**
w-inintervalset(aux263, [-31,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux264 #( - M_00006_00002 + M_00006_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux264, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux265 #( - M_00006_00001 + M_00006_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux265, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux266 #( - M_00006_00001 + M_00006_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux266, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux267 #( - M_00006_00002 + M_00006_00005)
{-35..40}
**CONSTRAINTS**
w-inintervalset(aux267, [-35,-35,-32,-31,-28,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux268 #(-1 - M_00006_00008)
{-51..-13}
**CONSTRAINTS**
w-inintervalset(aux268, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux269 #( - M_00006_00005 + M_00006_00006)
{-36..35}
**CONSTRAINTS**
w-inintervalset(aux269, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,1,3,9,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux270 #( - M_00006_00006 + M_00006_00007)
{-36..36}
**CONSTRAINTS**
w-inintervalset(aux270, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,1,3,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux271 #( - M_00006_00005 + M_00006_00008)
{-38..35}
**CONSTRAINTS**
w-inintervalset(aux271, [-38,-38,-36,-35,-32,-31,-29,-16,-14,-3,-1,1,3,9,12,14,16,22,24,28,31,32,35,35])
**VARIABLES**
DISCRETE aux272 #( - M_00006_00007 + M_00006_00008)
{-38..36}
**CONSTRAINTS**
w-inintervalset(aux272, [-38,-38,-36,-35,-32,-31,-29,-16,-14,1,3,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux273 #( - M_00006_00004 + M_00006_00005)
{-35..40}
**CONSTRAINTS**
w-inintervalset(aux273, [-35,-35,-32,-31,-28,-24,-22,-16,-14,-12,-9,-3,-1,1,3,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux274 #( - M_00006_00004 + M_00006_00007)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux274, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux275 #( - M_00006_00003 + M_00006_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux275, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux276 #( - M_00006_00003 + M_00006_00006)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux276, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux277 #( - M_00007_00004 + M_00007_00007)
{-38..40}
**CONSTRAINTS**
w-inintervalset(aux277, [-38,-38,-36,-35,-32,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux278 #( - M_00007_00002 + M_00007_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux278, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux279 #( - M_00007_00004 + M_00007_00005)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux279, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux280 #( - M_00007_00006 + M_00007_00007)
{-38..36}
**CONSTRAINTS**
w-inintervalset(aux280, [-38,-38,-36,-35,-32,-31,-29,-16,-14,1,3,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux281 #( - M_00007_00007 + -1)
{-51..-13}
**CONSTRAINTS**
w-inintervalset(aux281, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux282 #( - M_00007_00003 + M_00007_00006)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux282, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux283 #( - M_00007_00001 + M_00007_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux283, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux284 #( - M_00007_00003 + M_00007_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux284, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux285 #( - M_00007_00005 + M_00007_00006)
{-36..36}
**CONSTRAINTS**
w-inintervalset(aux285, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,1,3,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux286 #( - M_00007_00001 + M_00007_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux286, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux287 #( - M_00007_00002 + M_00007_00005)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux287, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux288 #( - M_00008_00001 + M_00008_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux288, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux289 #( - M_00008_00005 + M_00008_00006)
{-38..36}
**CONSTRAINTS**
w-inintervalset(aux289, [-38,-38,-36,-35,-32,-31,-29,-16,-14,1,3,10,12,14,16,29,31,32,35,36])
**VARIABLES**
DISCRETE aux290 #( - M_00008_00004 + M_00008_00005)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux290, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux291 #( - M_00008_00003 + M_00008_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux291, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux292 #( - M_00008_00002 + M_00008_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux292, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux293 #( - M_00008_00001 + M_00008_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux293, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux294 #( - M_00008_00006 + -1)
{-51..-13}
**CONSTRAINTS**
w-inintervalset(aux294, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux295 #( - M_00008_00003 + M_00008_00006)
{-38..40}
**CONSTRAINTS**
w-inintervalset(aux295, [-38,-38,-36,-35,-32,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux296 #( - M_00008_00002 + M_00008_00005)
{-36..40}
**CONSTRAINTS**
w-inintervalset(aux296, [-36,-35,-32,-31,-29,-16,-14,-12,-10,-3,-1,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux297 #( - M_00009_00001 + M_00009_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux297, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux298 #(-1 - M_00009_00005)
{-51..-13}
**CONSTRAINTS**
w-inintervalset(aux298, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13])
**VARIABLES**
DISCRETE aux299 #( - M_00009_00001 + M_00009_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux299, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux300 #( - M_00009_00002 + M_00009_00005)
{-38..40}
**CONSTRAINTS**
w-inintervalset(aux300, [-38,-38,-36,-35,-32,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux301 #( - M_00009_00002 + M_00009_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux301, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux302 #( - M_00009_00003 + M_00009_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux302, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux303 #( - M_00009_00004 + M_00009_00005)
{-38..40}
**CONSTRAINTS**
w-inintervalset(aux303, [-38,-38,-36,-35,-32,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux304 #( - M_00010_00002 + M_00010_00003)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux304, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux305 #( - M_00010_00003 + M_00010_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux305, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux306 #( - M_00010_00001 + M_00010_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux306, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux307 #( - M_00010_00001 + M_00010_00004)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux307, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux308 #( - M_00010_00004 + -1)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux308, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux309 #( - M_00011_00001 + M_00011_00002)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux309, [-40,-40,-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,29,31,33,35,36,38,38,40,40])
**VARIABLES**
DISCRETE aux310 #( - M_00011_00002 + M_00011_00003)
{-38..26}
**CONSTRAINTS**
w-inintervalset(aux310, [-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,26])
**VARIABLES**
DISCRETE aux311 #( - M_00011_00003 + -1)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux311, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13,-11,-11])
**VARIABLES**
DISCRETE aux312 #( - M_00012_00001 + M_00012_00002)
{-38..26}
**CONSTRAINTS**
w-inintervalset(aux312, [-38,-38,-36,-35,-33,-31,-29,-16,-14,14,16,26])
**VARIABLES**
DISCRETE aux313 #( - M_00012_00002 + -1)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux313, [-51,-51,-44,-44,-38,-37,-32,-32,-25,-24,-20,-19,-16,-15,-13,-13,-11,-11])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[18, 24, 14, 10, 15, 43, 19, 37, 31, 36, 50, 23, 12]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux197)
reify(gaceq(M_00002_00007,M_00003_00007), aux13)
reify(gaceq(M_00007_00006,M_00006_00006), aux14)
div(M_00002_00008, 13, aux15)
div(M_00002_00009, 13, 2)
div(M_00002_00002, 13, 1)
div(M_00002_00003, 13, aux18)
reify(gaceq(M_00003_00009,M_00004_00008), aux19)
reify(gaceq(M_00003_00004,M_00004_00004), aux20)
div(M_00007_00001, 13, aux21)
div(M_00007_00007, 13, aux22)
reify(gaceq(M_00002_00006,M_00003_00005), aux23)
reify(gaceq(M_00007_00002,M_00006_00002), aux24)
div(M_00010_00004, 13, aux25)
div(M_00010_00001, 13, aux26)
div(M_00010_00003, 13, aux27)
div(M_00010_00002, 13, aux28)
reify(gaceq(M_00008_00004,M_00009_00004), aux29)
reify(gaceq(M_00004_00004,M_00005_00004), aux30)
reify(gaceq(M_00002_00008,M_00003_00007), aux31)
reify(gaceq(M_00005_00007,M_00006_00006), aux32)
div(M_00002_00004, 13, aux33)
div(M_00002_00005, 13, aux34)
div(M_00002_00006, 13, aux35)
div(M_00002_00007, 13, aux36)
reify(gaceq(M_00010_00001,M_00009_00001), aux37)
reify(gaceq(M_00004_00005,M_00005_00004), aux38)
reify(gaceq(M_00010_00004,M_00009_00005), aux39)
reify(gaceq(M_00002_00002,M_00003_00002), aux40)
reify(gaceq(M_00002_00010,M_00003_00009), aux41)
reify(gaceq(M_00010_00004,M_00009_00004), aux42)
reify(gaceq(M_00010_00002,M_00009_00003), aux43)
reify(gaceq(M_00004_00006,M_00005_00005), aux44)
div(M_00004_00008, 13, aux45)
div(M_00004_00009, 13, aux46)
div(M_00004_00003, 13, aux47)
div(M_00004_00002, 13, aux48)
reify(gaceq(M_00007_00007,M_00006_00008), aux49)
reify(gaceq(M_00003_00001,M_00004_00001), aux50)
reify(gaceq(M_00005_00004,M_00006_00004), aux51)
reify(gaceq(M_00003_00008,M_00004_00007), aux52)
reify(gaceq(M_00004_00007,M_00005_00007), aux53)
reify(gaceq(M_00004_00010,M_00005_00009), aux54)
div(M_00002_00010, 13, aux55)
div(M_00002_00001, 13, 1)
reify(gaceq(M_00011_00003,M_00012_00002), aux57)
reify(gaceq(M_00011_00001,M_00012_00001), aux58)
reify(gaceq(M_00005_00005,M_00006_00005), aux59)
reify(gaceq(M_00003_00008,M_00004_00008), aux60)
reify(gaceq(M_00007_00006,M_00008_00005), aux61)
reify(gaceq(M_00008_00004,M_00009_00003), aux62)
reify(gaceq(M_00007_00003,M_00006_00003), aux63)
reify(gaceq(M_00003_00007,M_00004_00006), aux64)
reify(gaceq(M_00005_00003,M_00006_00003), aux65)
reify(gaceq(M_00003_00005,M_00004_00004), aux66)
reify(gaceq(M_00005_00007,M_00006_00007), aux67)
reify(gaceq(M_00003_00011,M_00004_00010), aux68)
reify(gaceq(M_00010_00004,M_00011_00003), aux69)
reify(gaceq(M_00010_00001,M_00011_00001), aux70)
reify(gaceq(M_00010_00002,M_00011_00002), aux71)
div(M_00003_00001, 13, 1)
reify(gaceq(M_00007_00002,M_00008_00002), aux73)
div(M_00005_00001, 13, aux74)
div(M_00005_00009, 13, aux75)
div(M_00008_00001, 13, aux76)
div(M_00008_00006, 13, aux77)
reify(gaceq(M_00004_00006,M_00005_00006), aux78)
div(M_00006_00007, 13, aux79)
div(M_00006_00006, 13, aux80)
div(M_00006_00003, 13, aux81)
div(M_00006_00002, 13, aux82)
reify(gaceq(M_00005_00009,M_00006_00008), aux83)
reify(gaceq(M_00010_00003,M_00011_00003), aux84)
reify(gaceq(M_00010_00003,M_00011_00002), aux85)
reify(gaceq(M_00002_00005,M_00003_00004), aux86)
reify(gaceq(M_00010_00002,M_00009_00002), aux87)
reify(gaceq(M_00010_00003,M_00009_00003), aux88)
reify(gaceq(M_00004_00004,M_00005_00003), aux89)
reify(gaceq(M_00002_00003,M_00003_00002), aux90)
reify(gaceq(M_00002_00008,M_00003_00008), aux91)
reify(gaceq(M_00004_00001,M_00005_00001), aux92)
reify(gaceq(M_00004_00007,M_00005_00006), aux93)
reify(gaceq(M_00007_00001,M_00006_00001), aux94)
div(M_00009_00004, 13, aux95)
div(M_00009_00002, 13, aux96)
reify(gaceq(M_00007_00006,M_00006_00007), aux97)
reify(gaceq(M_00002_00009,M_00003_00008), aux98)
reify(gaceq(M_00007_00006,M_00008_00006), aux99)
reify(gaceq(M_00007_00003,M_00008_00002), aux100)
div(M_00011_00002, 13, aux101)
reify(gaceq(M_00003_00006,M_00004_00005), aux102)
reify(gaceq(M_00008_00003,M_00009_00002), aux103)
reify(gaceq(M_00008_00005,M_00009_00005), aux104)
reify(gaceq(M_00005_00008,M_00006_00007), aux105)
reify(gaceq(M_00010_00003,M_00009_00004), aux106)
div(M_00006_00004, 13, aux107)
div(M_00006_00005, 13, aux108)
reify(gaceq(M_00004_00003,M_00005_00003), aux109)
div(M_00006_00001, 13, aux110)
div(M_00006_00008, 13, aux111)
div(M_00003_00010, 13, aux112)
div(M_00003_00008, 13, aux113)
div(M_00003_00009, 13, aux114)
div(M_00003_00002, 13, aux115)
div(M_00003_00003, 13, aux116)
reify(gaceq(M_00004_00002,M_00005_00002), aux117)
reify(gaceq(M_00003_00005,M_00004_00005), aux118)
reify(gaceq(M_00005_00005,M_00006_00004), aux119)
reify(gaceq(M_00003_00003,M_00004_00002), aux120)
reify(gaceq(M_00003_00003,M_00004_00003), aux121)
reify(gaceq(M_00005_00003,M_00006_00002), aux122)
reify(gaceq(M_00005_00008,M_00006_00008), aux123)
div(M_00005_00007, 13, aux124)
div(M_00005_00008, 13, aux125)
div(M_00005_00002, 13, aux126)
div(M_00005_00003, 13, aux127)
reify(gaceq(M_00005_00006,M_00006_00006), aux128)
reify(gaceq(M_00004_00009,M_00005_00009), aux129)
reify(gaceq(M_00004_00003,M_00005_00002), aux130)
reify(gaceq(M_00005_00002,M_00006_00002), aux131)
reify(gaceq(M_00003_00007,M_00004_00007), aux132)
reify(gaceq(M_00004_00008,M_00005_00007), aux133)
div(M_00007_00002, 13, aux134)
div(M_00007_00003, 13, aux135)
div(M_00007_00006, 13, aux136)
div(M_00007_00005, 13, aux137)
reify(gaceq(M_00004_00009,M_00005_00008), aux138)
reify(gaceq(M_00008_00003,M_00009_00003), aux139)
reify(gaceq(M_00008_00005,M_00009_00004), aux140)
div(M_00007_00004, 13, aux141)
reify(gaceq(M_00002_00001,M_00003_00001), aux142)
reify(gaceq(M_00002_00007,M_00003_00006), aux143)
reify(gaceq(M_00003_00004,M_00004_00003), aux144)
reify(gaceq(M_00003_00009,M_00004_00009), aux145)
reify(gaceq(M_00002_00005,M_00003_00005), aux146)
reify(gaceq(M_00007_00004,M_00008_00003), aux147)
reify(gaceq(M_00005_00004,M_00006_00003), aux148)
div(M_00004_00007, 13, aux149)
reify(gaceq(M_00008_00001,M_00009_00001), aux150)
div(M_00004_00004, 13, aux151)
div(M_00004_00005, 13, aux152)
div(M_00004_00006, 13, aux153)
reify(gaceq(M_00002_00006,M_00003_00006), aux154)
reify(gaceq(M_00008_00006,M_00009_00005), aux155)
reify(gaceq(M_00007_00003,M_00006_00004), aux156)
div(M_00008_00003, 13, aux157)
div(M_00008_00004, 13, aux158)
div(M_00008_00005, 13, aux159)
div(M_00008_00002, 13, aux160)
reify(gaceq(M_00002_00004,M_00003_00004), aux161)
reify(gaceq(M_00008_00002,M_00009_00002), aux162)
reify(gaceq(M_00007_00005,M_00008_00005), aux163)
reify(gaceq(M_00007_00007,M_00006_00007), aux164)
reify(gaceq(M_00007_00002,M_00006_00003), aux165)
reify(gaceq(M_00005_00006,M_00006_00005), aux166)
div(M_00003_00007, 13, aux167)
reify(gaceq(M_00007_00004,M_00008_00004), aux168)
div(M_00003_00004, 13, aux169)
div(M_00003_00006, 13, aux170)
div(M_00003_00005, 13, aux171)
reify(gaceq(M_00007_00007,M_00008_00006), aux172)
reify(gaceq(M_00007_00005,M_00008_00004), aux173)
reify(gaceq(M_00002_00004,M_00003_00003), aux174)
reify(gaceq(M_00002_00009,M_00003_00009), aux175)
reify(gaceq(M_00002_00003,M_00003_00003), aux176)
reify(gaceq(M_00007_00005,M_00006_00005), aux177)
div(M_00005_00004, 13, aux178)
div(M_00005_00005, 13, aux179)
div(M_00005_00006, 13, aux180)
reify(gaceq(M_00005_00001,M_00006_00001), aux181)
reify(gaceq(M_00007_00005,M_00006_00006), aux182)
reify(gaceq(M_00003_00006,M_00004_00006), aux183)
div(M_00009_00005, 13, aux184)
div(M_00009_00003, 13, aux185)
div(M_00009_00001, 13, aux186)
div(M_00004_00001, 13, aux187)
div(M_00004_00010, 13, aux188)
reify(gaceq(M_00004_00008,M_00005_00008), aux189)
reify(gaceq(M_00003_00002,M_00004_00002), aux190)
reify(gaceq(M_00007_00004,M_00006_00005), aux191)
reify(gaceq(M_00007_00003,M_00008_00003), aux192)
reify(gaceq(M_00003_00010,M_00004_00009), aux193)
reify(gaceq(M_00007_00001,M_00008_00001), aux194)
reify(gaceq(M_00004_00005,M_00005_00005), aux195)
reify(gaceq(M_00007_00004,M_00006_00004), aux196)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,24),w-literal(M_00002_00002,14),w-literal(M_00002_00003,10),w-literal(M_00002_00004,15),w-literal(M_00002_00005,43),w-literal(M_00002_00006,19),w-literal(M_00002_00007,37),w-literal(M_00002_00008,31),w-literal(M_00002_00009,36),w-literal(M_00002_00010,50)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,14),w-literal(M_00002_00003,10),w-literal(M_00002_00004,15),w-literal(M_00002_00005,43),w-literal(M_00002_00006,19),w-literal(M_00002_00007,37),w-literal(M_00002_00008,31),w-literal(M_00002_00009,36),w-literal(M_00002_00010,50)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,15),w-literal(M_00002_00003,14),w-literal(M_00002_00004,10),w-literal(M_00002_00005,43),w-literal(M_00002_00006,19),w-literal(M_00002_00007,37),w-literal(M_00002_00008,31),w-literal(M_00002_00009,36),w-literal(M_00002_00010,50)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,24),w-literal(M_00002_00003,14),w-literal(M_00002_00004,10),w-literal(M_00002_00005,15),w-literal(M_00002_00006,43),w-literal(M_00002_00007,19),w-literal(M_00002_00008,31),w-literal(M_00002_00009,36),w-literal(M_00002_00010,50)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,24),w-literal(M_00002_00003,14),w-literal(M_00002_00004,10),w-literal(M_00002_00005,15),w-literal(M_00002_00006,43),w-literal(M_00002_00007,19),w-literal(M_00002_00008,37),w-literal(M_00002_00009,36),w-literal(M_00002_00010,50)}),watched-and({w-literal(M_00002_00001,18),w-literal(M_00002_00002,24),w-literal(M_00002_00003,14),w-literal(M_00002_00004,10),w-literal(M_00002_00005,15),w-literal(M_00002_00006,43),w-literal(M_00002_00007,19),w-literal(M_00002_00008,50),w-literal(M_00002_00009,31),w-literal(M_00002_00010,36)})})
watched-or({watched-and({w-literal(M_00003_00011,23),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux13,1),w-literal(aux91,1),w-literal(aux175,1),gaceq(M_00002_00010,M_00003_00010)}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux176,1),w-literal(aux161,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux198,13,0),w-literal(aux34,1)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),gaceq(M_00002_00002,M_00003_00001),w-literal(aux90,1),w-literal(aux174,1),w-literal(aux86,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1)}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux161,1),w-literal(aux146,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux199,13,0),gaceq(aux18,aux35)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux146,1),w-literal(aux154,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux200,13,0),gaceq(aux33,aux36)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux201,13,0),gaceq(aux36,aux15)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux13,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux202,13,0),w-literal(aux15,2)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux91,1),w-literal(aux175,1),gaceq(M_00002_00010,M_00003_00007),watched-or({modulo(aux203,13,0),gaceq(aux36,aux55)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux13,1),w-literal(aux91,1),w-literal(aux41,1),watched-or({modulo(aux204,13,0),w-literal(aux55,2)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux205,13,0),gaceq(aux35,aux36)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux13,1),w-literal(aux91,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux41,1),watched-or({modulo(aux206,13,0),w-literal(aux35,2)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux90,1),w-literal(aux174,1),w-literal(aux86,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux207,13,0),w-literal(aux18,1)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux174,1),w-literal(aux86,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux208,13,0),gaceq(aux18,aux33)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux209,13,0),gaceq(aux34,aux35)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux154,1),w-literal(aux13,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux210,13,0),gaceq(aux34,aux15)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux40,1),w-literal(aux176,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux86,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux211,13,0),w-literal(aux33,1)})}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),modulo(aux212,13,0),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux161,1),w-literal(aux146,1),w-literal(aux154,1),w-literal(aux13,1),w-literal(aux91,1),w-literal(aux175,1)}),watched-and({w-literal(M_00003_00010,23),w-literal(M_00003_00011,12),w-literal(aux142,1),w-literal(aux40,1),w-literal(aux176,1),w-literal(aux86,1),w-literal(aux23,1),w-literal(aux143,1),w-literal(aux31,1),w-literal(aux98,1),w-literal(aux41,1),watched-or({modulo(aux213,13,0),gaceq(aux33,aux34)})})})
watched-or({watched-and({w-literal(aux190,1),w-literal(aux121,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux66,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux214,13,0),w-literal(aux169,1)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux144,1),w-literal(aux66,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux215,13,0),gaceq(aux116,aux169)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux66,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux216,13,0),gaceq(aux169,aux171)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux217,13,0),gaceq(aux170,aux167)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux132,1),w-literal(aux60,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux218,13,0),gaceq(aux170,aux114)})}),watched-and({w-literal(aux50,1),w-literal(aux121,1),w-literal(aux20,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux219,13,0),gaceq(aux115,aux171)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux220,13,0),gaceq(aux171,aux170)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux20,1),w-literal(aux118,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux221,13,0),gaceq(aux116,aux170)})}),watched-and({w-literal(aux50,1),w-literal(aux120,1),w-literal(aux144,1),w-literal(aux66,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux222,13,0),gaceq(aux115,aux116)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux120,1),w-literal(aux144,1),w-literal(aux66,1),w-literal(aux102,1),w-literal(aux64,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux223,13,0),w-literal(aux115,1)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux118,1),w-literal(aux183,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux224,13,0),gaceq(aux169,aux167)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux183,1),w-literal(aux132,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux225,13,0),gaceq(aux171,aux113)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux132,1),w-literal(aux60,1),w-literal(aux145,1),gaceq(M_00003_00010,M_00004_00010),modulo(aux226,13,0)}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux132,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux227,13,0),gaceq(aux113,aux114)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux132,1),w-literal(aux60,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux228,13,0),gaceq(aux114,aux112)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux132,1),w-literal(aux60,1),w-literal(aux145,1),w-literal(aux68,1),watched-or({modulo(aux229,13,0),div(M_00003_00011, 13, aux112)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux193,1),w-literal(aux68,1),watched-or({modulo(aux230,13,0),gaceq(aux167,aux113)})}),watched-and({w-literal(aux50,1),w-literal(aux190,1),w-literal(aux121,1),w-literal(aux20,1),w-literal(aux118,1),w-literal(aux183,1),w-literal(aux60,1),w-literal(aux145,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux68,1),watched-or({modulo(aux231,13,0),gaceq(aux167,aux112)})})})
watched-or({watched-and({modulo(aux232,13,0),w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux78,1),w-literal(aux53,1),w-literal(aux189,1),w-literal(aux129,1)}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux78,1),w-literal(aux53,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux45,aux46),modulo(aux233,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux78,1),w-literal(aux53,1),w-literal(aux189,1),w-literal(aux54,1),watched-or({gaceq(aux46,aux188),modulo(aux234,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux78,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux149,aux45),modulo(aux235,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux78,1),w-literal(aux189,1),w-literal(aux129,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux149,aux188),modulo(aux236,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux153,aux149),modulo(aux237,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux195,1),w-literal(aux53,1),w-literal(aux189,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux54,1),watched-or({gaceq(aux153,aux46),modulo(aux238,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux130,1),w-literal(aux89,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux48,aux47),modulo(aux239,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux89,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux47,aux151),modulo(aux240,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux152,aux153),modulo(aux241,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux30,1),w-literal(aux78,1),w-literal(aux53,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux152,aux45),modulo(aux242,13,0)})}),watched-and({w-literal(aux117,1),w-literal(aux109,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux187,aux151),modulo(aux243,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux151,aux152),modulo(aux244,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux109,1),w-literal(aux30,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux48,aux152),modulo(aux245,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux130,1),w-literal(aux89,1),w-literal(aux38,1),w-literal(aux44,1),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux187,aux48),modulo(aux246,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux30,1),w-literal(aux195,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux93,1),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux47,aux153),modulo(aux247,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux117,1),w-literal(aux109,1),w-literal(aux195,1),w-literal(aux78,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux133,1),w-literal(aux138,1),w-literal(aux54,1),watched-or({gaceq(aux151,aux149),modulo(aux248,13,0)})})})
watched-or({watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux148,1),w-literal(aux119,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux249,13,0),gaceq(aux127,aux178)})}),watched-and({w-literal(aux131,1),w-literal(aux65,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux119,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux250,13,0),gaceq(aux74,aux178)})}),watched-and({w-literal(aux181,1),w-literal(aux65,1),w-literal(aux51,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux251,13,0),gaceq(aux126,aux179)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux51,1),w-literal(aux59,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux252,13,0),gaceq(aux127,aux180)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux59,1),w-literal(aux128,1),w-literal(aux67,1),w-literal(aux123,1),modulo(aux253,13,0)}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux59,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux254,13,0),gaceq(aux180,aux124)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux59,1),w-literal(aux128,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux255,13,0),gaceq(aux124,aux125)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux59,1),w-literal(aux67,1),w-literal(aux123,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux256,13,0),gaceq(aux180,aux75)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux59,1),w-literal(aux128,1),w-literal(aux67,1),w-literal(aux83,1),watched-or({modulo(aux257,13,0),gaceq(aux125,aux75)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux258,13,0),gaceq(aux179,aux180)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux51,1),w-literal(aux128,1),w-literal(aux67,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux83,1),watched-or({modulo(aux259,13,0),gaceq(aux179,aux125)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux122,1),w-literal(aux148,1),w-literal(aux119,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux260,13,0),gaceq(aux74,aux126)})}),watched-and({w-literal(aux181,1),w-literal(aux122,1),w-literal(aux148,1),w-literal(aux119,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux261,13,0),gaceq(aux126,aux127)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux119,1),w-literal(aux166,1),w-literal(aux32,1),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux262,13,0),gaceq(aux178,aux179)})}),watched-and({w-literal(aux181,1),w-literal(aux131,1),w-literal(aux65,1),w-literal(aux59,1),w-literal(aux128,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux105,1),w-literal(aux83,1),watched-or({modulo(aux263,13,0),gaceq(aux178,aux124)})})})
watched-or({watched-and({w-literal(aux94,1),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux191,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux82,aux81),modulo(aux264,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux191,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux110,aux107),modulo(aux265,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux165,1),w-literal(aux156,1),w-literal(aux191,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux110,aux82),modulo(aux266,13,0)})}),watched-and({w-literal(aux94,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux63,1),w-literal(aux196,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux82,aux108),modulo(aux267,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux196,1),w-literal(aux177,1),w-literal(aux14,1),w-literal(aux164,1),modulo(aux268,13,0)}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux196,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux108,aux80),modulo(aux269,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux196,1),w-literal(aux177,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux80,aux79),modulo(aux270,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux196,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux14,1),w-literal(aux164,1),watched-or({gaceq(aux108,aux111),modulo(aux271,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux196,1),w-literal(aux177,1),w-literal(aux14,1),w-literal(aux49,1),watched-or({gaceq(aux79,aux111),modulo(aux272,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),w-literal(aux191,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux107,aux108),modulo(aux273,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux63,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux177,1),w-literal(aux14,1),w-literal(aux49,1),watched-or({gaceq(aux107,aux79),modulo(aux274,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),w-literal(aux156,1),w-literal(aux191,1),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux81,aux107),modulo(aux275,13,0)})}),watched-and({w-literal(aux94,1),w-literal(aux24,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux196,1),w-literal(aux177,1),w-literal(aux97,1),w-literal(aux49,1),watched-or({gaceq(aux81,aux80),modulo(aux276,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux277,13,0),gaceq(aux141,aux22)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux192,1),w-literal(aux163,1),w-literal(aux99,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux278,13,0),gaceq(aux134,aux135)}),w-literal(aux194,1),w-literal(aux100,1),w-literal(aux147,1),w-literal(aux173,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux279,13,0),gaceq(aux141,aux137)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux192,1),w-literal(aux173,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux280,13,0),gaceq(aux136,aux22)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux192,1),w-literal(aux168,1),w-literal(aux163,1),w-literal(aux172,1)}),watched-and({modulo(aux281,13,0),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux192,1),w-literal(aux168,1),w-literal(aux163,1),w-literal(aux99,1)}),watched-and({watched-or({modulo(aux282,13,0),gaceq(aux135,aux136)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux168,1),w-literal(aux163,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux283,13,0),gaceq(aux21,aux141)}),w-literal(aux73,1),w-literal(aux192,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux173,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux284,13,0),gaceq(aux135,aux141)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux147,1),w-literal(aux173,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux285,13,0),gaceq(aux137,aux136)}),w-literal(aux194,1),w-literal(aux73,1),w-literal(aux192,1),w-literal(aux168,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux286,13,0),gaceq(aux21,aux134)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux100,1),w-literal(aux147,1),w-literal(aux173,1),w-literal(aux61,1),w-literal(aux172,1)}),watched-and({watched-or({modulo(aux287,13,0),gaceq(aux134,aux137)}),w-literal(aux194,1),w-literal(aux192,1),w-literal(aux168,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux61,1),w-literal(aux172,1)})})
watched-or({watched-and({watched-or({gaceq(aux76,aux158),modulo(aux288,13,0)}),w-literal(aux162,1),w-literal(aux139,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux140,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux159,aux77),modulo(aux289,13,0)}),w-literal(aux150,1),w-literal(aux162,1),w-literal(aux139,1),w-literal(aux29,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux158,aux159),modulo(aux290,13,0)}),w-literal(aux150,1),w-literal(aux162,1),w-literal(aux139,1),w-literal(aux140,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux157,aux158),modulo(aux291,13,0)}),w-literal(aux150,1),w-literal(aux162,1),w-literal(aux62,1),w-literal(aux140,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux160,aux157),modulo(aux292,13,0)}),w-literal(aux150,1),w-literal(aux103,1),w-literal(aux62,1),w-literal(aux140,1),w-literal(aux155,1)}),watched-and({watched-or({gaceq(aux76,aux160),modulo(aux293,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux103,1),w-literal(aux62,1),w-literal(aux140,1),w-literal(aux155,1)}),watched-and({w-literal(aux150,1),w-literal(aux162,1),w-literal(aux139,1),w-literal(aux29,1),w-literal(aux104,1),modulo(aux294,13,0)}),watched-and({watched-or({gaceq(aux157,aux77),modulo(aux295,13,0)}),w-literal(aux150,1),w-literal(aux162,1),w-literal(aux29,1),w-literal(aux104,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux160,aux159),modulo(aux296,13,0)}),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux29,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux155,1)})})
watched-or({watched-and({watched-or({modulo(aux297,13,0),gaceq(aux186,aux95)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux87,1),w-literal(aux88,1),w-literal(aux39,1)}),watched-and({modulo(aux298,13,0),w-literal(aux37,1),w-literal(aux87,1),w-literal(aux88,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux299,13,0),gaceq(aux186,aux96)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux43,1),w-literal(aux106,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux300,13,0),gaceq(aux96,aux184)}),w-literal(aux37,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux88,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux301,13,0),gaceq(aux96,aux185)}),w-literal(aux37,1),w-literal(aux43,1),w-literal(aux106,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux302,13,0),gaceq(aux185,aux95)}),w-literal(aux37,1),w-literal(aux87,1),w-literal(aux106,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux303,13,0),gaceq(aux95,aux184)}),w-literal(aux37,1),w-literal(aux87,1),w-literal(aux88,1),w-literal(aux39,1)})})
watched-or({watched-and({w-literal(aux70,1),w-literal(aux85,1),w-literal(aux69,1),watched-or({gaceq(aux28,aux27),modulo(aux304,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux71,1),w-literal(aux69,1),watched-or({gaceq(aux27,aux25),modulo(aux305,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux85,1),w-literal(aux69,1),watched-or({gaceq(aux26,aux28),modulo(aux306,13,0)})}),watched-and({w-literal(aux71,1),w-literal(aux84,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux26,aux25),modulo(aux307,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux71,1),w-literal(aux84,1),modulo(aux308,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux101),modulo(aux309,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux57,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux101),modulo(aux310,13,0)}),w-literal(aux58,1),w-literal(aux57,1)}),watched-and({modulo(aux311,13,0),w-literal(aux58,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux197),modulo(aux312,13,0)})}),watched-and({modulo(aux313,13,0),gaceq(M_00012_00001,M_00013_00001)})})
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux198)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux198)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux199)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux199)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux200)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux200)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux201)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux201)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux202)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux202)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux203)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux203)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux204)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux204)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux205)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux205)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux206)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux206)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux207)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux207)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux208)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux208)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux209)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux209)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux210)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux210)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux211)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux211)
weightedsumleq([-1,1],[M_00002_00010,23],aux212)
weightedsumgeq([-1,1],[M_00002_00010,23],aux212)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux213)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux213)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux214)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux214)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux215)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux215)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux216)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux216)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux217)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux217)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux218)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux218)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux219)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux219)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux220)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux220)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux221)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux221)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux222)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux222)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux223)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux223)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux224)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux224)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux225)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux225)
weightedsumleq([-1,1],[M_00003_00011,-1],aux226)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux226)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux227)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux227)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux228)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux228)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux229)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux229)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux230)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux230)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux231)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux231)
weightedsumleq([-1,1],[M_00004_00010,-1],aux232)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux232)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux233)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux233)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux234)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux234)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux235)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux235)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux236)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux236)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux237)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux237)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux238)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux238)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux239)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux239)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux240)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux240)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux241)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux241)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux242)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux242)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux243)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux243)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux244)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux244)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux245)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux245)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux246)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux246)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux247)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux247)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux248)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux248)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux249)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux249)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux250)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux250)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux251)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux251)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux252)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux252)
weightedsumleq([1,-1],[-1,M_00005_00009],aux253)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux253)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux254)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux254)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux255)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux255)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux256)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux256)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux257)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux257)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux258)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux258)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux259)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux259)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux260)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux260)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux261)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux261)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux262)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux262)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux263)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux263)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux264)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux264)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux265)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux265)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux266)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux266)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux267)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux267)
weightedsumleq([1,-1],[-1,M_00006_00008],aux268)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux268)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux269)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux269)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux270)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux270)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux271)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux271)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux272)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux272)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux273)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux273)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux274)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux274)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux275)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux275)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux276)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux276)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux277)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux277)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux278)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux278)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux279)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux279)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux280)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux280)
weightedsumleq([-1,1],[M_00007_00007,-1],aux281)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux281)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux282)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux282)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux283)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux283)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux284)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux284)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux285)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux285)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux286)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux286)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux287)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux287)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux288)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux288)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux289)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux289)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux290)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux290)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux291)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux291)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux292)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux292)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux293)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux293)
weightedsumleq([-1,1],[M_00008_00006,-1],aux294)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux294)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux295)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux295)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux296)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux296)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux297)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux297)
weightedsumleq([1,-1],[-1,M_00009_00005],aux298)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux298)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux299)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux299)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux300)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux300)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux301)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux301)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux302)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux302)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux303)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux303)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux304)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux304)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux305)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux305)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux306)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux306)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux307)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux307)
weightedsumleq([-1,1],[M_00010_00004,-1],aux308)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux308)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux309)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux309)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux310)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux310)
weightedsumleq([-1,1],[M_00011_00003,-1],aux311)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux311)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux312)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux312)
weightedsumleq([-1,1],[M_00012_00002,-1],aux313)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux313)
**EOF**
