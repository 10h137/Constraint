MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 126
# CSE_active_eliminated_expressions = 558
# CSE_active_total_size = 378
**VARIABLES**
DISCRETE M_00002_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00008 #
{37..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00009 #
{11..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [11,11,13,13,19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00010 #
{0..19}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [0,0,11,11,13,13,19,19])
**VARIABLES**
DISCRETE M_00002_00011 #
{0..11}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [0,0,11,11])
**VARIABLES**
DISCRETE M_00003_00004 #
{19..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [19,20,24,24])
**VARIABLES**
DISCRETE M_00003_00005 #
{35..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00006 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [13,13,19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00008 #
{11..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00010 #
{0..11}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [0,0,11,11])
**VARIABLES**
DISCRETE M_00004_00003 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00004 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [13,13,19,20,24,24,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00007 #
{11..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..19}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,0,11,11,13,13,19,19])
**VARIABLES**
DISCRETE M_00005_00001 #
{35..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [35,35,37,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [13,13,19,20,24,24,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00005_00003 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [13,13,19,20,24,24,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00004 #
{11..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00001 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [13,13,19,20,24,24,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{11..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00006_00003 #
{11..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,11,11,13,13,19,20,24,24,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
BOOL aux17 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux20 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux21 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux22 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux24 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux26 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux27 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux28 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{1..2}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux36 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux37 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux39 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux41 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux43 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux44 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux45 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux46 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux47 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
BOOL aux51 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux61 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux63 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux64 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux65 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux66 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux71 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{1..2}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux81 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux82 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{1..2}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{1..3}
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux93 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux94 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux99 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux100 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux101 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux102 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux106 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux107 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{1..2}
DISCRETE aux108 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..2}
DISCRETE aux109 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux110 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux112 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux113 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux119 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux120 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux121 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..2}
BOOL aux123 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux127 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux128 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
BOOL aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux135 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux137 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux138 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux139 #
{0..3}
DISCRETE aux140 #(M_00002_00007 + -13)
{6..38}
**CONSTRAINTS**
w-inintervalset(aux140, [6,7,11,11,19,19,22,22,24,25,32,32,38,38])
**VARIABLES**
DISCRETE aux141 #( - M_00002_00011 + -1)
{-12..-1}
**CONSTRAINTS**
w-inintervalset(aux141, [-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux142 #(M_00002_00008 + -35)
{2..16}
**CONSTRAINTS**
w-inintervalset(aux142, [2,3,10,10,16,16])
**VARIABLES**
DISCRETE aux143 #(M_00002_00009 + -13)
{-2..24}
**CONSTRAINTS**
w-inintervalset(aux143, [-2,-2,0,0,6,7,11,11,19,19,22,22,24,24])
**VARIABLES**
DISCRETE aux144 #(M_00002_00007 + -24)
{-5..27}
**CONSTRAINTS**
w-inintervalset(aux144, [-5,-4,0,0,8,8,11,11,13,14,21,21,27,27])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00008 + M_00002_00011)
{-51..-26}
**CONSTRAINTS**
w-inintervalset(aux145, [-51,-51,-45,-45,-40,-40,-38,-37,-34,-34,-27,-26])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00008 + M_00002_00009)
{-40..-14}
**CONSTRAINTS**
w-inintervalset(aux146, [-40,-40,-38,-38,-34,-34,-32,-31,-27,-24,-21,-21,-19,-16,-14,-14])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00009 + M_00002_00010)
{-37..8}
**CONSTRAINTS**
w-inintervalset(aux147, [-37,-37,-35,-35,-32,-32,-26,-26,-24,-24,-22,-18,-16,-16,-13,-13,-11,-11,-9,-5,-2,0,2,2,6,6,8,8])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00010 + M_00002_00011)
{-19..11}
**CONSTRAINTS**
w-inintervalset(aux148, [-19,-19,-13,-13,-11,-11,-8,-8,-2,-2,0,0,11,11])
**VARIABLES**
DISCRETE aux149 #( - M_00002_00007 + M_00002_00008)
{-14..32}
**CONSTRAINTS**
w-inintervalset(aux149, [-14,-13,-8,-6,-1,3,5,8,10,10,13,14,16,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux150 #( - M_00002_00007 + M_00002_00010)
{-51..-19}
**CONSTRAINTS**
w-inintervalset(aux150, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-32,-27,-24,-22,-19])
**VARIABLES**
DISCRETE aux151 #(M_00003_00004 + -32)
{-13..-8}
**CONSTRAINTS**
w-inintervalset(aux151, [-13,-12,-8,-8])
**VARIABLES**
DISCRETE aux152 #( - M_00003_00005 + M_00003_00008)
{-24..16}
**CONSTRAINTS**
w-inintervalset(aux152, [-24,-24,-22,-22,-18,-15,-13,-13,-11,-11,-5,-5,-3,-2,0,3,8,8,10,10,14,14,16,16])
**VARIABLES**
DISCRETE aux153 #( - M_00003_00007 + M_00003_00008)
{-40..32}
**CONSTRAINTS**
w-inintervalset(aux153, [-40,-40,-38,-38,-34,-34,-32,-31,-27,-24,-22,-21,-19,8,10,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux154 #( - M_00003_00008 + M_00003_00009)
{-51..8}
**CONSTRAINTS**
w-inintervalset(aux154, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,8])
**VARIABLES**
DISCRETE aux155 #( - M_00003_00009 + M_00003_00010)
{-37..11}
**CONSTRAINTS**
w-inintervalset(aux155, [-37,-37,-35,-35,-32,-32,-26,-26,-24,-24,-21,-19,-13,-13,-11,-11,-9,-8,-2,-2,0,0,11,11])
**VARIABLES**
DISCRETE aux156 #(M_00003_00006 + -32)
{-19..5}
**CONSTRAINTS**
w-inintervalset(aux156, [-19,-19,-13,-12,-8,-8,0,0,3,3,5,5])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00006 + M_00003_00007)
{0..38}
**CONSTRAINTS**
w-inintervalset(aux157, [0,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00006 + M_00003_00009)
{-37..24}
**CONSTRAINTS**
w-inintervalset(aux158, [-37,-37,-35,-35,-32,-32,-26,-26,-24,-24,-22,-15,-13,-11,-9,8,11,13,15,19,22,22,24,24])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00010 + -1)
{-12..-1}
**CONSTRAINTS**
w-inintervalset(aux159, [-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00007 + M_00003_00010)
{-51..-8}
**CONSTRAINTS**
w-inintervalset(aux160, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-32,-27,-26,-24,-24,-21,-19,-13,-13,-9,-8])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00004 + M_00003_00005)
{11..16}
**CONSTRAINTS**
w-inintervalset(aux161, [11,11,13,13,15,16])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00005 + M_00003_00006)
{-24..2}
**CONSTRAINTS**
w-inintervalset(aux162, [-24,-24,-22,-22,-18,-15,-13,-13,-11,-11,-5,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00004 + M_00003_00007)
{-5..32}
**CONSTRAINTS**
w-inintervalset(aux163, [-5,-4,-1,1,4,5,8,8,11,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux164 #( - M_00004_00003 + M_00004_00006)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux164, [-32,-32,-26,-26,-24,-24,-22,-15,-13,-11,-9,6,8,8,10,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux165 #(M_00004_00003 + -20)
{-1..17}
**CONSTRAINTS**
w-inintervalset(aux165, [-1,0,4,4,12,12,15,15,17,17])
**VARIABLES**
DISCRETE aux166 #( - M_00004_00007 + M_00004_00008)
{-51..40}
**CONSTRAINTS**
w-inintervalset(aux166, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux167 #( - M_00004_00008 + M_00004_00009)
{-51..11}
**CONSTRAINTS**
w-inintervalset(aux167, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-32,-27,-24,-22,-18,-16,-16,-13,-13,-11,-11,-9,-5,-2,0,2,2,6,6,8,8,11,11])
**VARIABLES**
DISCRETE aux168 #( - M_00004_00006 + M_00004_00007)
{-40..51}
**CONSTRAINTS**
w-inintervalset(aux168, [-40,-40,-38,-38,-34,-34,-32,-31,-27,-24,-22,-21,-19,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux169 #( - M_00004_00006 + M_00004_00009)
{-51..11}
**CONSTRAINTS**
w-inintervalset(aux169, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-32,-27,-24,-22,-18,-16,-16,-13,-13,-11,-11,-9,-5,-2,0,2,2,6,6,8,8,11,11])
**VARIABLES**
DISCRETE aux170 #( - M_00004_00005 + M_00004_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux170, [-37,-37,-35,-35,-32,-32,-27,-24,-22,-11,-9,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00005 + M_00004_00008)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux171, [-38,-37,-35,-35,-32,-32,-27,-24,-22,-11,-9,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux172 #(M_00004_00005 + -20)
{-7..18}
**CONSTRAINTS**
w-inintervalset(aux172, [-7,-7,-1,0,4,4,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux173 #(M_00004_00004 + -38)
{-19..-1}
**CONSTRAINTS**
w-inintervalset(aux173, [-19,-18,-14,-14,-6,-6,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00004 + M_00004_00005)
{-24..18}
**CONSTRAINTS**
w-inintervalset(aux174, [-24,-24,-22,-22,-19,-15,-13,-11,-8,6,8,8,11,18])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00004 + M_00004_00007)
{-26..32}
**CONSTRAINTS**
w-inintervalset(aux175, [-26,-26,-24,-24,-22,-21,-19,-15,-13,-11,-9,6,8,8,10,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00009 + -1)
{-20..-1}
**CONSTRAINTS**
w-inintervalset(aux176, [-20,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux177 #( - M_00004_00003 + M_00004_00004)
{-13..16}
**CONSTRAINTS**
w-inintervalset(aux177, [-13,-11,-8,-8,-5,5,8,8,11,13,15,16])
**VARIABLES**
DISCRETE aux178 #( - M_00005_00002 + M_00005_00003)
{-18..25}
**CONSTRAINTS**
w-inintervalset(aux178, [-18,-15,-13,-11,-8,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux179 #( - M_00005_00001 + M_00005_00004)
{-27..7}
**CONSTRAINTS**
w-inintervalset(aux179, [-27,-24,-22,-22,-19,-13,-11,-11,-6,-5,-3,3,7,7])
**VARIABLES**
DISCRETE aux180 #( - M_00005_00002 + M_00005_00005)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux180, [-37,-37,-35,-35,-32,-32,-26,-26,-24,-24,-22,-15,-13,-11,-9,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux181 #(-1 - M_00005_00008)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux181, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux182 #( - M_00005_00005 + M_00005_00006)
{-40..51}
**CONSTRAINTS**
w-inintervalset(aux182, [-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux183 #( - M_00005_00006 + M_00005_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux183, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux184 #( - M_00005_00005 + M_00005_00008)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux184, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00007 + M_00005_00008)
{-51..40}
**CONSTRAINTS**
w-inintervalset(aux185, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00004 + M_00005_00005)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux186, [-38,-37,-35,-34,-32,-32,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00004 + M_00005_00007)
{-45..40}
**CONSTRAINTS**
w-inintervalset(aux187, [-45,-45,-38,-37,-35,-34,-32,-32,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux188 #( - M_00005_00001 + M_00005_00002)
{-25..-1}
**CONSTRAINTS**
w-inintervalset(aux188, [-25,-24,-22,-22,-19,-13,-11,-11,-6,-5,-3,-1])
**VARIABLES**
DISCRETE aux189 #( - M_00005_00003 + M_00005_00004)
{-26..25}
**CONSTRAINTS**
w-inintervalset(aux189, [-26,-24,-22,-21,-19,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux190 #( - M_00005_00003 + M_00005_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux190, [-37,-37,-35,-34,-32,-32,-27,-24,-22,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux191 #( - M_00006_00001 + M_00006_00004)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux191, [-38,-37,-35,-35,-32,-32,-27,-24,-22,-11,-9,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux192 #( - M_00006_00004 + M_00006_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux192, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux193 #(-1 - M_00006_00007)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux193, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux194 #( - M_00006_00005 + M_00006_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux194, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00004 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux195, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00006 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux196, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux197 #( - M_00006_00003 + M_00006_00004)
{-45..40}
**CONSTRAINTS**
w-inintervalset(aux197, [-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux198 #( - M_00006_00003 + M_00006_00006)
{-51..40}
**CONSTRAINTS**
w-inintervalset(aux198, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux199 #( - M_00006_00002 + M_00006_00003)
{-34..32}
**CONSTRAINTS**
w-inintervalset(aux199, [-34,-34,-32,-32,-27,-24,-22,-21,-19,19,21,22,24,27,31,32])
**VARIABLES**
DISCRETE aux200 #( - M_00006_00002 + M_00006_00005)
{-45..40}
**CONSTRAINTS**
w-inintervalset(aux200, [-45,-45,-38,-37,-35,-34,-32,-32,-27,-24,-22,19,21,22,24,27,31,32,34,34,38,38,40,40])
**VARIABLES**
DISCRETE aux201 #( - M_00006_00001 + M_00006_00002)
{-27..24}
**CONSTRAINTS**
w-inintervalset(aux201, [-27,-24,-22,-21,-19,-11,-9,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux202 #( - M_00007_00004 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux202, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux203 #( - M_00007_00001 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux203, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux204 #( - M_00007_00005 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux204, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux205 #( - M_00007_00002 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux205, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux206 #( - M_00007_00003 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux206, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux207 #( - M_00007_00001 + M_00007_00002)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux207, [-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38])
**VARIABLES**
DISCRETE aux208 #( - M_00007_00002 + M_00007_00003)
{-51..45}
**CONSTRAINTS**
w-inintervalset(aux208, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45])
**VARIABLES**
DISCRETE aux209 #( - M_00007_00006 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux209, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux210 #( - M_00007_00003 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux210, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux211 #( - M_00008_00001 + M_00008_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux211, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux212 #( - M_00008_00002 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux212, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux213 #( - M_00008_00002 + M_00008_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux213, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux214 #( - M_00008_00003 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux214, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux215 #( - M_00008_00005 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux215, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux216 #( - M_00008_00004 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux216, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux217 #( - M_00008_00001 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux217, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux218 #( - M_00009_00003 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux218, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux219 #( - M_00009_00001 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux219, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux220 #( - M_00009_00002 + M_00009_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux220, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux221 #(-1 - M_00009_00004)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux221, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux222 #( - M_00009_00001 + M_00009_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux222, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux223 #( - M_00010_00001 + M_00010_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux223, [-51,-51,-45,-45,-40,-40,-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux224 #( - M_00010_00002 + M_00010_00003)
{-38..51}
**CONSTRAINTS**
w-inintervalset(aux224, [-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux225 #( - M_00010_00003 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux225, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
DISCRETE aux226 #( - M_00011_00001 + M_00011_00002)
{-38..51}
**CONSTRAINTS**
w-inintervalset(aux226, [-38,-37,-35,-34,-32,-31,-27,-24,-22,22,24,27,31,32,34,35,37,38,40,40,45,45,51,51])
**VARIABLES**
DISCRETE aux227 #( - M_00011_00002 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux227, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-25,-25,-21,-20,-14,-14,-12,-12,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[38, 20, 32, 24, 35, 13, 45, 51, 37, 19, 0, 11]
**SEARCH**
PRINT[[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux139)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00008, 13, aux14)
div(M_00002_00009, 13, aux15)
div(M_00002_00010, 13, aux16)
reify(gaceq(M_00007_00002,M_00008_00002), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00006, 13, aux19)
reify(gaceq(M_00003_00009,M_00004_00008), aux20)
reify(gaceq(M_00007_00003,M_00006_00003), aux21)
reify(gaceq(M_00005_00002,M_00006_00002), aux22)
div(M_00010_00002, 13, aux23)
reify(gaceq(M_00008_00002,M_00009_00002), aux24)
reify(gaceq(M_00008_00003,M_00009_00003), aux25)
reify(gaceq(M_00004_00008,M_00005_00007), aux26)
reify(gaceq(M_00004_00006,M_00005_00005), aux27)
reify(gaceq(M_00005_00007,M_00006_00006), aux28)
div(M_00002_00007, 13, aux29)
reify(gaceq(M_00010_00003,M_00009_00003), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
div(M_00004_00008, 13, aux32)
div(M_00004_00003, 13, aux33)
div(M_00004_00007, 13, aux34)
reify(gaceq(M_00004_00006,M_00005_00006), aux35)
reify(gaceq(M_00003_00008,M_00004_00007), aux36)
reify(gaceq(M_00007_00006,M_00008_00005), aux37)
reify(gaceq(M_00008_00004,M_00009_00003), aux38)
reify(gaceq(M_00004_00009,M_00005_00008), aux39)
reify(gaceq(M_00003_00007,M_00004_00007), aux40)
reify(gaceq(M_00003_00007,M_00004_00006), aux41)
reify(gaceq(M_00005_00001,M_00006_00001), aux42)
reify(gaceq(M_00003_00010,M_00004_00009), aux43)
reify(gaceq(M_00005_00006,M_00006_00006), aux44)
reify(gaceq(M_00007_00001,M_00008_00001), aux45)
reify(gaceq(M_00004_00004,M_00005_00004), aux46)
reify(gaceq(M_00004_00005,M_00005_00005), aux47)
div(M_00003_00005, 13, 2)
div(M_00005_00008, 13, aux49)
div(M_00005_00001, 13, 2)
reify(gaceq(M_00005_00003,M_00006_00003), aux51)
div(M_00008_00003, 13, aux52)
div(M_00008_00001, 13, aux53)
div(M_00008_00005, 13, aux54)
div(M_00006_00006, 13, aux55)
div(M_00006_00005, 13, aux56)
div(M_00006_00003, 13, aux57)
div(M_00006_00002, 13, aux58)
reify(gaceq(M_00010_00003,M_00011_00002), aux59)
reify(gaceq(M_00010_00001,M_00011_00001), aux60)
reify(gaceq(M_00005_00004,M_00006_00004), aux61)
reify(gaceq(M_00002_00010,M_00003_00010), aux62)
reify(gaceq(M_00002_00008,M_00003_00008), aux63)
reify(gaceq(M_00002_00009,M_00003_00008), aux64)
reify(gaceq(M_00002_00009,M_00003_00009), aux65)
reify(gaceq(M_00007_00006,M_00006_00007), aux66)
reify(gaceq(M_00007_00005,M_00008_00005), aux67)
reify(gaceq(M_00007_00003,M_00008_00002), aux68)
reify(gaceq(M_00008_00003,M_00009_00002), aux69)
reify(gaceq(M_00008_00004,M_00009_00004), aux70)
reify(gaceq(M_00005_00008,M_00006_00007), aux71)
reify(gaceq(M_00010_00001,M_00009_00001), aux72)
reify(gaceq(M_00010_00002,M_00009_00002), aux73)
reify(gaceq(M_00010_00003,M_00009_00004), aux74)
div(M_00006_00004, 13, aux75)
div(M_00006_00001, 13, aux76)
div(M_00006_00007, 13, aux77)
div(M_00003_00007, 13, aux78)
div(M_00003_00008, 13, aux79)
div(M_00003_00009, 13, aux80)
reify(gaceq(M_00005_00005,M_00006_00004), aux81)
reify(gaceq(M_00005_00005,M_00006_00005), aux82)
reify(gaceq(M_00003_00005,M_00004_00004), aux83)
reify(gaceq(M_00003_00009,M_00004_00009), aux84)
reify(gaceq(M_00005_00003,M_00006_00002), aux85)
reify(gaceq(M_00005_00007,M_00006_00007), aux86)
div(M_00005_00007, 13, aux87)
div(M_00005_00006, 13, aux88)
div(M_00005_00002, 13, aux89)
div(M_00005_00003, 13, aux90)
reify(gaceq(M_00004_00008,M_00005_00008), aux91)
reify(gaceq(M_00004_00004,M_00005_00003), aux92)
reify(gaceq(M_00002_00010,M_00003_00009), aux93)
reify(gaceq(M_00003_00004,M_00004_00004), aux94)
div(M_00007_00002, 13, aux95)
div(M_00007_00004, 13, aux96)
div(M_00007_00003, 13, aux97)
div(M_00007_00005, 13, aux98)
reify(gaceq(M_00007_00002,M_00006_00002), aux99)
reify(gaceq(M_00007_00001,M_00006_00001), aux100)
reify(gaceq(M_00008_00005,M_00009_00004), aux101)
reify(gaceq(M_00008_00001,M_00009_00001), aux102)
reify(gaceq(M_00003_00006,M_00004_00005), aux103)
reify(gaceq(M_00007_00004,M_00008_00003), aux104)
reify(gaceq(M_00005_00004,M_00006_00003), aux105)
reify(gaceq(M_00003_00008,M_00004_00008), aux106)
div(M_00004_00004, 13, aux107)
div(M_00004_00005, 13, aux108)
div(M_00004_00006, 13, aux109)
reify(gaceq(M_00003_00005,M_00004_00005), aux110)
reify(gaceq(M_00007_00003,M_00006_00004), aux111)
reify(gaceq(M_00003_00006,M_00004_00006), aux112)
reify(gaceq(M_00004_00007,M_00005_00006), aux113)
div(M_00008_00004, 13, aux114)
div(M_00008_00002, 13, aux115)
reify(gaceq(M_00007_00004,M_00008_00004), aux116)
reify(gaceq(M_00007_00006,M_00006_00006), aux117)
reify(gaceq(M_00007_00002,M_00006_00003), aux118)
reify(gaceq(M_00005_00006,M_00006_00005), aux119)
reify(gaceq(M_00007_00003,M_00008_00003), aux120)
reify(gaceq(M_00002_00011,M_00003_00010), aux121)
div(M_00003_00006, 13, aux122)
reify(gaceq(M_00007_00005,M_00008_00004), aux123)
reify(gaceq(M_00002_00008,M_00003_00007), aux124)
div(M_00005_00004, 13, aux125)
div(M_00005_00005, 13, aux126)
reify(gaceq(M_00004_00003,M_00005_00003), aux127)
reify(gaceq(M_00007_00005,M_00006_00006), aux128)
div(M_00009_00003, 13, aux129)
div(M_00009_00004, 13, aux130)
div(M_00009_00001, 13, aux131)
div(M_00009_00002, 13, aux132)
div(M_00004_00009, 13, aux133)
reify(gaceq(M_00004_00007,M_00005_00007), aux134)
reify(gaceq(M_00004_00005,M_00005_00004), aux135)
reify(gaceq(M_00007_00004,M_00006_00004), aux136)
reify(gaceq(M_00007_00004,M_00006_00005), aux137)
reify(gaceq(M_00002_00007,M_00003_00007), aux138)
gccweak([M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00007,19),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,0),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00009,11),w-literal(M_00002_00008,51),w-literal(M_00002_00010,19),w-literal(M_00002_00011,0)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,19),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00007,51),w-literal(M_00002_00008,37),w-literal(M_00002_00009,19),w-literal(M_00002_00010,0),w-literal(M_00002_00011,11)})})
watched-or({watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),watched-or({w-literal(aux29,1),modulo(aux140,13,0)}),gaceq(M_00002_00007,M_00003_00006),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux93,1),w-literal(aux121,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),modulo(aux141,13,0),w-literal(aux138,1),w-literal(aux63,1),w-literal(aux65,1),w-literal(aux62,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00006,13),watched-or({w-literal(aux14,2),modulo(aux142,13,0)}),w-literal(aux138,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux64,1),w-literal(aux93,1),w-literal(aux121,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),watched-or({w-literal(aux15,1),modulo(aux143,13,0)}),w-literal(aux138,1),w-literal(aux63,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux93,1),w-literal(aux121,1)}),watched-and({w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),watched-or({w-literal(aux29,1),modulo(aux144,13,0)}),gaceq(M_00002_00007,M_00003_00004),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux93,1),w-literal(aux121,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux138,1),w-literal(aux65,1),w-literal(aux62,1),gaceq(M_00002_00011,M_00003_00008),modulo(aux145,13,0)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux138,1),w-literal(aux64,1),w-literal(aux93,1),w-literal(aux121,1),watched-or({modulo(aux146,13,0),gaceq(aux14,aux15)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux138,1),w-literal(aux63,1),w-literal(aux93,1),w-literal(aux121,1),watched-or({modulo(aux147,13,0),gaceq(aux15,aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux138,1),w-literal(aux63,1),w-literal(aux65,1),w-literal(aux121,1),watched-or({modulo(aux148,13,0),div(M_00002_00011, 13, aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux124,1),w-literal(aux64,1),w-literal(aux93,1),w-literal(aux121,1),watched-or({modulo(aux149,13,0),gaceq(aux29,aux14)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux63,1),w-literal(aux65,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux121,1),watched-or({modulo(aux150,13,0),gaceq(aux29,aux16)})})})
watched-or({watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux83,1),w-literal(aux103,1),w-literal(aux41,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),modulo(aux151,13,0)}),watched-and({w-literal(aux94,1),w-literal(aux112,1),w-literal(aux40,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux152,13,0),w-literal(aux79,2)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux153,13,0),gaceq(aux78,aux79)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux40,1),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux154,13,0),gaceq(aux79,aux80)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux40,1),w-literal(aux106,1),w-literal(aux43,1),watched-or({modulo(aux155,13,0),div(M_00003_00010, 13, aux80)}),w-literal(M_00004_00003,32)}),watched-and({watched-or({modulo(aux156,13,0),w-literal(aux122,2)}),w-literal(aux94,1),w-literal(aux110,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux41,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux41,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux157,13,0),gaceq(aux122,aux78)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux40,1),w-literal(aux106,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux43,1),watched-or({modulo(aux158,13,0),gaceq(aux122,aux80)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux40,1),w-literal(aux106,1),w-literal(aux84,1),modulo(aux159,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux110,1),w-literal(aux112,1),w-literal(aux106,1),w-literal(aux84,1),gaceq(M_00003_00010,M_00004_00007),modulo(aux160,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux83,1),w-literal(aux103,1),w-literal(aux41,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),modulo(aux161,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux94,1),w-literal(aux103,1),w-literal(aux41,1),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux162,13,0),w-literal(aux122,2)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux110,1),w-literal(aux112,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux36,1),w-literal(aux20,1),w-literal(aux43,1),watched-or({modulo(aux163,13,0),div(M_00003_00004, 13, aux78)}),w-literal(M_00004_00003,32)})})
watched-or({watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux46,1),w-literal(aux47,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux33,aux109),modulo(aux164,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux165,13,0),w-literal(aux33,1)}),gaceq(M_00004_00003,M_00005_00002),w-literal(aux92,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux35,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux34,aux32),modulo(aux166,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux35,1),w-literal(aux134,1),w-literal(aux39,1),watched-or({gaceq(aux32,aux133),modulo(aux167,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux109,aux34),modulo(aux168,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux134,1),w-literal(aux91,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux109,aux133),modulo(aux169,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux108,aux109),modulo(aux170,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux35,1),w-literal(aux134,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux39,1),watched-or({gaceq(aux108,aux32),modulo(aux171,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux172,13,0),w-literal(aux108,1)}),w-literal(aux127,1),w-literal(aux46,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1)}),watched-and({w-literal(M_00005_00002,20),watched-or({modulo(aux173,13,0),w-literal(aux107,2)}),w-literal(aux127,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux107,aux108),modulo(aux174,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux127,1),w-literal(aux47,1),w-literal(aux35,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux107,aux34),modulo(aux175,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),modulo(aux176,13,0),w-literal(aux127,1),w-literal(aux46,1),w-literal(aux47,1),w-literal(aux35,1),w-literal(aux134,1),w-literal(aux91,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux92,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux113,1),w-literal(aux26,1),w-literal(aux39,1),watched-or({gaceq(aux33,aux107),modulo(aux177,13,0)})})})
watched-or({watched-and({w-literal(aux42,1),w-literal(aux85,1),w-literal(aux105,1),w-literal(aux81,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux178,13,0),gaceq(aux89,aux90)})}),watched-and({w-literal(aux22,1),w-literal(aux51,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux81,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux179,13,0),w-literal(aux125,2)})}),watched-and({w-literal(aux42,1),w-literal(aux51,1),w-literal(aux61,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux180,13,0),gaceq(aux89,aux126)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux61,1),w-literal(aux82,1),w-literal(aux44,1),w-literal(aux86,1),modulo(aux181,13,0)}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux61,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux182,13,0),gaceq(aux126,aux88)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux61,1),w-literal(aux82,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux183,13,0),gaceq(aux88,aux87)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux61,1),w-literal(aux44,1),w-literal(aux86,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux184,13,0),gaceq(aux126,aux49)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux61,1),w-literal(aux82,1),w-literal(aux44,1),w-literal(aux71,1),watched-or({modulo(aux185,13,0),gaceq(aux87,aux49)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux81,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux186,13,0),gaceq(aux125,aux126)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux51,1),w-literal(aux82,1),w-literal(aux44,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux71,1),watched-or({modulo(aux187,13,0),gaceq(aux125,aux87)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux85,1),w-literal(aux105,1),w-literal(aux81,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux188,13,0),w-literal(aux89,2)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux105,1),w-literal(aux81,1),w-literal(aux119,1),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux189,13,0),gaceq(aux90,aux125)})}),watched-and({w-literal(aux42,1),w-literal(aux22,1),w-literal(aux61,1),w-literal(aux82,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux28,1),w-literal(aux71,1),watched-or({modulo(aux190,13,0),gaceq(aux90,aux88)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux99,1),w-literal(aux21,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux76,aux75),modulo(aux191,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux21,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux75,aux56),modulo(aux192,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux21,1),w-literal(aux136,1),w-literal(aux13,1),w-literal(aux117,1),modulo(aux193,13,0)}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux21,1),w-literal(aux136,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux56,aux55),modulo(aux194,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux21,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux117,1),watched-or({gaceq(aux75,aux77),modulo(aux195,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux21,1),w-literal(aux136,1),w-literal(aux13,1),w-literal(aux66,1),watched-or({gaceq(aux55,aux77),modulo(aux196,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),w-literal(aux111,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux57,aux75),modulo(aux197,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux99,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux136,1),w-literal(aux13,1),w-literal(aux66,1),watched-or({gaceq(aux57,aux55),modulo(aux198,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux118,1),w-literal(aux111,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux58,aux57),modulo(aux199,13,0)})}),watched-and({w-literal(aux100,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux21,1),w-literal(aux136,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux58,aux56),modulo(aux200,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux118,1),w-literal(aux111,1),w-literal(aux137,1),w-literal(aux128,1),w-literal(aux66,1),watched-or({gaceq(aux76,aux58),modulo(aux201,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux202,13,0),gaceq(aux96,aux98)}),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux120,1),w-literal(aux123,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux203,13,0),gaceq(aux18,aux96)}),w-literal(aux17,1),w-literal(aux120,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux123,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux204,13,0),gaceq(aux98,aux19)}),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux120,1),w-literal(aux116,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux205,13,0),gaceq(aux95,aux98)}),w-literal(aux45,1),w-literal(aux120,1),w-literal(aux116,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux206,13,0),gaceq(aux97,aux19)}),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux116,1),w-literal(aux67,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux207,13,0),gaceq(aux18,aux95)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux68,1),w-literal(aux104,1),w-literal(aux123,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux208,13,0),gaceq(aux95,aux97)}),w-literal(aux45,1),w-literal(aux68,1),w-literal(aux104,1),w-literal(aux123,1),w-literal(aux37,1)}),watched-and({modulo(aux209,13,0),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux120,1),w-literal(aux116,1),w-literal(aux67,1)}),watched-and({watched-or({modulo(aux210,13,0),gaceq(aux97,aux96)}),w-literal(aux45,1),w-literal(aux17,1),w-literal(aux104,1),w-literal(aux123,1),w-literal(aux37,1)})})
watched-or({watched-and({watched-or({gaceq(aux53,aux115),modulo(aux211,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux101,1)}),watched-and({watched-or({gaceq(aux115,aux54),modulo(aux212,13,0)}),w-literal(aux102,1),w-literal(aux25,1),w-literal(aux70,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux115,aux52),modulo(aux213,13,0)}),w-literal(aux102,1),w-literal(aux69,1),w-literal(aux38,1),w-literal(aux101,1)}),watched-and({watched-or({gaceq(aux52,aux114),modulo(aux214,13,0)}),w-literal(aux102,1),w-literal(aux24,1),w-literal(aux38,1),w-literal(aux101,1)}),watched-and({w-literal(aux102,1),w-literal(aux24,1),w-literal(aux25,1),w-literal(aux70,1),modulo(aux215,13,0)}),watched-and({watched-or({gaceq(aux114,aux54),modulo(aux216,13,0)}),w-literal(aux102,1),w-literal(aux24,1),w-literal(aux25,1),w-literal(aux101,1)}),watched-and({watched-or({gaceq(aux53,aux114),modulo(aux217,13,0)}),w-literal(aux24,1),w-literal(aux25,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux101,1)})})
watched-or({watched-and({watched-or({modulo(aux218,13,0),gaceq(aux129,aux130)}),w-literal(aux72,1),w-literal(aux73,1),w-literal(aux74,1)}),watched-and({watched-or({modulo(aux219,13,0),gaceq(aux131,aux130)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux73,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux220,13,0),gaceq(aux132,aux129)}),w-literal(aux72,1),w-literal(aux31,1),w-literal(aux74,1)}),watched-and({modulo(aux221,13,0),w-literal(aux72,1),w-literal(aux73,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux222,13,0),gaceq(aux131,aux132)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1),w-literal(aux74,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux59,1),watched-or({div(M_00010_00001, 13, aux23),modulo(aux223,13,0)})}),watched-and({w-literal(aux60,1),w-literal(aux59,1),watched-or({div(M_00010_00003, 13, aux23),modulo(aux224,13,0)})}),watched-and({w-literal(aux60,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux225,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux139),modulo(aux226,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux227,13,0),gaceq(M_00011_00001,M_00012_00001)})})
sumleq([M_00002_00007,-13],aux140)
sumgeq([M_00002_00007,-13],aux140)
weightedsumleq([-1,1],[M_00002_00011,-1],aux141)
weightedsumgeq([-1,1],[M_00002_00011,-1],aux141)
sumleq([M_00002_00008,-35],aux142)
sumgeq([M_00002_00008,-35],aux142)
sumleq([M_00002_00009,-13],aux143)
sumgeq([M_00002_00009,-13],aux143)
sumleq([M_00002_00007,-24],aux144)
sumgeq([M_00002_00007,-24],aux144)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux145)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux145)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux146)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux146)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux147)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux147)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux148)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux148)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux149)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux149)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux150)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux150)
sumleq([M_00003_00004,-32],aux151)
sumgeq([M_00003_00004,-32],aux151)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux152)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux152)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux153)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux153)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux154)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux154)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux155)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux155)
sumleq([M_00003_00006,-32],aux156)
sumgeq([M_00003_00006,-32],aux156)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux157)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux157)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux158)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux158)
weightedsumleq([-1,1],[M_00003_00010,-1],aux159)
weightedsumgeq([-1,1],[M_00003_00010,-1],aux159)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux160)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux160)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux161)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux161)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux162)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux162)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux163)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux163)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux164)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux164)
sumleq([M_00004_00003,-20],aux165)
sumgeq([M_00004_00003,-20],aux165)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux166)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux166)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux167)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux167)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux168)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux168)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux169)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux169)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux170)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux170)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux171)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux171)
sumleq([M_00004_00005,-20],aux172)
sumgeq([M_00004_00005,-20],aux172)
sumleq([M_00004_00004,-38],aux173)
sumgeq([M_00004_00004,-38],aux173)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux174)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux174)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux175)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux175)
weightedsumleq([-1,1],[M_00004_00009,-1],aux176)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux176)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux177)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux177)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux178)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux178)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux179)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux179)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux180)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux180)
weightedsumleq([1,-1],[-1,M_00005_00008],aux181)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux181)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux182)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux182)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux183)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux183)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux184)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux184)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux185)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux185)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux186)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux186)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux187)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux188)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux188)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux189)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux190)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux191)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux191)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux192)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux192)
weightedsumleq([1,-1],[-1,M_00006_00007],aux193)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux193)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux194)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux194)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux195)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux195)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux196)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux196)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux197)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux197)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux198)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux198)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux199)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux199)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux200)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux200)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux201)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux201)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux202)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux202)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux203)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux203)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux204)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux204)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux205)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux205)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux206)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux206)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux207)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux207)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux208)
weightedsumleq([-1,1],[M_00007_00006,-1],aux209)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux209)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux210)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux210)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux211)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux211)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux212)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux212)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux213)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux213)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux214)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux214)
weightedsumleq([-1,1],[M_00008_00005,-1],aux215)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux215)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux216)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux216)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux217)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux217)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux218)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux218)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux219)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux219)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux220)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux220)
weightedsumleq([1,-1],[-1,M_00009_00004],aux221)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux221)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux222)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux222)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux223)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux223)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux224)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux224)
weightedsumleq([-1,1],[M_00010_00003,-1],aux225)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux225)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux226)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux226)
weightedsumleq([-1,1],[M_00011_00002,-1],aux227)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux227)
**EOF**
