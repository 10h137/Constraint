MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 159
# CSE_active_eliminated_expressions = 776
# CSE_active_total_size = 477
**VARIABLES**
DISCRETE M_00002_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00008 #
{37..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00009 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00010 #
{0..19}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [0,0,12,13,19,19])
**VARIABLES**
DISCRETE M_00002_00011 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [0,0,12,13,19,20,24,24,27,27])
**VARIABLES**
DISCRETE M_00003_00004 #
{19..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [19,20,24,24])
**VARIABLES**
DISCRETE M_00003_00005 #
{35..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00006 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [13,13,19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00008 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00010 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [0,0,12,13,19,20,24,24,27,27])
**VARIABLES**
DISCRETE M_00003_00011 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [0,0,12,13,19,20,24,24,27,27])
**VARIABLES**
DISCRETE M_00004_00003 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00004 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [13,13,19,20,24,24,27,27,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00007 #
{12..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00010 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [0,0,12,13,19,20,24,24,27,27])
**VARIABLES**
DISCRETE M_00005_00001 #
{35..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [35,35,37,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [13,13,19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00005_00003 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [13,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00004 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [13,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00006_00001 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [13,13,19,20,24,24,27,27,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [13,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00006_00003 #
{13..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [13,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00013_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [0,0,12,13,19,20,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..2}
BOOL aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..2}
BOOL aux17 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux20 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux21 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux27 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux28 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux29 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux30 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux34 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux36 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux37 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
DISCRETE aux39 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux40 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{1..2}
BOOL aux42 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux43 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux45 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux48 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux50 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux52 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux53 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux54 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux55 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux56 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux57 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux61 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..2}
BOOL aux64 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
DISCRETE aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
BOOL aux69 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
DISCRETE aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{1..3}
DISCRETE aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{1..3}
BOOL aux74 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux77 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux78 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux80 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux81 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux82 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux83 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux86 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux87 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
DISCRETE aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux93 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux96 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
BOOL aux97 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux98 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{1..2}
DISCRETE aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..2}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
BOOL aux103 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux104 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
BOOL aux109 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{1..2}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{1..3}
BOOL aux114 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux117 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux118 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux123 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux124 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux127 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux130 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux131 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
DISCRETE aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{1..2}
DISCRETE aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..2}
DISCRETE aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux135 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux137 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux139 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux142 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux143 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux146 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux147 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
DISCRETE aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
DISCRETE aux149 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..2}
BOOL aux152 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux153 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux155 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux156 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{1..3}
DISCRETE aux157 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux158 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
BOOL aux159 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux160 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux161 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux162 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux163 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux164 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..2}
BOOL aux165 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux166 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux167 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux168 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux169 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux170 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux171 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux172 #
{0..3}
DISCRETE aux173 #(M_00002_00009 + -13)
{6..24}
**CONSTRAINTS**
w-inintervalset(aux173, [6,7,11,11,14,14,19,19,22,22,24,24])
**VARIABLES**
DISCRETE aux174 #(M_00002_00007 + -24)
{-5..27}
**CONSTRAINTS**
w-inintervalset(aux174, [-5,-4,0,0,3,3,8,8,11,11,13,14,21,21,27,27])
**VARIABLES**
DISCRETE aux175 #( - M_00002_00011 + 12)
{-15..12}
**CONSTRAINTS**
w-inintervalset(aux175, [-15,-15,-12,-12,-8,-7,-1,0,12,12])
**VARIABLES**
DISCRETE aux176 #( - M_00002_00009 + 12)
{-25..-7}
**CONSTRAINTS**
w-inintervalset(aux176, [-25,-25,-23,-23,-20,-20,-15,-15,-12,-12,-8,-7])
**VARIABLES**
DISCRETE aux177 #( - M_00002_00008 + M_00002_00009)
{-24..-14}
**CONSTRAINTS**
w-inintervalset(aux177, [-24,-24,-21,-21,-19,-16,-14,-14])
**VARIABLES**
DISCRETE aux178 #( - M_00002_00009 + M_00002_00010)
{-37..-8}
**CONSTRAINTS**
w-inintervalset(aux178, [-37,-37,-35,-35,-32,-32,-27,-27,-25,-22,-20,-18,-16,-11,-8,-8])
**VARIABLES**
DISCRETE aux179 #( - M_00002_00008 + M_00002_00011)
{-51..-10}
**CONSTRAINTS**
w-inintervalset(aux179, [-51,-51,-45,-45,-39,-37,-33,-31,-27,-24,-21,-21,-19,-17,-14,-13,-11,-10])
**VARIABLES**
DISCRETE aux180 #( - M_00002_00010 + M_00002_00011)
{-19..27}
**CONSTRAINTS**
w-inintervalset(aux180, [-19,-19,-13,-12,-7,-6,-1,1,5,8,11,15,19,20,24,24,27,27])
**VARIABLES**
DISCRETE aux181 #( - M_00002_00007 + M_00002_00008)
{-14..32}
**CONSTRAINTS**
w-inintervalset(aux181, [-14,-13,-8,-6,-1,3,5,8,10,11,13,14,16,19,21,21,24,27,31,32])
**VARIABLES**
DISCRETE aux182 #( - M_00002_00007 + M_00002_00010)
{-51..-19}
**CONSTRAINTS**
w-inintervalset(aux182, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-32,-27,-22,-20,-19])
**VARIABLES**
DISCRETE aux183 #(M_00002_00007 + -13)
{6..38}
**CONSTRAINTS**
w-inintervalset(aux183, [6,7,11,11,14,14,19,19,22,22,24,25,32,32,38,38])
**VARIABLES**
DISCRETE aux184 #(M_00002_00008 + -35)
{2..16}
**CONSTRAINTS**
w-inintervalset(aux184, [2,3,10,10,16,16])
**VARIABLES**
DISCRETE aux185 #( - M_00003_00008 + M_00003_00009)
{-51..0}
**CONSTRAINTS**
w-inintervalset(aux185, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,0])
**VARIABLES**
DISCRETE aux186 #( - M_00003_00009 + M_00003_00010)
{-37..27}
**CONSTRAINTS**
w-inintervalset(aux186, [-37,-37,-35,-35,-32,-32,-27,-27,-25,-22,-20,-10,-8,-3,-1,1,3,8,11,15,19,20,24,24,27,27])
**VARIABLES**
DISCRETE aux187 #( - M_00003_00008 + M_00003_00011)
{-51..-7}
**CONSTRAINTS**
w-inintervalset(aux187, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,-7])
**VARIABLES**
DISCRETE aux188 #( - M_00003_00010 + M_00003_00011)
{-19..27}
**CONSTRAINTS**
w-inintervalset(aux188, [-19,-19,-15,-11,-8,-3,-1,1,3,8,11,15,19,20,24,24,27,27])
**VARIABLES**
DISCRETE aux189 #(M_00003_00006 + -32)
{-19..5}
**CONSTRAINTS**
w-inintervalset(aux189, [-19,-19,-13,-12,-8,-8,-5,-5,0,0,3,3,5,5])
**VARIABLES**
DISCRETE aux190 #( - M_00003_00005 + M_00003_00006)
{-24..2}
**CONSTRAINTS**
w-inintervalset(aux190, [-24,-24,-22,-22,-18,-15,-13,-13,-11,-10,-8,-8,-5,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux191 #( - M_00003_00007 + M_00003_00008)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux191, [-32,-31,-27,-24,-21,-21,-19,-10,-8,8,10,19,21,21,24,27,31,32])
**VARIABLES**
DISCRETE aux192 #( - M_00003_00007 + M_00003_00010)
{-51..8}
**CONSTRAINTS**
w-inintervalset(aux192, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,-3,-1,1,3,5,7,8])
**VARIABLES**
DISCRETE aux193 #(M_00003_00004 + -32)
{-13..-8}
**CONSTRAINTS**
w-inintervalset(aux193, [-13,-12,-8,-8])
**VARIABLES**
DISCRETE aux194 #( - M_00003_00011 + -1)
{-28..-1}
**CONSTRAINTS**
w-inintervalset(aux194, [-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux195 #( - M_00003_00004 + M_00003_00005)
{11..16}
**CONSTRAINTS**
w-inintervalset(aux195, [11,11,13,13,15,16])
**VARIABLES**
DISCRETE aux196 #( - M_00003_00006 + M_00003_00007)
{0..38}
**CONSTRAINTS**
w-inintervalset(aux196, [0,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux197 #( - M_00003_00004 + M_00003_00007)
{-5..32}
**CONSTRAINTS**
w-inintervalset(aux197, [-5,-4,-1,1,3,5,7,8,11,19,21,21,25,27,31,32])
**VARIABLES**
DISCRETE aux198 #( - M_00003_00005 + M_00003_00008)
{-18..16}
**CONSTRAINTS**
w-inintervalset(aux198, [-18,-15,-13,-13,-11,-10,-8,-8,-5,-5,-3,-2,0,3,8,8,10,10,14,14,16,16])
**VARIABLES**
DISCRETE aux199 #( - M_00003_00006 + M_00003_00009)
{-37..24}
**CONSTRAINTS**
w-inintervalset(aux199, [-37,-37,-35,-35,-32,-32,-27,-27,-25,-22,-20,-10,-8,8,10,19,22,22,24,24])
**VARIABLES**
DISCRETE aux200 #( - M_00004_00004 + M_00004_00005)
{-24..18}
**CONSTRAINTS**
w-inintervalset(aux200, [-24,-24,-22,-22,-19,-10,-8,8,10,18])
**VARIABLES**
DISCRETE aux201 #(M_00004_00005 + -20)
{-7..18}
**CONSTRAINTS**
w-inintervalset(aux201, [-7,-7,-1,0,4,4,7,7,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux202 #( - M_00004_00003 + M_00004_00006)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux202, [-32,-32,-27,-27,-25,-22,-20,-10,-8,8,10,19,21,21,24,27,31,32])
**VARIABLES**
DISCRETE aux203 #( - M_00004_00010 + -1)
{-28..-1}
**CONSTRAINTS**
w-inintervalset(aux203, [-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux204 #( - M_00004_00004 + M_00004_00007)
{-18..32}
**CONSTRAINTS**
w-inintervalset(aux204, [-18,-10,-8,8,10,19,21,21,24,27,31,32])
**VARIABLES**
DISCRETE aux205 #(M_00004_00003 + -20)
{-1..17}
**CONSTRAINTS**
w-inintervalset(aux205, [-1,0,4,4,7,7,12,12,15,15,17,17])
**VARIABLES**
DISCRETE aux206 #( - M_00004_00008 + M_00004_00009)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux206, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,20,22,25,27,27])
**VARIABLES**
DISCRETE aux207 #( - M_00004_00009 + M_00004_00010)
{-37..27}
**CONSTRAINTS**
w-inintervalset(aux207, [-37,-37,-35,-35,-32,-32,-27,-27,-25,-22,-20,-10,-8,-3,-1,1,3,8,11,15,19,20,24,24,27,27])
**VARIABLES**
DISCRETE aux208 #( - M_00004_00007 + M_00004_00008)
{-51..39}
**CONSTRAINTS**
w-inintervalset(aux208, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,38,39])
**VARIABLES**
DISCRETE aux209 #( - M_00004_00007 + M_00004_00010)
{-51..15}
**CONSTRAINTS**
w-inintervalset(aux209, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,-3,-1,1,3,8,11,12,14,15])
**VARIABLES**
DISCRETE aux210 #( - M_00004_00006 + M_00004_00007)
{-32..51}
**CONSTRAINTS**
w-inintervalset(aux210, [-32,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux211 #( - M_00004_00006 + M_00004_00009)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux211, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,20,22,25,27,27])
**VARIABLES**
DISCRETE aux212 #(M_00004_00004 + -38)
{-19..-1}
**CONSTRAINTS**
w-inintervalset(aux212, [-19,-18,-14,-14,-11,-11,-6,-6,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux213 #( - M_00004_00003 + M_00004_00004)
{-13..16}
**CONSTRAINTS**
w-inintervalset(aux213, [-13,-10,-8,-7,-5,5,7,8,10,13,15,16])
**VARIABLES**
DISCRETE aux214 #( - M_00004_00005 + M_00004_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux214, [-37,-37,-35,-35,-32,-32,-27,-22,-20,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux215 #( - M_00004_00005 + M_00004_00008)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux215, [-38,-37,-35,-35,-32,-32,-27,-22,-20,-10,-8,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux216 #( - M_00005_00003 + M_00005_00004)
{-26..25}
**CONSTRAINTS**
w-inintervalset(aux216, [-26,-24,-22,-21,-19,-10,-8,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux217 #( - M_00005_00001 + M_00005_00004)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux217, [-25,-24,-22,-22,-19,-13,-11,-10,-8,-8,-6,-5,-3,3,7,7])
**VARIABLES**
DISCRETE aux218 #( - M_00005_00002 + M_00005_00005)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux218, [-37,-37,-35,-35,-32,-32,-27,-27,-25,-22,-20,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux219 #( - M_00005_00003 + M_00005_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux219, [-37,-37,-35,-35,-33,-32,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux220 #(-1 - M_00005_00009)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux220, [-38,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux221 #( - M_00005_00006 + M_00005_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux221, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux222 #( - M_00005_00007 + M_00005_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux222, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux223 #( - M_00005_00006 + M_00005_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux223, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,20,22,25,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux224 #( - M_00005_00008 + M_00005_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux224, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,20,22,25,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux225 #( - M_00005_00005 + M_00005_00006)
{-39..51}
**CONSTRAINTS**
w-inintervalset(aux225, [-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux226 #( - M_00005_00005 + M_00005_00008)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux226, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,38])
**VARIABLES**
DISCRETE aux227 #( - M_00005_00001 + M_00005_00002)
{-25..-1}
**CONSTRAINTS**
w-inintervalset(aux227, [-25,-24,-22,-22,-19,-13,-11,-10,-8,-8,-6,-5,-3,-1])
**VARIABLES**
DISCRETE aux228 #( - M_00005_00002 + M_00005_00003)
{-18..25}
**CONSTRAINTS**
w-inintervalset(aux228, [-18,-10,-8,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux229 #( - M_00005_00004 + M_00005_00005)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux229, [-38,-37,-35,-35,-33,-32,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux230 #( - M_00005_00004 + M_00005_00007)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux230, [-45,-45,-38,-37,-35,-35,-33,-32,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux231 #( - M_00006_00002 + M_00006_00003)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux231, [-32,-32,-26,-24,-22,-21,-19,-10,-8,8,10,19,21,22,24,27,31,32])
**VARIABLES**
DISCRETE aux232 #( - M_00006_00001 + M_00006_00004)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux232, [-38,-37,-35,-35,-32,-32,-27,-22,-20,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux233 #( - M_00006_00001 + M_00006_00002)
{-25..24}
**CONSTRAINTS**
w-inintervalset(aux233, [-25,-24,-22,-22,-19,-10,-8,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux234 #( - M_00006_00002 + M_00006_00005)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux234, [-45,-45,-38,-37,-35,-35,-33,-32,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux235 #(-1 - M_00006_00008)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux235, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux236 #( - M_00006_00005 + M_00006_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux236, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux237 #( - M_00006_00006 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux237, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux238 #( - M_00006_00005 + M_00006_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux238, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux239 #( - M_00006_00007 + M_00006_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux239, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux240 #( - M_00006_00004 + M_00006_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux240, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux241 #( - M_00006_00004 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux241, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux242 #( - M_00006_00003 + M_00006_00004)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux242, [-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux243 #( - M_00006_00003 + M_00006_00006)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux243, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,19,21,22,24,27,31,32,38,38])
**VARIABLES**
DISCRETE aux244 #( - M_00007_00004 + M_00007_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux244, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux245 #( - M_00007_00002 + M_00007_00003)
{-51..45}
**CONSTRAINTS**
w-inintervalset(aux245, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45])
**VARIABLES**
DISCRETE aux246 #( - M_00007_00004 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux246, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux247 #( - M_00007_00006 + M_00007_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux247, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux248 #( - M_00007_00007 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux248, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux249 #( - M_00007_00003 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux249, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux250 #( - M_00007_00001 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux250, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux251 #( - M_00007_00003 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux251, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux252 #( - M_00007_00005 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux252, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux253 #( - M_00007_00001 + M_00007_00002)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux253, [-38,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,38])
**VARIABLES**
DISCRETE aux254 #( - M_00007_00002 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux254, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux255 #( - M_00008_00001 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux255, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux256 #( - M_00008_00005 + M_00008_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux256, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux257 #( - M_00008_00004 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux257, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux258 #( - M_00008_00003 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux258, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux259 #( - M_00008_00002 + M_00008_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux259, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux260 #( - M_00008_00001 + M_00008_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux260, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux261 #( - M_00008_00006 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux261, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux262 #( - M_00008_00003 + M_00008_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux262, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux263 #( - M_00008_00002 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux263, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux264 #( - M_00009_00001 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux264, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux265 #(-1 - M_00009_00005)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux265, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux266 #( - M_00009_00001 + M_00009_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux266, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux267 #( - M_00009_00002 + M_00009_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux267, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux268 #( - M_00009_00002 + M_00009_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux268, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux269 #( - M_00009_00003 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux269, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux270 #( - M_00009_00004 + M_00009_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux270, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux271 #( - M_00010_00002 + M_00010_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux271, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux272 #( - M_00010_00003 + M_00010_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux272, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux273 #( - M_00010_00001 + M_00010_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux273, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux274 #( - M_00010_00001 + M_00010_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux274, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux275 #( - M_00010_00004 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux275, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux276 #( - M_00011_00001 + M_00011_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux276, [-51,-51,-45,-45,-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux277 #( - M_00011_00002 + M_00011_00003)
{-39..51}
**CONSTRAINTS**
w-inintervalset(aux277, [-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux278 #( - M_00011_00003 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux278, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
DISCRETE aux279 #( - M_00012_00001 + M_00012_00002)
{-39..51}
**CONSTRAINTS**
w-inintervalset(aux279, [-39,-37,-35,-35,-33,-31,-27,-10,-8,8,10,27,31,33,35,35,37,39,45,45,51,51])
**VARIABLES**
DISCRETE aux280 #( - M_00012_00002 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux280, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-21,-20,-14,-13,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[13]=[38, 20, 32, 24, 35, 13, 45, 51, 37, 19, 0, 27, 12]
**SEARCH**
PRINT[[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00012_00001],[M_00012_00002],[M_00013_00001]]
VARORDER STATIC [M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00011_00001, M_00011_00002, M_00011_00003, M_00012_00001, M_00012_00002, M_00013_00001]
**CONSTRAINTS**
div(M_00012_00002, 13, aux172)
reify(gaceq(M_00007_00006,M_00006_00006), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00010, 13, aux15)
div(M_00002_00011, 13, aux16)
reify(gaceq(M_00003_00004,M_00004_00004), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00007, 13, aux19)
reify(gaceq(M_00007_00002,M_00006_00002), aux20)
reify(gaceq(M_00003_00009,M_00004_00008), aux21)
div(M_00010_00004, 13, aux22)
div(M_00010_00001, 13, aux23)
div(M_00010_00003, 13, aux24)
div(M_00010_00002, 13, aux25)
reify(gaceq(M_00008_00004,M_00009_00004), aux26)
reify(gaceq(M_00004_00008,M_00005_00007), aux27)
reify(gaceq(M_00004_00004,M_00005_00004), aux28)
reify(gaceq(M_00004_00006,M_00005_00005), aux29)
reify(gaceq(M_00005_00007,M_00006_00006), aux30)
div(M_00002_00007, 13, aux31)
div(M_00002_00008, 13, aux32)
reify(gaceq(M_00010_00001,M_00009_00001), aux33)
reify(gaceq(M_00003_00006,M_00004_00006), aux34)
reify(gaceq(M_00010_00004,M_00009_00005), aux35)
reify(gaceq(M_00002_00008,M_00003_00008), aux36)
reify(gaceq(M_00010_00004,M_00009_00004), aux37)
reify(gaceq(M_00010_00002,M_00009_00003), aux38)
div(M_00004_00008, 13, aux39)
div(M_00004_00009, 13, aux40)
div(M_00004_00003, 13, aux41)
reify(gaceq(M_00007_00007,M_00006_00008), aux42)
reify(gaceq(M_00005_00004,M_00006_00004), aux43)
reify(gaceq(M_00003_00008,M_00004_00007), aux44)
reify(gaceq(M_00004_00007,M_00005_00007), aux45)
reify(gaceq(M_00011_00003,M_00012_00002), aux46)
reify(gaceq(M_00011_00001,M_00012_00001), aux47)
reify(gaceq(M_00005_00005,M_00006_00005), aux48)
reify(gaceq(M_00003_00008,M_00004_00008), aux49)
reify(gaceq(M_00007_00006,M_00008_00005), aux50)
reify(gaceq(M_00008_00004,M_00009_00003), aux51)
reify(gaceq(M_00007_00003,M_00006_00003), aux52)
reify(gaceq(M_00004_00009,M_00005_00008), aux53)
reify(gaceq(M_00003_00007,M_00004_00006), aux54)
reify(gaceq(M_00005_00003,M_00006_00003), aux55)
reify(gaceq(M_00003_00010,M_00004_00009), aux56)
reify(gaceq(M_00005_00007,M_00006_00007), aux57)
reify(gaceq(M_00010_00004,M_00011_00003), aux58)
reify(gaceq(M_00010_00001,M_00011_00001), aux59)
reify(gaceq(M_00010_00002,M_00011_00002), aux60)
reify(gaceq(M_00003_00011,M_00004_00010), aux61)
div(M_00003_00011, 13, aux62)
div(M_00003_00005, 13, 2)
reify(gaceq(M_00007_00002,M_00008_00002), aux64)
div(M_00005_00001, 13, 2)
div(M_00005_00009, 13, aux66)
div(M_00008_00001, 13, aux67)
div(M_00008_00006, 13, aux68)
reify(gaceq(M_00004_00006,M_00005_00006), aux69)
div(M_00006_00007, 13, aux70)
div(M_00006_00006, 13, aux71)
div(M_00006_00003, 13, aux72)
div(M_00006_00002, 13, aux73)
reify(gaceq(M_00005_00009,M_00006_00008), aux74)
reify(gaceq(M_00010_00003,M_00011_00003), aux75)
reify(gaceq(M_00010_00003,M_00011_00002), aux76)
reify(gaceq(M_00010_00002,M_00009_00002), aux77)
reify(gaceq(M_00010_00003,M_00009_00003), aux78)
reify(gaceq(M_00002_00011,M_00003_00011), aux79)
reify(gaceq(M_00002_00009,M_00003_00008), aux80)
reify(gaceq(M_00002_00009,M_00003_00009), aux81)
reify(gaceq(M_00002_00010,M_00003_00010), aux82)
reify(gaceq(M_00007_00001,M_00006_00001), aux83)
div(M_00009_00004, 13, aux84)
div(M_00009_00002, 13, aux85)
reify(gaceq(M_00003_00005,M_00004_00005), aux86)
reify(gaceq(M_00007_00006,M_00006_00007), aux87)
reify(gaceq(M_00007_00006,M_00008_00006), aux88)
reify(gaceq(M_00007_00003,M_00008_00002), aux89)
div(M_00011_00002, 13, aux90)
reify(gaceq(M_00008_00003,M_00009_00002), aux91)
reify(gaceq(M_00008_00005,M_00009_00005), aux92)
reify(gaceq(M_00005_00008,M_00006_00007), aux93)
reify(gaceq(M_00010_00003,M_00009_00004), aux94)
div(M_00006_00004, 13, aux95)
div(M_00006_00005, 13, aux96)
reify(gaceq(M_00004_00003,M_00005_00003), aux97)
reify(gaceq(M_00002_00007,M_00003_00007), aux98)
div(M_00006_00001, 13, aux99)
div(M_00006_00008, 13, aux100)
div(M_00003_00010, 13, aux101)
div(M_00003_00009, 13, aux102)
reify(gaceq(M_00004_00010,M_00005_00009), aux103)
reify(gaceq(M_00005_00005,M_00006_00004), aux104)
reify(gaceq(M_00003_00010,M_00004_00010), aux105)
reify(gaceq(M_00003_00005,M_00004_00004), aux106)
reify(gaceq(M_00005_00003,M_00006_00002), aux107)
reify(gaceq(M_00005_00008,M_00006_00008), aux108)
reify(gaceq(M_00003_00007,M_00004_00007), aux109)
div(M_00005_00007, 13, aux110)
div(M_00005_00008, 13, aux111)
div(M_00005_00002, 13, aux112)
div(M_00005_00003, 13, aux113)
reify(gaceq(M_00005_00006,M_00006_00006), aux114)
reify(gaceq(M_00004_00009,M_00005_00009), aux115)
reify(gaceq(M_00004_00004,M_00005_00003), aux116)
reify(gaceq(M_00005_00002,M_00006_00002), aux117)
reify(gaceq(M_00002_00010,M_00003_00009), aux118)
div(M_00007_00002, 13, aux119)
div(M_00007_00003, 13, aux120)
div(M_00007_00006, 13, aux121)
div(M_00007_00005, 13, aux122)
reify(gaceq(M_00008_00003,M_00009_00003), aux123)
reify(gaceq(M_00008_00005,M_00009_00004), aux124)
div(M_00007_00004, 13, aux125)
reify(gaceq(M_00003_00006,M_00004_00005), aux126)
reify(gaceq(M_00007_00004,M_00008_00003), aux127)
reify(gaceq(M_00003_00009,M_00004_00009), aux128)
reify(gaceq(M_00005_00004,M_00006_00003), aux129)
div(M_00004_00007, 13, aux130)
reify(gaceq(M_00008_00001,M_00009_00001), aux131)
div(M_00004_00004, 13, aux132)
div(M_00004_00005, 13, aux133)
div(M_00004_00006, 13, aux134)
reify(gaceq(M_00008_00006,M_00009_00005), aux135)
reify(gaceq(M_00007_00003,M_00006_00004), aux136)
reify(gaceq(M_00004_00007,M_00005_00006), aux137)
div(M_00008_00003, 13, aux138)
div(M_00008_00004, 13, aux139)
div(M_00008_00005, 13, aux140)
div(M_00008_00002, 13, aux141)
reify(gaceq(M_00008_00002,M_00009_00002), aux142)
reify(gaceq(M_00007_00005,M_00008_00005), aux143)
reify(gaceq(M_00007_00007,M_00006_00007), aux144)
reify(gaceq(M_00007_00002,M_00006_00003), aux145)
reify(gaceq(M_00005_00006,M_00006_00005), aux146)
reify(gaceq(M_00002_00011,M_00003_00010), aux147)
div(M_00003_00007, 13, aux148)
div(M_00003_00008, 13, aux149)
reify(gaceq(M_00007_00004,M_00008_00004), aux150)
div(M_00003_00006, 13, aux151)
reify(gaceq(M_00007_00007,M_00008_00006), aux152)
reify(gaceq(M_00007_00005,M_00008_00004), aux153)
reify(gaceq(M_00002_00008,M_00003_00007), aux154)
reify(gaceq(M_00007_00005,M_00006_00005), aux155)
div(M_00005_00004, 13, aux156)
div(M_00005_00005, 13, aux157)
div(M_00005_00006, 13, aux158)
reify(gaceq(M_00005_00001,M_00006_00001), aux159)
reify(gaceq(M_00007_00005,M_00006_00006), aux160)
div(M_00009_00005, 13, aux161)
div(M_00009_00003, 13, aux162)
div(M_00009_00001, 13, aux163)
div(M_00004_00010, 13, aux164)
reify(gaceq(M_00004_00005,M_00005_00004), aux165)
reify(gaceq(M_00004_00008,M_00005_00008), aux166)
reify(gaceq(M_00007_00004,M_00006_00005), aux167)
reify(gaceq(M_00007_00003,M_00008_00003), aux168)
reify(gaceq(M_00007_00001,M_00008_00001), aux169)
reify(gaceq(M_00004_00005,M_00005_00005), aux170)
reify(gaceq(M_00007_00004,M_00006_00004), aux171)
gccweak([M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011],[-1],[0])
gccweak([M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003],[-1],[0])
gccweak([M_00012_00001, M_00012_00002],[-1],[0])
gccweak([M_00013_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00007,19),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,0),w-literal(M_00002_00011,27)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00008,51),w-literal(M_00002_00009,27),w-literal(M_00002_00010,19),w-literal(M_00002_00011,0)}),watched-and({w-literal(M_00002_00007,51),w-literal(M_00002_00008,37),w-literal(M_00002_00009,19),w-literal(M_00002_00010,0),w-literal(M_00002_00011,27)})})
watched-or({watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00011,12),watched-or({w-literal(aux14,1),modulo(aux173,13,0)}),w-literal(aux98,1),w-literal(aux36,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux118,1),w-literal(aux147,1)}),watched-and({w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),watched-or({w-literal(aux31,1),modulo(aux174,13,0)}),gaceq(M_00002_00007,M_00003_00004),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux118,1),w-literal(aux147,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),watched-or({w-literal(aux16,0),modulo(aux175,13,0)}),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux81,1),w-literal(aux82,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00009,12),modulo(aux176,13,0),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux82,1),w-literal(aux79,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux98,1),w-literal(aux80,1),w-literal(aux118,1),w-literal(aux147,1),watched-or({modulo(aux177,13,0),gaceq(aux32,aux14)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux118,1),w-literal(aux147,1),watched-or({modulo(aux178,13,0),gaceq(aux14,aux15)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux98,1),w-literal(aux81,1),w-literal(aux82,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux179,13,0),gaceq(aux32,aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux81,1),w-literal(aux147,1),watched-or({modulo(aux180,13,0),gaceq(aux15,aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux118,1),w-literal(aux147,1),watched-or({modulo(aux181,13,0),gaceq(aux31,aux32)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),w-literal(aux36,1),w-literal(aux81,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux147,1),watched-or({modulo(aux182,13,0),gaceq(aux31,aux15)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00011,12),watched-or({w-literal(aux31,1),modulo(aux183,13,0)}),gaceq(M_00002_00007,M_00003_00006),w-literal(aux154,1),w-literal(aux80,1),w-literal(aux118,1),w-literal(aux147,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux98,1),w-literal(aux36,1),w-literal(aux81,1),w-literal(aux82,1),w-literal(aux79,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00006,13),w-literal(M_00003_00011,12),watched-or({w-literal(aux32,2),modulo(aux184,13,0)}),w-literal(aux98,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux80,1),w-literal(aux118,1),w-literal(aux147,1)})})
watched-or({watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux185,13,0),gaceq(aux149,aux102)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux186,13,0),gaceq(aux102,aux101)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux128,1),w-literal(aux105,1),gaceq(M_00003_00011,M_00004_00008),watched-or({modulo(aux187,13,0),gaceq(aux149,aux62)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux128,1),w-literal(aux61,1),watched-or({modulo(aux188,13,0),gaceq(aux101,aux62)}),w-literal(M_00004_00003,32)}),watched-and({watched-or({modulo(aux189,13,0),w-literal(aux151,2)}),w-literal(aux17,1),w-literal(aux86,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux54,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1)}),watched-and({w-literal(aux17,1),w-literal(aux126,1),w-literal(aux54,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux190,13,0),w-literal(aux151,2)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux191,13,0),gaceq(aux148,aux149)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux49,1),w-literal(aux128,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux61,1),watched-or({modulo(aux192,13,0),gaceq(aux148,aux101)}),w-literal(M_00004_00003,32)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux106,1),w-literal(aux126,1),w-literal(aux54,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),modulo(aux193,13,0)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux49,1),w-literal(aux128,1),w-literal(aux105,1),modulo(aux194,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux106,1),w-literal(aux126,1),w-literal(aux54,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),modulo(aux195,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux54,1),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux196,13,0),gaceq(aux151,aux148)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux86,1),w-literal(aux34,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux44,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux197,13,0),div(M_00003_00004, 13, aux148)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux34,1),w-literal(aux109,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux198,13,0),w-literal(aux149,2)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux17,1),w-literal(aux86,1),w-literal(aux109,1),w-literal(aux49,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux56,1),w-literal(aux61,1),watched-or({modulo(aux199,13,0),gaceq(aux151,aux102)}),w-literal(M_00004_00003,32)})})
watched-or({watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux165,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux132,aux133),modulo(aux200,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux201,13,0),w-literal(aux133,1)}),w-literal(aux97,1),w-literal(aux28,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux28,1),w-literal(aux170,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux41,aux134),modulo(aux202,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),modulo(aux203,13,0),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux69,1),w-literal(aux45,1),w-literal(aux166,1),w-literal(aux115,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux170,1),w-literal(aux69,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux132,aux130),modulo(aux204,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux205,13,0),w-literal(aux41,1)}),gaceq(M_00004_00003,M_00005_00002),w-literal(aux116,1),w-literal(aux165,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux69,1),w-literal(aux45,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux39,aux40),modulo(aux206,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux69,1),w-literal(aux45,1),w-literal(aux166,1),w-literal(aux103,1),watched-or({gaceq(aux40,aux164),modulo(aux207,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux69,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux130,aux39),modulo(aux208,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux69,1),w-literal(aux166,1),w-literal(aux115,1),gaceq(M_00004_00010,M_00005_00007),watched-or({gaceq(aux130,aux164),modulo(aux209,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux134,aux130),modulo(aux210,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux170,1),w-literal(aux45,1),w-literal(aux166,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux103,1),watched-or({gaceq(aux134,aux40),modulo(aux211,13,0)})}),watched-and({w-literal(M_00005_00002,20),watched-or({modulo(aux212,13,0),w-literal(aux132,2)}),w-literal(aux97,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux165,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux116,1),w-literal(aux165,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux41,aux132),modulo(aux213,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux29,1),w-literal(aux137,1),w-literal(aux27,1),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux133,aux134),modulo(aux214,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux97,1),w-literal(aux28,1),w-literal(aux69,1),w-literal(aux45,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux53,1),w-literal(aux103,1),watched-or({gaceq(aux133,aux39),modulo(aux215,13,0)})})})
watched-or({watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux129,1),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux216,13,0),gaceq(aux113,aux156)})}),watched-and({w-literal(aux117,1),w-literal(aux55,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux217,13,0),w-literal(aux156,2)})}),watched-and({w-literal(aux159,1),w-literal(aux55,1),w-literal(aux43,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux218,13,0),gaceq(aux112,aux157)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux43,1),w-literal(aux48,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux219,13,0),gaceq(aux113,aux158)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux48,1),w-literal(aux114,1),w-literal(aux57,1),w-literal(aux108,1),modulo(aux220,13,0)}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux48,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux221,13,0),gaceq(aux158,aux110)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux48,1),w-literal(aux114,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux222,13,0),gaceq(aux110,aux111)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux48,1),w-literal(aux57,1),w-literal(aux108,1),gaceq(M_00005_00009,M_00006_00006),watched-or({modulo(aux223,13,0),gaceq(aux158,aux66)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux48,1),w-literal(aux114,1),w-literal(aux57,1),w-literal(aux74,1),watched-or({modulo(aux224,13,0),gaceq(aux111,aux66)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux225,13,0),gaceq(aux157,aux158)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux43,1),w-literal(aux114,1),w-literal(aux57,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux74,1),watched-or({modulo(aux226,13,0),gaceq(aux157,aux111)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux107,1),w-literal(aux129,1),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux227,13,0),w-literal(aux112,2)})}),watched-and({w-literal(aux159,1),w-literal(aux107,1),w-literal(aux129,1),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux228,13,0),gaceq(aux112,aux113)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux104,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux229,13,0),gaceq(aux156,aux157)})}),watched-and({w-literal(aux159,1),w-literal(aux117,1),w-literal(aux55,1),w-literal(aux48,1),w-literal(aux114,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux93,1),w-literal(aux74,1),watched-or({modulo(aux230,13,0),gaceq(aux156,aux110)})})})
watched-or({watched-and({w-literal(aux83,1),w-literal(aux145,1),w-literal(aux136,1),w-literal(aux167,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux73,aux72),modulo(aux231,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux167,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux99,aux95),modulo(aux232,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux145,1),w-literal(aux136,1),w-literal(aux167,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux99,aux73),modulo(aux233,13,0)})}),watched-and({w-literal(aux83,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux52,1),w-literal(aux171,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux73,aux96),modulo(aux234,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux171,1),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux144,1),modulo(aux235,13,0)}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux171,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux96,aux71),modulo(aux236,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux171,1),w-literal(aux155,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux71,aux70),modulo(aux237,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux171,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux13,1),w-literal(aux144,1),watched-or({gaceq(aux96,aux100),modulo(aux238,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux171,1),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux42,1),watched-or({gaceq(aux70,aux100),modulo(aux239,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),w-literal(aux167,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux95,aux96),modulo(aux240,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux52,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux42,1),watched-or({gaceq(aux95,aux70),modulo(aux241,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),w-literal(aux136,1),w-literal(aux167,1),w-literal(aux160,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux72,aux95),modulo(aux242,13,0)})}),watched-and({w-literal(aux83,1),w-literal(aux20,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux171,1),w-literal(aux155,1),w-literal(aux87,1),w-literal(aux42,1),watched-or({gaceq(aux72,aux71),modulo(aux243,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux244,13,0),gaceq(aux125,aux19)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux168,1),w-literal(aux143,1),w-literal(aux88,1),gaceq(M_00007_00007,M_00008_00004)}),watched-and({watched-or({modulo(aux245,13,0),gaceq(aux119,aux120)}),w-literal(aux169,1),w-literal(aux89,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux246,13,0),gaceq(aux125,aux122)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux168,1),w-literal(aux153,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux247,13,0),gaceq(aux121,aux19)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux168,1),w-literal(aux150,1),w-literal(aux143,1),w-literal(aux152,1)}),watched-and({modulo(aux248,13,0),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux168,1),w-literal(aux150,1),w-literal(aux143,1),w-literal(aux88,1)}),watched-and({watched-or({modulo(aux249,13,0),gaceq(aux120,aux121)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux150,1),w-literal(aux143,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux250,13,0),gaceq(aux18,aux125)}),w-literal(aux64,1),w-literal(aux168,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux153,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux251,13,0),gaceq(aux120,aux125)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux252,13,0),gaceq(aux122,aux121)}),w-literal(aux169,1),w-literal(aux64,1),w-literal(aux168,1),w-literal(aux150,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux253,13,0),gaceq(aux18,aux119)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux89,1),w-literal(aux127,1),w-literal(aux153,1),w-literal(aux50,1),w-literal(aux152,1)}),watched-and({watched-or({modulo(aux254,13,0),gaceq(aux119,aux122)}),w-literal(aux169,1),w-literal(aux168,1),w-literal(aux150,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux50,1),w-literal(aux152,1)})})
watched-or({watched-and({watched-or({gaceq(aux67,aux139),modulo(aux255,13,0)}),w-literal(aux142,1),w-literal(aux123,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux124,1),w-literal(aux135,1)}),watched-and({watched-or({gaceq(aux140,aux68),modulo(aux256,13,0)}),w-literal(aux131,1),w-literal(aux142,1),w-literal(aux123,1),w-literal(aux26,1),w-literal(aux135,1)}),watched-and({watched-or({gaceq(aux139,aux140),modulo(aux257,13,0)}),w-literal(aux131,1),w-literal(aux142,1),w-literal(aux123,1),w-literal(aux124,1),w-literal(aux135,1)}),watched-and({watched-or({gaceq(aux138,aux139),modulo(aux258,13,0)}),w-literal(aux131,1),w-literal(aux142,1),w-literal(aux51,1),w-literal(aux124,1),w-literal(aux135,1)}),watched-and({watched-or({gaceq(aux141,aux138),modulo(aux259,13,0)}),w-literal(aux131,1),w-literal(aux91,1),w-literal(aux51,1),w-literal(aux124,1),w-literal(aux135,1)}),watched-and({watched-or({gaceq(aux67,aux141),modulo(aux260,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux91,1),w-literal(aux51,1),w-literal(aux124,1),w-literal(aux135,1)}),watched-and({w-literal(aux131,1),w-literal(aux142,1),w-literal(aux123,1),w-literal(aux26,1),w-literal(aux92,1),modulo(aux261,13,0)}),watched-and({watched-or({gaceq(aux138,aux68),modulo(aux262,13,0)}),w-literal(aux131,1),w-literal(aux142,1),w-literal(aux26,1),w-literal(aux92,1),gaceq(M_00008_00006,M_00009_00003)}),watched-and({watched-or({gaceq(aux141,aux140),modulo(aux263,13,0)}),w-literal(aux131,1),w-literal(aux123,1),w-literal(aux26,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux135,1)})})
watched-or({watched-and({watched-or({modulo(aux264,13,0),gaceq(aux163,aux84)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux77,1),w-literal(aux78,1),w-literal(aux35,1)}),watched-and({modulo(aux265,13,0),w-literal(aux33,1),w-literal(aux77,1),w-literal(aux78,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux266,13,0),gaceq(aux163,aux85)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux38,1),w-literal(aux94,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux267,13,0),gaceq(aux85,aux161)}),w-literal(aux33,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux78,1),w-literal(aux37,1)}),watched-and({watched-or({modulo(aux268,13,0),gaceq(aux85,aux162)}),w-literal(aux33,1),w-literal(aux38,1),w-literal(aux94,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux269,13,0),gaceq(aux162,aux84)}),w-literal(aux33,1),w-literal(aux77,1),w-literal(aux94,1),w-literal(aux35,1)}),watched-and({watched-or({modulo(aux270,13,0),gaceq(aux84,aux161)}),w-literal(aux33,1),w-literal(aux77,1),w-literal(aux78,1),w-literal(aux35,1)})})
watched-or({watched-and({w-literal(aux59,1),w-literal(aux76,1),w-literal(aux58,1),watched-or({gaceq(aux25,aux24),modulo(aux271,13,0)})}),watched-and({w-literal(aux59,1),w-literal(aux60,1),w-literal(aux58,1),watched-or({gaceq(aux24,aux22),modulo(aux272,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux76,1),w-literal(aux58,1),watched-or({gaceq(aux23,aux25),modulo(aux273,13,0)})}),watched-and({w-literal(aux60,1),w-literal(aux75,1),gaceq(M_00010_00004,M_00011_00001),watched-or({gaceq(aux23,aux22),modulo(aux274,13,0)})}),watched-and({w-literal(aux59,1),w-literal(aux60,1),w-literal(aux75,1),modulo(aux275,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux90),modulo(aux276,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux46,1)}),watched-and({watched-or({div(M_00011_00003, 13, aux90),modulo(aux277,13,0)}),w-literal(aux47,1),w-literal(aux46,1)}),watched-and({modulo(aux278,13,0),w-literal(aux47,1),gaceq(M_00011_00002,M_00012_00002)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),watched-or({div(M_00012_00001, 13, aux172),modulo(aux279,13,0)})}),watched-and({modulo(aux280,13,0),gaceq(M_00012_00001,M_00013_00001)})})
sumleq([M_00002_00009,-13],aux173)
sumgeq([M_00002_00009,-13],aux173)
sumleq([M_00002_00007,-24],aux174)
sumgeq([M_00002_00007,-24],aux174)
weightedsumleq([-1,1],[M_00002_00011,12],aux175)
weightedsumgeq([-1,1],[M_00002_00011,12],aux175)
weightedsumleq([-1,1],[M_00002_00009,12],aux176)
weightedsumgeq([-1,1],[M_00002_00009,12],aux176)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux177)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux177)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux178)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux178)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux179)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux179)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux180)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux180)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux181)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux181)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux182)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux182)
sumleq([M_00002_00007,-13],aux183)
sumgeq([M_00002_00007,-13],aux183)
sumleq([M_00002_00008,-35],aux184)
sumgeq([M_00002_00008,-35],aux184)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux185)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux185)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux186)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux186)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux187)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux187)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux188)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux188)
sumleq([M_00003_00006,-32],aux189)
sumgeq([M_00003_00006,-32],aux189)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux190)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux190)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux191)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux191)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux192)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux192)
sumleq([M_00003_00004,-32],aux193)
sumgeq([M_00003_00004,-32],aux193)
weightedsumleq([-1,1],[M_00003_00011,-1],aux194)
weightedsumgeq([-1,1],[M_00003_00011,-1],aux194)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux195)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux195)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux196)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux196)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux197)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux197)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux198)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux198)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux199)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux199)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux200)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux200)
sumleq([M_00004_00005,-20],aux201)
sumgeq([M_00004_00005,-20],aux201)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux202)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux202)
weightedsumleq([-1,1],[M_00004_00010,-1],aux203)
weightedsumgeq([-1,1],[M_00004_00010,-1],aux203)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux204)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux204)
sumleq([M_00004_00003,-20],aux205)
sumgeq([M_00004_00003,-20],aux205)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux206)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux206)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux207)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux207)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux208)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux208)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux209)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux209)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux210)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux210)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux211)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux211)
sumleq([M_00004_00004,-38],aux212)
sumgeq([M_00004_00004,-38],aux212)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux213)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux213)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux214)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux214)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux215)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux215)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux216)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux216)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux217)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux217)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux218)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux218)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux219)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux219)
weightedsumleq([1,-1],[-1,M_00005_00009],aux220)
weightedsumgeq([1,-1],[-1,M_00005_00009],aux220)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux221)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux221)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux222)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux222)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux223)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux223)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux224)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux224)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux225)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux225)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux226)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux226)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux227)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux227)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux228)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux228)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux229)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux229)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux230)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux230)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux231)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux231)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux232)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux232)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux233)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux233)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux234)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux234)
weightedsumleq([1,-1],[-1,M_00006_00008],aux235)
weightedsumgeq([1,-1],[-1,M_00006_00008],aux235)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux236)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux236)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux237)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux237)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux238)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux238)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux239)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux239)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux240)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux240)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux241)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux241)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux242)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux242)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux243)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux243)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux244)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux244)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux245)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux245)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux246)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux246)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux247)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux247)
weightedsumleq([-1,1],[M_00007_00007,-1],aux248)
weightedsumgeq([-1,1],[M_00007_00007,-1],aux248)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux249)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux249)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux250)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux250)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux251)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux251)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux252)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux252)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux253)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux253)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux254)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux254)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux255)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux255)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux256)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux256)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux257)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux257)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux258)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux258)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux259)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux259)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux260)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux260)
weightedsumleq([-1,1],[M_00008_00006,-1],aux261)
weightedsumgeq([-1,1],[M_00008_00006,-1],aux261)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux262)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux262)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux263)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux263)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux264)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux264)
weightedsumleq([1,-1],[-1,M_00009_00005],aux265)
weightedsumgeq([1,-1],[-1,M_00009_00005],aux265)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux266)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux266)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux267)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux267)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux268)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux268)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux269)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux269)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux270)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux270)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux271)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux271)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux272)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux272)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux273)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux273)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux274)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux274)
weightedsumleq([-1,1],[M_00010_00004,-1],aux275)
weightedsumgeq([-1,1],[M_00010_00004,-1],aux275)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux276)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux276)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux277)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux277)
weightedsumleq([-1,1],[M_00011_00003,-1],aux278)
weightedsumgeq([-1,1],[M_00011_00003,-1],aux278)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux279)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux279)
weightedsumleq([-1,1],[M_00012_00002,-1],aux280)
weightedsumgeq([-1,1],[M_00012_00002,-1],aux280)
**EOF**
