MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 197
# CSE_active_eliminated_expressions = 1064
# CSE_active_total_size = 591
**VARIABLES**
DISCRETE M_00002_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00008 #
{37..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00002_00009 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00002_00010 #
{0..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [0,0,5,5,13,13,19,21])
**VARIABLES**
DISCRETE M_00002_00011 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00002_00012 #
{21..27}
**CONSTRAINTS**
w-inintervalset(M_00002_00012, [21,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00002_00013 #
{5..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00013, [5,5,13,13,19,21])
**VARIABLES**
DISCRETE M_00003_00004 #
{19..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [19,21,24,24])
**VARIABLES**
DISCRETE M_00003_00005 #
{35..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00006 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00007 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00008 #
{19..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00003_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00003_00010 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00003_00011 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00003_00012 #
{5..27}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00004_00003 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00004 #
{19..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [13,13,19,21,24,24,27,27,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00007 #
{13..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00004_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00004_00010 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00004_00011 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00005_00001 #
{35..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [35,35,37,38])
**VARIABLES**
DISCRETE M_00005_00002 #
{13..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00005_00003 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00004 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00005_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00005_00010 #
{0..27}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [0,0,5,5,13,13,19,21,24,24,27,27])
**VARIABLES**
DISCRETE M_00006_00001 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [13,13,19,21,24,24,27,27,32,32,35,35,37,38])
**VARIABLES**
DISCRETE M_00006_00002 #
{13..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45])
**VARIABLES**
DISCRETE M_00006_00003 #
{13..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00006_00009 #
{0..37}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,37])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00007_00008 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00008_00007 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00009_00006 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00010_00005 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00011_00004 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00012_00003 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00013_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00013_00002 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
DISCRETE M_00014_00001 #
{0..51}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [0,0,5,5,13,13,19,21,24,24,27,27,32,32,35,35,37,38,45,45,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011/13)
{0..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00012/13)
{1..2}
BOOL aux17 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..3}
BOOL aux20 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux21 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
BOOL aux26 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux28 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010/13)
BOOL aux30 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{2..3}
DISCRETE aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..2}
BOOL aux34 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux36 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux39 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux40 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux43 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{1..2}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{0..2}
BOOL aux47 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux48 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux50 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux51 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00013/13)
BOOL aux53 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux56 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux58 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux59 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux60 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux61 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux62 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux66 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux67 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux69 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00012/13)
{0..2}
BOOL aux72 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
{0..2}
BOOL aux75 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..3}
BOOL aux78 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{1..3}
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{1..3}
BOOL aux83 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux84 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux87 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux89 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00012)
BOOL aux92 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux94 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux95 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux96 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..3}
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux101 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux108 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux110 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux112 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux113 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{1..2}
DISCRETE aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..2}
BOOL aux117 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..2}
DISCRETE aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00011/13)
{0..2}
BOOL aux120 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux121 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux122 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux123 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux124 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux125 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux126 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux127 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux132 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux133 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{1..2}
DISCRETE aux137 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{1..3}
BOOL aux138 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux139 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux140 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux141 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux142 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux143 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux145 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..3}
BOOL aux148 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux150 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux151 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux152 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux153 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux155 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux156 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00013=M_00003_00012)
BOOL aux157 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux158 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux159 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{1..3}
DISCRETE aux160 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux161 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{1..2}
DISCRETE aux162 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..2}
DISCRETE aux163 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux164 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux165 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux166 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux167 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux168 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux169 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux170 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux171 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux172 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux173 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..3}
DISCRETE aux175 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux176 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux177 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux178 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux179 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux180 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux181 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
DISCRETE aux182 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux183 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
DISCRETE aux184 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
DISCRETE aux185 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..2}
BOOL aux186 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux187 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux188 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux189 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux190 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux191 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux192 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{1..3}
DISCRETE aux196 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux198 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
BOOL aux199 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux200 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux201 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..3}
DISCRETE aux202 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux203 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00011/13)
{0..2}
BOOL aux205 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux206 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux207 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux208 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux209 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux210 #
{0..3}
DISCRETE aux211 #(M_00002_00007 + -24)
{-5..27}
**CONSTRAINTS**
w-inintervalset(aux211, [-5,-3,0,0,3,3,8,8,11,11,13,14,21,21,27,27])
**VARIABLES**
DISCRETE aux212 #(M_00002_00008 + -35)
{2..16}
**CONSTRAINTS**
w-inintervalset(aux212, [2,3,10,10,16,16])
**VARIABLES**
DISCRETE aux213 #( - M_00002_00008 + M_00002_00009)
{-24..-14}
**CONSTRAINTS**
w-inintervalset(aux213, [-24,-24,-21,-21,-19,-16,-14,-14])
**VARIABLES**
DISCRETE aux214 #( - M_00002_00008 + M_00002_00011)
{-51..-10}
**CONSTRAINTS**
w-inintervalset(aux214, [-51,-51,-46,-45,-40,-40,-38,-37,-33,-30,-27,-24,-21,-21,-19,-16,-14,-13,-11,-10])
**VARIABLES**
DISCRETE aux215 #(M_00002_00007 + -13)
{6..38}
**CONSTRAINTS**
w-inintervalset(aux215, [6,8,11,11,14,14,19,19,22,22,24,25,32,32,38,38])
**VARIABLES**
DISCRETE aux216 #(M_00002_00009 + -13)
{6..24}
**CONSTRAINTS**
w-inintervalset(aux216, [6,8,11,11,14,14,19,19,22,22,24,24])
**VARIABLES**
DISCRETE aux217 #( - M_00002_00007 + M_00002_00008)
{-14..32}
**CONSTRAINTS**
w-inintervalset(aux217, [-14,-13,-8,-6,-1,3,5,8,10,11,13,14,16,19,21,21,24,27,30,32])
**VARIABLES**
DISCRETE aux218 #( - M_00002_00007 + M_00002_00010)
{-51..-19}
**CONSTRAINTS**
w-inintervalset(aux218, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-19])
**VARIABLES**
DISCRETE aux219 #( - M_00002_00010 + M_00002_00011)
{-21..27}
**CONSTRAINTS**
w-inintervalset(aux219, [-21,-19,-16,-13,-8,-5,-2,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux220 #( - M_00002_00011 + M_00002_00012)
{-6..27}
**CONSTRAINTS**
w-inintervalset(aux220, [-6,-6,-3,-3,0,8,11,11,14,14,16,16,19,19,21,22,24,24,27,27])
**VARIABLES**
DISCRETE aux221 #( - M_00002_00010 + M_00002_00013)
{-16..5}
**CONSTRAINTS**
w-inintervalset(aux221, [-16,-14,-8,-6,-2,2,5,5])
**VARIABLES**
DISCRETE aux222 #( - M_00002_00012 + M_00002_00013)
{-22..-6}
**CONSTRAINTS**
w-inintervalset(aux222, [-22,-22,-19,-19,-16,-16,-14,-14,-11,-11,-8,-6])
**VARIABLES**
DISCRETE aux223 #( - M_00002_00009 + M_00002_00010)
{-37..-8}
**CONSTRAINTS**
w-inintervalset(aux223, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-11,-8,-8])
**VARIABLES**
DISCRETE aux224 #( - M_00002_00009 + M_00002_00012)
{-16..2}
**CONSTRAINTS**
w-inintervalset(aux224, [-16,-16,-14,-13,-11,-10,-8,-8,-6,-5,-3,-3,0,2])
**VARIABLES**
DISCRETE aux225 #( - M_00002_00013 + -1)
{-22..-6}
**CONSTRAINTS**
w-inintervalset(aux225, [-22,-20,-14,-14,-6,-6])
**VARIABLES**
DISCRETE aux226 #( - M_00003_00008 + M_00003_00009)
{-51..2}
**CONSTRAINTS**
w-inintervalset(aux226, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,2])
**VARIABLES**
DISCRETE aux227 #( - M_00003_00008 + M_00003_00011)
{-51..8}
**CONSTRAINTS**
w-inintervalset(aux227, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8])
**VARIABLES**
DISCRETE aux228 #( - M_00003_00004 + M_00003_00007)
{-5..32}
**CONSTRAINTS**
w-inintervalset(aux228, [-5,8,11,19,21,21,24,27,30,32])
**VARIABLES**
DISCRETE aux229 #( - M_00003_00007 + M_00003_00008)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux229, [-32,-30,-27,-24,-21,-21,-19,-10,-8,8,10,19,21,21,24,27,30,32])
**VARIABLES**
DISCRETE aux230 #(M_00003_00006 + -32)
{-19..5}
**CONSTRAINTS**
w-inintervalset(aux230, [-19,-19,-13,-11,-8,-8,-5,-5,0,0,3,3,5,5])
**VARIABLES**
DISCRETE aux231 #( - M_00003_00005 + M_00003_00008)
{-18..16}
**CONSTRAINTS**
w-inintervalset(aux231, [-18,-13,-11,-10,-8,-8,-5,-5,-3,-2,0,3,8,8,10,10,14,14,16,16])
**VARIABLES**
DISCRETE aux232 #( - M_00003_00006 + M_00003_00009)
{-37..24}
**CONSTRAINTS**
w-inintervalset(aux232, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,10,19,22,22,24,24])
**VARIABLES**
DISCRETE aux233 #( - M_00003_00007 + M_00003_00010)
{-51..8}
**CONSTRAINTS**
w-inintervalset(aux233, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8])
**VARIABLES**
DISCRETE aux234 #( - M_00003_00009 + M_00003_00010)
{-37..27}
**CONSTRAINTS**
w-inintervalset(aux234, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux235 #( - M_00003_00010 + M_00003_00011)
{-21..27}
**CONSTRAINTS**
w-inintervalset(aux235, [-21,-19,-16,-13,-11,-11,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux236 #( - M_00003_00009 + M_00003_00012)
{-32..21}
**CONSTRAINTS**
w-inintervalset(aux236, [-32,-32,-30,-30,-27,-27,-24,-24,-22,-22,-19,-10,-8,8,11,11,13,16,19,21])
**VARIABLES**
DISCRETE aux237 #( - M_00003_00011 + M_00003_00012)
{-22..27}
**CONSTRAINTS**
w-inintervalset(aux237, [-22,-22,-19,-19,-16,-14,-11,-11,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux238 #( - M_00003_00004 + M_00003_00005)
{11..16}
**CONSTRAINTS**
w-inintervalset(aux238, [11,11,13,16])
**VARIABLES**
DISCRETE aux239 #( - M_00003_00005 + M_00003_00006)
{-24..2}
**CONSTRAINTS**
w-inintervalset(aux239, [-24,-24,-22,-22,-18,-13,-11,-10,-8,-8,-5,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux240 #(M_00003_00004 + -32)
{-13..-8}
**CONSTRAINTS**
w-inintervalset(aux240, [-13,-11,-8,-8])
**VARIABLES**
DISCRETE aux241 #( - M_00003_00012 + -1)
{-28..-6}
**CONSTRAINTS**
w-inintervalset(aux241, [-28,-28,-25,-25,-22,-20,-14,-14,-6,-6])
**VARIABLES**
DISCRETE aux242 #( - M_00003_00006 + M_00003_00007)
{0..38}
**CONSTRAINTS**
w-inintervalset(aux242, [0,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux243 #( - M_00004_00005 + M_00004_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux243, [-37,-37,-35,-35,-33,-32,-30,-30,-27,-27,-25,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux244 #(M_00004_00003 + -20)
{-1..17}
**CONSTRAINTS**
w-inintervalset(aux244, [-1,1,4,4,7,7,12,12,15,15,17,17])
**VARIABLES**
DISCRETE aux245 #( - M_00004_00003 + M_00004_00006)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux245, [-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,10,19,21,21,24,27,30,32])
**VARIABLES**
DISCRETE aux246 #( - M_00004_00011 + -1)
{-28..-1}
**CONSTRAINTS**
w-inintervalset(aux246, [-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux247 #( - M_00004_00004 + M_00004_00007)
{-18..32}
**CONSTRAINTS**
w-inintervalset(aux247, [-18,-10,-8,8,10,19,21,21,24,27,30,32])
**VARIABLES**
DISCRETE aux248 #(M_00004_00004 + -38)
{-19..-1}
**CONSTRAINTS**
w-inintervalset(aux248, [-19,-17,-14,-14,-11,-11,-6,-6,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux249 #( - M_00004_00005 + M_00004_00008)
{-38..24}
**CONSTRAINTS**
w-inintervalset(aux249, [-38,-37,-35,-35,-33,-32,-30,-30,-27,-27,-25,-24,-22,-10,-8,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux250 #( - M_00004_00009 + M_00004_00010)
{-37..27}
**CONSTRAINTS**
w-inintervalset(aux250, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux251 #( - M_00004_00010 + M_00004_00011)
{-27..27}
**CONSTRAINTS**
w-inintervalset(aux251, [-27,-27,-24,-24,-22,-19,-16,-13,-11,-11,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux252 #( - M_00004_00008 + M_00004_00009)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux252, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27])
**VARIABLES**
DISCRETE aux253 #( - M_00004_00008 + M_00004_00011)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux253, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux254 #( - M_00004_00007 + M_00004_00008)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux254, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux255 #( - M_00004_00007 + M_00004_00010)
{-51..14}
**CONSTRAINTS**
w-inintervalset(aux255, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,11,11,14,14])
**VARIABLES**
DISCRETE aux256 #(M_00004_00005 + -20)
{-7..18}
**CONSTRAINTS**
w-inintervalset(aux256, [-7,-7,-1,1,4,4,7,7,12,12,15,15,17,18])
**VARIABLES**
DISCRETE aux257 #( - M_00004_00003 + M_00004_00004)
{-13..16}
**CONSTRAINTS**
w-inintervalset(aux257, [-13,-10,-8,8,10,16])
**VARIABLES**
DISCRETE aux258 #( - M_00004_00004 + M_00004_00005)
{-24..18}
**CONSTRAINTS**
w-inintervalset(aux258, [-24,-24,-22,-22,-19,-10,-8,8,10,18])
**VARIABLES**
DISCRETE aux259 #( - M_00004_00006 + M_00004_00007)
{-32..51}
**CONSTRAINTS**
w-inintervalset(aux259, [-32,-30,-27,-24,-22,-21,-19,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux260 #( - M_00004_00006 + M_00004_00009)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux260, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27])
**VARIABLES**
DISCRETE aux261 #( - M_00005_00003 + M_00005_00004)
{-26..25}
**CONSTRAINTS**
w-inintervalset(aux261, [-26,-24,-22,-21,-19,-10,-8,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux262 #( - M_00005_00005 + M_00005_00006)
{-38..51}
**CONSTRAINTS**
w-inintervalset(aux262, [-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux263 #( - M_00005_00005 + M_00005_00008)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux263, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38])
**VARIABLES**
DISCRETE aux264 #( - M_00005_00001 + M_00005_00004)
{-25..7}
**CONSTRAINTS**
w-inintervalset(aux264, [-25,-24,-22,-22,-19,-13,-11,-10,-8,-8,-6,-5,-3,3,7,7])
**VARIABLES**
DISCRETE aux265 #( - M_00005_00004 + M_00005_00005)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux265, [-38,-37,-35,-35,-33,-32,-30,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux266 #( - M_00005_00002 + M_00005_00005)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux266, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux267 #( - M_00005_00001 + M_00005_00002)
{-25..-1}
**CONSTRAINTS**
w-inintervalset(aux267, [-25,-24,-22,-22,-19,-13,-11,-10,-8,-8,-6,-5,-3,-1])
**VARIABLES**
DISCRETE aux268 #( - M_00005_00003 + M_00005_00006)
{-37..38}
**CONSTRAINTS**
w-inintervalset(aux268, [-37,-37,-35,-35,-33,-32,-30,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux269 #( - M_00005_00004 + M_00005_00007)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux269, [-45,-45,-40,-40,-38,-37,-35,-35,-33,-32,-30,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux270 #(-1 - M_00005_00010)
{-28..-1}
**CONSTRAINTS**
w-inintervalset(aux270, [-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux271 #( - M_00005_00007 + M_00005_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux271, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux272 #( - M_00005_00008 + M_00005_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux272, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27,30,30,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux273 #( - M_00005_00007 + M_00005_00010)
{-51..27}
**CONSTRAINTS**
w-inintervalset(aux273, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux274 #( - M_00005_00009 + M_00005_00010)
{-37..27}
**CONSTRAINTS**
w-inintervalset(aux274, [-37,-37,-35,-35,-32,-32,-30,-30,-27,-27,-24,-24,-22,-10,-8,8,11,11,13,16,19,22,24,24,27,27])
**VARIABLES**
DISCRETE aux275 #( - M_00005_00006 + M_00005_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux275, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux276 #( - M_00005_00006 + M_00005_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux276, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27,30,30,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux277 #( - M_00005_00002 + M_00005_00003)
{-18..25}
**CONSTRAINTS**
w-inintervalset(aux277, [-18,-10,-8,8,10,19,21,22,24,25])
**VARIABLES**
DISCRETE aux278 #( - M_00006_00002 + M_00006_00003)
{-32..32}
**CONSTRAINTS**
w-inintervalset(aux278, [-32,-32,-26,-24,-22,-21,-19,-10,-8,8,10,19,21,22,24,27,30,32])
**VARIABLES**
DISCRETE aux279 #( - M_00006_00003 + M_00006_00006)
{-51..38}
**CONSTRAINTS**
w-inintervalset(aux279, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux280 #( - M_00006_00001 + M_00006_00004)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux280, [-38,-37,-35,-35,-33,-32,-30,-30,-27,-27,-25,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux281 #(-1 - M_00006_00009)
{-38..-1}
**CONSTRAINTS**
w-inintervalset(aux281, [-38,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux282 #( - M_00006_00006 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux282, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux283 #( - M_00006_00007 + M_00006_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux283, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux284 #( - M_00006_00006 + M_00006_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux284, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27,30,30,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux285 #( - M_00006_00008 + M_00006_00009)
{-51..37}
**CONSTRAINTS**
w-inintervalset(aux285, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,24,27,27,30,30,32,32,35,35,37,37])
**VARIABLES**
DISCRETE aux286 #( - M_00006_00005 + M_00006_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux286, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux287 #( - M_00006_00005 + M_00006_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux287, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux288 #( - M_00006_00004 + M_00006_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux288, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux289 #( - M_00006_00004 + M_00006_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux289, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux290 #( - M_00006_00001 + M_00006_00002)
{-25..24}
**CONSTRAINTS**
w-inintervalset(aux290, [-25,-24,-22,-22,-19,-10,-8,8,10,19,21,22,24,24])
**VARIABLES**
DISCRETE aux291 #( - M_00006_00003 + M_00006_00004)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux291, [-45,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux292 #( - M_00006_00002 + M_00006_00005)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux292, [-45,-45,-40,-40,-38,-37,-35,-35,-33,-32,-30,-30,-27,-24,-22,-10,-8,8,10,19,21,22,24,27,30,32,38,38])
**VARIABLES**
DISCRETE aux293 #( - M_00007_00007 + M_00007_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux293, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux294 #( - M_00007_00005 + M_00007_00008)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux294, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux295 #( - M_00007_00008 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux295, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux296 #( - M_00007_00001 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux296, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux297 #( - M_00007_00003 + M_00007_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux297, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux298 #( - M_00007_00002 + M_00007_00003)
{-51..45}
**CONSTRAINTS**
w-inintervalset(aux298, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,45])
**VARIABLES**
DISCRETE aux299 #( - M_00007_00004 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux299, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux300 #( - M_00007_00005 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux300, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux301 #( - M_00007_00003 + M_00007_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux301, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux302 #( - M_00007_00001 + M_00007_00002)
{-38..38}
**CONSTRAINTS**
w-inintervalset(aux302, [-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38])
**VARIABLES**
DISCRETE aux303 #( - M_00007_00002 + M_00007_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux303, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux304 #( - M_00007_00006 + M_00007_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux304, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux305 #( - M_00007_00004 + M_00007_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux305, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux306 #( - M_00008_00007 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux306, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux307 #( - M_00008_00002 + M_00008_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux307, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux308 #( - M_00008_00003 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux308, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux309 #( - M_00008_00004 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux309, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux310 #( - M_00008_00001 + M_00008_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux310, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux311 #( - M_00008_00005 + M_00008_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux311, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux312 #( - M_00008_00006 + M_00008_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux312, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux313 #( - M_00008_00002 + M_00008_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux313, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux314 #( - M_00008_00003 + M_00008_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux314, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux315 #( - M_00008_00004 + M_00008_00007)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux315, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux316 #( - M_00008_00001 + M_00008_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux316, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux317 #( - M_00009_00004 + M_00009_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux317, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux318 #( - M_00009_00001 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux318, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux319 #( - M_00009_00005 + M_00009_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux319, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux320 #( - M_00009_00002 + M_00009_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux320, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux321 #( - M_00009_00003 + M_00009_00006)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux321, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux322 #( - M_00009_00001 + M_00009_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux322, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux323 #(-1 - M_00009_00006)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux323, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux324 #( - M_00009_00002 + M_00009_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux324, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux325 #( - M_00009_00003 + M_00009_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux325, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux326 #( - M_00010_00003 + M_00010_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux326, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux327 #( - M_00010_00004 + M_00010_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux327, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux328 #( - M_00010_00002 + M_00010_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux328, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux329 #( - M_00010_00002 + M_00010_00005)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux329, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux330 #( - M_00010_00001 + M_00010_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux330, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux331 #( - M_00010_00001 + M_00010_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux331, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux332 #( - M_00010_00005 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux332, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux333 #( - M_00011_00002 + M_00011_00003)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux333, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux334 #( - M_00011_00003 + M_00011_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux334, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux335 #( - M_00011_00004 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux335, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux336 #( - M_00011_00001 + M_00011_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux336, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux337 #( - M_00011_00001 + M_00011_00004)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux337, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux338 #( - M_00012_00001 + M_00012_00002)
{-51..51}
**CONSTRAINTS**
w-inintervalset(aux338, [-51,-51,-46,-45,-40,-40,-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux339 #( - M_00012_00002 + M_00012_00003)
{-38..51}
**CONSTRAINTS**
w-inintervalset(aux339, [-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
DISCRETE aux340 #( - M_00012_00003 + -1)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux340, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux341 #(-1 - M_00013_00002)
{-52..-1}
**CONSTRAINTS**
w-inintervalset(aux341, [-52,-52,-46,-46,-39,-38,-36,-36,-33,-33,-28,-28,-25,-25,-22,-20,-14,-14,-6,-6,-1,-1])
**VARIABLES**
DISCRETE aux342 #( - M_00013_00001 + M_00013_00002)
{-38..51}
**CONSTRAINTS**
w-inintervalset(aux342, [-38,-37,-35,-35,-33,-30,-27,-24,-22,-10,-8,8,10,22,24,27,30,33,35,35,37,38,40,40,45,46,51,51])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[38, 20, 32, 24, 35, 13, 45, 51, 37, 19, 0, 27, 21, 5]
**SEARCH**
PRINT[[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00002_00013],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux210)
reify(gaceq(M_00004_00006,M_00005_00006), aux13)
reify(gaceq(M_00007_00007,M_00006_00007), aux14)
div(M_00002_00011, 13, aux15)
div(M_00002_00012, 13, aux16)
reify(gaceq(M_00007_00008,M_00006_00009), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00008, 13, aux19)
reify(gaceq(M_00004_00007,M_00005_00007), aux20)
reify(gaceq(M_00003_00009,M_00004_00008), aux21)
div(M_00010_00005, 13, aux22)
div(M_00010_00001, 13, aux23)
div(M_00010_00003, 13, aux24)
reify(gaceq(M_00008_00005,M_00009_00005), aux25)
reify(gaceq(M_00004_00008,M_00005_00007), aux26)
div(M_00012_00002, 13, aux27)
reify(gaceq(M_00004_00006,M_00005_00005), aux28)
div(M_00002_00010, 13, aux29)
reify(gaceq(M_00005_00007,M_00006_00006), aux30)
div(M_00002_00007, 13, aux31)
div(M_00002_00008, 13, aux32)
div(M_00002_00009, 13, aux33)
reify(gaceq(M_00010_00005,M_00011_00004), aux34)
reify(gaceq(M_00010_00003,M_00009_00003), aux35)
reify(gaceq(M_00007_00001,M_00008_00001), aux36)
reify(gaceq(M_00002_00008,M_00003_00008), aux37)
reify(gaceq(M_00010_00004,M_00009_00005), aux38)
reify(gaceq(M_00005_00001,M_00006_00001), aux39)
reify(gaceq(M_00003_00004,M_00004_00004), aux40)
reify(gaceq(M_00010_00005,M_00009_00005), aux41)
reify(gaceq(M_00010_00002,M_00009_00003), aux42)
reify(gaceq(M_00010_00001,M_00009_00001), aux43)
div(M_00004_00009, 13, aux44)
div(M_00004_00003, 13, aux45)
div(M_00004_00010, 13, aux46)
reify(gaceq(M_00007_00007,M_00006_00008), aux47)
reify(gaceq(M_00007_00002,M_00008_00002), aux48)
reify(gaceq(M_00010_00001,M_00011_00001), aux49)
reify(gaceq(M_00003_00008,M_00004_00007), aux50)
reify(gaceq(M_00008_00002,M_00009_00002), aux51)
div(M_00002_00013, 13, aux52)
reify(gaceq(M_00004_00008,M_00005_00008), aux53)
reify(gaceq(M_00011_00003,M_00012_00002), aux54)
reify(gaceq(M_00011_00003,M_00012_00003), aux55)
reify(gaceq(M_00007_00006,M_00008_00005), aux56)
reify(gaceq(M_00008_00004,M_00009_00003), aux57)
reify(gaceq(M_00002_00009,M_00003_00009), aux58)
reify(gaceq(M_00003_00009,M_00004_00009), aux59)
reify(gaceq(M_00004_00009,M_00005_00008), aux60)
reify(gaceq(M_00003_00007,M_00004_00006), aux61)
reify(gaceq(M_00003_00010,M_00004_00009), aux62)
reify(gaceq(M_00011_00002,M_00012_00002), aux63)
reify(gaceq(M_00011_00001,M_00012_00001), aux64)
reify(gaceq(M_00011_00004,M_00012_00003), aux65)
reify(gaceq(M_00005_00008,M_00006_00008), aux66)
div(M_00008_00004, 13, aux67)
reify(gaceq(M_00010_00004,M_00011_00003), aux68)
reify(gaceq(M_00003_00011,M_00004_00010), aux69)
div(M_00003_00012, 13, aux70)
div(M_00003_00005, 13, 2)
reify(gaceq(M_00002_00010,M_00003_00010), aux72)
div(M_00005_00001, 13, 2)
div(M_00005_00010, 13, aux74)
reify(gaceq(M_00007_00001,M_00006_00001), aux75)
div(M_00008_00001, 13, aux76)
div(M_00008_00007, 13, aux77)
reify(gaceq(M_00003_00008,M_00004_00008), aux78)
div(M_00006_00008, 13, aux79)
div(M_00006_00007, 13, aux80)
div(M_00006_00003, 13, aux81)
div(M_00006_00002, 13, aux82)
reify(gaceq(M_00005_00002,M_00006_00002), aux83)
reify(gaceq(M_00005_00009,M_00006_00008), aux84)
reify(gaceq(M_00010_00003,M_00011_00002), aux85)
reify(gaceq(M_00010_00004,M_00011_00004), aux86)
reify(gaceq(M_00005_00010,M_00006_00009), aux87)
reify(gaceq(M_00010_00002,M_00011_00002), aux88)
reify(gaceq(M_00010_00003,M_00011_00003), aux89)
reify(gaceq(M_00010_00004,M_00009_00004), aux90)
reify(gaceq(M_00002_00012,M_00003_00012), aux91)
reify(gaceq(M_00002_00009,M_00003_00008), aux92)
reify(gaceq(M_00002_00011,M_00003_00011), aux93)
reify(gaceq(M_00004_00011,M_00005_00010), aux94)
reify(gaceq(M_00007_00003,M_00006_00003), aux95)
reify(gaceq(M_00005_00003,M_00006_00003), aux96)
div(M_00009_00005, 13, aux97)
div(M_00009_00003, 13, aux98)
div(M_00009_00004, 13, aux99)
div(M_00009_00002, 13, aux100)
reify(gaceq(M_00007_00006,M_00006_00007), aux101)
reify(gaceq(M_00007_00003,M_00008_00002), aux102)
reify(gaceq(M_00007_00007,M_00008_00007), aux103)
div(M_00011_00001, 13, aux104)
div(M_00011_00002, 13, aux105)
div(M_00011_00003, 13, aux106)
div(M_00011_00004, 13, aux107)
reify(gaceq(M_00008_00006,M_00009_00006), aux108)
reify(gaceq(M_00008_00003,M_00009_00002), aux109)
reify(gaceq(M_00005_00008,M_00006_00007), aux110)
reify(gaceq(M_00010_00003,M_00009_00004), aux111)
div(M_00006_00004, 13, aux112)
div(M_00006_00005, 13, aux113)
div(M_00006_00006, 13, aux114)
div(M_00006_00001, 13, aux115)
div(M_00006_00009, 13, aux116)
reify(gaceq(M_00003_00007,M_00004_00007), aux117)
div(M_00003_00010, 13, aux118)
div(M_00003_00011, 13, aux119)
reify(gaceq(M_00004_00010,M_00005_00009), aux120)
reify(gaceq(M_00005_00005,M_00006_00004), aux121)
reify(gaceq(M_00002_00012,M_00003_00011), aux122)
reify(gaceq(M_00003_00005,M_00004_00005), aux123)
reify(gaceq(M_00010_00002,M_00009_00002), aux124)
reify(gaceq(M_00003_00011,M_00004_00011), aux125)
reify(gaceq(M_00003_00005,M_00004_00004), aux126)
reify(gaceq(M_00004_00005,M_00005_00005), aux127)
reify(gaceq(M_00005_00003,M_00006_00002), aux128)
reify(gaceq(M_00005_00009,M_00006_00009), aux129)
div(M_00010_00004, 13, aux130)
div(M_00010_00002, 13, aux131)
reify(gaceq(M_00005_00006,M_00006_00006), aux132)
reify(gaceq(M_00008_00003,M_00009_00003), aux133)
div(M_00005_00009, 13, aux134)
div(M_00005_00008, 13, aux135)
div(M_00005_00002, 13, aux136)
div(M_00005_00003, 13, aux137)
reify(gaceq(M_00004_00010,M_00005_00010), aux138)
reify(gaceq(M_00004_00004,M_00005_00003), aux139)
reify(gaceq(M_00005_00005,M_00006_00005), aux140)
reify(gaceq(M_00005_00007,M_00006_00007), aux141)
reify(gaceq(M_00002_00010,M_00003_00009), aux142)
reify(gaceq(M_00007_00003,M_00008_00003), aux143)
div(M_00007_00002, 13, aux144)
div(M_00007_00003, 13, aux145)
div(M_00007_00006, 13, aux146)
div(M_00007_00007, 13, aux147)
reify(gaceq(M_00008_00004,M_00009_00004), aux148)
reify(gaceq(M_00008_00005,M_00009_00004), aux149)
reify(gaceq(M_00003_00010,M_00004_00010), aux150)
div(M_00007_00004, 13, aux151)
div(M_00007_00005, 13, aux152)
reify(gaceq(M_00007_00004,M_00006_00004), aux153)
reify(gaceq(M_00003_00006,M_00004_00005), aux154)
reify(gaceq(M_00007_00004,M_00008_00003), aux155)
reify(gaceq(M_00002_00013,M_00003_00012), aux156)
reify(gaceq(M_00010_00005,M_00009_00006), aux157)
reify(gaceq(M_00005_00004,M_00006_00003), aux158)
div(M_00004_00007, 13, aux159)
div(M_00004_00008, 13, aux160)
div(M_00004_00004, 13, aux161)
div(M_00004_00005, 13, aux162)
div(M_00004_00006, 13, aux163)
reify(gaceq(M_00004_00004,M_00005_00004), aux164)
reify(gaceq(M_00005_00004,M_00006_00004), aux165)
reify(gaceq(M_00008_00006,M_00009_00005), aux166)
reify(gaceq(M_00007_00003,M_00006_00004), aux167)
reify(gaceq(M_00007_00004,M_00008_00004), aux168)
reify(gaceq(M_00004_00007,M_00005_00006), aux169)
reify(gaceq(M_00007_00005,M_00006_00005), aux170)
reify(gaceq(M_00002_00007,M_00003_00007), aux171)
div(M_00008_00003, 13, aux172)
div(M_00008_00005, 13, aux173)
div(M_00008_00006, 13, aux174)
div(M_00008_00002, 13, aux175)
reify(gaceq(M_00007_00002,M_00006_00002), aux176)
reify(gaceq(M_00007_00008,M_00006_00008), aux177)
reify(gaceq(M_00007_00002,M_00006_00003), aux178)
reify(gaceq(M_00007_00006,M_00008_00006), aux179)
reify(gaceq(M_00005_00006,M_00006_00005), aux180)
reify(gaceq(M_00002_00011,M_00003_00010), aux181)
div(M_00003_00009, 13, aux182)
div(M_00003_00007, 13, aux183)
div(M_00003_00008, 13, aux184)
div(M_00003_00006, 13, aux185)
reify(gaceq(M_00007_00007,M_00008_00006), aux186)
reify(gaceq(M_00008_00001,M_00009_00001), aux187)
reify(gaceq(M_00007_00006,M_00006_00006), aux188)
reify(gaceq(M_00004_00003,M_00005_00003), aux189)
reify(gaceq(M_00007_00005,M_00008_00004), aux190)
reify(gaceq(M_00007_00005,M_00008_00005), aux191)
reify(gaceq(M_00002_00008,M_00003_00007), aux192)
reify(gaceq(M_00012_00001,M_00013_00001), aux193)
reify(gaceq(M_00012_00003,M_00013_00002), aux194)
div(M_00005_00004, 13, aux195)
div(M_00005_00005, 13, aux196)
div(M_00005_00006, 13, aux197)
div(M_00005_00007, 13, aux198)
reify(gaceq(M_00007_00008,M_00008_00007), aux199)
reify(gaceq(M_00007_00005,M_00006_00006), aux200)
div(M_00009_00006, 13, aux201)
div(M_00009_00001, 13, aux202)
reify(gaceq(M_00008_00007,M_00009_00006), aux203)
div(M_00004_00011, 13, aux204)
reify(gaceq(M_00004_00005,M_00005_00004), aux205)
reify(gaceq(M_00004_00009,M_00005_00009), aux206)
reify(gaceq(M_00007_00004,M_00006_00005), aux207)
reify(gaceq(M_00003_00012,M_00004_00011), aux208)
reify(gaceq(M_00003_00006,M_00004_00006), aux209)
gccweak([M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013],[-1],[0])
gccweak([M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00007,19),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,0),w-literal(M_00002_00011,27),w-literal(M_00002_00012,21),w-literal(M_00002_00013,5)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00008,51),w-literal(M_00002_00009,27),w-literal(M_00002_00010,19),w-literal(M_00002_00011,0),w-literal(M_00002_00012,21),w-literal(M_00002_00013,5)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,19),w-literal(M_00002_00011,5),w-literal(M_00002_00012,27),w-literal(M_00002_00013,21)}),watched-and({w-literal(M_00002_00007,45),w-literal(M_00002_00008,51),w-literal(M_00002_00009,37),w-literal(M_00002_00010,21),w-literal(M_00002_00011,0),w-literal(M_00002_00012,27),w-literal(M_00002_00013,5)}),watched-and({w-literal(M_00002_00007,51),w-literal(M_00002_00008,37),w-literal(M_00002_00009,19),w-literal(M_00002_00010,0),w-literal(M_00002_00011,27),w-literal(M_00002_00012,21),w-literal(M_00002_00013,5)})})
watched-or({watched-and({w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),watched-or({w-literal(aux31,1),modulo(aux211,13,0)}),gaceq(M_00002_00007,M_00003_00004),w-literal(aux192,1),w-literal(aux92,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00006,13),watched-or({w-literal(aux32,2),modulo(aux212,13,0)}),w-literal(aux171,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux92,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux92,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux213,13,0),gaceq(aux32,aux33)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux58,1),w-literal(aux72,1),gaceq(M_00002_00011,M_00003_00008),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux214,13,0),gaceq(aux32,aux15)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),watched-or({w-literal(aux31,1),modulo(aux215,13,0)}),gaceq(M_00002_00007,M_00003_00006),w-literal(aux192,1),w-literal(aux92,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),watched-or({w-literal(aux33,1),modulo(aux216,13,0)}),w-literal(aux171,1),w-literal(aux37,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1)}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux192,1),w-literal(aux92,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux217,13,0),gaceq(aux31,aux32)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux37,1),w-literal(aux58,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux218,13,0),gaceq(aux31,aux29)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux219,13,0),gaceq(aux29,aux15)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux72,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux220,13,0),gaceq(aux15,aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux93,1),w-literal(aux91,1),gaceq(M_00002_00013,M_00003_00010),watched-or({modulo(aux221,13,0),gaceq(aux29,aux52)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux72,1),w-literal(aux93,1),w-literal(aux156,1),watched-or({modulo(aux222,13,0),gaceq(aux16,aux52)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux142,1),w-literal(aux181,1),w-literal(aux122,1),w-literal(aux156,1),watched-or({modulo(aux223,13,0),gaceq(aux33,aux29)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux72,1),w-literal(aux93,1),gaceq(M_00002_00012,M_00003_00009),w-literal(aux156,1),watched-or({modulo(aux224,13,0),gaceq(aux33,aux16)})}),watched-and({w-literal(M_00003_00004,24),w-literal(M_00003_00005,35),w-literal(M_00003_00006,13),modulo(aux225,13,0),w-literal(aux171,1),w-literal(aux37,1),w-literal(aux58,1),w-literal(aux72,1),w-literal(aux93,1),w-literal(aux91,1)})})
watched-or({watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux226,13,0),gaceq(aux184,aux182)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux59,1),w-literal(aux150,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux208,1),watched-or({modulo(aux227,13,0),gaceq(aux184,aux119)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux123,1),w-literal(aux209,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux228,13,0),div(M_00003_00004, 13, aux183)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux229,13,0),gaceq(aux183,aux184)}),w-literal(M_00004_00003,32)}),watched-and({watched-or({modulo(aux230,13,0),w-literal(aux185,2)}),w-literal(aux40,1),w-literal(aux123,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux61,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1)}),watched-and({w-literal(aux40,1),w-literal(aux209,1),w-literal(aux117,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux231,13,0),w-literal(aux184,2)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux117,1),w-literal(aux78,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux232,13,0),gaceq(aux185,aux182)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux78,1),w-literal(aux59,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux233,13,0),gaceq(aux183,aux118)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux78,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux234,13,0),gaceq(aux182,aux118)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux78,1),w-literal(aux59,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux235,13,0),gaceq(aux118,aux119)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux78,1),w-literal(aux150,1),w-literal(aux125,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux236,13,0),gaceq(aux182,aux70)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux78,1),w-literal(aux59,1),w-literal(aux150,1),w-literal(aux208,1),watched-or({modulo(aux237,13,0),gaceq(aux119,aux70)}),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux126,1),w-literal(aux154,1),w-literal(aux61,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),modulo(aux238,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux154,1),w-literal(aux61,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux239,13,0),w-literal(aux185,2)}),w-literal(M_00004_00003,32)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux126,1),w-literal(aux154,1),w-literal(aux61,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),modulo(aux240,13,0)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux209,1),w-literal(aux117,1),w-literal(aux78,1),w-literal(aux59,1),w-literal(aux150,1),w-literal(aux125,1),modulo(aux241,13,0),w-literal(M_00004_00003,32)}),watched-and({w-literal(aux40,1),w-literal(aux123,1),w-literal(aux61,1),w-literal(aux50,1),w-literal(aux21,1),w-literal(aux62,1),w-literal(aux69,1),w-literal(aux208,1),watched-or({modulo(aux242,13,0),gaceq(aux185,aux183)}),w-literal(M_00004_00003,32)})})
watched-or({watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux162,aux163),modulo(aux243,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux244,13,0),w-literal(aux45,1)}),gaceq(M_00004_00003,M_00005_00002),w-literal(aux139,1),w-literal(aux205,1),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux164,1),w-literal(aux127,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux45,aux163),modulo(aux245,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),modulo(aux246,13,0),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux20,1),w-literal(aux53,1),w-literal(aux206,1),w-literal(aux138,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux127,1),w-literal(aux13,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux161,aux159),modulo(aux247,13,0)})}),watched-and({w-literal(M_00005_00002,20),watched-or({modulo(aux248,13,0),w-literal(aux161,2)}),w-literal(aux189,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux205,1),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux13,1),w-literal(aux20,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux162,aux160),modulo(aux249,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux20,1),w-literal(aux53,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux44,aux46),modulo(aux250,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux20,1),w-literal(aux53,1),w-literal(aux206,1),w-literal(aux94,1),watched-or({gaceq(aux46,aux204),modulo(aux251,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux20,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux160,aux44),modulo(aux252,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux20,1),w-literal(aux206,1),w-literal(aux138,1),gaceq(M_00004_00011,M_00005_00008),watched-or({gaceq(aux160,aux204),modulo(aux253,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux159,aux160),modulo(aux254,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux13,1),w-literal(aux53,1),w-literal(aux206,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux94,1),watched-or({gaceq(aux159,aux46),modulo(aux255,13,0)})}),watched-and({w-literal(M_00005_00001,38),watched-or({modulo(aux256,13,0),w-literal(aux162,1)}),w-literal(aux189,1),w-literal(aux164,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1)}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux139,1),w-literal(aux205,1),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux45,aux161),modulo(aux257,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux205,1),w-literal(aux28,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux161,aux162),modulo(aux258,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux169,1),w-literal(aux26,1),w-literal(aux60,1),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux163,aux159),modulo(aux259,13,0)})}),watched-and({w-literal(M_00005_00002,20),w-literal(M_00005_00001,38),w-literal(aux189,1),w-literal(aux164,1),w-literal(aux127,1),w-literal(aux20,1),w-literal(aux53,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux120,1),w-literal(aux94,1),watched-or({gaceq(aux163,aux44),modulo(aux260,13,0)})})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux158,1),w-literal(aux121,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux261,13,0),gaceq(aux137,aux195)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux262,13,0),gaceq(aux196,aux197)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux132,1),w-literal(aux141,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux263,13,0),gaceq(aux196,aux135)})}),watched-and({w-literal(aux83,1),w-literal(aux96,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux121,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux264,13,0),w-literal(aux195,2)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux121,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux265,13,0),gaceq(aux195,aux196)})}),watched-and({w-literal(aux39,1),w-literal(aux96,1),w-literal(aux165,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux266,13,0),gaceq(aux136,aux196)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux128,1),w-literal(aux158,1),w-literal(aux121,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux267,13,0),w-literal(aux136,2)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux165,1),w-literal(aux140,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux268,13,0),gaceq(aux137,aux197)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux140,1),w-literal(aux132,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux269,13,0),gaceq(aux195,aux198)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux132,1),w-literal(aux141,1),w-literal(aux66,1),w-literal(aux129,1),modulo(aux270,13,0)}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux132,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux271,13,0),gaceq(aux198,aux135)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux132,1),w-literal(aux141,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux272,13,0),gaceq(aux135,aux134)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux132,1),w-literal(aux66,1),w-literal(aux129,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux273,13,0),gaceq(aux198,aux74)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux132,1),w-literal(aux141,1),w-literal(aux66,1),w-literal(aux87,1),watched-or({modulo(aux274,13,0),gaceq(aux134,aux74)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux275,13,0),gaceq(aux197,aux198)})}),watched-and({w-literal(aux39,1),w-literal(aux83,1),w-literal(aux96,1),w-literal(aux165,1),w-literal(aux140,1),w-literal(aux141,1),w-literal(aux66,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux87,1),watched-or({modulo(aux276,13,0),gaceq(aux197,aux134)})}),watched-and({w-literal(aux39,1),w-literal(aux128,1),w-literal(aux158,1),w-literal(aux121,1),w-literal(aux180,1),w-literal(aux30,1),w-literal(aux110,1),w-literal(aux84,1),w-literal(aux87,1),watched-or({modulo(aux277,13,0),gaceq(aux136,aux137)})})})
watched-or({watched-and({w-literal(aux75,1),w-literal(aux178,1),w-literal(aux167,1),w-literal(aux207,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux82,aux81),modulo(aux278,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux153,1),w-literal(aux170,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux81,aux114),modulo(aux279,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux207,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux115,aux112),modulo(aux280,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux170,1),w-literal(aux188,1),w-literal(aux14,1),w-literal(aux177,1),modulo(aux281,13,0)}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux170,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux114,aux80),modulo(aux282,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux170,1),w-literal(aux188,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux80,aux79),modulo(aux283,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux170,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux14,1),w-literal(aux177,1),watched-or({gaceq(aux114,aux116),modulo(aux284,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux170,1),w-literal(aux188,1),w-literal(aux14,1),w-literal(aux17,1),watched-or({gaceq(aux79,aux116),modulo(aux285,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux113,aux114),modulo(aux286,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux153,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux188,1),w-literal(aux14,1),w-literal(aux17,1),watched-or({gaceq(aux113,aux79),modulo(aux287,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),w-literal(aux207,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux112,aux113),modulo(aux288,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux95,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux170,1),w-literal(aux188,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux112,aux80),modulo(aux289,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux178,1),w-literal(aux167,1),w-literal(aux207,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux115,aux82),modulo(aux290,13,0)})}),watched-and({w-literal(aux75,1),w-literal(aux176,1),w-literal(aux167,1),w-literal(aux207,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux81,aux112),modulo(aux291,13,0)})}),watched-and({w-literal(aux75,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux95,1),w-literal(aux153,1),w-literal(aux200,1),w-literal(aux101,1),w-literal(aux47,1),w-literal(aux17,1),watched-or({gaceq(aux82,aux113),modulo(aux292,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux293,13,0),gaceq(aux147,aux19)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux168,1),w-literal(aux191,1),w-literal(aux179,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux294,13,0),gaceq(aux152,aux19)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux168,1),w-literal(aux179,1),w-literal(aux103,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux295,13,0),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux168,1),w-literal(aux191,1),w-literal(aux179,1),w-literal(aux103,1)}),watched-and({watched-or({modulo(aux296,13,0),gaceq(aux18,aux151)}),w-literal(aux48,1),w-literal(aux143,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux190,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux297,13,0),gaceq(aux145,aux151)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux155,1),w-literal(aux190,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux298,13,0),gaceq(aux144,aux145)}),w-literal(aux36,1),w-literal(aux102,1),w-literal(aux155,1),w-literal(aux190,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux299,13,0),gaceq(aux151,aux152)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux190,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux300,13,0),gaceq(aux152,aux146)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux168,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux301,13,0),gaceq(aux145,aux146)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux168,1),w-literal(aux191,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux302,13,0),gaceq(aux18,aux144)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux102,1),w-literal(aux155,1),w-literal(aux190,1),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux303,13,0),gaceq(aux144,aux152)}),w-literal(aux36,1),w-literal(aux143,1),w-literal(aux168,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux56,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux304,13,0),gaceq(aux146,aux147)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux168,1),w-literal(aux191,1),w-literal(aux186,1),w-literal(aux199,1)}),watched-and({watched-or({modulo(aux305,13,0),gaceq(aux151,aux147)}),w-literal(aux36,1),w-literal(aux48,1),w-literal(aux143,1),w-literal(aux191,1),w-literal(aux179,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux199,1)})})
watched-or({watched-and({w-literal(aux187,1),w-literal(aux51,1),w-literal(aux133,1),w-literal(aux148,1),w-literal(aux25,1),w-literal(aux108,1),modulo(aux306,13,0)}),watched-and({watched-or({gaceq(aux175,aux172),modulo(aux307,13,0)}),w-literal(aux187,1),w-literal(aux109,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux172,aux67),modulo(aux308,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux67,aux173),modulo(aux309,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux133,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux76,aux175),modulo(aux310,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux109,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux173,aux174),modulo(aux311,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux133,1),w-literal(aux148,1),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux174,aux77),modulo(aux312,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux133,1),w-literal(aux148,1),w-literal(aux25,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux175,aux173),modulo(aux313,13,0)}),w-literal(aux187,1),w-literal(aux133,1),w-literal(aux148,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux166,1),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux172,aux174),modulo(aux314,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux148,1),w-literal(aux25,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux203,1)}),watched-and({watched-or({gaceq(aux67,aux77),modulo(aux315,13,0)}),w-literal(aux187,1),w-literal(aux51,1),w-literal(aux133,1),w-literal(aux25,1),w-literal(aux108,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux76,aux67),modulo(aux316,13,0)}),w-literal(aux51,1),w-literal(aux133,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux203,1)})})
watched-or({watched-and({watched-or({modulo(aux317,13,0),gaceq(aux99,aux97)}),w-literal(aux43,1),w-literal(aux124,1),w-literal(aux35,1),w-literal(aux38,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux318,13,0),gaceq(aux202,aux99)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux124,1),w-literal(aux35,1),w-literal(aux38,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux319,13,0),gaceq(aux97,aux201)}),w-literal(aux43,1),w-literal(aux124,1),w-literal(aux35,1),w-literal(aux90,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux320,13,0),gaceq(aux100,aux97)}),w-literal(aux43,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux35,1),w-literal(aux90,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux321,13,0),gaceq(aux98,aux201)}),w-literal(aux43,1),w-literal(aux124,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux90,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux322,13,0),gaceq(aux202,aux100)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux42,1),w-literal(aux111,1),w-literal(aux38,1),w-literal(aux157,1)}),watched-and({modulo(aux323,13,0),w-literal(aux43,1),w-literal(aux124,1),w-literal(aux35,1),w-literal(aux90,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux324,13,0),gaceq(aux100,aux98)}),w-literal(aux43,1),w-literal(aux42,1),w-literal(aux111,1),w-literal(aux38,1),w-literal(aux157,1)}),watched-and({watched-or({modulo(aux325,13,0),gaceq(aux98,aux99)}),w-literal(aux43,1),w-literal(aux124,1),w-literal(aux111,1),w-literal(aux38,1),w-literal(aux157,1)})})
watched-or({watched-and({w-literal(aux49,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux34,1),watched-or({gaceq(aux24,aux130),modulo(aux326,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux88,1),w-literal(aux89,1),w-literal(aux34,1),watched-or({gaceq(aux130,aux22),modulo(aux327,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux85,1),w-literal(aux68,1),w-literal(aux34,1),watched-or({gaceq(aux131,aux24),modulo(aux328,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux89,1),w-literal(aux86,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux131,aux22),modulo(aux329,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux85,1),w-literal(aux68,1),w-literal(aux34,1),watched-or({gaceq(aux23,aux131),modulo(aux330,13,0)})}),watched-and({w-literal(aux88,1),w-literal(aux89,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux34,1),watched-or({gaceq(aux23,aux130),modulo(aux331,13,0)})}),watched-and({w-literal(aux49,1),w-literal(aux88,1),w-literal(aux89,1),w-literal(aux86,1),modulo(aux332,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux105,aux106),modulo(aux333,13,0)}),w-literal(aux64,1),w-literal(aux54,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux106,aux107),modulo(aux334,13,0)}),w-literal(aux64,1),w-literal(aux63,1),w-literal(aux65,1)}),watched-and({modulo(aux335,13,0),w-literal(aux64,1),w-literal(aux63,1),w-literal(aux55,1)}),watched-and({watched-or({gaceq(aux104,aux105),modulo(aux336,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux54,1),w-literal(aux65,1)}),watched-and({watched-or({gaceq(aux104,aux107),modulo(aux337,13,0)}),w-literal(aux63,1),w-literal(aux55,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux194,1),watched-or({div(M_00012_00001, 13, aux27),modulo(aux338,13,0)})}),watched-and({w-literal(aux193,1),w-literal(aux194,1),watched-or({div(M_00012_00003, 13, aux27),modulo(aux339,13,0)})}),watched-and({modulo(aux340,13,0),w-literal(aux193,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux341,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux210),modulo(aux342,13,0)})})})
sumleq([M_00002_00007,-24],aux211)
sumgeq([M_00002_00007,-24],aux211)
sumleq([M_00002_00008,-35],aux212)
sumgeq([M_00002_00008,-35],aux212)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux213)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux213)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux214)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux214)
sumleq([M_00002_00007,-13],aux215)
sumgeq([M_00002_00007,-13],aux215)
sumleq([M_00002_00009,-13],aux216)
sumgeq([M_00002_00009,-13],aux216)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux217)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux217)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux218)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux218)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux219)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux219)
weightedsumleq([-1,1],[M_00002_00011,M_00002_00012],aux220)
weightedsumgeq([-1,1],[M_00002_00011,M_00002_00012],aux220)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00013],aux221)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00013],aux221)
weightedsumleq([-1,1],[M_00002_00012,M_00002_00013],aux222)
weightedsumgeq([-1,1],[M_00002_00012,M_00002_00013],aux222)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux223)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux223)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux224)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux224)
weightedsumleq([-1,1],[M_00002_00013,-1],aux225)
weightedsumgeq([-1,1],[M_00002_00013,-1],aux225)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux226)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux226)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux227)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux227)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux228)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux228)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux229)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux229)
sumleq([M_00003_00006,-32],aux230)
sumgeq([M_00003_00006,-32],aux230)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux231)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux232)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux232)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux233)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux233)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux234)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux235)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux235)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux236)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux236)
weightedsumleq([-1,1],[M_00003_00011,M_00003_00012],aux237)
weightedsumgeq([-1,1],[M_00003_00011,M_00003_00012],aux237)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux238)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux238)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux239)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux239)
sumleq([M_00003_00004,-32],aux240)
sumgeq([M_00003_00004,-32],aux240)
weightedsumleq([-1,1],[M_00003_00012,-1],aux241)
weightedsumgeq([-1,1],[M_00003_00012,-1],aux241)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux242)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux242)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux243)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux243)
sumleq([M_00004_00003,-20],aux244)
sumgeq([M_00004_00003,-20],aux244)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux245)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux245)
weightedsumleq([-1,1],[M_00004_00011,-1],aux246)
weightedsumgeq([-1,1],[M_00004_00011,-1],aux246)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux247)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux247)
sumleq([M_00004_00004,-38],aux248)
sumgeq([M_00004_00004,-38],aux248)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux249)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux250)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux250)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux251)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux251)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux252)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux252)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux253)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux253)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux254)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux254)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux255)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux255)
sumleq([M_00004_00005,-20],aux256)
sumgeq([M_00004_00005,-20],aux256)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux257)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux257)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux258)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux258)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux259)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux259)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux260)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux260)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux261)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux261)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux262)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux262)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux263)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux263)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux264)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux264)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux265)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux265)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux266)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux266)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux267)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux268)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux268)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux269)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux269)
weightedsumleq([1,-1],[-1,M_00005_00010],aux270)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux270)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux271)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux271)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux272)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux272)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux273)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux273)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux274)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux274)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux275)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux275)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux276)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux276)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux277)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux277)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux278)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux278)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux279)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux279)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux280)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux280)
weightedsumleq([1,-1],[-1,M_00006_00009],aux281)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux281)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux282)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux282)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux283)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux283)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux284)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux284)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux285)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux285)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux286)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux286)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux287)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux287)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux288)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux288)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux289)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux289)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux290)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux290)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux291)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux291)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux292)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux292)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux293)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux293)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux294)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux294)
weightedsumleq([-1,1],[M_00007_00008,-1],aux295)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux295)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux296)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux296)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux297)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux297)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux298)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux298)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux299)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux299)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux300)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux300)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux301)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux301)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux302)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux302)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux303)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux303)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux304)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux304)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux305)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux305)
weightedsumleq([-1,1],[M_00008_00007,-1],aux306)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux306)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux307)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux307)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux308)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux308)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux309)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux309)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux310)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux310)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux311)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux311)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux312)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux312)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux313)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux313)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux314)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux314)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux315)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux315)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux316)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux316)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux317)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux317)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux318)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux318)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux319)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux319)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux320)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux320)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux321)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux321)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux322)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux322)
weightedsumleq([1,-1],[-1,M_00009_00006],aux323)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux323)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux324)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux324)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux325)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux325)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux326)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux326)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux327)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux327)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux328)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux328)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux329)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux329)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux330)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux330)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux331)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux331)
weightedsumleq([-1,1],[M_00010_00005,-1],aux332)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux332)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux333)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux333)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux334)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux334)
weightedsumleq([-1,1],[M_00011_00004,-1],aux335)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux335)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux336)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux336)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux337)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux337)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux338)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux338)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux339)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux339)
weightedsumleq([-1,1],[M_00012_00003,-1],aux340)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux340)
weightedsumleq([1,-1],[-1,M_00013_00002],aux341)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux341)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux342)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux342)
**EOF**
