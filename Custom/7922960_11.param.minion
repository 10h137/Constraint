MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 120
# CSE_active_eliminated_expressions = 569
# CSE_active_total_size = 360
**VARIABLES**
DISCRETE M_00002_00001 #
{9..10}
DISCRETE M_00002_00002 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,10,13,13,26,26])
**VARIABLES**
DISCRETE M_00002_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00008 #
{26..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00009 #
{8..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [8,10,13,13,26,26])
**VARIABLES**
DISCRETE M_00003_00001 #
{7..10}
DISCRETE M_00003_00002 #
{28..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00008 #
{8..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [8,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00009 #
{3..26}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [3,3,7,10,13,13,26,26])
**VARIABLES**
DISCRETE M_00004_00001 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00008 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [3,3,7,10,13,13,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00007_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00007_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00008_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [3,3,7,10,13,13,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00009_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [3,3,7,10,13,13,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..2}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux22 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux23 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux24 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux25 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux26 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux33 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux38 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux39 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux40 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux41 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux42 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux43 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux47 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux48 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux49 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux50 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux51 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux52 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002/13)
{2..3}
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux67 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux68 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux70 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux71 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux72 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux75 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux78 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
BOOL aux81 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux85 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux86 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux90 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux93 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux99 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux100 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux106 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux107 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux108 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux112 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux113 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux116 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux117 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux118 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
DISCRETE aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux122 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
DISCRETE aux124 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
BOOL aux125 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux126 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux130 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux131 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux132 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux133 #
{0..3}
DISCRETE aux134 #( - M_00002_00001 + M_00002_00004)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux134, [-2,1,3,4,16,19,23,24,28,28])
**VARIABLES**
DISCRETE aux135 #(M_00002_00004 + -51)
{-44..-13}
**CONSTRAINTS**
w-inintervalset(aux135, [-44,-41,-38,-38,-25,-25,-23,-23,-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux136 #( - M_00002_00007 + 3)
{-30..-4}
**CONSTRAINTS**
w-inintervalset(aux136, [-30,-30,-25,-25,-23,-23,-10,-10,-7,-4])
**VARIABLES**
DISCRETE aux137 #(M_00002_00006 + -51)
{-44..-25}
**CONSTRAINTS**
w-inintervalset(aux137, [-44,-41,-38,-38,-25,-25])
**VARIABLES**
DISCRETE aux138 #( - M_00002_00006 + M_00002_00007)
{-19..26}
**CONSTRAINTS**
w-inintervalset(aux138, [-19,-16,-13,-13,-6,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux139 #( - M_00002_00007 + M_00002_00008)
{-7..26}
**CONSTRAINTS**
w-inintervalset(aux139, [-7,-7,-5,-5,-2,-2,0,0,2,2,5,5,7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux140 #( - M_00002_00006 + M_00002_00009)
{-18..13}
**CONSTRAINTS**
w-inintervalset(aux140, [-18,-16,-13,-13,-5,6,13,13])
**VARIABLES**
DISCRETE aux141 #( - M_00002_00008 + M_00002_00009)
{-25..-7}
**CONSTRAINTS**
w-inintervalset(aux141, [-25,-23,-20,-15,-13,-13,-7,-7])
**VARIABLES**
DISCRETE aux142 #( - M_00002_00005 + M_00002_00006)
{-25..-6}
**CONSTRAINTS**
w-inintervalset(aux142, [-25,-23,-21,-15,-13,-12,-7,-6])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00005 + M_00002_00008)
{-12..13}
**CONSTRAINTS**
w-inintervalset(aux143, [-12,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,2,2,5,5,7,7,13,13])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00004 + M_00002_00005)
{-25..31}
**CONSTRAINTS**
w-inintervalset(aux144, [-25,-25,-20,-20,-15,-15,-13,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,2,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00004 + M_00002_00007)
{-5..26}
**CONSTRAINTS**
w-inintervalset(aux145, [-5,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00002 + 51)
{13..23}
**CONSTRAINTS**
w-inintervalset(aux146, [13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00002 + M_00002_00005)
{-25..10}
**CONSTRAINTS**
w-inintervalset(aux147, [-25,-25,-20,-20,-15,-15,-12,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00009 + 3)
{-23..-5}
**CONSTRAINTS**
w-inintervalset(aux148, [-23,-23,-10,-10,-7,-5])
**VARIABLES**
DISCRETE aux149 #( - M_00003_00003 + M_00003_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux149, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux150 #( - M_00003_00001 + M_00003_00004)
{-3..31}
**CONSTRAINTS**
w-inintervalset(aux150, [-3,6,16,21,23,26,28,31])
**VARIABLES**
DISCRETE aux151 #( - M_00003_00002 + M_00003_00005)
{-44..10}
**CONSTRAINTS**
w-inintervalset(aux151, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-18,-15,-15,-13,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux152 #( - M_00003_00003 + M_00003_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux152, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux153 #( - M_00003_00009 + -1)
{-27..-4}
**CONSTRAINTS**
w-inintervalset(aux153, [-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux154 #( - M_00003_00006 + M_00003_00007)
{-23..26}
**CONSTRAINTS**
w-inintervalset(aux154, [-23,-23,-21,-15,-13,-13,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux155 #( - M_00003_00007 + M_00003_00008)
{-25..30}
**CONSTRAINTS**
w-inintervalset(aux155, [-25,-23,-20,-15,-13,-13,-7,-7,-5,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00006 + M_00003_00009)
{-30..13}
**CONSTRAINTS**
w-inintervalset(aux156, [-30,-30,-26,-23,-21,-15,-13,-13,-10,-10,-7,6,13,13])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00008 + M_00003_00009)
{-30..-5}
**CONSTRAINTS**
w-inintervalset(aux157, [-30,-30,-26,-23,-21,-15,-13,-13,-10,-10,-7,-5])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00005 + M_00003_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux158, [-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00005 + M_00003_00008)
{-30..20}
**CONSTRAINTS**
w-inintervalset(aux159, [-30,-28,-25,-23,-20,-15,-13,-12,-10,-10,-7,-7,-5,7,13,13,15,20])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00001 + M_00003_00002)
{18..42}
**CONSTRAINTS**
w-inintervalset(aux160, [18,21,23,26,28,31,41,42])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00002 + M_00003_00003)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux161, [-41,-41,-38,-38,-31,-28,-26,-23,-21,-18,-15,-15,-13,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10,13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00004 + M_00003_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux162, [-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00004 + M_00003_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux163, [-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux164 #( - M_00004_00002 + M_00004_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux164, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,38,38,41,44])
**VARIABLES**
DISCRETE aux165 #( - M_00004_00001 + M_00004_00004)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux165, [-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux166 #( - M_00004_00002 + M_00004_00005)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux166, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26])
**VARIABLES**
DISCRETE aux167 #( - M_00004_00008 + -1)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux167, [-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux168 #( - M_00004_00006 + M_00004_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux168, [-30,-30,-26,-23,-21,-15,-13,-13,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux169 #( - M_00004_00007 + M_00004_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux169, [-30,-30,-26,-23,-21,-15,-13,-13,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux170 #( - M_00004_00005 + M_00004_00006)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux170, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00005 + M_00004_00008)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux171, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00004 + M_00004_00005)
{-31..35}
**CONSTRAINTS**
w-inintervalset(aux172, [-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00004 + M_00004_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux173, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00001 + M_00004_00002)
{-10..44}
**CONSTRAINTS**
w-inintervalset(aux174, [-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,38,38,41,44])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00003 + M_00004_00004)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux175, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00003 + M_00004_00006)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux176, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,13,13,15,21,23,26])
**VARIABLES**
DISCRETE aux177 #(-1 - M_00005_00007)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux177, [-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux178 #( - M_00005_00004 + M_00005_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux178, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux179 #( - M_00005_00005 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux179, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux180 #( - M_00005_00004 + M_00005_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux180, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux181 #( - M_00005_00006 + M_00005_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux181, [-30,-30,-26,-23,-21,-15,-13,-13,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux182 #( - M_00005_00003 + M_00005_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux182, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux183 #( - M_00005_00003 + M_00005_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux183, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux184 #( - M_00005_00002 + M_00005_00003)
{-48..44}
**CONSTRAINTS**
w-inintervalset(aux184, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,38,38,41,44])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00002 + M_00005_00005)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux185, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00001 + M_00005_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux186, [-44,-41,-38,-38,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00001 + M_00005_00004)
{-44..35}
**CONSTRAINTS**
w-inintervalset(aux187, [-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux188 #( - M_00006_00003 + M_00006_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux188, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux189 #( - M_00006_00004 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux189, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux190 #( - M_00006_00003 + M_00006_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux190, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux191 #(-1 - M_00006_00006)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux191, [-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux192 #( - M_00006_00005 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux192, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,13,13,15,21,23,26,30,30])
**VARIABLES**
DISCRETE aux193 #( - M_00006_00002 + M_00006_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux193, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux194 #( - M_00006_00002 + M_00006_00005)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux194, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00001 + M_00006_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux195, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00001 + M_00006_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux196, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux197 #( - M_00007_00001 + M_00007_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux197, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux198 #( - M_00007_00005 + -1)
{-39..-4}
**CONSTRAINTS**
w-inintervalset(aux198, [-39,-39,-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux199 #( - M_00007_00001 + M_00007_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux199, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux200 #( - M_00007_00002 + M_00007_00005)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux200, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux201 #( - M_00007_00002 + M_00007_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux201, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux202 #( - M_00007_00003 + M_00007_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux202, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux203 #( - M_00007_00004 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux203, [-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux204 #( - M_00008_00003 + M_00008_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux204, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux205 #( - M_00008_00001 + M_00008_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux205, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux206 #( - M_00008_00001 + M_00008_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux206, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35])
**VARIABLES**
DISCRETE aux207 #( - M_00008_00002 + M_00008_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux207, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux208 #( - M_00008_00004 + -1)
{-39..-4}
**CONSTRAINTS**
w-inintervalset(aux208, [-39,-39,-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux209 #( - M_00009_00001 + M_00009_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux209, [-48,-48,-44,-41,-38,-38,-35,-35,-31,-28,-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux210 #( - M_00009_00002 + M_00009_00003)
{-26..48}
**CONSTRAINTS**
w-inintervalset(aux210, [-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux211 #(-1 - M_00009_00003)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux211, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
DISCRETE aux212 #( - M_00010_00001 + M_00010_00002)
{-26..48}
**CONSTRAINTS**
w-inintervalset(aux212, [-26,-23,-21,-15,-13,-12,-10,-10,-7,7,10,10,12,13,15,21,23,26,28,31,35,35,38,38,41,44,48,48])
**VARIABLES**
DISCRETE aux213 #( - M_00010_00002 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux213, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-14,-14,-11,-8,-4,-4])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[9, 28, 51, 10, 38, 13, 7, 33, 26, 8, 3]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux133)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00008, 13, 2)
div(M_00002_00009, 13, aux15)
div(M_00002_00006, 13, aux16)
div(M_00002_00004, 13, aux17)
reify(gaceq(M_00003_00009,M_00004_00008), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00003, 13, aux20)
div(M_00007_00005, 13, aux21)
reify(gaceq(M_00005_00002,M_00006_00002), aux22)
reify(gaceq(M_00007_00002,M_00006_00002), aux23)
reify(gaceq(M_00003_00002,M_00004_00002), aux24)
reify(gaceq(M_00005_00003,M_00006_00003), aux25)
reify(gaceq(M_00005_00007,M_00006_00006), aux26)
div(M_00002_00005, 13, aux27)
div(M_00002_00007, 13, aux28)
reify(gaceq(M_00004_00005,M_00005_00005), aux29)
reify(gaceq(M_00004_00005,M_00005_00004), aux30)
reify(gaceq(M_00010_00001,M_00009_00001), aux31)
reify(gaceq(M_00010_00002,M_00009_00003), aux32)
reify(gaceq(M_00004_00006,M_00005_00005), aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00002, 13, aux35)
div(M_00004_00006, 13, aux36)
div(M_00004_00007, 13, aux37)
reify(gaceq(M_00004_00003,M_00005_00003), aux38)
reify(gaceq(M_00005_00001,M_00006_00001), aux39)
reify(gaceq(M_00004_00002,M_00005_00002), aux40)
reify(gaceq(M_00003_00008,M_00004_00007), aux41)
reify(gaceq(M_00002_00008,M_00003_00007), aux42)
reify(gaceq(M_00002_00009,M_00003_00008), aux43)
reify(gaceq(M_00008_00004,M_00009_00003), aux44)
reify(gaceq(M_00008_00002,M_00009_00002), aux45)
reify(gaceq(M_00008_00001,M_00009_00001), aux46)
reify(gaceq(M_00003_00007,M_00004_00006), aux47)
reify(gaceq(M_00003_00006,M_00004_00006), aux48)
reify(gaceq(M_00002_00006,M_00003_00005), aux49)
reify(gaceq(M_00002_00006,M_00003_00006), aux50)
reify(gaceq(M_00003_00005,M_00004_00004), aux51)
reify(gaceq(M_00005_00005,M_00006_00005), aux52)
div(M_00003_00009, 13, aux53)
div(M_00003_00002, 13, aux54)
div(M_00005_00007, 13, aux55)
div(M_00005_00001, 13, aux56)
div(M_00008_00003, 13, aux57)
div(M_00008_00002, 13, aux58)
div(M_00008_00001, 13, aux59)
div(M_00008_00004, 13, aux60)
div(M_00006_00005, 13, aux61)
div(M_00006_00004, 13, aux62)
div(M_00006_00003, 13, aux63)
div(M_00006_00002, 13, aux64)
reify(gaceq(M_00004_00004,M_00005_00003), aux65)
reify(gaceq(M_00002_00004,M_00003_00003), aux66)
reify(gaceq(M_00003_00004,M_00004_00004), aux67)
reify(gaceq(M_00002_00007,M_00003_00007), aux68)
reify(gaceq(M_00002_00005,M_00003_00004), aux69)
reify(gaceq(M_00007_00001,M_00006_00001), aux70)
reify(gaceq(M_00004_00007,M_00005_00006), aux71)
reify(gaceq(M_00003_00003,M_00004_00003), aux72)
reify(gaceq(M_00007_00004,M_00008_00004), aux73)
reify(gaceq(M_00007_00003,M_00008_00002), aux74)
reify(gaceq(M_00003_00006,M_00004_00005), aux75)
reify(gaceq(M_00008_00003,M_00009_00002), aux76)
reify(gaceq(M_00008_00003,M_00009_00003), aux77)
reify(gaceq(M_00003_00001,M_00004_00001), aux78)
div(M_00006_00001, 13, aux79)
div(M_00006_00006, 13, aux80)
reify(gaceq(M_00004_00004,M_00005_00004), aux81)
div(M_00003_00007, 13, aux82)
div(M_00003_00008, 13, aux83)
div(M_00003_00003, 13, aux84)
reify(gaceq(M_00005_00005,M_00006_00004), aux85)
reify(gaceq(M_00002_00005,M_00003_00005), aux86)
reify(gaceq(M_00003_00003,M_00004_00002), aux87)
reify(gaceq(M_00003_00008,M_00004_00008), aux88)
reify(gaceq(M_00005_00004,M_00006_00004), aux89)
reify(gaceq(M_00002_00007,M_00003_00006), aux90)
reify(gaceq(M_00005_00003,M_00006_00002), aux91)
reify(gaceq(M_00005_00006,M_00006_00006), aux92)
reify(gaceq(M_00002_00004,M_00003_00004), aux93)
div(M_00005_00006, 13, aux94)
div(M_00005_00002, 13, aux95)
div(M_00005_00005, 13, aux96)
div(M_00005_00003, 13, aux97)
reify(gaceq(M_00004_00007,M_00005_00007), aux98)
reify(gaceq(M_00004_00003,M_00005_00002), aux99)
reify(gaceq(M_00004_00008,M_00005_00007), aux100)
div(M_00007_00002, 13, aux101)
div(M_00007_00004, 13, aux102)
reify(gaceq(M_00003_00004,M_00004_00003), aux103)
reify(gaceq(M_00007_00004,M_00008_00003), aux104)
reify(gaceq(M_00005_00004,M_00006_00003), aux105)
reify(gaceq(M_00003_00007,M_00004_00007), aux106)
div(M_00004_00004, 13, aux107)
div(M_00004_00005, 13, aux108)
reify(gaceq(M_00002_00002,M_00003_00002), aux109)
reify(gaceq(M_00007_00003,M_00006_00004), aux110)
reify(gaceq(M_00007_00001,M_00008_00001), aux111)
reify(gaceq(M_00007_00002,M_00008_00002), aux112)
reify(gaceq(M_00007_00003,M_00008_00003), aux113)
reify(gaceq(M_00007_00005,M_00006_00005), aux114)
reify(gaceq(M_00007_00002,M_00006_00003), aux115)
reify(gaceq(M_00005_00006,M_00006_00005), aux116)
reify(gaceq(M_00003_00005,M_00004_00005), aux117)
reify(gaceq(M_00002_00001,M_00003_00001), aux118)
div(M_00003_00004, 13, aux119)
div(M_00003_00006, 13, aux120)
div(M_00003_00005, 13, aux121)
reify(gaceq(M_00007_00005,M_00008_00004), aux122)
reify(gaceq(M_00002_00008,M_00003_00008), aux123)
div(M_00005_00004, 13, aux124)
reify(gaceq(M_00004_00001,M_00005_00001), aux125)
reify(gaceq(M_00007_00005,M_00006_00006), aux126)
div(M_00009_00002, 13, aux127)
div(M_00004_00008, 13, aux128)
div(M_00004_00001, 13, aux129)
reify(gaceq(M_00004_00006,M_00005_00006), aux130)
reify(gaceq(M_00007_00004,M_00006_00005), aux131)
reify(gaceq(M_00007_00003,M_00006_00003), aux132)
gccweak([M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,10),w-literal(M_00002_00002,28),w-literal(M_00002_00004,38),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,7),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,33),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,8),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,26),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,38),w-literal(M_00002_00004,10),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)})})
watched-or({watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux109,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux69,1),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux134,13,0),div(M_00002_00001, 13, aux17)})}),watched-and({w-literal(M_00003_00009,3),modulo(aux135,13,0),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux66,1),w-literal(aux69,1),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00007,3),watched-or({w-literal(aux28,0),modulo(aux136,13,0)}),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux50,1),w-literal(aux123,1),gaceq(M_00002_00009,M_00003_00009)}),watched-and({w-literal(M_00003_00009,3),modulo(aux137,13,0),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux138,13,0),gaceq(aux16,aux28)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux50,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux139,13,0),w-literal(aux28,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux68,1),w-literal(aux123,1),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux140,13,0),gaceq(aux16,aux15)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux43,1),watched-or({modulo(aux141,13,0),w-literal(aux15,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux142,13,0),gaceq(aux27,aux16)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux50,1),w-literal(aux68,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux43,1),watched-or({modulo(aux143,13,0),w-literal(aux27,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux69,1),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux144,13,0),gaceq(aux17,aux27)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux86,1),w-literal(aux50,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux145,13,0),gaceq(aux17,aux28)})}),watched-and({w-literal(M_00003_00002,51),w-literal(M_00003_00009,3),modulo(aux146,13,0),w-literal(aux118,1),w-literal(aux66,1),w-literal(aux69,1),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),w-literal(aux118,1),w-literal(aux93,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux49,1),w-literal(aux90,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux147,13,0),div(M_00002_00002, 13, aux27)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,3),watched-or({w-literal(aux15,0),modulo(aux148,13,0)}),w-literal(aux118,1),w-literal(aux109,1),w-literal(aux93,1),w-literal(aux86,1),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux123,1)})})
watched-or({watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux103,1),w-literal(aux51,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux149,13,0),gaceq(aux84,aux119)})}),watched-and({w-literal(aux24,1),w-literal(aux72,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux51,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux150,13,0),div(M_00003_00001, 13, aux119)})}),watched-and({w-literal(aux78,1),w-literal(aux72,1),w-literal(aux67,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux151,13,0),gaceq(aux54,aux121)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux67,1),w-literal(aux117,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux152,13,0),gaceq(aux84,aux120)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux117,1),w-literal(aux48,1),w-literal(aux106,1),w-literal(aux88,1),modulo(aux153,13,0)}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux117,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux154,13,0),gaceq(aux120,aux82)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux117,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux155,13,0),gaceq(aux82,aux83)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux117,1),w-literal(aux106,1),w-literal(aux88,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux156,13,0),gaceq(aux120,aux53)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux117,1),w-literal(aux48,1),w-literal(aux106,1),w-literal(aux18,1),watched-or({modulo(aux157,13,0),gaceq(aux83,aux53)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux158,13,0),gaceq(aux121,aux120)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux67,1),w-literal(aux48,1),w-literal(aux106,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux18,1),watched-or({modulo(aux159,13,0),gaceq(aux121,aux83)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux51,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),modulo(aux160,13,0)}),watched-and({w-literal(aux78,1),w-literal(aux87,1),w-literal(aux103,1),w-literal(aux51,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux161,13,0),gaceq(aux54,aux84)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux51,1),w-literal(aux75,1),w-literal(aux47,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux162,13,0),gaceq(aux119,aux121)})}),watched-and({w-literal(aux78,1),w-literal(aux24,1),w-literal(aux72,1),w-literal(aux117,1),w-literal(aux48,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux163,13,0),gaceq(aux119,aux82)})})})
watched-or({watched-and({w-literal(aux125,1),w-literal(aux99,1),w-literal(aux65,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux35,aux34),modulo(aux164,13,0)})}),watched-and({w-literal(aux40,1),w-literal(aux38,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux129,aux107),modulo(aux165,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux38,1),w-literal(aux81,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux35,aux108),modulo(aux166,13,0)})}),watched-and({modulo(aux167,13,0),w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux81,1),w-literal(aux29,1),w-literal(aux130,1),w-literal(aux98,1)}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux81,1),w-literal(aux29,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux36,aux37),modulo(aux168,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux81,1),w-literal(aux29,1),w-literal(aux130,1),w-literal(aux100,1),watched-or({gaceq(aux37,aux128),modulo(aux169,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux81,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux108,aux36),modulo(aux170,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux81,1),w-literal(aux130,1),w-literal(aux98,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux108,aux128),modulo(aux171,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux107,aux108),modulo(aux172,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux29,1),w-literal(aux130,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux100,1),watched-or({gaceq(aux107,aux37),modulo(aux173,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux99,1),w-literal(aux65,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux129,aux35),modulo(aux174,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux65,1),w-literal(aux30,1),w-literal(aux33,1),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux34,aux107),modulo(aux175,13,0)})}),watched-and({w-literal(aux125,1),w-literal(aux40,1),w-literal(aux81,1),w-literal(aux29,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux71,1),w-literal(aux100,1),watched-or({gaceq(aux34,aux36),modulo(aux176,13,0)})})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux25,1),w-literal(aux89,1),w-literal(aux52,1),w-literal(aux92,1),modulo(aux177,13,0)}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux25,1),w-literal(aux85,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux178,13,0),gaceq(aux124,aux96)})}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux25,1),w-literal(aux89,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux179,13,0),gaceq(aux96,aux94)})}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux25,1),w-literal(aux52,1),w-literal(aux92,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux180,13,0),gaceq(aux124,aux55)})}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux25,1),w-literal(aux89,1),w-literal(aux52,1),w-literal(aux26,1),watched-or({modulo(aux181,13,0),gaceq(aux94,aux55)})}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux105,1),w-literal(aux85,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux182,13,0),gaceq(aux97,aux124)})}),watched-and({w-literal(aux39,1),w-literal(aux22,1),w-literal(aux89,1),w-literal(aux52,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux26,1),watched-or({modulo(aux183,13,0),gaceq(aux97,aux94)})}),watched-and({w-literal(aux39,1),w-literal(aux91,1),w-literal(aux105,1),w-literal(aux85,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux184,13,0),gaceq(aux95,aux97)})}),watched-and({w-literal(aux39,1),w-literal(aux25,1),w-literal(aux89,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux185,13,0),gaceq(aux95,aux96)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux91,1),w-literal(aux105,1),w-literal(aux85,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux186,13,0),gaceq(aux56,aux95)})}),watched-and({w-literal(aux22,1),w-literal(aux25,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux85,1),w-literal(aux116,1),w-literal(aux26,1),watched-or({modulo(aux187,13,0),gaceq(aux56,aux124)})})})
watched-or({watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux110,1),w-literal(aux131,1),w-literal(aux126,1),watched-or({gaceq(aux63,aux62),modulo(aux188,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux132,1),w-literal(aux131,1),w-literal(aux126,1),watched-or({gaceq(aux62,aux61),modulo(aux189,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux114,1),watched-or({gaceq(aux63,aux80),modulo(aux190,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux132,1),w-literal(aux13,1),w-literal(aux114,1),modulo(aux191,13,0)}),watched-and({w-literal(aux70,1),w-literal(aux23,1),w-literal(aux132,1),w-literal(aux13,1),w-literal(aux126,1),watched-or({gaceq(aux61,aux80),modulo(aux192,13,0)})}),watched-and({w-literal(aux70,1),w-literal(aux115,1),w-literal(aux110,1),w-literal(aux131,1),w-literal(aux126,1),watched-or({gaceq(aux64,aux63),modulo(aux193,13,0)})}),watched-and({w-literal(aux70,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux132,1),w-literal(aux13,1),w-literal(aux126,1),watched-or({gaceq(aux64,aux61),modulo(aux194,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux115,1),w-literal(aux110,1),w-literal(aux131,1),w-literal(aux126,1),watched-or({gaceq(aux79,aux64),modulo(aux195,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux23,1),w-literal(aux132,1),w-literal(aux131,1),w-literal(aux126,1),watched-or({gaceq(aux79,aux62),modulo(aux196,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux197,13,0),gaceq(aux19,aux102)}),w-literal(aux112,1),w-literal(aux113,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux122,1)}),watched-and({modulo(aux198,13,0),w-literal(aux111,1),w-literal(aux112,1),w-literal(aux113,1),w-literal(aux73,1)}),watched-and({watched-or({modulo(aux199,13,0),gaceq(aux19,aux101)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux74,1),w-literal(aux104,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux200,13,0),gaceq(aux101,aux21)}),w-literal(aux111,1),w-literal(aux113,1),w-literal(aux73,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux201,13,0),gaceq(aux101,aux20)}),w-literal(aux111,1),w-literal(aux74,1),w-literal(aux104,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux202,13,0),gaceq(aux20,aux102)}),w-literal(aux111,1),w-literal(aux112,1),w-literal(aux104,1),w-literal(aux122,1)}),watched-and({watched-or({modulo(aux203,13,0),gaceq(aux102,aux21)}),w-literal(aux111,1),w-literal(aux112,1),w-literal(aux113,1),w-literal(aux122,1)})})
watched-or({watched-and({watched-or({gaceq(aux57,aux60),modulo(aux204,13,0)}),w-literal(aux46,1),w-literal(aux45,1),w-literal(aux44,1)}),watched-and({watched-or({gaceq(aux59,aux58),modulo(aux205,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux76,1),w-literal(aux44,1)}),watched-and({watched-or({gaceq(aux59,aux60),modulo(aux206,13,0)}),w-literal(aux45,1),w-literal(aux77,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux58,aux57),modulo(aux207,13,0)}),w-literal(aux46,1),w-literal(aux76,1),w-literal(aux44,1)}),watched-and({w-literal(aux46,1),w-literal(aux45,1),w-literal(aux77,1),modulo(aux208,13,0)})})
watched-or({watched-and({watched-or({modulo(aux209,13,0),div(M_00009_00001, 13, aux127)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux32,1)}),watched-and({watched-or({modulo(aux210,13,0),div(M_00009_00003, 13, aux127)}),w-literal(aux31,1),w-literal(aux32,1)}),watched-and({modulo(aux211,13,0),w-literal(aux31,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux133),modulo(aux212,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux213,13,0)})})
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux134)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux134)
sumleq([M_00002_00004,-51],aux135)
sumgeq([M_00002_00004,-51],aux135)
weightedsumleq([-1,1],[M_00002_00007,3],aux136)
weightedsumgeq([-1,1],[M_00002_00007,3],aux136)
sumleq([M_00002_00006,-51],aux137)
sumgeq([M_00002_00006,-51],aux137)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux138)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux138)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux139)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux139)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux140)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux140)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux141)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux141)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux142)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux142)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux143)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux143)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux144)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux144)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux145)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux145)
weightedsumleq([-1,1],[M_00002_00002,51],aux146)
weightedsumgeq([-1,1],[M_00002_00002,51],aux146)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux147)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux147)
weightedsumleq([-1,1],[M_00002_00009,3],aux148)
weightedsumgeq([-1,1],[M_00002_00009,3],aux148)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux149)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux149)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux150)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux150)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux151)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux151)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux152)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux152)
weightedsumleq([-1,1],[M_00003_00009,-1],aux153)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux153)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux154)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux154)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux155)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux155)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux156)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux156)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux157)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux157)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux158)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux158)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux159)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux159)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux160)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux160)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux161)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux161)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux162)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux162)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux163)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux163)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux164)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux164)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux165)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux165)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux166)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux166)
weightedsumleq([-1,1],[M_00004_00008,-1],aux167)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux167)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux168)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux168)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux169)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux169)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux170)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux170)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux171)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux171)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux172)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux172)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux173)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux173)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux174)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux174)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux175)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux175)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux176)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux176)
weightedsumleq([1,-1],[-1,M_00005_00007],aux177)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux177)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux178)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux178)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux179)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux179)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux180)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux180)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux181)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux181)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux182)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux182)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux183)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux183)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux184)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux184)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux185)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux185)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux186)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux186)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux187)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux187)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux188)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux188)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux189)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux189)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux190)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux190)
weightedsumleq([1,-1],[-1,M_00006_00006],aux191)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux191)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux192)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux192)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux193)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux193)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux194)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux194)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux195)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux195)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux196)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux196)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux197)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux197)
weightedsumleq([-1,1],[M_00007_00005,-1],aux198)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux198)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux199)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux199)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux200)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux200)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux201)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux201)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux202)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux202)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux203)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux203)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux204)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux204)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux205)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux205)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux206)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux206)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux207)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux207)
weightedsumleq([-1,1],[M_00008_00004,-1],aux208)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux208)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux209)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux209)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux210)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux210)
weightedsumleq([1,-1],[-1,M_00009_00003],aux211)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux211)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux212)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux212)
weightedsumleq([-1,1],[M_00010_00002,-1],aux213)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux213)
**EOF**
