MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 144
# CSE_active_eliminated_expressions = 719
# CSE_active_total_size = 432
**VARIABLES**
DISCRETE M_00002_00001 #
{9..10}
DISCRETE M_00002_00002 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,11,13,13,21,21,26,26])
**VARIABLES**
DISCRETE M_00002_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00008 #
{26..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00009 #
{8..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [8,11,13,13,21,21,26,26])
**VARIABLES**
DISCRETE M_00003_00001 #
{7..10}
DISCRETE M_00003_00002 #
{28..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00008 #
{8..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [8,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00009 #
{8..26}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [8,11,13,13,21,21,26,26])
**VARIABLES**
DISCRETE M_00004_00001 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00008 #
{8..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [8,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..21}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,11,13,13,21,21])
**VARIABLES**
DISCRETE M_00005_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00008 #
{8..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [8,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00007_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00007_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00007_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [7,11,13,13,21,21,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00008_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00008_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00009_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [7,11,13,13,21,21,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00010_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [7,11,13,13,21,21,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..2}
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux19 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..2}
BOOL aux22 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux23 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux27 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
DISCRETE aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux31 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux32 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux33 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux34 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux35 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux39 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux41 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux42 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux43 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux44 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux46 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux47 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux48 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux50 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux51 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux52 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux53 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux54 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002/13)
{2..3}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..2}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux58 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..2}
DISCRETE aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
DISCRETE aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux69 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux71 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux72 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux73 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux74 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux75 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux78 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux81 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux85 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..2}
DISCRETE aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux91 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux92 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux93 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux95 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux98 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux99 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux100 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux105 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux106 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux107 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux108 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux113 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux114 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux115 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux116 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux117 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux120 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux121 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux123 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux124 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux125 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux126 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux127 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux128 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux129 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
DISCRETE aux130 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
DISCRETE aux131 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux134 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux135 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux137 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
DISCRETE aux138 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux139 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux140 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux141 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux142 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux143 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
DISCRETE aux144 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
DISCRETE aux145 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
BOOL aux146 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux147 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux148 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..2}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux154 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux155 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux157 #
{0..3}
DISCRETE aux158 #( - M_00002_00002 + 51)
{13..23}
**CONSTRAINTS**
w-inintervalset(aux158, [13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux159 #( - M_00002_00002 + M_00002_00005)
{-25..10}
**CONSTRAINTS**
w-inintervalset(aux159, [-25,-25,-20,-20,-17,-17,-15,-15,-12,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux160 #(M_00002_00004 + -51)
{-44..-13}
**CONSTRAINTS**
w-inintervalset(aux160, [-44,-40,-38,-38,-30,-30,-25,-25,-23,-23,-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux161 #(M_00002_00006 + -51)
{-44..-25}
**CONSTRAINTS**
w-inintervalset(aux161, [-44,-40,-38,-38,-30,-30,-25,-25])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00001 + M_00002_00004)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux162, [-2,4,11,12,16,19,23,24,28,28])
**VARIABLES**
DISCRETE aux163 #( - M_00002_00006 + M_00002_00007)
{-19..26}
**CONSTRAINTS**
w-inintervalset(aux163, [-19,-10,-8,-8,-6,8,10,26])
**VARIABLES**
DISCRETE aux164 #( - M_00002_00007 + M_00002_00008)
{-7..26}
**CONSTRAINTS**
w-inintervalset(aux164, [-7,-7,-5,-5,-2,-2,0,0,2,2,5,5,7,7,12,13,15,26])
**VARIABLES**
DISCRETE aux165 #( - M_00002_00006 + M_00002_00009)
{-18..13}
**CONSTRAINTS**
w-inintervalset(aux165, [-18,-15,-13,-10,-8,-8,-5,6,8,8,10,13])
**VARIABLES**
DISCRETE aux166 #( - M_00002_00008 + M_00002_00009)
{-25..-7}
**CONSTRAINTS**
w-inintervalset(aux166, [-25,-22,-20,-15,-13,-12,-7,-7])
**VARIABLES**
DISCRETE aux167 #( - M_00002_00005 + M_00002_00006)
{-25..-6}
**CONSTRAINTS**
w-inintervalset(aux167, [-25,-10,-8,-6])
**VARIABLES**
DISCRETE aux168 #( - M_00002_00005 + M_00002_00008)
{-12..13}
**CONSTRAINTS**
w-inintervalset(aux168, [-12,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,2,2,5,5,7,7,12,13])
**VARIABLES**
DISCRETE aux169 #( - M_00002_00009 + 21)
{-5..13}
**CONSTRAINTS**
w-inintervalset(aux169, [-5,-5,0,0,8,8,10,13])
**VARIABLES**
DISCRETE aux170 #( - M_00002_00004 + M_00002_00005)
{-25..31}
**CONSTRAINTS**
w-inintervalset(aux170, [-25,-25,-20,-20,-17,-17,-15,-15,-13,-12,-10,-10,-8,-7,-5,-5,-2,-2,0,0,2,8,10,31])
**VARIABLES**
DISCRETE aux171 #( - M_00002_00004 + M_00002_00007)
{-5..26}
**CONSTRAINTS**
w-inintervalset(aux171, [-5,8,10,26])
**VARIABLES**
DISCRETE aux172 #( - M_00002_00007 + 21)
{-12..14}
**CONSTRAINTS**
w-inintervalset(aux172, [-12,-12,-7,-7,-5,-5,0,0,8,8,10,14])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00001 + M_00003_00002)
{18..42}
**CONSTRAINTS**
w-inintervalset(aux173, [18,21,23,26,28,31,41,42])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00002 + M_00003_00003)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux174, [-41,-40,-38,-38,-31,-17,-15,-15,-13,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10,13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux175 #( - M_00003_00003 + M_00003_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux175, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00005 + M_00003_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux176, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00005 + M_00003_00008)
{-30..20}
**CONSTRAINTS**
w-inintervalset(aux177, [-30,-27,-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,20])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00009 + 11)
{-15..3}
**CONSTRAINTS**
w-inintervalset(aux178, [-15,-15,-10,-10,-2,-2,0,3])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00007 + 11)
{-22..4}
**CONSTRAINTS**
w-inintervalset(aux179, [-22,-22,-17,-17,-15,-15,-10,-10,-2,-2,0,4])
**VARIABLES**
DISCRETE aux180 #( - M_00003_00001 + M_00003_00004)
{-3..31}
**CONSTRAINTS**
w-inintervalset(aux180, [-3,6,11,14,16,21,23,26,28,31])
**VARIABLES**
DISCRETE aux181 #( - M_00003_00004 + M_00003_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux181, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux182 #( - M_00003_00002 + M_00003_00005)
{-44..10}
**CONSTRAINTS**
w-inintervalset(aux182, [-44,-40,-38,-38,-31,-17,-15,-15,-13,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux183 #( - M_00003_00003 + M_00003_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux183, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux184 #( - M_00003_00004 + M_00003_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux184, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux185 #( - M_00003_00006 + M_00003_00007)
{-19..26}
**CONSTRAINTS**
w-inintervalset(aux185, [-19,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux186 #( - M_00003_00007 + M_00003_00008)
{-25..26}
**CONSTRAINTS**
w-inintervalset(aux186, [-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,26])
**VARIABLES**
DISCRETE aux187 #( - M_00003_00006 + M_00003_00009)
{-12..14}
**CONSTRAINTS**
w-inintervalset(aux187, [-12,-10,-8,-7,-5,6,8,8,10,14])
**VARIABLES**
DISCRETE aux188 #( - M_00003_00008 + M_00003_00009)
{-18..13}
**CONSTRAINTS**
w-inintervalset(aux188, [-18,-15,-13,-10,-8,-7,-5,5,8,8,10,13])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00007 + M_00004_00008)
{-25..26}
**CONSTRAINTS**
w-inintervalset(aux189, [-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,26])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00008 + M_00004_00009)
{-22..13}
**CONSTRAINTS**
w-inintervalset(aux190, [-22,-22,-20,-20,-17,-17,-15,-15,-13,-12,-10,-10,-8,-7,-5,-5,-2,-2,0,5,8,8,10,13])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00006 + M_00004_00007)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux191, [-26,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00006 + M_00004_00009)
{-22..14}
**CONSTRAINTS**
w-inintervalset(aux192, [-22,-22,-20,-20,-17,-17,-15,-15,-13,-12,-10,-10,-8,-7,-5,-5,-2,-2,0,6,8,8,10,14])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00005 + M_00004_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux193, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00005 + M_00004_00008)
{-30..26}
**CONSTRAINTS**
w-inintervalset(aux194, [-30,-27,-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,26])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00001 + M_00004_00002)
{-10..44}
**CONSTRAINTS**
w-inintervalset(aux195, [-10,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux196 #( - M_00004_00002 + M_00004_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux196, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux197 #( - M_00004_00004 + M_00004_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux197, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux198 #( - M_00004_00004 + M_00004_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux198, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux199 #( - M_00004_00009 + -1)
{-22..-12}
**CONSTRAINTS**
w-inintervalset(aux199, [-22,-22,-14,-14,-12,-12])
**VARIABLES**
DISCRETE aux200 #( - M_00004_00003 + M_00004_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux200, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux201 #( - M_00004_00001 + M_00004_00004)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux201, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux202 #( - M_00004_00002 + M_00004_00005)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux202, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux203 #( - M_00004_00003 + M_00004_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux203, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00002 + M_00005_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux204, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00001 + M_00005_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux205, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00002 + M_00005_00005)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux206, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux207 #(-1 - M_00005_00008)
{-34..-9}
**CONSTRAINTS**
w-inintervalset(aux207, [-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-9])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00005 + M_00005_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux208, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux209 #( - M_00005_00006 + M_00005_00007)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux209, [-26,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux210 #( - M_00005_00005 + M_00005_00008)
{-30..26}
**CONSTRAINTS**
w-inintervalset(aux210, [-30,-27,-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,26])
**VARIABLES**
DISCRETE aux211 #( - M_00005_00007 + M_00005_00008)
{-25..26}
**CONSTRAINTS**
w-inintervalset(aux211, [-25,-22,-20,-15,-13,-10,-8,-7,-5,8,10,26])
**VARIABLES**
DISCRETE aux212 #( - M_00005_00004 + M_00005_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux212, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux213 #( - M_00005_00004 + M_00005_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux213, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux214 #( - M_00005_00001 + M_00005_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux214, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux215 #( - M_00005_00003 + M_00005_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux215, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux216 #( - M_00005_00003 + M_00005_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux216, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00001 + M_00006_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux217, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00004 + M_00006_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux218, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux219 #(-1 - M_00006_00007)
{-34..-8}
**CONSTRAINTS**
w-inintervalset(aux219, [-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
DISCRETE aux220 #( - M_00006_00005 + M_00006_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux220, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux221 #( - M_00006_00004 + M_00006_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux221, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux222 #( - M_00006_00006 + M_00006_00007)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux222, [-26,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux223 #( - M_00006_00003 + M_00006_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux223, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux224 #( - M_00006_00003 + M_00006_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux224, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux225 #( - M_00006_00002 + M_00006_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux225, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux226 #( - M_00006_00002 + M_00006_00005)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux226, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux227 #( - M_00006_00001 + M_00006_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux227, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux228 #( - M_00007_00004 + M_00007_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux228, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux229 #( - M_00007_00001 + M_00007_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux229, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux230 #( - M_00007_00005 + M_00007_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux230, [-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux231 #( - M_00007_00002 + M_00007_00005)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux231, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux232 #( - M_00007_00003 + M_00007_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux232, [-44,-40,-38,-38,-31,-10,-8,8,10,26])
**VARIABLES**
DISCRETE aux233 #( - M_00007_00001 + M_00007_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux233, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux234 #( - M_00007_00002 + M_00007_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux234, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux235 #( - M_00007_00006 + -1)
{-34..-8}
**CONSTRAINTS**
w-inintervalset(aux235, [-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
DISCRETE aux236 #( - M_00007_00003 + M_00007_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux236, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux237 #( - M_00008_00001 + M_00008_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux237, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux238 #( - M_00008_00002 + M_00008_00005)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux238, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux239 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux239, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux240 #( - M_00008_00003 + M_00008_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux240, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux241 #( - M_00008_00005 + -1)
{-39..-8}
**CONSTRAINTS**
w-inintervalset(aux241, [-39,-39,-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
DISCRETE aux242 #( - M_00008_00004 + M_00008_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux242, [-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux243 #( - M_00008_00001 + M_00008_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux243, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux244 #( - M_00009_00003 + M_00009_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux244, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux245 #( - M_00009_00001 + M_00009_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux245, [-44,-40,-38,-38,-31,-10,-8,8,10,31])
**VARIABLES**
DISCRETE aux246 #( - M_00009_00002 + M_00009_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux246, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux247 #(-1 - M_00009_00004)
{-39..-8}
**CONSTRAINTS**
w-inintervalset(aux247, [-39,-39,-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
DISCRETE aux248 #( - M_00009_00001 + M_00009_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux248, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux249 #( - M_00010_00001 + M_00010_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux249, [-44,-40,-38,-38,-31,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux250 #( - M_00010_00002 + M_00010_00003)
{-30..44}
**CONSTRAINTS**
w-inintervalset(aux250, [-30,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux251 #( - M_00010_00003 + -1)
{-52..-8}
**CONSTRAINTS**
w-inintervalset(aux251, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
DISCRETE aux252 #( - M_00011_00001 + M_00011_00002)
{-30..44}
**CONSTRAINTS**
w-inintervalset(aux252, [-30,-10,-8,8,10,31,38,38,40,44])
**VARIABLES**
DISCRETE aux253 #( - M_00011_00002 + -1)
{-52..-8}
**CONSTRAINTS**
w-inintervalset(aux253, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-22,-22,-14,-14,-12,-8])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[9, 28, 51, 10, 38, 13, 7, 33, 26, 8, 21, 11]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux157)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00008, 13, 2)
div(M_00002_00009, 13, aux15)
div(M_00002_00006, 13, aux16)
div(M_00002_00004, 13, aux17)
reify(gaceq(M_00003_00009,M_00004_00008), aux18)
reify(gaceq(M_00007_00002,M_00008_00002), aux19)
div(M_00007_00001, 13, aux20)
div(M_00007_00006, 13, aux21)
reify(gaceq(M_00007_00003,M_00006_00003), aux22)
reify(gaceq(M_00005_00002,M_00006_00002), aux23)
div(M_00010_00002, 13, aux24)
reify(gaceq(M_00008_00002,M_00009_00002), aux25)
reify(gaceq(M_00008_00003,M_00009_00003), aux26)
reify(gaceq(M_00005_00007,M_00006_00006), aux27)
div(M_00002_00005, 13, aux28)
div(M_00002_00007, 13, aux29)
reify(gaceq(M_00004_00005,M_00005_00004), aux30)
reify(gaceq(M_00003_00005,M_00004_00005), aux31)
reify(gaceq(M_00010_00003,M_00009_00003), aux32)
reify(gaceq(M_00010_00002,M_00009_00003), aux33)
reify(gaceq(M_00004_00006,M_00005_00005), aux34)
reify(gaceq(M_00004_00001,M_00005_00001), aux35)
div(M_00004_00008, 13, aux36)
div(M_00004_00003, 13, aux37)
div(M_00004_00002, 13, aux38)
div(M_00004_00007, 13, aux39)
reify(gaceq(M_00004_00006,M_00005_00006), aux40)
reify(gaceq(M_00003_00008,M_00004_00007), aux41)
reify(gaceq(M_00002_00008,M_00003_00007), aux42)
reify(gaceq(M_00002_00009,M_00003_00008), aux43)
reify(gaceq(M_00007_00006,M_00008_00005), aux44)
reify(gaceq(M_00008_00004,M_00009_00003), aux45)
reify(gaceq(M_00003_00007,M_00004_00006), aux46)
reify(gaceq(M_00002_00006,M_00003_00005), aux47)
reify(gaceq(M_00002_00006,M_00003_00006), aux48)
reify(gaceq(M_00003_00005,M_00004_00004), aux49)
reify(gaceq(M_00005_00001,M_00006_00001), aux50)
reify(gaceq(M_00005_00006,M_00006_00006), aux51)
reify(gaceq(M_00007_00001,M_00008_00001), aux52)
reify(gaceq(M_00004_00004,M_00005_00004), aux53)
reify(gaceq(M_00004_00005,M_00005_00005), aux54)
div(M_00003_00002, 13, aux55)
div(M_00005_00008, 13, aux56)
div(M_00005_00001, 13, aux57)
reify(gaceq(M_00005_00003,M_00006_00003), aux58)
div(M_00008_00003, 13, aux59)
div(M_00008_00001, 13, aux60)
div(M_00008_00005, 13, aux61)
div(M_00006_00006, 13, aux62)
div(M_00006_00005, 13, aux63)
div(M_00006_00003, 13, aux64)
div(M_00006_00002, 13, aux65)
reify(gaceq(M_00010_00003,M_00011_00002), aux66)
reify(gaceq(M_00010_00001,M_00011_00001), aux67)
reify(gaceq(M_00004_00004,M_00005_00003), aux68)
reify(gaceq(M_00005_00004,M_00006_00004), aux69)
reify(gaceq(M_00002_00004,M_00003_00003), aux70)
reify(gaceq(M_00002_00007,M_00003_00007), aux71)
reify(gaceq(M_00002_00005,M_00003_00004), aux72)
reify(gaceq(M_00003_00006,M_00004_00006), aux73)
reify(gaceq(M_00004_00007,M_00005_00006), aux74)
reify(gaceq(M_00007_00006,M_00006_00007), aux75)
reify(gaceq(M_00007_00005,M_00008_00005), aux76)
reify(gaceq(M_00007_00003,M_00008_00002), aux77)
reify(gaceq(M_00003_00006,M_00004_00005), aux78)
reify(gaceq(M_00008_00003,M_00009_00002), aux79)
reify(gaceq(M_00008_00004,M_00009_00004), aux80)
reify(gaceq(M_00005_00008,M_00006_00007), aux81)
reify(gaceq(M_00010_00001,M_00009_00001), aux82)
reify(gaceq(M_00010_00002,M_00009_00002), aux83)
reify(gaceq(M_00010_00003,M_00009_00004), aux84)
div(M_00006_00004, 13, aux85)
div(M_00006_00001, 13, aux86)
div(M_00006_00007, 13, aux87)
div(M_00003_00008, 13, aux88)
div(M_00003_00009, 13, aux89)
div(M_00003_00003, 13, aux90)
reify(gaceq(M_00005_00005,M_00006_00004), aux91)
reify(gaceq(M_00005_00005,M_00006_00005), aux92)
reify(gaceq(M_00002_00005,M_00003_00005), aux93)
reify(gaceq(M_00003_00003,M_00004_00002), aux94)
reify(gaceq(M_00002_00007,M_00003_00006), aux95)
reify(gaceq(M_00005_00003,M_00006_00002), aux96)
reify(gaceq(M_00005_00007,M_00006_00007), aux97)
reify(gaceq(M_00003_00001,M_00004_00001), aux98)
reify(gaceq(M_00002_00004,M_00003_00004), aux99)
reify(gaceq(M_00003_00003,M_00004_00003), aux100)
div(M_00005_00007, 13, aux101)
div(M_00005_00006, 13, aux102)
div(M_00005_00002, 13, aux103)
div(M_00005_00003, 13, aux104)
reify(gaceq(M_00004_00008,M_00005_00008), aux105)
reify(gaceq(M_00004_00003,M_00005_00002), aux106)
reify(gaceq(M_00004_00008,M_00005_00007), aux107)
reify(gaceq(M_00003_00004,M_00004_00004), aux108)
div(M_00007_00002, 13, aux109)
div(M_00007_00004, 13, aux110)
div(M_00007_00003, 13, aux111)
div(M_00007_00005, 13, aux112)
reify(gaceq(M_00007_00002,M_00006_00002), aux113)
reify(gaceq(M_00004_00009,M_00005_00008), aux114)
reify(gaceq(M_00007_00001,M_00006_00001), aux115)
reify(gaceq(M_00008_00005,M_00009_00004), aux116)
reify(gaceq(M_00008_00001,M_00009_00001), aux117)
reify(gaceq(M_00003_00004,M_00004_00003), aux118)
reify(gaceq(M_00003_00008,M_00004_00008), aux119)
reify(gaceq(M_00007_00004,M_00008_00003), aux120)
reify(gaceq(M_00005_00004,M_00006_00003), aux121)
reify(gaceq(M_00003_00007,M_00004_00007), aux122)
div(M_00004_00004, 13, aux123)
div(M_00004_00005, 13, aux124)
div(M_00004_00006, 13, aux125)
reify(gaceq(M_00003_00002,M_00004_00002), aux126)
reify(gaceq(M_00002_00002,M_00003_00002), aux127)
reify(gaceq(M_00007_00003,M_00006_00004), aux128)
reify(gaceq(M_00004_00002,M_00005_00002), aux129)
div(M_00008_00004, 13, aux130)
div(M_00008_00002, 13, aux131)
reify(gaceq(M_00007_00004,M_00008_00004), aux132)
reify(gaceq(M_00007_00006,M_00006_00006), aux133)
reify(gaceq(M_00007_00002,M_00006_00003), aux134)
reify(gaceq(M_00005_00006,M_00006_00005), aux135)
reify(gaceq(M_00007_00003,M_00008_00003), aux136)
reify(gaceq(M_00002_00001,M_00003_00001), aux137)
div(M_00003_00007, 13, aux138)
div(M_00003_00004, 13, aux139)
div(M_00003_00006, 13, aux140)
div(M_00003_00005, 13, aux141)
reify(gaceq(M_00007_00005,M_00008_00004), aux142)
reify(gaceq(M_00002_00008,M_00003_00008), aux143)
div(M_00005_00004, 13, aux144)
div(M_00005_00005, 13, aux145)
reify(gaceq(M_00004_00003,M_00005_00003), aux146)
reify(gaceq(M_00007_00005,M_00006_00006), aux147)
div(M_00009_00003, 13, aux148)
div(M_00009_00004, 13, aux149)
div(M_00009_00001, 13, aux150)
div(M_00009_00002, 13, aux151)
div(M_00004_00009, 13, aux152)
div(M_00004_00001, 13, aux153)
reify(gaceq(M_00004_00007,M_00005_00007), aux154)
reify(gaceq(M_00007_00004,M_00006_00004), aux155)
reify(gaceq(M_00007_00004,M_00006_00005), aux156)
gccweak([M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,10),w-literal(M_00002_00002,28),w-literal(M_00002_00004,38),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,7),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,33),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,8),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,26),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,8)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,38),w-literal(M_00002_00004,10),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8)})})
watched-or({watched-and({w-literal(M_00003_00002,51),w-literal(M_00003_00009,21),modulo(aux158,13,0),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux72,1),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux99,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux159,13,0),div(M_00002_00002, 13, aux28)})}),watched-and({w-literal(M_00003_00009,21),modulo(aux160,13,0),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux70,1),w-literal(aux72,1),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00009,21),modulo(aux161,13,0),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux127,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux72,1),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux162,13,0),div(M_00002_00001, 13, aux17)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux163,13,0),gaceq(aux16,aux29)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux48,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux164,13,0),w-literal(aux29,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux71,1),w-literal(aux143,1),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux165,13,0),gaceq(aux16,aux15)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux48,1),w-literal(aux71,1),w-literal(aux43,1),watched-or({modulo(aux166,13,0),w-literal(aux15,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux167,13,0),gaceq(aux28,aux16)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux48,1),w-literal(aux71,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux43,1),watched-or({modulo(aux168,13,0),w-literal(aux28,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),watched-or({w-literal(aux15,1),modulo(aux169,13,0)}),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux48,1),w-literal(aux71,1),w-literal(aux143,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux72,1),w-literal(aux47,1),w-literal(aux95,1),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux170,13,0),gaceq(aux17,aux28)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00009,21),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux93,1),w-literal(aux48,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux42,1),w-literal(aux43,1),watched-or({modulo(aux171,13,0),gaceq(aux17,aux29)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00007,21),watched-or({w-literal(aux29,1),modulo(aux172,13,0)}),w-literal(aux137,1),w-literal(aux127,1),w-literal(aux99,1),w-literal(aux93,1),w-literal(aux48,1),w-literal(aux143,1),gaceq(M_00002_00009,M_00003_00009)})})
watched-or({watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux94,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),modulo(aux173,13,0),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux94,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux174,13,0),gaceq(aux55,aux90)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux118,1),w-literal(aux49,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux175,13,0),gaceq(aux90,aux139)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux176,13,0),gaceq(aux141,aux140)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux73,1),w-literal(aux122,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux18,1),watched-or({modulo(aux177,13,0),gaceq(aux141,aux88)}),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux178,13,0),w-literal(aux89,0)}),w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux73,1),w-literal(aux122,1),w-literal(aux119,1),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux179,13,0),w-literal(aux138,0)}),w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux73,1),w-literal(aux119,1),gaceq(M_00003_00009,M_00004_00009),w-literal(M_00004_00007,11)}),watched-and({w-literal(aux126,1),w-literal(aux100,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux49,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux180,13,0),div(M_00003_00001, 13, aux139)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux49,1),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux181,13,0),gaceq(aux139,aux141)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux100,1),w-literal(aux108,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux78,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux182,13,0),gaceq(aux55,aux141)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux108,1),w-literal(aux31,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux183,13,0),gaceq(aux90,aux140)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux31,1),w-literal(aux73,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux184,13,0),gaceq(aux139,aux138)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux46,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux185,13,0),gaceq(aux140,aux138)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux73,1),w-literal(aux41,1),w-literal(aux18,1),watched-or({modulo(aux186,13,0),gaceq(aux138,aux88)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux122,1),w-literal(aux119,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux187,13,0),gaceq(aux140,aux89)}),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux98,1),w-literal(aux126,1),w-literal(aux100,1),w-literal(aux108,1),w-literal(aux31,1),w-literal(aux73,1),w-literal(aux122,1),w-literal(aux18,1),watched-or({modulo(aux188,13,0),gaceq(aux88,aux89)}),w-literal(M_00004_00009,11)})})
watched-or({watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux40,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux39,aux36),modulo(aux189,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux40,1),w-literal(aux154,1),w-literal(aux114,1),watched-or({gaceq(aux36,aux152),modulo(aux190,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux125,aux39),modulo(aux191,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux154,1),w-literal(aux105,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux125,aux152),modulo(aux192,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux124,aux125),modulo(aux193,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux40,1),w-literal(aux154,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux114,1),watched-or({gaceq(aux124,aux36),modulo(aux194,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux106,1),w-literal(aux68,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux153,aux38),modulo(aux195,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux106,1),w-literal(aux68,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux38,aux37),modulo(aux196,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux123,aux124),modulo(aux197,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux54,1),w-literal(aux40,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux123,aux39),modulo(aux198,13,0)})}),watched-and({modulo(aux199,13,0),w-literal(aux35,1),w-literal(aux129,1),w-literal(aux146,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux40,1),w-literal(aux154,1),w-literal(aux105,1)}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux68,1),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux37,aux123),modulo(aux200,13,0)})}),watched-and({w-literal(aux129,1),w-literal(aux146,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux30,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux153,aux123),modulo(aux201,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux146,1),w-literal(aux53,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux38,aux124),modulo(aux202,13,0)})}),watched-and({w-literal(aux35,1),w-literal(aux129,1),w-literal(aux53,1),w-literal(aux54,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux74,1),w-literal(aux107,1),w-literal(aux114,1),watched-or({gaceq(aux37,aux125),modulo(aux203,13,0)})})})
watched-or({watched-and({w-literal(aux50,1),w-literal(aux96,1),w-literal(aux121,1),w-literal(aux91,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux204,13,0),gaceq(aux103,aux104)})}),watched-and({w-literal(aux23,1),w-literal(aux58,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux91,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux205,13,0),gaceq(aux57,aux144)})}),watched-and({w-literal(aux50,1),w-literal(aux58,1),w-literal(aux69,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux206,13,0),gaceq(aux103,aux145)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux69,1),w-literal(aux92,1),w-literal(aux51,1),w-literal(aux97,1),modulo(aux207,13,0)}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux69,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux208,13,0),gaceq(aux145,aux102)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux69,1),w-literal(aux92,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux209,13,0),gaceq(aux102,aux101)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux69,1),w-literal(aux51,1),w-literal(aux97,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux210,13,0),gaceq(aux145,aux56)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux69,1),w-literal(aux92,1),w-literal(aux51,1),w-literal(aux81,1),watched-or({modulo(aux211,13,0),gaceq(aux101,aux56)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux91,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux212,13,0),gaceq(aux144,aux145)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux58,1),w-literal(aux92,1),w-literal(aux51,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux81,1),watched-or({modulo(aux213,13,0),gaceq(aux144,aux101)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux96,1),w-literal(aux121,1),w-literal(aux91,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux214,13,0),gaceq(aux57,aux103)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux121,1),w-literal(aux91,1),w-literal(aux135,1),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux215,13,0),gaceq(aux104,aux144)})}),watched-and({w-literal(aux50,1),w-literal(aux23,1),w-literal(aux69,1),w-literal(aux92,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux27,1),w-literal(aux81,1),watched-or({modulo(aux216,13,0),gaceq(aux104,aux102)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux113,1),w-literal(aux22,1),w-literal(aux156,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux86,aux85),modulo(aux217,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux22,1),w-literal(aux156,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux85,aux63),modulo(aux218,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux22,1),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux133,1),modulo(aux219,13,0)}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux22,1),w-literal(aux155,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux63,aux62),modulo(aux220,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux22,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux133,1),watched-or({gaceq(aux85,aux87),modulo(aux221,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux22,1),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux75,1),watched-or({gaceq(aux62,aux87),modulo(aux222,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),w-literal(aux128,1),w-literal(aux156,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux64,aux85),modulo(aux223,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux113,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux155,1),w-literal(aux13,1),w-literal(aux75,1),watched-or({gaceq(aux64,aux62),modulo(aux224,13,0)})}),watched-and({w-literal(aux115,1),w-literal(aux134,1),w-literal(aux128,1),w-literal(aux156,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux65,aux64),modulo(aux225,13,0)})}),watched-and({w-literal(aux115,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux22,1),w-literal(aux155,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux65,aux63),modulo(aux226,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux134,1),w-literal(aux128,1),w-literal(aux156,1),w-literal(aux147,1),w-literal(aux75,1),watched-or({gaceq(aux86,aux65),modulo(aux227,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux228,13,0),gaceq(aux110,aux112)}),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux136,1),w-literal(aux142,1),w-literal(aux44,1)}),watched-and({watched-or({modulo(aux229,13,0),gaceq(aux20,aux110)}),w-literal(aux19,1),w-literal(aux136,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux142,1),w-literal(aux44,1)}),watched-and({watched-or({modulo(aux230,13,0),gaceq(aux112,aux21)}),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux136,1),w-literal(aux132,1),w-literal(aux44,1)}),watched-and({watched-or({modulo(aux231,13,0),gaceq(aux109,aux112)}),w-literal(aux52,1),w-literal(aux136,1),w-literal(aux132,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux44,1)}),watched-and({watched-or({modulo(aux232,13,0),gaceq(aux111,aux21)}),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux132,1),w-literal(aux76,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux233,13,0),gaceq(aux20,aux109)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux77,1),w-literal(aux120,1),w-literal(aux142,1),w-literal(aux44,1)}),watched-and({watched-or({modulo(aux234,13,0),gaceq(aux109,aux111)}),w-literal(aux52,1),w-literal(aux77,1),w-literal(aux120,1),w-literal(aux142,1),w-literal(aux44,1)}),watched-and({modulo(aux235,13,0),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux136,1),w-literal(aux132,1),w-literal(aux76,1)}),watched-and({watched-or({modulo(aux236,13,0),gaceq(aux111,aux110)}),w-literal(aux52,1),w-literal(aux19,1),w-literal(aux120,1),w-literal(aux142,1),w-literal(aux44,1)})})
watched-or({watched-and({watched-or({gaceq(aux60,aux131),modulo(aux237,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux79,1),w-literal(aux45,1),w-literal(aux116,1)}),watched-and({watched-or({gaceq(aux131,aux61),modulo(aux238,13,0)}),w-literal(aux117,1),w-literal(aux26,1),w-literal(aux80,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux131,aux59),modulo(aux239,13,0)}),w-literal(aux117,1),w-literal(aux79,1),w-literal(aux45,1),w-literal(aux116,1)}),watched-and({watched-or({gaceq(aux59,aux130),modulo(aux240,13,0)}),w-literal(aux117,1),w-literal(aux25,1),w-literal(aux45,1),w-literal(aux116,1)}),watched-and({w-literal(aux117,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux80,1),modulo(aux241,13,0)}),watched-and({watched-or({gaceq(aux130,aux61),modulo(aux242,13,0)}),w-literal(aux117,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux116,1)}),watched-and({watched-or({gaceq(aux60,aux130),modulo(aux243,13,0)}),w-literal(aux25,1),w-literal(aux26,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux116,1)})})
watched-or({watched-and({watched-or({modulo(aux244,13,0),gaceq(aux148,aux149)}),w-literal(aux82,1),w-literal(aux83,1),w-literal(aux84,1)}),watched-and({watched-or({modulo(aux245,13,0),gaceq(aux150,aux149)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux83,1),w-literal(aux32,1)}),watched-and({watched-or({modulo(aux246,13,0),gaceq(aux151,aux148)}),w-literal(aux82,1),w-literal(aux33,1),w-literal(aux84,1)}),watched-and({modulo(aux247,13,0),w-literal(aux82,1),w-literal(aux83,1),w-literal(aux32,1)}),watched-and({watched-or({modulo(aux248,13,0),gaceq(aux150,aux151)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux33,1),w-literal(aux84,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux66,1),watched-or({div(M_00010_00001, 13, aux24),modulo(aux249,13,0)})}),watched-and({w-literal(aux67,1),w-literal(aux66,1),watched-or({div(M_00010_00003, 13, aux24),modulo(aux250,13,0)})}),watched-and({w-literal(aux67,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux251,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux157),modulo(aux252,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux253,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00002,51],aux158)
weightedsumgeq([-1,1],[M_00002_00002,51],aux158)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux159)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux159)
sumleq([M_00002_00004,-51],aux160)
sumgeq([M_00002_00004,-51],aux160)
sumleq([M_00002_00006,-51],aux161)
sumgeq([M_00002_00006,-51],aux161)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux162)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux162)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux163)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux163)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux164)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux164)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux165)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux165)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux166)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux166)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux167)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux167)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux168)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux168)
weightedsumleq([-1,1],[M_00002_00009,21],aux169)
weightedsumgeq([-1,1],[M_00002_00009,21],aux169)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux170)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux170)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux171)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux171)
weightedsumleq([-1,1],[M_00002_00007,21],aux172)
weightedsumgeq([-1,1],[M_00002_00007,21],aux172)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux173)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux173)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux174)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux174)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux175)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux175)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux176)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux176)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux177)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux177)
weightedsumleq([-1,1],[M_00003_00009,11],aux178)
weightedsumgeq([-1,1],[M_00003_00009,11],aux178)
weightedsumleq([-1,1],[M_00003_00007,11],aux179)
weightedsumgeq([-1,1],[M_00003_00007,11],aux179)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux180)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux180)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux181)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux181)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux182)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux182)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux183)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux183)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux184)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux184)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux185)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux185)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux186)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux186)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux187)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux187)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux188)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux188)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux189)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux189)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux190)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux190)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux191)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux191)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux192)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux192)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux193)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux193)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux194)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux194)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux195)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux195)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux196)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux196)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux197)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux197)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux198)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux198)
weightedsumleq([-1,1],[M_00004_00009,-1],aux199)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux199)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux200)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux200)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux201)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux201)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux202)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux202)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux203)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux203)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux204)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux204)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux205)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux205)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux206)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux206)
weightedsumleq([1,-1],[-1,M_00005_00008],aux207)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux207)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux208)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux208)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux209)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux209)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux210)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux210)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux211)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux211)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux212)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux212)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux213)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux213)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux214)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux214)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux215)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux215)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux216)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux216)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux217)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux217)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux218)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux218)
weightedsumleq([1,-1],[-1,M_00006_00007],aux219)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux219)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux220)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux220)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux221)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux221)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux222)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux222)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux223)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux223)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux224)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux224)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux225)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux225)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux226)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux226)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux227)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux227)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux228)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux228)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux229)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux229)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux230)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux230)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux231)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux231)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux232)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux232)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux233)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux233)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux234)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux234)
weightedsumleq([-1,1],[M_00007_00006,-1],aux235)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux235)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux236)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux236)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux237)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux237)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux238)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux238)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux239)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux239)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux240)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux240)
weightedsumleq([-1,1],[M_00008_00005,-1],aux241)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux241)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux242)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux242)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux243)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux243)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux244)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux244)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux245)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux245)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux246)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux246)
weightedsumleq([1,-1],[-1,M_00009_00004],aux247)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux247)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux248)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux248)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux249)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux249)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux250)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux250)
weightedsumleq([-1,1],[M_00010_00003,-1],aux251)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux251)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux252)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux252)
weightedsumleq([-1,1],[M_00011_00002,-1],aux253)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux253)
**EOF**
