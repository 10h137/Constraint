MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 219
# CSE_active_eliminated_expressions = 1336
# CSE_active_total_size = 657
**VARIABLES**
DISCRETE M_00002_00001 #
{9..10}
DISCRETE M_00002_00002 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00005 #
{13..38}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00002_00006 #
{7..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [7,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00002_00007 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00008 #
{26..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00002_00009 #
{8..26}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [8,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00002_00010 #
{3..21}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [3,3,5,5,7,10,13,13,21,21])
**VARIABLES**
DISCRETE M_00002_00011 #
{21..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [21,21,24,24])
**VARIABLES**
DISCRETE M_00002_00012 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00012, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00003_00001 #
{7..10}
DISCRETE M_00003_00002 #
{28..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00003_00006 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00008 #
{8..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [8,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00003_00009 #
{3..26}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [3,3,5,5,7,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00003_00010 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00003_00011 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00003_00012 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00004_00001 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00004_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00005 #
{7..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00004_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00008 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00004_00009 #
{3..26}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [3,3,5,5,7,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00004_00010 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00004_00011 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00005_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00005_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00005_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00008 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00005_00009 #
{3..26}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [3,3,5,5,7,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00005_00010 #
{3..24}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [3,3,5,5,7,10,13,13,21,21,24,24])
**VARIABLES**
DISCRETE M_00006_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00006_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00008 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00006_00009 #
{3..26}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [3,3,5,5,7,10,13,13,21,21,24,24,26,26])
**VARIABLES**
DISCRETE M_00007_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00007_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00007_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00007_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00007_00008 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00008_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00008_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00008_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00008_00007 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00009_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00009_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00009_00006 #
{3..33}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33])
**VARIABLES**
DISCRETE M_00010_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00010_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00010_00005 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00011_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00011_00004 #
{3..38}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38])
**VARIABLES**
DISCRETE M_00012_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00012_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00012_00003 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00013_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00013_00002 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
DISCRETE M_00014_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [3,3,5,5,7,10,13,13,21,21,24,24,26,26,28,28,33,33,38,38,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux14 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux15 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..2}
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux19 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00012/13)
BOOL aux20 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
BOOL aux21 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{0..2}
BOOL aux24 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{0..2}
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
DISCRETE aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
BOOL aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010/13)
BOOL aux31 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux32 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{1..2}
DISCRETE aux33 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..2}
DISCRETE aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..2}
BOOL aux35 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux37 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux38 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux41 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux44 #Active-CSE: 18 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux45 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux47 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux48 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
BOOL aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
BOOL aux52 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux53 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux54 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux55 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux56 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux57 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux58 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux60 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux61 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux64 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux65 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux67 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux68 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux69 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux74 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux75 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..2}
BOOL aux76 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux78 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00012/13)
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002/13)
{2..3}
DISCRETE aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux82 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
BOOL aux83 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
BOOL aux84 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux85 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{0..2}
BOOL aux88 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{0..2}
DISCRETE aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..2}
DISCRETE aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux93 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux94 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux95 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux98 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux99 #Active-CSE: 20 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux100 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux101 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux102 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux105 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux106 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux107 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux108 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux110 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{0..2}
DISCRETE aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..2}
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux114 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux117 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux120 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..2}
BOOL aux121 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux124 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
DISCRETE aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..2}
DISCRETE aux129 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{0..2}
BOOL aux131 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
BOOL aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00011/13)
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux135 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux136 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux137 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux138 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux139 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux140 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux142 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux143 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux146 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..2}
DISCRETE aux147 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux148 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux149 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux150 #Active-CSE: 19 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux151 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{0..2}
DISCRETE aux152 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..2}
DISCRETE aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux154 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux155 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux156 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux157 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux158 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux159 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux160 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux161 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux162 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux163 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..2}
DISCRETE aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{0..2}
BOOL aux165 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux166 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux167 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux168 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux169 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
DISCRETE aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..2}
BOOL aux171 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux172 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux173 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux174 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux175 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux176 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux177 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..2}
DISCRETE aux178 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..2}
DISCRETE aux179 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
DISCRETE aux180 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
DISCRETE aux181 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..2}
BOOL aux182 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux183 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux184 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux185 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux186 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux187 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux188 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux189 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..2}
DISCRETE aux190 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{0..2}
DISCRETE aux191 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux192 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux193 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux194 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux196 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux197 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux198 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..2}
DISCRETE aux199 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..2}
DISCRETE aux200 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..2}
DISCRETE aux201 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux202 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..2}
DISCRETE aux203 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux204 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux205 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux206 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux207 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux208 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux209 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux210 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux211 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux212 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux214 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
DISCRETE aux215 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux216 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..2}
BOOL aux217 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux218 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..2}
BOOL aux219 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux220 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux221 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux222 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{0..2}
DISCRETE aux223 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux224 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
DISCRETE aux225 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux226 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00011/13)
BOOL aux227 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux228 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux229 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux230 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux231 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux232 #
{0..3}
DISCRETE aux233 #( - M_00002_00005 + M_00002_00008)
{-12..13}
**CONSTRAINTS**
w-inintervalset(aux233, [-12,-12,-10,-10,-7,-7,-5,-5,-2,-2,0,0,2,2,4,5,7,7,9,9,12,13])
**VARIABLES**
DISCRETE aux234 #(M_00002_00004 + -51)
{-44..-13}
**CONSTRAINTS**
w-inintervalset(aux234, [-44,-41,-38,-38,-30,-30,-27,-27,-25,-25,-23,-23,-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux235 #( - M_00002_00012 + 5)
{-19..2}
**CONSTRAINTS**
w-inintervalset(aux235, [-19,-19,-16,-16,-8,-8,-5,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux236 #( - M_00002_00006 + M_00002_00009)
{-18..13}
**CONSTRAINTS**
w-inintervalset(aux236, [-18,-11,-8,-8,-5,6,8,8,11,13])
**VARIABLES**
DISCRETE aux237 #( - M_00002_00008 + M_00002_00011)
{-12..-2}
**CONSTRAINTS**
w-inintervalset(aux237, [-12,-12,-9,-9,-7,-7,-5,-4,-2,-2])
**VARIABLES**
DISCRETE aux238 #( - M_00002_00001 + M_00002_00004)
{-2..28}
**CONSTRAINTS**
w-inintervalset(aux238, [-2,1,3,4,11,12,14,19,23,24,28,28])
**VARIABLES**
DISCRETE aux239 #( - M_00002_00009 + M_00002_00010)
{-23..13}
**CONSTRAINTS**
w-inintervalset(aux239, [-23,-23,-21,-21,-19,-10,-8,5,8,8,11,13])
**VARIABLES**
DISCRETE aux240 #( - M_00002_00010 + M_00002_00011)
{3..18}
**CONSTRAINTS**
w-inintervalset(aux240, [3,3,8,8,11,18])
**VARIABLES**
DISCRETE aux241 #( - M_00002_00009 + M_00002_00012)
{-23..-2}
**CONSTRAINTS**
w-inintervalset(aux241, [-23,-23,-21,-21,-19,-10,-8,-2])
**VARIABLES**
DISCRETE aux242 #( - M_00002_00011 + M_00002_00012)
{-21..3}
**CONSTRAINTS**
w-inintervalset(aux242, [-21,-21,-19,-11,-8,-8,-3,-3,0,0,3,3])
**VARIABLES**
DISCRETE aux243 #( - M_00002_00008 + M_00002_00009)
{-25..-7}
**CONSTRAINTS**
w-inintervalset(aux243, [-25,-23,-20,-15,-13,-12,-9,-9,-7,-7])
**VARIABLES**
DISCRETE aux244 #( - M_00002_00002 + M_00002_00005)
{-25..10}
**CONSTRAINTS**
w-inintervalset(aux244, [-25,-25,-20,-20,-17,-17,-15,-14,-12,-12,-10,-9,-7,-7,-5,-4,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux245 #( - M_00002_00002 + 51)
{13..23}
**CONSTRAINTS**
w-inintervalset(aux245, [13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux246 #(M_00002_00006 + -51)
{-44..-25}
**CONSTRAINTS**
w-inintervalset(aux246, [-44,-41,-38,-38,-30,-30,-27,-27,-25,-25])
**VARIABLES**
DISCRETE aux247 #( - M_00002_00004 + M_00002_00005)
{-25..31}
**CONSTRAINTS**
w-inintervalset(aux247, [-25,-25,-20,-20,-17,-17,-15,-7,-5,-2,0,0,2,21,23,26,28,31])
**VARIABLES**
DISCRETE aux248 #( - M_00002_00005 + M_00002_00006)
{-25..-6}
**CONSTRAINTS**
w-inintervalset(aux248, [-25,-23,-21,-11,-9,-6])
**VARIABLES**
DISCRETE aux249 #( - M_00002_00007 + M_00002_00008)
{-7..26}
**CONSTRAINTS**
w-inintervalset(aux249, [-7,-7,-5,-5,-2,-2,0,0,2,2,4,5,7,7,9,9,12,13,15,21,23,26])
**VARIABLES**
DISCRETE aux250 #( - M_00002_00007 + M_00002_00010)
{-12..14}
**CONSTRAINTS**
w-inintervalset(aux250, [-12,-10,-8,6,8,8,11,14])
**VARIABLES**
DISCRETE aux251 #( - M_00002_00010 + 5)
{-16..2}
**CONSTRAINTS**
w-inintervalset(aux251, [-16,-16,-8,-8,-5,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux252 #( - M_00002_00006 + M_00002_00007)
{-19..26}
**CONSTRAINTS**
w-inintervalset(aux252, [-19,-11,-8,-8,-6,9,11,21,23,26])
**VARIABLES**
DISCRETE aux253 #( - M_00002_00004 + M_00002_00007)
{-5..26}
**CONSTRAINTS**
w-inintervalset(aux253, [-5,9,11,21,23,26])
**VARIABLES**
DISCRETE aux254 #( - M_00003_00001 + M_00003_00004)
{-3..31}
**CONSTRAINTS**
w-inintervalset(aux254, [-3,6,11,21,23,26,28,31])
**VARIABLES**
DISCRETE aux255 #( - M_00003_00003 + M_00003_00006)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux255, [-44,-41,-38,-38,-31,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux256 #( - M_00003_00001 + M_00003_00002)
{18..42}
**CONSTRAINTS**
w-inintervalset(aux256, [18,21,23,26,28,31,41,42])
**VARIABLES**
DISCRETE aux257 #( - M_00003_00006 + M_00003_00007)
{-23..26}
**CONSTRAINTS**
w-inintervalset(aux257, [-23,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux258 #( - M_00003_00004 + M_00003_00007)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux258, [-31,-28,-26,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux259 #( - M_00003_00003 + M_00003_00004)
{-44..31}
**CONSTRAINTS**
w-inintervalset(aux259, [-44,-41,-38,-38,-31,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux260 #( - M_00003_00002 + M_00003_00003)
{-41..23}
**CONSTRAINTS**
w-inintervalset(aux260, [-41,-41,-38,-38,-31,-23,-21,-17,-15,-12,-10,-9,-7,-7,-5,-4,-2,-2,0,0,5,5,10,10,13,13,18,18,23,23])
**VARIABLES**
DISCRETE aux261 #( - M_00003_00005 + M_00003_00008)
{-30..20}
**CONSTRAINTS**
w-inintervalset(aux261, [-30,-28,-25,-23,-20,-7,-5,9,11,20])
**VARIABLES**
DISCRETE aux262 #( - M_00003_00006 + M_00003_00009)
{-30..19}
**CONSTRAINTS**
w-inintervalset(aux262, [-30,-30,-28,-28,-26,-23,-21,6,8,8,11,19])
**VARIABLES**
DISCRETE aux263 #( - M_00003_00012 + -1)
{-25..-4}
**CONSTRAINTS**
w-inintervalset(aux263, [-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux264 #( - M_00003_00009 + M_00003_00010)
{-23..21}
**CONSTRAINTS**
w-inintervalset(aux264, [-23,-23,-21,-21,-19,-10,-8,8,10,19,21,21])
**VARIABLES**
DISCRETE aux265 #( - M_00003_00010 + M_00003_00011)
{-21..21}
**CONSTRAINTS**
w-inintervalset(aux265, [-21,-21,-19,-10,-8,8,10,19,21,21])
**VARIABLES**
DISCRETE aux266 #( - M_00003_00009 + M_00003_00012)
{-23..2}
**CONSTRAINTS**
w-inintervalset(aux266, [-23,-23,-21,-21,-19,-10,-8,2])
**VARIABLES**
DISCRETE aux267 #( - M_00003_00011 + M_00003_00012)
{-21..3}
**CONSTRAINTS**
w-inintervalset(aux267, [-21,-21,-19,-10,-8,3])
**VARIABLES**
DISCRETE aux268 #( - M_00003_00008 + M_00003_00009)
{-30..13}
**CONSTRAINTS**
w-inintervalset(aux268, [-30,-30,-28,-28,-26,-23,-21,5,8,8,11,13])
**VARIABLES**
DISCRETE aux269 #( - M_00003_00008 + M_00003_00011)
{-30..16}
**CONSTRAINTS**
w-inintervalset(aux269, [-30,-30,-28,-28,-26,-23,-21,5,8,8,11,16])
**VARIABLES**
DISCRETE aux270 #( - M_00003_00002 + M_00003_00005)
{-44..10}
**CONSTRAINTS**
w-inintervalset(aux270, [-44,-41,-38,-38,-31,-23,-21,-17,-15,-12,-10,-9,-7,-7,-5,-4,-2,-2,0,0,5,5,10,10])
**VARIABLES**
DISCRETE aux271 #( - M_00003_00004 + M_00003_00005)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux271, [-31,-28,-26,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux272 #( - M_00003_00005 + M_00003_00006)
{-31..26}
**CONSTRAINTS**
w-inintervalset(aux272, [-31,-28,-26,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux273 #( - M_00003_00007 + M_00003_00008)
{-25..30}
**CONSTRAINTS**
w-inintervalset(aux273, [-25,-23,-20,-11,-9,-7,-5,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux274 #( - M_00003_00007 + M_00003_00010)
{-30..18}
**CONSTRAINTS**
w-inintervalset(aux274, [-30,-30,-28,-28,-26,-23,-21,8,10,18])
**VARIABLES**
DISCRETE aux275 #( - M_00004_00002 + M_00004_00005)
{-44..26}
**CONSTRAINTS**
w-inintervalset(aux275, [-44,-41,-38,-38,-31,-23,-21,21,23,26])
**VARIABLES**
DISCRETE aux276 #( - M_00004_00005 + M_00004_00006)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux276, [-35,-35,-33,-33,-31,-28,-26,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux277 #( - M_00004_00003 + M_00004_00006)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux277, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux278 #( - M_00004_00002 + M_00004_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux278, [-44,-41,-38,-38,-31,-23,-21,21,23,31,38,38,41,44])
**VARIABLES**
DISCRETE aux279 #( - M_00004_00001 + M_00004_00002)
{-10..44}
**CONSTRAINTS**
w-inintervalset(aux279, [-10,21,23,31,38,38,41,44])
**VARIABLES**
DISCRETE aux280 #( - M_00004_00004 + M_00004_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux280, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux281 #( - M_00004_00005 + M_00004_00008)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux281, [-35,-35,-33,-33,-31,-28,-26,-23,-21,9,11,21,23,26])
**VARIABLES**
DISCRETE aux282 #( - M_00004_00011 + -1)
{-25..-4}
**CONSTRAINTS**
w-inintervalset(aux282, [-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux283 #( - M_00004_00009 + M_00004_00010)
{-23..21}
**CONSTRAINTS**
w-inintervalset(aux283, [-23,-23,-21,-21,-19,-10,-8,8,10,19,21,21])
**VARIABLES**
DISCRETE aux284 #( - M_00004_00010 + M_00004_00011)
{-21..21}
**CONSTRAINTS**
w-inintervalset(aux284, [-21,-21,-19,-10,-8,8,10,19,21,21])
**VARIABLES**
DISCRETE aux285 #( - M_00004_00008 + M_00004_00009)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux285, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21])
**VARIABLES**
DISCRETE aux286 #( - M_00004_00008 + M_00004_00011)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux286, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21])
**VARIABLES**
DISCRETE aux287 #( - M_00004_00007 + M_00004_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux287, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux288 #( - M_00004_00007 + M_00004_00010)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux288, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21])
**VARIABLES**
DISCRETE aux289 #( - M_00004_00001 + M_00004_00004)
{-31..31}
**CONSTRAINTS**
w-inintervalset(aux289, [-31,-28,-26,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux290 #( - M_00004_00003 + M_00004_00004)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux290, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux291 #( - M_00004_00004 + M_00004_00005)
{-31..35}
**CONSTRAINTS**
w-inintervalset(aux291, [-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux292 #( - M_00004_00006 + M_00004_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux292, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux293 #( - M_00004_00006 + M_00004_00009)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux293, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21])
**VARIABLES**
DISCRETE aux294 #( - M_00005_00003 + M_00005_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux294, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux295 #( - M_00005_00005 + M_00005_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux295, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux296 #( - M_00005_00005 + M_00005_00008)
{-35..26}
**CONSTRAINTS**
w-inintervalset(aux296, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26])
**VARIABLES**
DISCRETE aux297 #( - M_00005_00001 + M_00005_00004)
{-44..35}
**CONSTRAINTS**
w-inintervalset(aux297, [-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux298 #( - M_00005_00004 + M_00005_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux298, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux299 #( - M_00005_00002 + M_00005_00005)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux299, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux300 #( - M_00005_00001 + M_00005_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux300, [-44,-41,-38,-38,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44])
**VARIABLES**
DISCRETE aux301 #( - M_00005_00003 + M_00005_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux301, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux302 #( - M_00005_00004 + M_00005_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux302, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux303 #(-1 - M_00005_00010)
{-25..-4}
**CONSTRAINTS**
w-inintervalset(aux303, [-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux304 #( - M_00005_00007 + M_00005_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux304, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux305 #( - M_00005_00008 + M_00005_00009)
{-30..23}
**CONSTRAINTS**
w-inintervalset(aux305, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21,23,23])
**VARIABLES**
DISCRETE aux306 #( - M_00005_00007 + M_00005_00010)
{-30..21}
**CONSTRAINTS**
w-inintervalset(aux306, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21])
**VARIABLES**
DISCRETE aux307 #( - M_00005_00009 + M_00005_00010)
{-23..21}
**CONSTRAINTS**
w-inintervalset(aux307, [-23,-23,-21,-21,-19,-10,-8,8,10,19,21,21])
**VARIABLES**
DISCRETE aux308 #( - M_00005_00006 + M_00005_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux308, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux309 #( - M_00005_00006 + M_00005_00009)
{-30..23}
**CONSTRAINTS**
w-inintervalset(aux309, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21,23,23])
**VARIABLES**
DISCRETE aux310 #( - M_00005_00002 + M_00005_00003)
{-48..44}
**CONSTRAINTS**
w-inintervalset(aux310, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,38,38,41,44])
**VARIABLES**
DISCRETE aux311 #( - M_00006_00002 + M_00006_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux311, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux312 #( - M_00006_00003 + M_00006_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux312, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux313 #( - M_00006_00001 + M_00006_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux313, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux314 #(-1 - M_00006_00009)
{-27..-4}
**CONSTRAINTS**
w-inintervalset(aux314, [-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux315 #( - M_00006_00006 + M_00006_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux315, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux316 #( - M_00006_00007 + M_00006_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux316, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux317 #( - M_00006_00006 + M_00006_00009)
{-30..23}
**CONSTRAINTS**
w-inintervalset(aux317, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21,23,23])
**VARIABLES**
DISCRETE aux318 #( - M_00006_00008 + M_00006_00009)
{-30..23}
**CONSTRAINTS**
w-inintervalset(aux318, [-30,-30,-28,-28,-26,-23,-21,8,10,19,21,21,23,23])
**VARIABLES**
DISCRETE aux319 #( - M_00006_00005 + M_00006_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux319, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux320 #( - M_00006_00005 + M_00006_00008)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux320, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux321 #( - M_00006_00004 + M_00006_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux321, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux322 #( - M_00006_00004 + M_00006_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux322, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux323 #( - M_00006_00001 + M_00006_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux323, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux324 #( - M_00006_00003 + M_00006_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux324, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux325 #( - M_00006_00002 + M_00006_00005)
{-48..31}
**CONSTRAINTS**
w-inintervalset(aux325, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31])
**VARIABLES**
DISCRETE aux326 #( - M_00007_00007 + M_00007_00008)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux326, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux327 #( - M_00007_00005 + M_00007_00008)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux327, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux328 #( - M_00007_00008 + -1)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux328, [-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux329 #( - M_00007_00001 + M_00007_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux329, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux330 #( - M_00007_00003 + M_00007_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux330, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux331 #( - M_00007_00002 + M_00007_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux331, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux332 #( - M_00007_00004 + M_00007_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux332, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux333 #( - M_00007_00005 + M_00007_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux333, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux334 #( - M_00007_00003 + M_00007_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux334, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux335 #( - M_00007_00001 + M_00007_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux335, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux336 #( - M_00007_00002 + M_00007_00005)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux336, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux337 #( - M_00007_00006 + M_00007_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux337, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux338 #( - M_00007_00004 + M_00007_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux338, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux339 #( - M_00008_00007 + -1)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux339, [-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux340 #( - M_00008_00002 + M_00008_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux340, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux341 #( - M_00008_00003 + M_00008_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux341, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux342 #( - M_00008_00004 + M_00008_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux342, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux343 #( - M_00008_00001 + M_00008_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux343, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux344 #( - M_00008_00005 + M_00008_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux344, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux345 #( - M_00008_00006 + M_00008_00007)
{-30..30}
**CONSTRAINTS**
w-inintervalset(aux345, [-30,-30,-28,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux346 #( - M_00008_00002 + M_00008_00005)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux346, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux347 #( - M_00008_00003 + M_00008_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux347, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux348 #( - M_00008_00004 + M_00008_00007)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux348, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux349 #( - M_00008_00001 + M_00008_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux349, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux350 #( - M_00009_00004 + M_00009_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux350, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux351 #( - M_00009_00001 + M_00009_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux351, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux352 #( - M_00009_00005 + M_00009_00006)
{-35..30}
**CONSTRAINTS**
w-inintervalset(aux352, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux353 #( - M_00009_00002 + M_00009_00005)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux353, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux354 #( - M_00009_00003 + M_00009_00006)
{-48..30}
**CONSTRAINTS**
w-inintervalset(aux354, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,28,30,30])
**VARIABLES**
DISCRETE aux355 #( - M_00009_00001 + M_00009_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux355, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux356 #(-1 - M_00009_00006)
{-34..-4}
**CONSTRAINTS**
w-inintervalset(aux356, [-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux357 #( - M_00009_00002 + M_00009_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux357, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux358 #( - M_00009_00003 + M_00009_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux358, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux359 #( - M_00010_00003 + M_00010_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux359, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux360 #( - M_00010_00004 + M_00010_00005)
{-35..35}
**CONSTRAINTS**
w-inintervalset(aux360, [-35,-35,-33,-33,-31,-28,-26,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux361 #( - M_00010_00002 + M_00010_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux361, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux362 #( - M_00010_00002 + M_00010_00005)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux362, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux363 #( - M_00010_00001 + M_00010_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux363, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux364 #( - M_00010_00001 + M_00010_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux364, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux365 #( - M_00010_00005 + -1)
{-39..-4}
**CONSTRAINTS**
w-inintervalset(aux365, [-39,-39,-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux366 #( - M_00011_00002 + M_00011_00003)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux366, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux367 #( - M_00011_00003 + M_00011_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux367, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux368 #( - M_00011_00004 + -1)
{-39..-4}
**CONSTRAINTS**
w-inintervalset(aux368, [-39,-39,-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux369 #( - M_00011_00001 + M_00011_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux369, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux370 #( - M_00011_00001 + M_00011_00004)
{-48..35}
**CONSTRAINTS**
w-inintervalset(aux370, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,26,28,31,33,33,35,35])
**VARIABLES**
DISCRETE aux371 #( - M_00012_00001 + M_00012_00002)
{-48..48}
**CONSTRAINTS**
w-inintervalset(aux371, [-48,-48,-46,-46,-44,-41,-38,-38,-35,-35,-33,-33,-31,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux372 #( - M_00012_00002 + M_00012_00003)
{-30..48}
**CONSTRAINTS**
w-inintervalset(aux372, [-30,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
DISCRETE aux373 #( - M_00012_00003 + -1)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux373, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux374 #(-1 - M_00013_00002)
{-52..-4}
**CONSTRAINTS**
w-inintervalset(aux374, [-52,-52,-39,-39,-34,-34,-29,-29,-27,-27,-25,-25,-22,-22,-14,-14,-11,-8,-6,-6,-4,-4])
**VARIABLES**
DISCRETE aux375 #( - M_00013_00001 + M_00013_00002)
{-30..48}
**CONSTRAINTS**
w-inintervalset(aux375, [-30,-23,-21,21,23,31,33,33,35,35,38,38,41,44,46,46,48,48])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[9, 28, 51, 10, 38, 13, 7, 33, 26, 8, 21, 24, 3, 5]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux232)
reify(gaceq(M_00002_00012,M_00003_00011), aux13)
reify(gaceq(M_00004_00006,M_00005_00006), aux14)
reify(gaceq(M_00007_00007,M_00006_00007), aux15)
div(M_00002_00008, 13, 2)
div(M_00002_00006, 13, aux17)
div(M_00002_00004, 13, aux18)
div(M_00002_00012, 13, aux19)
reify(gaceq(M_00007_00008,M_00006_00009), aux20)
reify(gaceq(M_00003_00009,M_00004_00008), aux21)
div(M_00007_00001, 13, aux22)
div(M_00007_00008, 13, aux23)
reify(gaceq(M_00004_00007,M_00005_00007), aux24)
div(M_00010_00005, 13, aux25)
div(M_00010_00001, 13, aux26)
div(M_00010_00003, 13, aux27)
reify(gaceq(M_00008_00005,M_00009_00005), aux28)
div(M_00012_00002, 13, aux29)
div(M_00002_00010, 13, aux30)
reify(gaceq(M_00005_00007,M_00006_00006), aux31)
div(M_00002_00005, 13, aux32)
div(M_00002_00007, 13, aux33)
div(M_00002_00009, 13, aux34)
reify(gaceq(M_00010_00005,M_00011_00004), aux35)
reify(gaceq(M_00010_00003,M_00009_00003), aux36)
reify(gaceq(M_00002_00008,M_00003_00008), aux37)
reify(gaceq(M_00007_00001,M_00008_00001), aux38)
reify(gaceq(M_00004_00005,M_00005_00004), aux39)
reify(gaceq(M_00010_00004,M_00009_00005), aux40)
reify(gaceq(M_00005_00001,M_00006_00001), aux41)
reify(gaceq(M_00010_00005,M_00009_00005), aux42)
reify(gaceq(M_00010_00002,M_00009_00003), aux43)
reify(gaceq(M_00003_00002,M_00004_00002), aux44)
reify(gaceq(M_00004_00006,M_00005_00005), aux45)
reify(gaceq(M_00010_00001,M_00009_00001), aux46)
reify(gaceq(M_00004_00001,M_00005_00001), aux47)
div(M_00004_00009, 13, aux48)
div(M_00004_00003, 13, aux49)
div(M_00004_00002, 13, aux50)
div(M_00004_00010, 13, aux51)
reify(gaceq(M_00007_00007,M_00006_00008), aux52)
reify(gaceq(M_00007_00002,M_00008_00002), aux53)
reify(gaceq(M_00004_00002,M_00005_00002), aux54)
reify(gaceq(M_00010_00001,M_00011_00001), aux55)
reify(gaceq(M_00003_00008,M_00004_00007), aux56)
reify(gaceq(M_00008_00002,M_00009_00002), aux57)
reify(gaceq(M_00004_00010,M_00005_00009), aux58)
div(M_00002_00011, 13, 1)
reify(gaceq(M_00004_00008,M_00005_00008), aux60)
reify(gaceq(M_00002_00008,M_00003_00007), aux61)
reify(gaceq(M_00011_00003,M_00012_00002), aux62)
reify(gaceq(M_00011_00003,M_00012_00003), aux63)
reify(gaceq(M_00002_00009,M_00003_00008), aux64)
reify(gaceq(M_00007_00006,M_00008_00005), aux65)
reify(gaceq(M_00008_00004,M_00009_00003), aux66)
reify(gaceq(M_00003_00007,M_00004_00006), aux67)
reify(gaceq(M_00003_00009,M_00004_00009), aux68)
reify(gaceq(M_00002_00006,M_00003_00005), aux69)
reify(gaceq(M_00003_00005,M_00004_00004), aux70)
reify(gaceq(M_00011_00002,M_00012_00002), aux71)
reify(gaceq(M_00011_00001,M_00012_00001), aux72)
reify(gaceq(M_00011_00004,M_00012_00003), aux73)
reify(gaceq(M_00005_00008,M_00006_00008), aux74)
div(M_00008_00004, 13, aux75)
reify(gaceq(M_00003_00011,M_00004_00010), aux76)
reify(gaceq(M_00010_00004,M_00011_00003), aux77)
reify(gaceq(M_00002_00002,M_00003_00002), aux78)
div(M_00003_00012, 13, aux79)
div(M_00003_00002, 13, aux80)
div(M_00005_00001, 13, aux81)
div(M_00005_00010, 13, aux82)
reify(gaceq(M_00002_00010,M_00003_00009), aux83)
reify(gaceq(M_00003_00004,M_00004_00004), aux84)
reify(gaceq(M_00007_00001,M_00006_00001), aux85)
div(M_00008_00001, 13, aux86)
div(M_00008_00007, 13, aux87)
reify(gaceq(M_00003_00008,M_00004_00008), aux88)
div(M_00006_00008, 13, aux89)
div(M_00006_00007, 13, aux90)
div(M_00006_00003, 13, aux91)
div(M_00006_00002, 13, aux92)
reify(gaceq(M_00003_00012,M_00004_00011), aux93)
reify(gaceq(M_00005_00002,M_00006_00002), aux94)
reify(gaceq(M_00005_00009,M_00006_00008), aux95)
reify(gaceq(M_00010_00003,M_00011_00002), aux96)
reify(gaceq(M_00010_00004,M_00011_00004), aux97)
reify(gaceq(M_00005_00010,M_00006_00009), aux98)
reify(gaceq(M_00002_00001,M_00003_00001), aux99)
reify(gaceq(M_00010_00002,M_00011_00002), aux100)
reify(gaceq(M_00010_00003,M_00011_00003), aux101)
reify(gaceq(M_00010_00004,M_00009_00004), aux102)
reify(gaceq(M_00004_00004,M_00005_00003), aux103)
reify(gaceq(M_00002_00004,M_00003_00003), aux104)
reify(gaceq(M_00002_00005,M_00003_00004), aux105)
reify(gaceq(M_00002_00010,M_00003_00010), aux106)
reify(gaceq(M_00004_00007,M_00005_00006), aux107)
reify(gaceq(M_00007_00003,M_00006_00003), aux108)
reify(gaceq(M_00005_00003,M_00006_00003), aux109)
div(M_00009_00005, 13, aux110)
div(M_00009_00003, 13, aux111)
div(M_00009_00004, 13, aux112)
div(M_00009_00002, 13, aux113)
reify(gaceq(M_00007_00006,M_00006_00007), aux114)
reify(gaceq(M_00007_00003,M_00008_00002), aux115)
reify(gaceq(M_00007_00007,M_00008_00007), aux116)
div(M_00011_00001, 13, aux117)
div(M_00011_00002, 13, aux118)
div(M_00011_00003, 13, aux119)
div(M_00011_00004, 13, aux120)
reify(gaceq(M_00003_00006,M_00004_00005), aux121)
reify(gaceq(M_00008_00006,M_00009_00006), aux122)
reify(gaceq(M_00008_00003,M_00009_00002), aux123)
reify(gaceq(M_00005_00008,M_00006_00007), aux124)
reify(gaceq(M_00010_00003,M_00009_00004), aux125)
div(M_00006_00004, 13, aux126)
div(M_00006_00005, 13, aux127)
div(M_00006_00006, 13, aux128)
div(M_00006_00001, 13, aux129)
div(M_00006_00009, 13, aux130)
reify(gaceq(M_00003_00007,M_00004_00007), aux131)
div(M_00003_00010, 13, aux132)
div(M_00003_00011, 13, aux133)
div(M_00003_00003, 13, aux134)
reify(gaceq(M_00002_00011,M_00003_00010), aux135)
reify(gaceq(M_00005_00005,M_00006_00004), aux136)
reify(gaceq(M_00002_00009,M_00003_00009), aux137)
reify(gaceq(M_00003_00005,M_00004_00005), aux138)
reify(gaceq(M_00010_00002,M_00009_00002), aux139)
reify(gaceq(M_00003_00011,M_00004_00011), aux140)
reify(gaceq(M_00003_00003,M_00004_00002), aux141)
reify(gaceq(M_00002_00007,M_00003_00006), aux142)
reify(gaceq(M_00004_00005,M_00005_00005), aux143)
reify(gaceq(M_00005_00003,M_00006_00002), aux144)
reify(gaceq(M_00005_00009,M_00006_00009), aux145)
div(M_00010_00004, 13, aux146)
div(M_00010_00002, 13, aux147)
reify(gaceq(M_00005_00006,M_00006_00006), aux148)
reify(gaceq(M_00008_00003,M_00009_00003), aux149)
reify(gaceq(M_00003_00001,M_00004_00001), aux150)
div(M_00005_00009, 13, aux151)
div(M_00005_00008, 13, aux152)
div(M_00005_00002, 13, aux153)
div(M_00005_00003, 13, aux154)
reify(gaceq(M_00004_00010,M_00005_00010), aux155)
reify(gaceq(M_00004_00003,M_00005_00002), aux156)
reify(gaceq(M_00005_00005,M_00006_00005), aux157)
reify(gaceq(M_00005_00007,M_00006_00007), aux158)
reify(gaceq(M_00004_00008,M_00005_00007), aux159)
reify(gaceq(M_00007_00003,M_00008_00003), aux160)
div(M_00007_00002, 13, aux161)
div(M_00007_00003, 13, aux162)
div(M_00007_00006, 13, aux163)
div(M_00007_00007, 13, aux164)
reify(gaceq(M_00004_00009,M_00005_00008), aux165)
reify(gaceq(M_00008_00004,M_00009_00004), aux166)
reify(gaceq(M_00008_00005,M_00009_00004), aux167)
reify(gaceq(M_00003_00010,M_00004_00010), aux168)
div(M_00007_00004, 13, aux169)
div(M_00007_00005, 13, aux170)
reify(gaceq(M_00004_00011,M_00005_00010), aux171)
reify(gaceq(M_00007_00004,M_00006_00004), aux172)
reify(gaceq(M_00003_00004,M_00004_00003), aux173)
reify(gaceq(M_00007_00004,M_00008_00003), aux174)
reify(gaceq(M_00010_00005,M_00009_00006), aux175)
reify(gaceq(M_00005_00004,M_00006_00003), aux176)
div(M_00004_00007, 13, aux177)
div(M_00004_00008, 13, aux178)
div(M_00004_00004, 13, aux179)
div(M_00004_00005, 13, aux180)
div(M_00004_00006, 13, aux181)
reify(gaceq(M_00004_00004,M_00005_00004), aux182)
reify(gaceq(M_00005_00004,M_00006_00004), aux183)
reify(gaceq(M_00008_00006,M_00009_00005), aux184)
reify(gaceq(M_00007_00003,M_00006_00004), aux185)
reify(gaceq(M_00007_00004,M_00008_00004), aux186)
reify(gaceq(M_00007_00005,M_00006_00005), aux187)
div(M_00008_00003, 13, aux188)
div(M_00008_00005, 13, aux189)
div(M_00008_00006, 13, aux190)
div(M_00008_00002, 13, aux191)
reify(gaceq(M_00007_00002,M_00006_00002), aux192)
reify(gaceq(M_00007_00008,M_00006_00008), aux193)
reify(gaceq(M_00007_00002,M_00006_00003), aux194)
reify(gaceq(M_00007_00006,M_00008_00006), aux195)
reify(gaceq(M_00005_00006,M_00006_00005), aux196)
reify(gaceq(M_00002_00007,M_00003_00007), aux197)
div(M_00003_00009, 13, aux198)
div(M_00003_00007, 13, aux199)
div(M_00003_00008, 13, aux200)
div(M_00003_00004, 13, aux201)
div(M_00003_00006, 13, aux202)
div(M_00003_00005, 13, aux203)
reify(gaceq(M_00007_00007,M_00008_00006), aux204)
reify(gaceq(M_00002_00006,M_00003_00006), aux205)
reify(gaceq(M_00008_00001,M_00009_00001), aux206)
reify(gaceq(M_00007_00006,M_00006_00006), aux207)
reify(gaceq(M_00004_00003,M_00005_00003), aux208)
reify(gaceq(M_00007_00005,M_00008_00004), aux209)
reify(gaceq(M_00007_00005,M_00008_00005), aux210)
reify(gaceq(M_00002_00011,M_00003_00011), aux211)
reify(gaceq(M_00012_00001,M_00013_00001), aux212)
reify(gaceq(M_00012_00003,M_00013_00002), aux213)
div(M_00005_00004, 13, aux214)
div(M_00005_00005, 13, aux215)
div(M_00005_00006, 13, aux216)
reify(gaceq(M_00002_00004,M_00003_00004), aux217)
div(M_00005_00007, 13, aux218)
reify(gaceq(M_00007_00008,M_00008_00007), aux219)
reify(gaceq(M_00002_00005,M_00003_00005), aux220)
reify(gaceq(M_00007_00005,M_00006_00006), aux221)
div(M_00009_00006, 13, aux222)
div(M_00009_00001, 13, aux223)
reify(gaceq(M_00008_00007,M_00009_00006), aux224)
div(M_00004_00001, 13, aux225)
div(M_00004_00011, 13, aux226)
reify(gaceq(M_00004_00009,M_00005_00009), aux227)
reify(gaceq(M_00007_00004,M_00006_00005), aux228)
reify(gaceq(M_00003_00010,M_00004_00009), aux229)
reify(gaceq(M_00003_00003,M_00004_00003), aux230)
reify(gaceq(M_00003_00006,M_00004_00006), aux231)
gccweak([M_00002_00001, M_00002_00002, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,7),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,10),w-literal(M_00002_00002,28),w-literal(M_00002_00004,38),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,26),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,33),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26),w-literal(M_00002_00010,3),w-literal(M_00002_00011,21),w-literal(M_00002_00012,24)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26),w-literal(M_00002_00010,8),w-literal(M_00002_00011,21),w-literal(M_00002_00012,24)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26),w-literal(M_00002_00010,8),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,7),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,8),w-literal(M_00002_00008,33),w-literal(M_00002_00009,26),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,28),w-literal(M_00002_00004,10),w-literal(M_00002_00005,38),w-literal(M_00002_00006,13),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)}),watched-and({w-literal(M_00002_00001,9),w-literal(M_00002_00002,38),w-literal(M_00002_00004,10),w-literal(M_00002_00005,13),w-literal(M_00002_00006,7),w-literal(M_00002_00007,33),w-literal(M_00002_00008,26),w-literal(M_00002_00009,8),w-literal(M_00002_00010,21),w-literal(M_00002_00011,24),w-literal(M_00002_00012,3)})})
watched-or({watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux205,1),w-literal(aux197,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux233,13,0),w-literal(aux32,2)})}),watched-and({w-literal(M_00003_00012,5),modulo(aux234,13,0),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux104,1),w-literal(aux105,1),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),watched-or({w-literal(aux19,0),modulo(aux235,13,0)}),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux137,1),w-literal(aux106,1),w-literal(aux211,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux197,1),w-literal(aux37,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux236,13,0),gaceq(aux17,aux34)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux137,1),w-literal(aux106,1),gaceq(M_00002_00011,M_00003_00008),w-literal(aux13,1),modulo(aux237,13,0)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux78,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux105,1),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux238,13,0),div(M_00002_00001, 13, aux18)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux239,13,0),gaceq(aux34,aux30)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux137,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux240,13,0),w-literal(aux30,1)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux106,1),w-literal(aux211,1),gaceq(M_00002_00012,M_00003_00009),watched-or({modulo(aux241,13,0),gaceq(aux34,aux19)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux137,1),w-literal(aux106,1),w-literal(aux13,1),watched-or({modulo(aux242,13,0),w-literal(aux19,1)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux243,13,0),w-literal(aux34,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux217,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux244,13,0),div(M_00002_00002, 13, aux32)})}),watched-and({w-literal(M_00003_00002,51),w-literal(M_00003_00012,5),modulo(aux245,13,0),w-literal(aux99,1),w-literal(aux104,1),w-literal(aux105,1),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1)}),watched-and({w-literal(M_00003_00012,5),modulo(aux246,13,0),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux105,1),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux247,13,0),gaceq(aux18,aux32)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux69,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux248,13,0),gaceq(aux32,aux17)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux249,13,0),w-literal(aux33,2)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux37,1),w-literal(aux137,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux250,13,0),gaceq(aux33,aux30)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00010,5),watched-or({w-literal(aux30,0),modulo(aux251,13,0)}),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux205,1),w-literal(aux197,1),w-literal(aux37,1),w-literal(aux137,1),w-literal(aux211,1),gaceq(M_00002_00012,M_00003_00012)}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux217,1),w-literal(aux220,1),w-literal(aux142,1),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux252,13,0),gaceq(aux17,aux33)})}),watched-and({w-literal(M_00003_00003,51),w-literal(M_00003_00012,5),w-literal(aux99,1),w-literal(aux78,1),w-literal(aux220,1),w-literal(aux205,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux61,1),w-literal(aux64,1),w-literal(aux83,1),w-literal(aux135,1),w-literal(aux13,1),watched-or({modulo(aux253,13,0),gaceq(aux18,aux33)})})})
watched-or({watched-and({w-literal(aux44,1),w-literal(aux230,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux70,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux254,13,0),div(M_00003_00001, 13, aux201)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux84,1),w-literal(aux138,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux255,13,0),gaceq(aux134,aux202)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux141,1),w-literal(aux173,1),w-literal(aux70,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),modulo(aux256,13,0)}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux257,13,0),gaceq(aux202,aux199)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux138,1),w-literal(aux231,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux258,13,0),gaceq(aux201,aux199)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux173,1),w-literal(aux70,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux259,13,0),gaceq(aux134,aux201)})}),watched-and({w-literal(aux150,1),w-literal(aux141,1),w-literal(aux173,1),w-literal(aux70,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux260,13,0),gaceq(aux80,aux134)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux231,1),w-literal(aux131,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux261,13,0),gaceq(aux203,aux200)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux131,1),w-literal(aux88,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux262,13,0),gaceq(aux202,aux198)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux168,1),w-literal(aux140,1),modulo(aux263,13,0)}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux88,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux264,13,0),gaceq(aux198,aux132)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux265,13,0),gaceq(aux132,aux133)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux88,1),w-literal(aux168,1),w-literal(aux140,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux266,13,0),gaceq(aux198,aux79)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux88,1),w-literal(aux68,1),w-literal(aux168,1),w-literal(aux93,1),watched-or({modulo(aux267,13,0),gaceq(aux133,aux79)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux268,13,0),gaceq(aux200,aux198)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux131,1),w-literal(aux68,1),w-literal(aux168,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux93,1),watched-or({modulo(aux269,13,0),gaceq(aux200,aux133)})}),watched-and({w-literal(aux150,1),w-literal(aux230,1),w-literal(aux84,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux270,13,0),gaceq(aux80,aux203)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux70,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux271,13,0),gaceq(aux201,aux203)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux121,1),w-literal(aux67,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux272,13,0),gaceq(aux203,aux202)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux56,1),w-literal(aux21,1),w-literal(aux229,1),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux273,13,0),gaceq(aux199,aux200)})}),watched-and({w-literal(aux150,1),w-literal(aux44,1),w-literal(aux230,1),w-literal(aux84,1),w-literal(aux138,1),w-literal(aux231,1),w-literal(aux88,1),w-literal(aux68,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux76,1),w-literal(aux93,1),watched-or({modulo(aux274,13,0),gaceq(aux199,aux132)})})})
watched-or({watched-and({w-literal(aux47,1),w-literal(aux208,1),w-literal(aux182,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux50,aux180),modulo(aux275,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux180,aux181),modulo(aux276,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux182,1),w-literal(aux143,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux49,aux181),modulo(aux277,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux156,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux50,aux49),modulo(aux278,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux156,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux225,aux50),modulo(aux279,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux143,1),w-literal(aux14,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux179,aux177),modulo(aux280,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux14,1),w-literal(aux24,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux180,aux178),modulo(aux281,13,0)})}),watched-and({modulo(aux282,13,0),w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux227,1),w-literal(aux155,1)}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux48,aux51),modulo(aux283,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux24,1),w-literal(aux60,1),w-literal(aux227,1),w-literal(aux171,1),watched-or({gaceq(aux51,aux226),modulo(aux284,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux24,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux178,aux48),modulo(aux285,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux24,1),w-literal(aux227,1),w-literal(aux155,1),gaceq(M_00004_00011,M_00005_00008),watched-or({gaceq(aux178,aux226),modulo(aux286,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux177,aux178),modulo(aux287,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux14,1),w-literal(aux60,1),w-literal(aux227,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux171,1),watched-or({gaceq(aux177,aux51),modulo(aux288,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux208,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux39,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux225,aux179),modulo(aux289,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux103,1),w-literal(aux39,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux49,aux179),modulo(aux290,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux39,1),w-literal(aux45,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux179,aux180),modulo(aux291,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux107,1),w-literal(aux159,1),w-literal(aux165,1),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux181,aux177),modulo(aux292,13,0)})}),watched-and({w-literal(aux47,1),w-literal(aux54,1),w-literal(aux208,1),w-literal(aux182,1),w-literal(aux143,1),w-literal(aux24,1),w-literal(aux60,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux58,1),w-literal(aux171,1),watched-or({gaceq(aux181,aux48),modulo(aux293,13,0)})})})
watched-or({watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux176,1),w-literal(aux136,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux294,13,0),gaceq(aux154,aux214)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux295,13,0),gaceq(aux215,aux216)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux148,1),w-literal(aux158,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux296,13,0),gaceq(aux215,aux152)})}),watched-and({w-literal(aux94,1),w-literal(aux109,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux136,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux297,13,0),gaceq(aux81,aux214)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux136,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux298,13,0),gaceq(aux214,aux215)})}),watched-and({w-literal(aux41,1),w-literal(aux109,1),w-literal(aux183,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux299,13,0),gaceq(aux153,aux215)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux144,1),w-literal(aux176,1),w-literal(aux136,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux300,13,0),gaceq(aux81,aux153)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux183,1),w-literal(aux157,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux301,13,0),gaceq(aux154,aux216)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux157,1),w-literal(aux148,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux302,13,0),gaceq(aux214,aux218)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux158,1),w-literal(aux74,1),w-literal(aux145,1),modulo(aux303,13,0)}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux304,13,0),gaceq(aux218,aux152)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux158,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux305,13,0),gaceq(aux152,aux151)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux74,1),w-literal(aux145,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux306,13,0),gaceq(aux218,aux82)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux158,1),w-literal(aux74,1),w-literal(aux98,1),watched-or({modulo(aux307,13,0),gaceq(aux151,aux82)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux308,13,0),gaceq(aux216,aux218)})}),watched-and({w-literal(aux41,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux183,1),w-literal(aux157,1),w-literal(aux158,1),w-literal(aux74,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux98,1),watched-or({modulo(aux309,13,0),gaceq(aux216,aux151)})}),watched-and({w-literal(aux41,1),w-literal(aux144,1),w-literal(aux176,1),w-literal(aux136,1),w-literal(aux196,1),w-literal(aux31,1),w-literal(aux124,1),w-literal(aux95,1),w-literal(aux98,1),watched-or({modulo(aux310,13,0),gaceq(aux153,aux154)})})})
watched-or({watched-and({w-literal(aux85,1),w-literal(aux194,1),w-literal(aux185,1),w-literal(aux228,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux92,aux91),modulo(aux311,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux91,aux128),modulo(aux312,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux228,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux129,aux126),modulo(aux313,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux15,1),w-literal(aux193,1),modulo(aux314,13,0)}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux128,aux90),modulo(aux315,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux90,aux89),modulo(aux316,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux187,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux15,1),w-literal(aux193,1),watched-or({gaceq(aux128,aux130),modulo(aux317,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux15,1),w-literal(aux20,1),watched-or({gaceq(aux89,aux130),modulo(aux318,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux127,aux128),modulo(aux319,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux172,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux207,1),w-literal(aux15,1),w-literal(aux20,1),watched-or({gaceq(aux127,aux89),modulo(aux320,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),w-literal(aux228,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux126,aux127),modulo(aux321,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux108,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux187,1),w-literal(aux207,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux126,aux90),modulo(aux322,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux194,1),w-literal(aux185,1),w-literal(aux228,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux129,aux92),modulo(aux323,13,0)})}),watched-and({w-literal(aux85,1),w-literal(aux192,1),w-literal(aux185,1),w-literal(aux228,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux91,aux126),modulo(aux324,13,0)})}),watched-and({w-literal(aux85,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux108,1),w-literal(aux172,1),w-literal(aux221,1),w-literal(aux114,1),w-literal(aux52,1),w-literal(aux20,1),watched-or({gaceq(aux92,aux127),modulo(aux325,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux326,13,0),gaceq(aux164,aux23)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux186,1),w-literal(aux210,1),w-literal(aux195,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux327,13,0),gaceq(aux170,aux23)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux186,1),w-literal(aux195,1),w-literal(aux116,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux328,13,0),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux186,1),w-literal(aux210,1),w-literal(aux195,1),w-literal(aux116,1)}),watched-and({watched-or({modulo(aux329,13,0),gaceq(aux22,aux169)}),w-literal(aux53,1),w-literal(aux160,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux209,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux330,13,0),gaceq(aux162,aux169)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux174,1),w-literal(aux209,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux331,13,0),gaceq(aux161,aux162)}),w-literal(aux38,1),w-literal(aux115,1),w-literal(aux174,1),w-literal(aux209,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux332,13,0),gaceq(aux169,aux170)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux209,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux333,13,0),gaceq(aux170,aux163)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux186,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux334,13,0),gaceq(aux162,aux163)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux186,1),w-literal(aux210,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux335,13,0),gaceq(aux22,aux161)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux115,1),w-literal(aux174,1),w-literal(aux209,1),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux336,13,0),gaceq(aux161,aux170)}),w-literal(aux38,1),w-literal(aux160,1),w-literal(aux186,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux65,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux337,13,0),gaceq(aux163,aux164)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux186,1),w-literal(aux210,1),w-literal(aux204,1),w-literal(aux219,1)}),watched-and({watched-or({modulo(aux338,13,0),gaceq(aux169,aux164)}),w-literal(aux38,1),w-literal(aux53,1),w-literal(aux160,1),w-literal(aux210,1),w-literal(aux195,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux219,1)})})
watched-or({watched-and({w-literal(aux206,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux28,1),w-literal(aux122,1),modulo(aux339,13,0)}),watched-and({watched-or({gaceq(aux191,aux188),modulo(aux340,13,0)}),w-literal(aux206,1),w-literal(aux123,1),w-literal(aux66,1),w-literal(aux167,1),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux188,aux75),modulo(aux341,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux66,1),w-literal(aux167,1),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux75,aux189),modulo(aux342,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux167,1),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux86,aux191),modulo(aux343,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux123,1),w-literal(aux66,1),w-literal(aux167,1),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux189,aux190),modulo(aux344,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux190,aux87),modulo(aux345,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux166,1),w-literal(aux28,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux191,aux189),modulo(aux346,13,0)}),w-literal(aux206,1),w-literal(aux149,1),w-literal(aux166,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux184,1),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux188,aux190),modulo(aux347,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux166,1),w-literal(aux28,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux224,1)}),watched-and({watched-or({gaceq(aux75,aux87),modulo(aux348,13,0)}),w-literal(aux206,1),w-literal(aux57,1),w-literal(aux149,1),w-literal(aux28,1),w-literal(aux122,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux86,aux75),modulo(aux349,13,0)}),w-literal(aux57,1),w-literal(aux149,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux167,1),w-literal(aux184,1),w-literal(aux224,1)})})
watched-or({watched-and({watched-or({modulo(aux350,13,0),gaceq(aux112,aux110)}),w-literal(aux46,1),w-literal(aux139,1),w-literal(aux36,1),w-literal(aux40,1),w-literal(aux175,1)}),watched-and({watched-or({modulo(aux351,13,0),gaceq(aux223,aux112)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux139,1),w-literal(aux36,1),w-literal(aux40,1),w-literal(aux175,1)}),watched-and({watched-or({modulo(aux352,13,0),gaceq(aux110,aux222)}),w-literal(aux46,1),w-literal(aux139,1),w-literal(aux36,1),w-literal(aux102,1),w-literal(aux175,1)}),watched-and({watched-or({modulo(aux353,13,0),gaceq(aux113,aux110)}),w-literal(aux46,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux36,1),w-literal(aux102,1),w-literal(aux175,1)}),watched-and({watched-or({modulo(aux354,13,0),gaceq(aux111,aux222)}),w-literal(aux46,1),w-literal(aux139,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux102,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux355,13,0),gaceq(aux223,aux113)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux43,1),w-literal(aux125,1),w-literal(aux40,1),w-literal(aux175,1)}),watched-and({modulo(aux356,13,0),w-literal(aux46,1),w-literal(aux139,1),w-literal(aux36,1),w-literal(aux102,1),w-literal(aux42,1)}),watched-and({watched-or({modulo(aux357,13,0),gaceq(aux113,aux111)}),w-literal(aux46,1),w-literal(aux43,1),w-literal(aux125,1),w-literal(aux40,1),w-literal(aux175,1)}),watched-and({watched-or({modulo(aux358,13,0),gaceq(aux111,aux112)}),w-literal(aux46,1),w-literal(aux139,1),w-literal(aux125,1),w-literal(aux40,1),w-literal(aux175,1)})})
watched-or({watched-and({w-literal(aux55,1),w-literal(aux100,1),w-literal(aux77,1),w-literal(aux35,1),watched-or({gaceq(aux27,aux146),modulo(aux359,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux100,1),w-literal(aux101,1),w-literal(aux35,1),watched-or({gaceq(aux146,aux25),modulo(aux360,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux96,1),w-literal(aux77,1),w-literal(aux35,1),watched-or({gaceq(aux147,aux27),modulo(aux361,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux101,1),w-literal(aux97,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux147,aux25),modulo(aux362,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux96,1),w-literal(aux77,1),w-literal(aux35,1),watched-or({gaceq(aux26,aux147),modulo(aux363,13,0)})}),watched-and({w-literal(aux100,1),w-literal(aux101,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux35,1),watched-or({gaceq(aux26,aux146),modulo(aux364,13,0)})}),watched-and({w-literal(aux55,1),w-literal(aux100,1),w-literal(aux101,1),w-literal(aux97,1),modulo(aux365,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux118,aux119),modulo(aux366,13,0)}),w-literal(aux72,1),w-literal(aux62,1),w-literal(aux73,1)}),watched-and({watched-or({gaceq(aux119,aux120),modulo(aux367,13,0)}),w-literal(aux72,1),w-literal(aux71,1),w-literal(aux73,1)}),watched-and({modulo(aux368,13,0),w-literal(aux72,1),w-literal(aux71,1),w-literal(aux63,1)}),watched-and({watched-or({gaceq(aux117,aux118),modulo(aux369,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux62,1),w-literal(aux73,1)}),watched-and({watched-or({gaceq(aux117,aux120),modulo(aux370,13,0)}),w-literal(aux71,1),w-literal(aux63,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux213,1),watched-or({div(M_00012_00001, 13, aux29),modulo(aux371,13,0)})}),watched-and({w-literal(aux212,1),w-literal(aux213,1),watched-or({div(M_00012_00003, 13, aux29),modulo(aux372,13,0)})}),watched-and({modulo(aux373,13,0),w-literal(aux212,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux374,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux232),modulo(aux375,13,0)})})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux233)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux233)
sumleq([M_00002_00004,-51],aux234)
sumgeq([M_00002_00004,-51],aux234)
weightedsumleq([-1,1],[M_00002_00012,5],aux235)
weightedsumgeq([-1,1],[M_00002_00012,5],aux235)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux236)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux236)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux237)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux237)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux238)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux238)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux239)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux239)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux240)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux240)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux241)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux241)
weightedsumleq([-1,1],[M_00002_00011,M_00002_00012],aux242)
weightedsumgeq([-1,1],[M_00002_00011,M_00002_00012],aux242)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux243)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux243)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux244)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux244)
weightedsumleq([-1,1],[M_00002_00002,51],aux245)
weightedsumgeq([-1,1],[M_00002_00002,51],aux245)
sumleq([M_00002_00006,-51],aux246)
sumgeq([M_00002_00006,-51],aux246)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux247)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux247)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux248)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux248)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux249)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux249)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux250)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux250)
weightedsumleq([-1,1],[M_00002_00010,5],aux251)
weightedsumgeq([-1,1],[M_00002_00010,5],aux251)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux252)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux252)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux253)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux253)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux254)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux254)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux255)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux255)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux256)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux256)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux257)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux257)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux258)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux258)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux259)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux259)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux260)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux260)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux261)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux261)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux262)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux262)
weightedsumleq([-1,1],[M_00003_00012,-1],aux263)
weightedsumgeq([-1,1],[M_00003_00012,-1],aux263)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux264)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux264)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux265)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux265)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux266)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux266)
weightedsumleq([-1,1],[M_00003_00011,M_00003_00012],aux267)
weightedsumgeq([-1,1],[M_00003_00011,M_00003_00012],aux267)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux268)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux268)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux269)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux269)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux270)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux270)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux271)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux271)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux272)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux272)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux273)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux273)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux274)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux274)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux275)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux275)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux276)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux276)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux277)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux277)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux278)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux278)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux279)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux279)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux280)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux280)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux281)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux281)
weightedsumleq([-1,1],[M_00004_00011,-1],aux282)
weightedsumgeq([-1,1],[M_00004_00011,-1],aux282)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux283)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux283)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux284)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux284)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux285)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux285)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux286)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux286)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux287)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux287)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux288)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux288)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux289)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux289)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux290)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux290)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux291)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux291)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux292)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux292)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux293)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux293)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux294)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux294)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux295)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux295)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux296)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux296)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux297)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux297)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux298)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux298)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux299)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux299)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux300)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux300)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux301)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux301)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux302)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux302)
weightedsumleq([1,-1],[-1,M_00005_00010],aux303)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux303)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux304)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux304)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux305)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux305)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux306)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux306)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux307)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux307)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux308)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux308)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux309)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux309)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux310)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux310)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux311)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux311)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux312)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux312)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux313)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux313)
weightedsumleq([1,-1],[-1,M_00006_00009],aux314)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux314)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux315)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux315)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux316)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux316)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux317)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux317)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux318)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux318)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux319)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux319)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux320)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux320)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux321)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux321)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux322)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux322)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux323)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux323)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux324)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux324)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux325)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux325)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux326)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux326)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux327)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux327)
weightedsumleq([-1,1],[M_00007_00008,-1],aux328)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux328)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux329)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux329)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux330)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux330)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux331)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux331)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux332)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux332)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux333)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux333)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux334)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux334)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux335)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux335)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux336)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux336)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux337)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux337)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux338)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux338)
weightedsumleq([-1,1],[M_00008_00007,-1],aux339)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux339)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux340)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux340)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux341)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux341)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux342)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux342)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux343)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux343)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux344)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux344)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux345)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux345)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux346)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux346)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux347)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux347)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux348)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux348)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux349)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux349)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux350)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux350)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux351)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux351)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux352)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux352)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux353)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux353)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux354)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux354)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux355)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux355)
weightedsumleq([1,-1],[-1,M_00009_00006],aux356)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux356)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux357)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux357)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux358)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux358)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux359)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux359)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux360)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux360)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux361)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux361)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux362)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux362)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux363)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux363)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux364)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux364)
weightedsumleq([-1,1],[M_00010_00005,-1],aux365)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux365)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux366)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux366)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux367)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux367)
weightedsumleq([-1,1],[M_00011_00004,-1],aux368)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux368)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux369)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux369)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux370)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux370)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux371)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux371)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux372)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux372)
weightedsumleq([-1,1],[M_00012_00003,-1],aux373)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux373)
weightedsumleq([1,-1],[-1,M_00013_00002],aux374)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux374)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux375)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux375)
**EOF**
