MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 138
# CSE_active_eliminated_expressions = 654
# CSE_active_total_size = 414
**VARIABLES**
DISCRETE M_00002_00002 #
{43..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00002_00003 #
{47..51}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [47,47,51,51])
**VARIABLES**
DISCRETE M_00002_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00002_00005 #
{7..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [7,7,11,11,13,13,20,20,30,30])
**VARIABLES**
DISCRETE M_00002_00006 #
{5..30}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [5,5,7,7,11,11,13,13,20,20,30,30])
**VARIABLES**
DISCRETE M_00002_00007 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00003_00002 #
{30..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00003_00003 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00003_00004 #
{7..47}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00003_00005 #
{5..30}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [5,5,7,7,11,11,13,13,20,20,30,30])
**VARIABLES**
DISCRETE M_00003_00006 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00003_00007 #
{5..40}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00003_00008 #
{37..40}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [37,37,40,40])
**VARIABLES**
DISCRETE M_00003_00009 #
{20..37}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [20,20,30,30,37,37])
**VARIABLES**
DISCRETE M_00004_00001 #
{13..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00002 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00004_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00004_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00004_00005 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00004_00006 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00004_00007 #
{5..40}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00004_00008 #
{20..40}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..20}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,11,13,13,20,20])
**VARIABLES**
DISCRETE M_00005_00001 #
{7..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00005_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00005_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00005_00005 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00005_00006 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00005_00007 #
{5..40}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00005_00008 #
{11..40}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [11,11,13,13,20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00006_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00006_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00006_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00006_00005 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00006_00006 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00006_00007 #
{5..40}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40])
**VARIABLES**
DISCRETE M_00007_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00007_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00007_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00007_00005 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00007_00006 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00008_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00008_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00008_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00008_00005 #
{5..45}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45])
**VARIABLES**
DISCRETE M_00009_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00009_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00009_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00009_00004 #
{5..47}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47])
**VARIABLES**
DISCRETE M_00010_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00010_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00010_00003 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00011_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00011_00002 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
DISCRETE M_00012_00001 #
{5..51}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [5,5,7,7,11,11,13,13,20,20,30,30,37,37,40,40,43,43,45,45,47,47,51,51])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{0..2}
BOOL aux15 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux16 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux19 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux20 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux22 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux24 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
DISCRETE aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
{0..3}
BOOL aux27 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux28 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux29 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux31 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux32 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux38 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..2}
BOOL aux41 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux43 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux44 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux45 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux46 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux47 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux48 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux49 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux50 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux51 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..2}
DISCRETE aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00002/13)
{2..3}
DISCRETE aux54 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux56 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux65 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux67 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux70 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux71 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux72 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux73 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux76 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux79 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux83 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux85 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{2..3}
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
BOOL aux88 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux89 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux90 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux92 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux93 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux95 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux100 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux102 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux103 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux108 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux109 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux110 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux111 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux118 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux121 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux123 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux129 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux130 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
DISCRETE aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{0..3}
DISCRETE aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux136 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux137 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux138 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux139 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux140 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux141 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux146 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
DISCRETE aux147 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{1..3}
BOOL aux148 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux149 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux151 #
{0..3}
DISCRETE aux152 #( - M_00002_00004 + M_00002_00005)
{-40..23}
**CONSTRAINTS**
w-inintervalset(aux152, [-40,-40,-38,-38,-36,-36,-34,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-9,-7,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,7,9,10,13,13,17,17,19,19,23,23])
**VARIABLES**
DISCRETE aux153 #( - M_00002_00005 + M_00002_00006)
{-25..23}
**CONSTRAINTS**
w-inintervalset(aux153, [-25,-25,-23,-23,-19,-19,-17,-17,-15,-15,-13,-13,-10,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,7,9,10,13,13,17,17,19,19,23,23])
**VARIABLES**
DISCRETE aux154 #( - M_00002_00004 + M_00002_00007)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux154, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,34,36,36,38,38])
**VARIABLES**
DISCRETE aux155 #( - M_00002_00006 + M_00002_00007)
{-25..40}
**CONSTRAINTS**
w-inintervalset(aux155, [-25,-25,-23,-23,-19,-19,-17,-17,-15,-15,-13,-13,-10,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux156 #( - M_00002_00007 + 40)
{-5..35}
**CONSTRAINTS**
w-inintervalset(aux156, [-5,-5,-3,-3,0,0,3,3,10,10,20,20,27,27,29,29,33,33,35,35])
**VARIABLES**
DISCRETE aux157 #( - M_00002_00003 + M_00002_00004)
{-40..-4}
**CONSTRAINTS**
w-inintervalset(aux157, [-40,-40,-38,-38,-36,-36,-34,-34,-31,-31,-27,-27,-21,-21,-17,-17,-14,-14,-11,-10,-8,-6,-4,-4])
**VARIABLES**
DISCRETE aux158 #( - M_00002_00002 + M_00002_00005)
{-36..-13}
**CONSTRAINTS**
w-inintervalset(aux158, [-36,-36,-34,-34,-32,-30,-27,-27,-25,-25,-23,-23,-21,-21,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux159 #( - M_00002_00007 + 20)
{-25..15}
**CONSTRAINTS**
w-inintervalset(aux159, [-25,-25,-23,-23,-20,-20,-17,-17,-10,-10,0,0,7,7,9,9,13,13,15,15])
**VARIABLES**
DISCRETE aux160 #( - M_00002_00002 + M_00002_00003)
{-4..8}
**CONSTRAINTS**
w-inintervalset(aux160, [-4,-4,0,0,2,2,4,4,6,6,8,8])
**VARIABLES**
DISCRETE aux161 #(M_00002_00004 + -13)
{-6..34}
**CONSTRAINTS**
w-inintervalset(aux161, [-6,-6,-2,-2,0,0,7,7,17,17,24,24,27,27,30,30,32,32,34,34])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00006 + 37)
{7..32}
**CONSTRAINTS**
w-inintervalset(aux162, [7,7,17,17,24,24,26,26,30,30,32,32])
**VARIABLES**
DISCRETE aux163 #( - M_00002_00003 + M_00002_00006)
{-42..-21}
**CONSTRAINTS**
w-inintervalset(aux163, [-42,-42,-40,-40,-38,-38,-36,-36,-34,-34,-31,-31,-27,-27,-21,-21])
**VARIABLES**
DISCRETE aux164 #(M_00003_00002 + -13)
{17..38}
**CONSTRAINTS**
w-inintervalset(aux164, [17,17,24,24,27,27,30,30,32,32,34,34,38,38])
**VARIABLES**
DISCRETE aux165 #( - M_00003_00003 + M_00003_00004)
{-44..23}
**CONSTRAINTS**
w-inintervalset(aux165, [-44,-44,-40,-40,-38,-38,-36,-36,-34,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,23])
**VARIABLES**
DISCRETE aux166 #( - M_00003_00002 + M_00003_00005)
{-46..-13}
**CONSTRAINTS**
w-inintervalset(aux166, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-15,-13,-13])
**VARIABLES**
DISCRETE aux167 #( - M_00003_00005 + M_00003_00008)
{7..33}
**CONSTRAINTS**
w-inintervalset(aux167, [7,7,10,10,17,17,20,20,24,24,26,27,29,30,32,33])
**VARIABLES**
DISCRETE aux168 #( - M_00003_00004 + M_00003_00005)
{-42..23}
**CONSTRAINTS**
w-inintervalset(aux168, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,7,9,10,13,13,17,17,19,19,23,23])
**VARIABLES**
DISCRETE aux169 #(M_00003_00004 + -13)
{-6..34}
**CONSTRAINTS**
w-inintervalset(aux169, [-6,-6,-2,-2,0,0,7,7,17,17,24,24,27,27,30,30,32,32,34,34])
**VARIABLES**
DISCRETE aux170 #( - M_00003_00002 + M_00003_00003)
{-44..17}
**CONSTRAINTS**
w-inintervalset(aux170, [-44,-44,-40,-40,-38,-38,-36,-36,-34,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-10,-8,-2,0,0,2,8,10,11,13,15,17,17])
**VARIABLES**
DISCRETE aux171 #( - M_00003_00009 + 11)
{-26..-9}
**CONSTRAINTS**
w-inintervalset(aux171, [-26,-26,-19,-19,-9,-9])
**VARIABLES**
DISCRETE aux172 #( - M_00003_00003 + M_00003_00006)
{-46..38}
**CONSTRAINTS**
w-inintervalset(aux172, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,34,36,36,38,38])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00006 + M_00003_00007)
{-32..35}
**CONSTRAINTS**
w-inintervalset(aux173, [-32,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00007 + M_00003_00008)
{-3..35}
**CONSTRAINTS**
w-inintervalset(aux174, [-3,-3,0,0,3,3,7,7,10,10,17,17,20,20,24,24,26,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux175 #( - M_00003_00006 + M_00003_00009)
{-25..32}
**CONSTRAINTS**
w-inintervalset(aux175, [-25,-25,-23,-23,-20,-20,-17,-17,-15,-15,-13,-13,-10,-10,-8,-6,-3,-3,0,0,7,7,9,10,13,13,15,15,17,17,19,19,23,26,30,30,32,32])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00007 + 11)
{-29..6}
**CONSTRAINTS**
w-inintervalset(aux176, [-29,-29,-26,-26,-19,-19,-9,-9,-2,-2,0,0,4,4,6,6])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00004 + M_00003_00007)
{-42..33}
**CONSTRAINTS**
w-inintervalset(aux177, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,7,9,10,13,13,17,17,19,20,23,24,26,27,29,30,33,33])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00005 + M_00003_00006)
{-25..40}
**CONSTRAINTS**
w-inintervalset(aux178, [-25,-25,-23,-23,-19,-19,-17,-17,-15,-15,-13,-13,-10,-6,-4,-4,-2,-2,0,0,2,2,4,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00008 + M_00003_00009)
{-20..-3}
**CONSTRAINTS**
w-inintervalset(aux179, [-20,-20,-17,-17,-10,-10,-7,-7,-3,-3])
**VARIABLES**
DISCRETE aux180 #( - M_00004_00007 + M_00004_00008)
{-20..35}
**CONSTRAINTS**
w-inintervalset(aux180, [-20,-20,-17,-17,-10,-10,-7,-7,-3,-3,0,0,3,3,7,7,9,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux181 #( - M_00004_00008 + M_00004_00009)
{-29..-9}
**CONSTRAINTS**
w-inintervalset(aux181, [-29,-29,-27,-26,-24,-24,-20,-19,-17,-17,-10,-9])
**VARIABLES**
DISCRETE aux182 #( - M_00004_00006 + M_00004_00007)
{-40..35}
**CONSTRAINTS**
w-inintervalset(aux182, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux183 #( - M_00004_00006 + M_00004_00009)
{-34..15}
**CONSTRAINTS**
w-inintervalset(aux183, [-34,-34,-32,-32,-30,-29,-27,-23,-20,-19,-17,-17,-10,-9,-7,-7,-2,-2,0,0,2,2,4,4,6,9,13,13,15,15])
**VARIABLES**
DISCRETE aux184 #( - M_00004_00005 + M_00004_00006)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux184, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux185 #( - M_00004_00005 + M_00004_00008)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux185, [-25,-25,-23,-23,-20,-20,-17,-17,-15,-15,-13,-13,-10,-10,-8,-5,-3,-3,0,0,3,3,7,7,9,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux186 #( - M_00004_00001 + M_00004_00002)
{-17..38}
**CONSTRAINTS**
w-inintervalset(aux186, [-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,8,10,11,13,15,17,17,20,21,23,25,27,27,30,32,34,34,38,38])
**VARIABLES**
DISCRETE aux187 #( - M_00004_00002 + M_00004_00003)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux187, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,34,36,36,38,38,40,40])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00004 + M_00004_00005)
{-42..40}
**CONSTRAINTS**
w-inintervalset(aux188, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00004 + M_00004_00007)
{-42..35}
**CONSTRAINTS**
w-inintervalset(aux189, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00009 + -1)
{-21..-12}
**CONSTRAINTS**
w-inintervalset(aux190, [-21,-21,-14,-14,-12,-12])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00003 + M_00004_00004)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux191, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00001 + M_00004_00004)
{-42..34}
**CONSTRAINTS**
w-inintervalset(aux192, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,8,10,10,13,13,15,15,17,17,20,20,23,25,27,27,30,30,32,32,34,34])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00002 + M_00004_00005)
{-46..38}
**CONSTRAINTS**
w-inintervalset(aux193, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,34,36,36,38,38])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00003 + M_00004_00006)
{-46..38}
**CONSTRAINTS**
w-inintervalset(aux194, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38])
**VARIABLES**
DISCRETE aux195 #( - M_00005_00002 + M_00005_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux195, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux196 #( - M_00005_00001 + M_00005_00004)
{-46..38}
**CONSTRAINTS**
w-inintervalset(aux196, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,34,36,36,38,38])
**VARIABLES**
DISCRETE aux197 #( - M_00005_00002 + M_00005_00005)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux197, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux198 #(-1 - M_00005_00008)
{-41..-12}
**CONSTRAINTS**
w-inintervalset(aux198, [-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12])
**VARIABLES**
DISCRETE aux199 #( - M_00005_00005 + M_00005_00006)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux199, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux200 #( - M_00005_00006 + M_00005_00007)
{-40..35}
**CONSTRAINTS**
w-inintervalset(aux200, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux201 #( - M_00005_00005 + M_00005_00008)
{-34..35}
**CONSTRAINTS**
w-inintervalset(aux201, [-34,-34,-32,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-5,-3,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00007 + M_00005_00008)
{-29..35}
**CONSTRAINTS**
w-inintervalset(aux202, [-29,-29,-27,-26,-24,-24,-20,-19,-17,-17,-10,-9,-7,-7,-3,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux203 #( - M_00005_00004 + M_00005_00005)
{-42..40}
**CONSTRAINTS**
w-inintervalset(aux203, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00004 + M_00005_00007)
{-42..35}
**CONSTRAINTS**
w-inintervalset(aux204, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00001 + M_00005_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux205, [-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,34,36,36,38,38,40,40,44,44])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00003 + M_00005_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux206, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux207 #( - M_00005_00003 + M_00005_00006)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux207, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux208 #( - M_00006_00001 + M_00006_00004)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux208, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux209 #( - M_00006_00004 + M_00006_00005)
{-42..40}
**CONSTRAINTS**
w-inintervalset(aux209, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux210 #(-1 - M_00006_00007)
{-41..-6}
**CONSTRAINTS**
w-inintervalset(aux210, [-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux211 #( - M_00006_00005 + M_00006_00006)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux211, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux212 #( - M_00006_00004 + M_00006_00007)
{-42..35}
**CONSTRAINTS**
w-inintervalset(aux212, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux213 #( - M_00006_00006 + M_00006_00007)
{-40..35}
**CONSTRAINTS**
w-inintervalset(aux213, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,4,6,10,13,13,15,15,17,17,19,20,23,27,29,30,32,33,35,35])
**VARIABLES**
DISCRETE aux214 #( - M_00006_00003 + M_00006_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux214, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux215 #( - M_00006_00003 + M_00006_00006)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux215, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux216 #( - M_00006_00002 + M_00006_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux216, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00002 + M_00006_00005)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux217, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00001 + M_00006_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux218, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux219 #( - M_00007_00004 + M_00007_00005)
{-42..40}
**CONSTRAINTS**
w-inintervalset(aux219, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux220 #( - M_00007_00001 + M_00007_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux220, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux221 #( - M_00007_00005 + M_00007_00006)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux221, [-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux222 #( - M_00007_00002 + M_00007_00005)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux222, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux223 #( - M_00007_00003 + M_00007_00006)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux223, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux224 #( - M_00007_00001 + M_00007_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux224, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux225 #( - M_00007_00002 + M_00007_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux225, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux226 #( - M_00007_00006 + -1)
{-46..-6}
**CONSTRAINTS**
w-inintervalset(aux226, [-46,-46,-44,-44,-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux227 #( - M_00007_00003 + M_00007_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux227, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux228 #( - M_00008_00001 + M_00008_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux228, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux229 #( - M_00008_00002 + M_00008_00005)
{-46..40}
**CONSTRAINTS**
w-inintervalset(aux229, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux230 #( - M_00008_00002 + M_00008_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux230, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux231 #( - M_00008_00003 + M_00008_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux231, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux232 #( - M_00008_00005 + -1)
{-46..-6}
**CONSTRAINTS**
w-inintervalset(aux232, [-46,-46,-44,-44,-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux233 #( - M_00008_00004 + M_00008_00005)
{-42..40}
**CONSTRAINTS**
w-inintervalset(aux233, [-42,-42,-40,-40,-38,-38,-36,-32,-30,-29,-27,-23,-20,-19,-17,-17,-15,-15,-13,-13,-10,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40])
**VARIABLES**
DISCRETE aux234 #( - M_00008_00001 + M_00008_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux234, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux235 #( - M_00009_00003 + M_00009_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux235, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux236 #( - M_00009_00001 + M_00009_00004)
{-46..42}
**CONSTRAINTS**
w-inintervalset(aux236, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,10,13,13,15,15,17,17,19,20,23,27,29,30,32,36,38,38,40,40,42,42])
**VARIABLES**
DISCRETE aux237 #( - M_00009_00002 + M_00009_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux237, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux238 #(-1 - M_00009_00004)
{-48..-6}
**CONSTRAINTS**
w-inintervalset(aux238, [-48,-48,-46,-46,-44,-44,-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux239 #( - M_00009_00001 + M_00009_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux239, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux240 #( - M_00010_00001 + M_00010_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux240, [-46,-46,-44,-44,-42,-42,-40,-40,-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux241 #( - M_00010_00002 + M_00010_00003)
{-38..46}
**CONSTRAINTS**
w-inintervalset(aux241, [-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux242 #( - M_00010_00003 + -1)
{-52..-6}
**CONSTRAINTS**
w-inintervalset(aux242, [-52,-52,-48,-48,-46,-46,-44,-44,-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
DISCRETE aux243 #( - M_00011_00001 + M_00011_00002)
{-38..46}
**CONSTRAINTS**
w-inintervalset(aux243, [-38,-38,-36,-29,-27,-23,-21,-19,-17,-17,-15,-13,-11,-2,0,0,2,11,13,15,17,17,19,21,23,27,29,36,38,38,40,40,42,42,44,44,46,46])
**VARIABLES**
DISCRETE aux244 #( - M_00011_00002 + -1)
{-52..-6}
**CONSTRAINTS**
w-inintervalset(aux244, [-52,-52,-48,-48,-46,-46,-44,-44,-41,-41,-38,-38,-31,-31,-21,-21,-14,-14,-12,-12,-8,-8,-6,-6])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[13, 43, 51, 47, 7, 30, 5, 45, 40, 37, 20, 11]
**SEARCH**
PRINT[[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux151)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00006, 13, aux14)
reify(gaceq(M_00003_00009,M_00004_00008), aux15)
reify(gaceq(M_00007_00002,M_00008_00002), aux16)
div(M_00007_00001, 13, aux17)
div(M_00007_00006, 13, aux18)
reify(gaceq(M_00007_00003,M_00006_00003), aux19)
reify(gaceq(M_00005_00002,M_00006_00002), aux20)
div(M_00010_00002, 13, aux21)
reify(gaceq(M_00008_00002,M_00009_00002), aux22)
reify(gaceq(M_00008_00003,M_00009_00003), aux23)
reify(gaceq(M_00005_00007,M_00006_00006), aux24)
div(M_00002_00004, 13, aux25)
div(M_00002_00007, 13, aux26)
reify(gaceq(M_00004_00005,M_00005_00004), aux27)
reify(gaceq(M_00003_00005,M_00004_00005), aux28)
reify(gaceq(M_00010_00003,M_00009_00003), aux29)
reify(gaceq(M_00010_00002,M_00009_00003), aux30)
reify(gaceq(M_00004_00006,M_00005_00005), aux31)
reify(gaceq(M_00004_00001,M_00005_00001), aux32)
div(M_00004_00008, 13, aux33)
div(M_00004_00003, 13, aux34)
div(M_00004_00002, 13, aux35)
div(M_00004_00007, 13, aux36)
reify(gaceq(M_00004_00006,M_00005_00006), aux37)
reify(gaceq(M_00003_00008,M_00004_00007), aux38)
div(M_00002_00005, 13, aux39)
div(M_00002_00003, 13, 3)
reify(gaceq(M_00007_00006,M_00008_00005), aux41)
reify(gaceq(M_00008_00004,M_00009_00003), aux42)
reify(gaceq(M_00003_00007,M_00004_00006), aux43)
reify(gaceq(M_00002_00006,M_00003_00005), aux44)
reify(gaceq(M_00003_00005,M_00004_00004), aux45)
reify(gaceq(M_00005_00001,M_00006_00001), aux46)
reify(gaceq(M_00005_00006,M_00006_00006), aux47)
reify(gaceq(M_00007_00001,M_00008_00001), aux48)
reify(gaceq(M_00004_00004,M_00005_00004), aux49)
reify(gaceq(M_00002_00002,M_00003_00002), aux50)
reify(gaceq(M_00004_00005,M_00005_00005), aux51)
div(M_00003_00009, 13, aux52)
div(M_00003_00002, 13, aux53)
div(M_00005_00008, 13, aux54)
div(M_00005_00001, 13, aux55)
reify(gaceq(M_00005_00003,M_00006_00003), aux56)
div(M_00008_00003, 13, aux57)
div(M_00008_00001, 13, aux58)
div(M_00008_00005, 13, aux59)
div(M_00006_00006, 13, aux60)
div(M_00006_00005, 13, aux61)
div(M_00006_00003, 13, aux62)
div(M_00006_00002, 13, aux63)
reify(gaceq(M_00010_00003,M_00011_00002), aux64)
reify(gaceq(M_00010_00001,M_00011_00001), aux65)
reify(gaceq(M_00004_00004,M_00005_00003), aux66)
reify(gaceq(M_00005_00004,M_00006_00004), aux67)
reify(gaceq(M_00002_00004,M_00003_00003), aux68)
reify(gaceq(M_00002_00005,M_00003_00004), aux69)
reify(gaceq(M_00002_00004,M_00003_00004), aux70)
reify(gaceq(M_00003_00006,M_00004_00006), aux71)
reify(gaceq(M_00004_00007,M_00005_00006), aux72)
reify(gaceq(M_00007_00006,M_00006_00007), aux73)
reify(gaceq(M_00007_00005,M_00008_00005), aux74)
reify(gaceq(M_00007_00003,M_00008_00002), aux75)
reify(gaceq(M_00003_00006,M_00004_00005), aux76)
reify(gaceq(M_00008_00003,M_00009_00002), aux77)
reify(gaceq(M_00008_00004,M_00009_00004), aux78)
reify(gaceq(M_00005_00008,M_00006_00007), aux79)
reify(gaceq(M_00010_00001,M_00009_00001), aux80)
reify(gaceq(M_00010_00002,M_00009_00002), aux81)
reify(gaceq(M_00010_00003,M_00009_00004), aux82)
div(M_00006_00004, 13, aux83)
div(M_00006_00001, 13, aux84)
div(M_00006_00007, 13, aux85)
div(M_00003_00008, 13, aux86)
div(M_00003_00003, 13, aux87)
reify(gaceq(M_00002_00005,M_00003_00005), aux88)
reify(gaceq(M_00005_00005,M_00006_00004), aux89)
reify(gaceq(M_00005_00005,M_00006_00005), aux90)
reify(gaceq(M_00003_00003,M_00004_00002), aux91)
reify(gaceq(M_00002_00007,M_00003_00006), aux92)
reify(gaceq(M_00005_00003,M_00006_00002), aux93)
reify(gaceq(M_00005_00007,M_00006_00007), aux94)
reify(gaceq(M_00003_00003,M_00004_00003), aux95)
div(M_00005_00007, 13, aux96)
div(M_00005_00006, 13, aux97)
div(M_00005_00002, 13, aux98)
div(M_00005_00003, 13, aux99)
reify(gaceq(M_00004_00008,M_00005_00008), aux100)
reify(gaceq(M_00004_00003,M_00005_00002), aux101)
reify(gaceq(M_00004_00008,M_00005_00007), aux102)
reify(gaceq(M_00003_00004,M_00004_00004), aux103)
div(M_00007_00002, 13, aux104)
div(M_00007_00004, 13, aux105)
div(M_00007_00003, 13, aux106)
div(M_00007_00005, 13, aux107)
reify(gaceq(M_00007_00002,M_00006_00002), aux108)
reify(gaceq(M_00004_00009,M_00005_00008), aux109)
reify(gaceq(M_00007_00001,M_00006_00001), aux110)
reify(gaceq(M_00008_00005,M_00009_00004), aux111)
reify(gaceq(M_00008_00001,M_00009_00001), aux112)
reify(gaceq(M_00003_00004,M_00004_00003), aux113)
reify(gaceq(M_00003_00008,M_00004_00008), aux114)
reify(gaceq(M_00007_00004,M_00008_00003), aux115)
reify(gaceq(M_00005_00004,M_00006_00003), aux116)
reify(gaceq(M_00003_00007,M_00004_00007), aux117)
div(M_00004_00004, 13, aux118)
div(M_00004_00005, 13, aux119)
div(M_00004_00006, 13, aux120)
reify(gaceq(M_00003_00002,M_00004_00002), aux121)
reify(gaceq(M_00007_00003,M_00006_00004), aux122)
reify(gaceq(M_00004_00002,M_00005_00002), aux123)
div(M_00008_00004, 13, aux124)
div(M_00008_00002, 13, aux125)
reify(gaceq(M_00007_00004,M_00008_00004), aux126)
reify(gaceq(M_00007_00006,M_00006_00006), aux127)
reify(gaceq(M_00007_00002,M_00006_00003), aux128)
reify(gaceq(M_00005_00006,M_00006_00005), aux129)
reify(gaceq(M_00007_00003,M_00008_00003), aux130)
div(M_00003_00007, 13, aux131)
div(M_00003_00004, 13, aux132)
div(M_00003_00006, 13, aux133)
div(M_00003_00005, 13, aux134)
reify(gaceq(M_00007_00005,M_00008_00004), aux135)
reify(gaceq(M_00002_00006,M_00003_00006), aux136)
reify(gaceq(M_00002_00003,M_00003_00003), aux137)
div(M_00005_00004, 13, aux138)
div(M_00005_00005, 13, aux139)
reify(gaceq(M_00004_00003,M_00005_00003), aux140)
reify(gaceq(M_00007_00005,M_00006_00006), aux141)
div(M_00009_00003, 13, aux142)
div(M_00009_00004, 13, aux143)
div(M_00009_00001, 13, aux144)
div(M_00009_00002, 13, aux145)
div(M_00004_00009, 13, aux146)
div(M_00004_00001, 13, aux147)
reify(gaceq(M_00004_00007,M_00005_00007), aux148)
reify(gaceq(M_00007_00004,M_00006_00004), aux149)
reify(gaceq(M_00007_00004,M_00006_00005), aux150)
gccweak([M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007],[-1],[0])
gccweak([M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00002,43),w-literal(M_00002_00004,7),w-literal(M_00002_00003,47),w-literal(M_00002_00005,30),w-literal(M_00002_00006,5),w-literal(M_00002_00007,45)}),watched-and({w-literal(M_00002_00002,43),w-literal(M_00002_00003,51),w-literal(M_00002_00005,7),w-literal(M_00002_00004,47),w-literal(M_00002_00006,30),w-literal(M_00002_00007,5)}),watched-and({w-literal(M_00002_00002,51),w-literal(M_00002_00004,7),w-literal(M_00002_00003,47),w-literal(M_00002_00005,30),w-literal(M_00002_00006,5),w-literal(M_00002_00007,45)})})
watched-or({watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux69,1),w-literal(aux44,1),w-literal(aux92,1),watched-or({modulo(aux152,13,0),gaceq(aux25,aux39)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux44,1),w-literal(aux92,1),watched-or({modulo(aux153,13,0),gaceq(aux39,aux14)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux88,1),w-literal(aux136,1),gaceq(M_00002_00007,M_00003_00004),watched-or({modulo(aux154,13,0),gaceq(aux25,aux26)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux88,1),w-literal(aux92,1),watched-or({modulo(aux155,13,0),gaceq(aux14,aux26)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),watched-or({w-literal(aux26,3),modulo(aux156,13,0)}),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux88,1),w-literal(aux136,1)}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux68,1),w-literal(aux69,1),w-literal(aux44,1),w-literal(aux92,1),watched-or({modulo(aux157,13,0),w-literal(aux25,3)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux137,1),w-literal(aux70,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux44,1),w-literal(aux92,1),modulo(aux158,13,0)}),watched-and({w-literal(M_00003_00007,20),w-literal(M_00003_00008,40),w-literal(M_00003_00009,37),watched-or({w-literal(aux26,1),modulo(aux159,13,0)}),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux88,1),w-literal(aux136,1)}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),gaceq(M_00002_00003,M_00003_00002),w-literal(aux68,1),w-literal(aux69,1),w-literal(aux44,1),w-literal(aux92,1),watched-or({modulo(aux160,13,0),div(M_00002_00002, 13, 3)})}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),watched-or({w-literal(aux25,1),modulo(aux161,13,0)}),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux69,1),w-literal(aux44,1),w-literal(aux92,1),w-literal(M_00002_00004,13)}),watched-and({w-literal(M_00003_00006,37),w-literal(M_00003_00008,40),w-literal(M_00003_00009,20),watched-or({w-literal(aux14,2),modulo(aux162,13,0)}),w-literal(aux50,1),w-literal(aux137,1),w-literal(aux70,1),w-literal(aux88,1),gaceq(M_00002_00007,M_00003_00007)}),watched-and({w-literal(M_00003_00007,40),w-literal(M_00003_00008,37),w-literal(M_00003_00009,20),w-literal(aux50,1),w-literal(aux70,1),w-literal(aux88,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux92,1),modulo(aux163,13,0)})})
watched-or({watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux91,1),w-literal(aux113,1),w-literal(aux45,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),modulo(aux164,13,0),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux113,1),w-literal(aux45,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux165,13,0),gaceq(aux87,aux132)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux95,1),w-literal(aux103,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux166,13,0),gaceq(aux53,aux134)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux71,1),w-literal(aux117,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux15,1),watched-or({modulo(aux167,13,0),gaceq(aux134,aux86)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux45,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux168,13,0),gaceq(aux132,aux134)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux169,13,0),w-literal(aux132,1)}),w-literal(aux121,1),w-literal(aux95,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux45,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux91,1),w-literal(aux113,1),w-literal(aux45,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux170,13,0),gaceq(aux53,aux87)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux117,1),w-literal(aux114,1),modulo(aux171,13,0),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux103,1),w-literal(aux28,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux172,13,0),gaceq(aux87,aux133)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux173,13,0),gaceq(aux133,aux131)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux174,13,0),gaceq(aux131,aux86)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux114,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux175,13,0),gaceq(aux133,aux52)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux176,13,0),w-literal(aux131,0)}),w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux114,1),gaceq(M_00003_00009,M_00004_00009),w-literal(M_00004_00001,13),w-literal(M_00004_00007,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux28,1),w-literal(aux71,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux177,13,0),gaceq(aux132,aux131)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux38,1),w-literal(aux15,1),watched-or({modulo(aux178,13,0),gaceq(aux134,aux133)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux121,1),w-literal(aux95,1),w-literal(aux103,1),w-literal(aux28,1),w-literal(aux71,1),w-literal(aux117,1),w-literal(aux15,1),watched-or({modulo(aux179,13,0),gaceq(aux86,aux52)}),w-literal(M_00004_00001,13),w-literal(M_00004_00009,11)})})
watched-or({watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux51,1),w-literal(aux37,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux36,aux33),modulo(aux180,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux51,1),w-literal(aux37,1),w-literal(aux148,1),w-literal(aux109,1),watched-or({gaceq(aux33,aux146),modulo(aux181,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux51,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux120,aux36),modulo(aux182,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux51,1),w-literal(aux148,1),w-literal(aux100,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux120,aux146),modulo(aux183,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux119,aux120),modulo(aux184,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux37,1),w-literal(aux148,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux109,1),watched-or({gaceq(aux119,aux33),modulo(aux185,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux101,1),w-literal(aux66,1),w-literal(aux27,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux147,aux35),modulo(aux186,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux101,1),w-literal(aux66,1),w-literal(aux27,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux35,aux34),modulo(aux187,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux27,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux118,aux119),modulo(aux188,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux51,1),w-literal(aux37,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux118,aux36),modulo(aux189,13,0)})}),watched-and({modulo(aux190,13,0),w-literal(aux32,1),w-literal(aux123,1),w-literal(aux140,1),w-literal(aux49,1),w-literal(aux51,1),w-literal(aux37,1),w-literal(aux148,1),w-literal(aux100,1)}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux66,1),w-literal(aux27,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux34,aux118),modulo(aux191,13,0)})}),watched-and({w-literal(aux123,1),w-literal(aux140,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux27,1),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux147,aux118),modulo(aux192,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux140,1),w-literal(aux49,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux31,1),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux35,aux119),modulo(aux193,13,0)})}),watched-and({w-literal(aux32,1),w-literal(aux123,1),w-literal(aux49,1),w-literal(aux51,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux72,1),w-literal(aux102,1),w-literal(aux109,1),watched-or({gaceq(aux34,aux120),modulo(aux194,13,0)})})})
watched-or({watched-and({w-literal(aux46,1),w-literal(aux93,1),w-literal(aux116,1),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux195,13,0),gaceq(aux98,aux99)})}),watched-and({w-literal(aux20,1),w-literal(aux56,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux196,13,0),gaceq(aux55,aux138)})}),watched-and({w-literal(aux46,1),w-literal(aux56,1),w-literal(aux67,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux197,13,0),gaceq(aux98,aux139)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux67,1),w-literal(aux90,1),w-literal(aux47,1),w-literal(aux94,1),modulo(aux198,13,0)}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux67,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux199,13,0),gaceq(aux139,aux97)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux67,1),w-literal(aux90,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux200,13,0),gaceq(aux97,aux96)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux67,1),w-literal(aux47,1),w-literal(aux94,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux201,13,0),gaceq(aux139,aux54)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux67,1),w-literal(aux90,1),w-literal(aux47,1),w-literal(aux79,1),watched-or({modulo(aux202,13,0),gaceq(aux96,aux54)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux203,13,0),gaceq(aux138,aux139)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux56,1),w-literal(aux90,1),w-literal(aux47,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux79,1),watched-or({modulo(aux204,13,0),gaceq(aux138,aux96)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux93,1),w-literal(aux116,1),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux205,13,0),gaceq(aux55,aux98)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux116,1),w-literal(aux89,1),w-literal(aux129,1),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux206,13,0),gaceq(aux99,aux138)})}),watched-and({w-literal(aux46,1),w-literal(aux20,1),w-literal(aux67,1),w-literal(aux90,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux24,1),w-literal(aux79,1),watched-or({modulo(aux207,13,0),gaceq(aux99,aux97)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux108,1),w-literal(aux19,1),w-literal(aux150,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux84,aux83),modulo(aux208,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux19,1),w-literal(aux150,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux83,aux61),modulo(aux209,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux19,1),w-literal(aux149,1),w-literal(aux13,1),w-literal(aux127,1),modulo(aux210,13,0)}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux19,1),w-literal(aux149,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux61,aux60),modulo(aux211,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux19,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux127,1),watched-or({gaceq(aux83,aux85),modulo(aux212,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux19,1),w-literal(aux149,1),w-literal(aux13,1),w-literal(aux73,1),watched-or({gaceq(aux60,aux85),modulo(aux213,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),w-literal(aux122,1),w-literal(aux150,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux62,aux83),modulo(aux214,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux108,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux149,1),w-literal(aux13,1),w-literal(aux73,1),watched-or({gaceq(aux62,aux60),modulo(aux215,13,0)})}),watched-and({w-literal(aux110,1),w-literal(aux128,1),w-literal(aux122,1),w-literal(aux150,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux63,aux62),modulo(aux216,13,0)})}),watched-and({w-literal(aux110,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux19,1),w-literal(aux149,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux63,aux61),modulo(aux217,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux128,1),w-literal(aux122,1),w-literal(aux150,1),w-literal(aux141,1),w-literal(aux73,1),watched-or({gaceq(aux84,aux63),modulo(aux218,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux219,13,0),gaceq(aux105,aux107)}),w-literal(aux48,1),w-literal(aux16,1),w-literal(aux130,1),w-literal(aux135,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux220,13,0),gaceq(aux17,aux105)}),w-literal(aux16,1),w-literal(aux130,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux135,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux221,13,0),gaceq(aux107,aux18)}),w-literal(aux48,1),w-literal(aux16,1),w-literal(aux130,1),w-literal(aux126,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux222,13,0),gaceq(aux104,aux107)}),w-literal(aux48,1),w-literal(aux130,1),w-literal(aux126,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux223,13,0),gaceq(aux106,aux18)}),w-literal(aux48,1),w-literal(aux16,1),w-literal(aux126,1),w-literal(aux74,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux224,13,0),gaceq(aux17,aux104)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux75,1),w-literal(aux115,1),w-literal(aux135,1),w-literal(aux41,1)}),watched-and({watched-or({modulo(aux225,13,0),gaceq(aux104,aux106)}),w-literal(aux48,1),w-literal(aux75,1),w-literal(aux115,1),w-literal(aux135,1),w-literal(aux41,1)}),watched-and({modulo(aux226,13,0),w-literal(aux48,1),w-literal(aux16,1),w-literal(aux130,1),w-literal(aux126,1),w-literal(aux74,1)}),watched-and({watched-or({modulo(aux227,13,0),gaceq(aux106,aux105)}),w-literal(aux48,1),w-literal(aux16,1),w-literal(aux115,1),w-literal(aux135,1),w-literal(aux41,1)})})
watched-or({watched-and({watched-or({gaceq(aux58,aux125),modulo(aux228,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux77,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux125,aux59),modulo(aux229,13,0)}),w-literal(aux112,1),w-literal(aux23,1),w-literal(aux78,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux125,aux57),modulo(aux230,13,0)}),w-literal(aux112,1),w-literal(aux77,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux57,aux124),modulo(aux231,13,0)}),w-literal(aux112,1),w-literal(aux22,1),w-literal(aux42,1),w-literal(aux111,1)}),watched-and({w-literal(aux112,1),w-literal(aux22,1),w-literal(aux23,1),w-literal(aux78,1),modulo(aux232,13,0)}),watched-and({watched-or({gaceq(aux124,aux59),modulo(aux233,13,0)}),w-literal(aux112,1),w-literal(aux22,1),w-literal(aux23,1),w-literal(aux111,1)}),watched-and({watched-or({gaceq(aux58,aux124),modulo(aux234,13,0)}),w-literal(aux22,1),w-literal(aux23,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux111,1)})})
watched-or({watched-and({watched-or({modulo(aux235,13,0),gaceq(aux142,aux143)}),w-literal(aux80,1),w-literal(aux81,1),w-literal(aux82,1)}),watched-and({watched-or({modulo(aux236,13,0),gaceq(aux144,aux143)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux81,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux237,13,0),gaceq(aux145,aux142)}),w-literal(aux80,1),w-literal(aux30,1),w-literal(aux82,1)}),watched-and({modulo(aux238,13,0),w-literal(aux80,1),w-literal(aux81,1),w-literal(aux29,1)}),watched-and({watched-or({modulo(aux239,13,0),gaceq(aux144,aux145)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux30,1),w-literal(aux82,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux64,1),watched-or({div(M_00010_00001, 13, aux21),modulo(aux240,13,0)})}),watched-and({w-literal(aux65,1),w-literal(aux64,1),watched-or({div(M_00010_00003, 13, aux21),modulo(aux241,13,0)})}),watched-and({w-literal(aux65,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux242,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux151),modulo(aux243,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux244,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux152)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux152)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux153)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux153)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux154)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux154)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux155)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux155)
weightedsumleq([-1,1],[M_00002_00007,40],aux156)
weightedsumgeq([-1,1],[M_00002_00007,40],aux156)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux157)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux157)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux158)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux158)
weightedsumleq([-1,1],[M_00002_00007,20],aux159)
weightedsumgeq([-1,1],[M_00002_00007,20],aux159)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux160)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux160)
sumleq([M_00002_00004,-13],aux161)
sumgeq([M_00002_00004,-13],aux161)
weightedsumleq([-1,1],[M_00002_00006,37],aux162)
weightedsumgeq([-1,1],[M_00002_00006,37],aux162)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux163)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux163)
sumleq([M_00003_00002,-13],aux164)
sumgeq([M_00003_00002,-13],aux164)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux165)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux165)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux166)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux166)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux167)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux167)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux168)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux168)
sumleq([M_00003_00004,-13],aux169)
sumgeq([M_00003_00004,-13],aux169)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux170)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux170)
weightedsumleq([-1,1],[M_00003_00009,11],aux171)
weightedsumgeq([-1,1],[M_00003_00009,11],aux171)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux172)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux172)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux173)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux173)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux174)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux174)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux175)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux175)
weightedsumleq([-1,1],[M_00003_00007,11],aux176)
weightedsumgeq([-1,1],[M_00003_00007,11],aux176)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux177)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux177)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux178)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux178)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux179)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux179)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux180)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux180)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux181)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux181)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux182)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux182)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux183)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux183)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux184)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux184)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux185)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux185)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux186)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux186)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux187)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux187)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux188)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux188)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux189)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux189)
weightedsumleq([-1,1],[M_00004_00009,-1],aux190)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux190)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux191)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux191)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux192)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux192)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux193)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux193)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux194)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux194)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux195)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux195)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux196)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux196)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux197)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux197)
weightedsumleq([1,-1],[-1,M_00005_00008],aux198)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux198)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux199)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux199)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux200)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux200)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux201)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux201)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux202)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux202)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux203)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux203)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux204)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux204)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux205)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux205)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux206)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux206)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux207)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux207)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux208)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux208)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux209)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux209)
weightedsumleq([1,-1],[-1,M_00006_00007],aux210)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux210)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux211)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux211)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux212)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux212)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux213)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux213)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux214)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux214)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux215)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux215)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux216)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux216)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux217)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux217)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux218)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux218)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux219)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux219)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux220)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux220)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux221)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux221)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux222)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux222)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux223)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux223)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux224)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux224)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux225)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux225)
weightedsumleq([-1,1],[M_00007_00006,-1],aux226)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux226)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux227)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux227)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux228)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux228)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux229)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux229)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux230)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux230)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux231)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux231)
weightedsumleq([-1,1],[M_00008_00005,-1],aux232)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux232)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux233)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux233)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux234)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux234)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux235)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux235)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux236)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux236)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux237)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux237)
weightedsumleq([1,-1],[-1,M_00009_00004],aux238)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux238)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux239)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux239)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux240)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux240)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux241)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux241)
weightedsumleq([-1,1],[M_00010_00003,-1],aux242)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux242)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux243)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux243)
weightedsumleq([-1,1],[M_00011_00002,-1],aux244)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux244)
**EOF**
