MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 101
# CSE_active_eliminated_expressions = 404
# CSE_active_total_size = 303
**VARIABLES**
DISCRETE M_00002_00003 #
{17..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,22,22])
**VARIABLES**
DISCRETE M_00002_00006 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [17,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00007 #
{16..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [16,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00008 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00002_00009 #
{46..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,10,10,16,17,22,22])
**VARIABLES**
DISCRETE M_00003_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [4,4,10,10,16,17,22,22,28,28,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [17,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00003_00006 #
{16..48}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [16,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00003_00007 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00008 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00001 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [28,28,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{46..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [46,46,48,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00005 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00007 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00001 #
{28..48}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00005_00002 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00005 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00007 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00001 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00005 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00006 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00005 #
{10..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,10,10,16,17,22,22,28,28,38,38,46,46,48,50])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..3}
BOOL aux15 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux19 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux20 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux21 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux22 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux24 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
BOOL aux26 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux27 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux28 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux29 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux30 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux31 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{1..3}
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..3}
BOOL aux33 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux38 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux39 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux40 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux41 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux42 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
BOOL aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
DISCRETE aux45 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux46 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{2..3}
DISCRETE aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux55 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux56 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux58 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux61 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux62 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux63 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux64 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux65 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
DISCRETE aux70 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..3}
DISCRETE aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
BOOL aux74 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux76 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
DISCRETE aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{1..3}
DISCRETE aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux84 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux90 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux93 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux94 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux96 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux99 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux100 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux101 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux102 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
DISCRETE aux103 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
BOOL aux104 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux105 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux106 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux107 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007/13)
{1..3}
BOOL aux110 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux111 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux112 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux113 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux114 #
{0..3}
DISCRETE aux115 #(M_00002_00007 + -4)
{12..44}
**CONSTRAINTS**
w-inintervalset(aux115, [12,13,18,18,24,24,34,34,42,42,44,44])
**VARIABLES**
DISCRETE aux116 #(M_00002_00006 + -38)
{-21..10}
**CONSTRAINTS**
w-inintervalset(aux116, [-21,-21,-16,-16,-10,-10,0,0,8,8,10,10])
**VARIABLES**
DISCRETE aux117 #( - M_00002_00009 + 10)
{-40..-36}
**CONSTRAINTS**
w-inintervalset(aux117, [-40,-38,-36,-36])
**VARIABLES**
DISCRETE aux118 #( - M_00002_00003 + 4)
{-18..-13}
**CONSTRAINTS**
w-inintervalset(aux118, [-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux119 #( - M_00002_00006 + M_00002_00007)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux119, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,0,2,2,5,6,8,8,10,11,16,16,18,18,20,21,24,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux120 #( - M_00002_00007 + M_00002_00008)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux120, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux121 #( - M_00002_00006 + M_00002_00009)
{-2..33}
**CONSTRAINTS**
w-inintervalset(aux121, [-2,-2,0,4,8,8,10,12,18,18,20,22,24,24,26,29,31,33])
**VARIABLES**
DISCRETE aux122 #( - M_00002_00008 + M_00002_00009)
{-4..34}
**CONSTRAINTS**
w-inintervalset(aux122, [-4,4,8,8,10,12,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux123 #( - M_00002_00003 + M_00002_00006)
{-5..31}
**CONSTRAINTS**
w-inintervalset(aux123, [-5,-5,0,0,5,6,11,11,16,16,21,21,24,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux124 #(M_00002_00008 + -38)
{-22..12}
**CONSTRAINTS**
w-inintervalset(aux124, [-22,-21,-16,-16,-10,-10,0,0,8,8,10,12])
**VARIABLES**
DISCRETE aux125 #(M_00003_00005 + -49)
{-32..-1}
**CONSTRAINTS**
w-inintervalset(aux125, [-32,-32,-27,-27,-21,-21,-11,-11,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux126 #(M_00003_00004 + -28)
{-24..10}
**CONSTRAINTS**
w-inintervalset(aux126, [-24,-24,-18,-18,-12,-11,-6,-6,0,0,10,10])
**VARIABLES**
DISCRETE aux127 #( - M_00003_00005 + M_00003_00006)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux127, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,0,2,2,5,6,8,8,10,11,16,16,18,18,20,21,24,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux128 #( - M_00003_00006 + M_00003_00007)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux128, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux129 #( - M_00003_00005 + M_00003_00008)
{-22..33}
**CONSTRAINTS**
w-inintervalset(aux129, [-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,6,8,8,10,12,16,16,18,18,20,22,24,24,26,29,31,33])
**VARIABLES**
DISCRETE aux130 #( - M_00003_00008 + 10)
{-40..-6}
**CONSTRAINTS**
w-inintervalset(aux130, [-40,-38,-36,-36,-28,-28,-18,-18,-12,-12,-7,-6])
**VARIABLES**
DISCRETE aux131 #( - M_00003_00003 + M_00003_00006)
{-6..31}
**CONSTRAINTS**
w-inintervalset(aux131, [-6,-5,-1,1,5,7,11,13,16,16,18,18,21,22,24,24,26,26,28,31])
**VARIABLES**
DISCRETE aux132 #( - M_00003_00004 + M_00003_00005)
{0..44}
**CONSTRAINTS**
w-inintervalset(aux132, [0,1,5,8,10,13,16,16,18,18,20,22,24,24,26,26,28,32,34,34,36,36,38,38,42,42,44,44])
**VARIABLES**
DISCRETE aux133 #( - M_00003_00007 + M_00003_00008)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux133, [-32,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux134 #( - M_00003_00004 + M_00003_00007)
{-22..46}
**CONSTRAINTS**
w-inintervalset(aux134, [-22,-21,-16,-16,-12,-10,-6,-5,-1,1,5,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux135 #( - M_00003_00003 + M_00003_00004)
{-18..34}
**CONSTRAINTS**
w-inintervalset(aux135, [-18,-18,-13,-12,-7,-5,-1,1,5,7,11,13,16,16,18,18,21,22,24,24,28,28,34,34])
**VARIABLES**
DISCRETE aux136 #( - M_00004_00005 + 10)
{-40..-6}
**CONSTRAINTS**
w-inintervalset(aux136, [-40,-38,-36,-36,-28,-28,-18,-18,-12,-12,-7,-6])
**VARIABLES**
DISCRETE aux137 #( - M_00004_00002 + M_00004_00003)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux137, [-45,-44,-42,-42,-39,-38,-36,-36,-33,-29,-27,-26,-24,-24,-21,-20,-18,-18,-11,-10,-8,-8,-3,-1])
**VARIABLES**
DISCRETE aux138 #( - M_00004_00002 + M_00004_00005)
{-33..2}
**CONSTRAINTS**
w-inintervalset(aux138, [-33,-29,-27,-26,-24,-24,-21,-20,-18,-18,-11,-10,-8,-8,-3,2])
**VARIABLES**
DISCRETE aux139 #( - M_00004_00001 + M_00004_00002)
{11..21}
**CONSTRAINTS**
w-inintervalset(aux139, [11,11,18,18,20,21])
**VARIABLES**
DISCRETE aux140 #( - M_00004_00001 + M_00004_00004)
{-24..20}
**CONSTRAINTS**
w-inintervalset(aux140, [-24,-24,-22,-21,-18,-18,-16,-16,-12,-10,-6,-6,0,0,8,8,10,10,18,18,20,20])
**VARIABLES**
DISCRETE aux141 #( - M_00004_00005 + M_00004_00006)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux141, [-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux142 #( - M_00004_00006 + M_00004_00007)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux142, [-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux143 #( - M_00004_00004 + M_00004_00005)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux143, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux144 #( - M_00004_00004 + M_00004_00007)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux144, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux145 #( - M_00004_00007 + 10)
{-40..-6}
**CONSTRAINTS**
w-inintervalset(aux145, [-40,-38,-36,-36,-28,-28,-18,-18,-12,-12,-7,-6])
**VARIABLES**
DISCRETE aux146 #( - M_00004_00003 + M_00004_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux146, [-44,-44,-42,-42,-38,-38,-36,-36,-34,-34,-32,-28,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,-5,-2,2,5,8,10,13,16,16,18,18,20,22,24,24,26,26,28,32,34,34,36,36,38,38,42,42,44,44])
**VARIABLES**
DISCRETE aux147 #( - M_00004_00003 + M_00004_00006)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux147, [-32,-29,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-5,-2,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux148 #(-1 - M_00005_00007)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux148, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11])
**VARIABLES**
DISCRETE aux149 #( - M_00005_00004 + M_00005_00005)
{-34..46}
**CONSTRAINTS**
w-inintervalset(aux149, [-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux150 #( - M_00005_00005 + M_00005_00006)
{-34..38}
**CONSTRAINTS**
w-inintervalset(aux150, [-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,38])
**VARIABLES**
DISCRETE aux151 #( - M_00005_00004 + M_00005_00007)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux151, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux152 #( - M_00005_00006 + M_00005_00007)
{-40..34}
**CONSTRAINTS**
w-inintervalset(aux152, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,6,8,8,10,12,16,16,18,18,20,22,24,24,26,34])
**VARIABLES**
DISCRETE aux153 #( - M_00005_00003 + M_00005_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux153, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux154 #( - M_00005_00003 + M_00005_00006)
{-34..46}
**CONSTRAINTS**
w-inintervalset(aux154, [-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux155 #( - M_00005_00002 + M_00005_00003)
{-45..38}
**CONSTRAINTS**
w-inintervalset(aux155, [-45,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,38])
**VARIABLES**
DISCRETE aux156 #( - M_00005_00002 + M_00005_00005)
{-39..40}
**CONSTRAINTS**
w-inintervalset(aux156, [-39,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,40])
**VARIABLES**
DISCRETE aux157 #( - M_00005_00001 + M_00005_00002)
{-22..22}
**CONSTRAINTS**
w-inintervalset(aux157, [-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-6,-2,-2,0,4,8,8,10,12,18,18,20,22])
**VARIABLES**
DISCRETE aux158 #( - M_00005_00001 + M_00005_00004)
{-34..22}
**CONSTRAINTS**
w-inintervalset(aux158, [-34,-34,-32,-28,-26,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,-8,-6,-6,-2,-2,0,4,8,8,10,12,18,18,20,22])
**VARIABLES**
DISCRETE aux159 #( - M_00006_00003 + M_00006_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux159, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux160 #( - M_00006_00004 + M_00006_00005)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux160, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux161 #( - M_00006_00003 + M_00006_00006)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux161, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux162 #(-1 - M_00006_00006)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux162, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11])
**VARIABLES**
DISCRETE aux163 #( - M_00006_00005 + M_00006_00006)
{-40..40}
**CONSTRAINTS**
w-inintervalset(aux163, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,40])
**VARIABLES**
DISCRETE aux164 #( - M_00006_00002 + M_00006_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux164, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux165 #( - M_00006_00002 + M_00006_00005)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux165, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux166 #( - M_00006_00001 + M_00006_00002)
{-45..40}
**CONSTRAINTS**
w-inintervalset(aux166, [-45,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,40])
**VARIABLES**
DISCRETE aux167 #( - M_00006_00001 + M_00006_00004)
{-44..40}
**CONSTRAINTS**
w-inintervalset(aux167, [-44,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,12,16,16,18,18,20,22,24,24,26,34,36,36,38,40])
**VARIABLES**
DISCRETE aux168 #( - M_00007_00001 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux168, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux169 #( - M_00007_00005 + -1)
{-51..-11}
**CONSTRAINTS**
w-inintervalset(aux169, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11])
**VARIABLES**
DISCRETE aux170 #( - M_00007_00001 + M_00007_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux170, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux171 #( - M_00007_00002 + M_00007_00005)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux171, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux172 #( - M_00007_00002 + M_00007_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux172, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux173 #( - M_00007_00003 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux173, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux174 #( - M_00007_00004 + M_00007_00005)
{-40..46}
**CONSTRAINTS**
w-inintervalset(aux174, [-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-12,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux175 #( - M_00008_00003 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux175, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux176 #( - M_00008_00001 + M_00008_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux176, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux177 #( - M_00008_00001 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux177, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux178 #( - M_00008_00002 + M_00008_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux178, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux179 #( - M_00008_00004 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux179, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux180 #( - M_00009_00001 + M_00009_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux180, [-46,-44,-42,-42,-40,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,40,42,42,44,46])
**VARIABLES**
DISCRETE aux181 #( - M_00009_00002 + M_00009_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux181, [-39,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,39])
**VARIABLES**
DISCRETE aux182 #(-1 - M_00009_00003)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux182, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11,-5,-5])
**VARIABLES**
DISCRETE aux183 #( - M_00010_00001 + M_00010_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux183, [-39,-38,-36,-36,-34,-26,-24,-24,-22,-20,-18,-18,-16,-16,-13,-10,-8,8,10,13,16,16,18,18,20,22,24,24,26,34,36,36,38,39])
**VARIABLES**
DISCRETE aux184 #( - M_00010_00002 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux184, [-51,-49,-47,-47,-39,-39,-29,-29,-23,-23,-18,-17,-11,-11,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[28, 49, 22, 4, 38, 17, 48, 16, 50, 46, 10]
**SEARCH**
PRINT[[M_00002_00003],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux114)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00008, 13, aux14)
reify(gaceq(M_00004_00001,M_00005_00001), aux15)
div(M_00007_00001, 13, aux16)
div(M_00007_00003, 13, aux17)
div(M_00007_00005, 13, aux18)
reify(gaceq(M_00005_00002,M_00006_00002), aux19)
reify(gaceq(M_00007_00002,M_00006_00002), aux20)
reify(gaceq(M_00003_00003,M_00004_00003), aux21)
reify(gaceq(M_00005_00003,M_00006_00003), aux22)
reify(gaceq(M_00003_00004,M_00004_00004), aux23)
reify(gaceq(M_00005_00007,M_00006_00006), aux24)
div(M_00002_00006, 13, aux25)
reify(gaceq(M_00004_00005,M_00005_00004), aux26)
reify(gaceq(M_00010_00001,M_00009_00001), aux27)
reify(gaceq(M_00010_00002,M_00009_00003), aux28)
reify(gaceq(M_00004_00006,M_00005_00005), aux29)
div(M_00004_00003, 13, aux30)
div(M_00004_00006, 13, aux31)
div(M_00004_00005, 13, aux32)
reify(gaceq(M_00005_00001,M_00006_00001), aux33)
div(M_00002_00007, 13, aux34)
div(M_00002_00009, 13, 3)
reify(gaceq(M_00008_00004,M_00009_00003), aux36)
reify(gaceq(M_00008_00002,M_00009_00002), aux37)
reify(gaceq(M_00008_00001,M_00009_00001), aux38)
reify(gaceq(M_00003_00006,M_00004_00005), aux39)
reify(gaceq(M_00003_00005,M_00004_00005), aux40)
reify(gaceq(M_00005_00005,M_00006_00005), aux41)
reify(gaceq(M_00002_00003,M_00003_00003), aux42)
div(M_00003_00008, 13, aux43)
div(M_00003_00003, 13, aux44)
div(M_00005_00007, 13, aux45)
div(M_00005_00001, 13, aux46)
div(M_00008_00003, 13, aux47)
div(M_00008_00002, 13, aux48)
div(M_00008_00001, 13, aux49)
div(M_00008_00004, 13, aux50)
div(M_00006_00005, 13, aux51)
div(M_00006_00004, 13, aux52)
div(M_00006_00003, 13, aux53)
div(M_00006_00002, 13, aux54)
reify(gaceq(M_00003_00007,M_00004_00006), aux55)
reify(gaceq(M_00004_00004,M_00005_00003), aux56)
reify(gaceq(M_00004_00006,M_00005_00006), aux57)
reify(gaceq(M_00002_00006,M_00003_00006), aux58)
reify(gaceq(M_00002_00008,M_00003_00008), aux59)
reify(gaceq(M_00002_00006,M_00003_00005), aux60)
reify(gaceq(M_00002_00007,M_00003_00007), aux61)
reify(gaceq(M_00002_00007,M_00003_00006), aux62)
reify(gaceq(M_00004_00003,M_00005_00003), aux63)
reify(gaceq(M_00007_00001,M_00006_00001), aux64)
reify(gaceq(M_00004_00007,M_00005_00006), aux65)
reify(gaceq(M_00007_00004,M_00008_00004), aux66)
reify(gaceq(M_00007_00003,M_00008_00002), aux67)
reify(gaceq(M_00008_00003,M_00009_00002), aux68)
reify(gaceq(M_00008_00003,M_00009_00003), aux69)
div(M_00006_00001, 13, aux70)
div(M_00006_00006, 13, aux71)
div(M_00003_00006, 13, aux72)
div(M_00003_00007, 13, aux73)
reify(gaceq(M_00005_00005,M_00006_00004), aux74)
reify(gaceq(M_00003_00007,M_00004_00007), aux75)
reify(gaceq(M_00005_00004,M_00006_00004), aux76)
reify(gaceq(M_00005_00003,M_00006_00002), aux77)
reify(gaceq(M_00005_00006,M_00006_00006), aux78)
div(M_00005_00006, 13, aux79)
div(M_00005_00002, 13, aux80)
div(M_00005_00005, 13, aux81)
div(M_00005_00003, 13, aux82)
reify(gaceq(M_00004_00003,M_00005_00002), aux83)
reify(gaceq(M_00003_00008,M_00004_00007), aux84)
div(M_00007_00002, 13, aux85)
div(M_00007_00004, 13, aux86)
reify(gaceq(M_00003_00005,M_00004_00004), aux87)
reify(gaceq(M_00007_00004,M_00008_00003), aux88)
reify(gaceq(M_00005_00004,M_00006_00003), aux89)
reify(gaceq(M_00003_00006,M_00004_00006), aux90)
div(M_00004_00004, 13, aux91)
reify(gaceq(M_00007_00003,M_00006_00004), aux92)
reify(gaceq(M_00002_00008,M_00003_00007), aux93)
reify(gaceq(M_00007_00001,M_00008_00001), aux94)
reify(gaceq(M_00007_00002,M_00008_00002), aux95)
reify(gaceq(M_00007_00003,M_00008_00003), aux96)
reify(gaceq(M_00007_00005,M_00006_00005), aux97)
reify(gaceq(M_00007_00002,M_00006_00003), aux98)
reify(gaceq(M_00005_00006,M_00006_00005), aux99)
div(M_00003_00004, 13, aux100)
div(M_00003_00005, 13, aux101)
reify(gaceq(M_00007_00005,M_00008_00004), aux102)
div(M_00005_00004, 13, aux103)
reify(gaceq(M_00004_00004,M_00005_00004), aux104)
reify(gaceq(M_00004_00002,M_00005_00002), aux105)
reify(gaceq(M_00007_00005,M_00006_00006), aux106)
div(M_00009_00002, 13, aux107)
div(M_00004_00002, 13, 3)
div(M_00004_00007, 13, aux109)
reify(gaceq(M_00004_00005,M_00005_00005), aux110)
reify(gaceq(M_00002_00009,M_00003_00008), aux111)
reify(gaceq(M_00007_00004,M_00006_00005), aux112)
reify(gaceq(M_00007_00003,M_00006_00003), aux113)
gccweak([M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00003,17),w-literal(M_00002_00007,16),w-literal(M_00002_00006,48),w-literal(M_00002_00008,50),w-literal(M_00002_00009,46)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00007,46),w-literal(M_00002_00008,16),w-literal(M_00002_00009,50)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,46)})})
watched-or({watched-and({w-literal(M_00003_00005,38),modulo(aux115,13,0),w-literal(aux42,1),w-literal(aux58,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux93,1),w-literal(aux111,1)}),watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux25,2),modulo(aux116,13,0)}),w-literal(aux42,1),w-literal(aux60,1),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux111,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),modulo(aux117,13,0),w-literal(aux42,1),w-literal(aux58,1),w-literal(aux61,1),w-literal(aux59,1)}),watched-and({w-literal(M_00003_00003,4),w-literal(M_00003_00004,38),modulo(aux118,13,0),w-literal(aux60,1),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux111,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux42,1),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux111,1),watched-or({modulo(aux119,13,0),gaceq(aux25,aux34)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux42,1),w-literal(aux58,1),w-literal(aux93,1),w-literal(aux111,1),watched-or({modulo(aux120,13,0),gaceq(aux34,aux14)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux42,1),w-literal(aux61,1),w-literal(aux59,1),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux121,13,0),w-literal(aux25,3)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux42,1),w-literal(aux58,1),w-literal(aux61,1),w-literal(aux111,1),watched-or({modulo(aux122,13,0),w-literal(aux14,3)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),gaceq(M_00002_00006,M_00003_00003),w-literal(aux62,1),w-literal(aux93,1),w-literal(aux111,1),watched-or({modulo(aux123,13,0),div(M_00002_00003, 13, aux25)})}),watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux14,2),modulo(aux124,13,0)}),w-literal(aux42,1),w-literal(aux58,1),w-literal(aux61,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux111,1)})})
watched-or({watched-and({watched-or({modulo(aux125,13,0),w-literal(aux101,3)}),w-literal(aux21,1),w-literal(aux23,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux39,1),w-literal(aux55,1),w-literal(aux84,1),w-literal(M_00004_00001,28)}),watched-and({watched-or({modulo(aux126,13,0),w-literal(aux100,2)}),w-literal(aux21,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux87,1),w-literal(aux39,1),w-literal(aux55,1),w-literal(aux84,1),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux23,1),w-literal(aux39,1),w-literal(aux55,1),w-literal(aux84,1),watched-or({modulo(aux127,13,0),gaceq(aux101,aux72)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux23,1),w-literal(aux40,1),w-literal(aux55,1),w-literal(aux84,1),watched-or({modulo(aux128,13,0),gaceq(aux72,aux73)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux23,1),w-literal(aux90,1),w-literal(aux75,1),gaceq(M_00003_00008,M_00004_00005),watched-or({modulo(aux129,13,0),gaceq(aux101,aux43)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux23,1),w-literal(aux40,1),w-literal(aux90,1),w-literal(aux75,1),modulo(aux130,13,0),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux23,1),w-literal(aux40,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux55,1),w-literal(aux84,1),watched-or({modulo(aux131,13,0),gaceq(aux44,aux72)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux87,1),w-literal(aux39,1),w-literal(aux55,1),w-literal(aux84,1),watched-or({modulo(aux132,13,0),gaceq(aux100,aux101)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux23,1),w-literal(aux40,1),w-literal(aux90,1),w-literal(aux84,1),watched-or({modulo(aux133,13,0),gaceq(aux73,aux43)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux21,1),w-literal(aux40,1),w-literal(aux90,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux84,1),watched-or({modulo(aux134,13,0),gaceq(aux100,aux73)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux87,1),w-literal(aux39,1),w-literal(aux55,1),w-literal(aux84,1),watched-or({modulo(aux135,13,0),gaceq(aux44,aux100)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)})})
watched-or({watched-and({w-literal(M_00005_00005,10),modulo(aux136,13,0),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux104,1),w-literal(aux57,1),gaceq(M_00004_00007,M_00005_00007)}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux83,1),w-literal(aux56,1),w-literal(aux26,1),w-literal(aux29,1),w-literal(aux65,1),watched-or({w-literal(aux30,3),modulo(aux137,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux63,1),w-literal(aux104,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux29,1),w-literal(aux65,1),watched-or({w-literal(aux32,3),modulo(aux138,13,0)})}),watched-and({w-literal(M_00005_00007,10),gaceq(M_00004_00002,M_00005_00001),w-literal(aux83,1),w-literal(aux56,1),w-literal(aux26,1),w-literal(aux29,1),w-literal(aux65,1),modulo(aux139,13,0)}),watched-and({w-literal(M_00005_00007,10),w-literal(aux105,1),w-literal(aux63,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux26,1),w-literal(aux29,1),w-literal(aux65,1),watched-or({div(M_00004_00001, 13, aux91),modulo(aux140,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux104,1),w-literal(aux29,1),w-literal(aux65,1),watched-or({gaceq(aux32,aux31),modulo(aux141,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux104,1),w-literal(aux110,1),w-literal(aux65,1),watched-or({gaceq(aux31,aux109),modulo(aux142,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux26,1),w-literal(aux29,1),w-literal(aux65,1),watched-or({gaceq(aux91,aux32),modulo(aux143,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux110,1),w-literal(aux57,1),gaceq(M_00004_00007,M_00005_00004),watched-or({gaceq(aux91,aux109),modulo(aux144,13,0)})}),watched-and({w-literal(M_00005_00007,10),modulo(aux145,13,0),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux63,1),w-literal(aux104,1),w-literal(aux110,1),w-literal(aux57,1)}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux56,1),w-literal(aux26,1),w-literal(aux29,1),w-literal(aux65,1),watched-or({gaceq(aux30,aux91),modulo(aux146,13,0)})}),watched-and({w-literal(M_00005_00007,10),w-literal(aux15,1),w-literal(aux105,1),w-literal(aux104,1),w-literal(aux110,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux65,1),watched-or({gaceq(aux30,aux31),modulo(aux147,13,0)})})})
watched-or({watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux41,1),w-literal(aux78,1),modulo(aux148,13,0)}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux22,1),w-literal(aux74,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux149,13,0),gaceq(aux103,aux81)})}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux150,13,0),gaceq(aux81,aux79)})}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux22,1),w-literal(aux41,1),w-literal(aux78,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux151,13,0),gaceq(aux103,aux45)})}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux41,1),w-literal(aux24,1),watched-or({modulo(aux152,13,0),gaceq(aux79,aux45)})}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux89,1),w-literal(aux74,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux153,13,0),gaceq(aux82,aux103)})}),watched-and({w-literal(aux33,1),w-literal(aux19,1),w-literal(aux76,1),w-literal(aux41,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux24,1),watched-or({modulo(aux154,13,0),gaceq(aux82,aux79)})}),watched-and({w-literal(aux33,1),w-literal(aux77,1),w-literal(aux89,1),w-literal(aux74,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux155,13,0),gaceq(aux80,aux82)})}),watched-and({w-literal(aux33,1),w-literal(aux22,1),w-literal(aux76,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux156,13,0),gaceq(aux80,aux81)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux77,1),w-literal(aux89,1),w-literal(aux74,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux157,13,0),gaceq(aux46,aux80)})}),watched-and({w-literal(aux19,1),w-literal(aux22,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux74,1),w-literal(aux99,1),w-literal(aux24,1),watched-or({modulo(aux158,13,0),gaceq(aux46,aux103)})})})
watched-or({watched-and({w-literal(aux64,1),w-literal(aux20,1),w-literal(aux92,1),w-literal(aux112,1),w-literal(aux106,1),watched-or({gaceq(aux53,aux52),modulo(aux159,13,0)})}),watched-and({w-literal(aux64,1),w-literal(aux20,1),w-literal(aux113,1),w-literal(aux112,1),w-literal(aux106,1),watched-or({gaceq(aux52,aux51),modulo(aux160,13,0)})}),watched-and({w-literal(aux64,1),w-literal(aux20,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux97,1),watched-or({gaceq(aux53,aux71),modulo(aux161,13,0)})}),watched-and({w-literal(aux64,1),w-literal(aux20,1),w-literal(aux113,1),w-literal(aux13,1),w-literal(aux97,1),modulo(aux162,13,0)}),watched-and({w-literal(aux64,1),w-literal(aux20,1),w-literal(aux113,1),w-literal(aux13,1),w-literal(aux106,1),watched-or({gaceq(aux51,aux71),modulo(aux163,13,0)})}),watched-and({w-literal(aux64,1),w-literal(aux98,1),w-literal(aux92,1),w-literal(aux112,1),w-literal(aux106,1),watched-or({gaceq(aux54,aux53),modulo(aux164,13,0)})}),watched-and({w-literal(aux64,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux113,1),w-literal(aux13,1),w-literal(aux106,1),watched-or({gaceq(aux54,aux51),modulo(aux165,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux98,1),w-literal(aux92,1),w-literal(aux112,1),w-literal(aux106,1),watched-or({gaceq(aux70,aux54),modulo(aux166,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux20,1),w-literal(aux113,1),w-literal(aux112,1),w-literal(aux106,1),watched-or({gaceq(aux70,aux52),modulo(aux167,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux168,13,0),gaceq(aux16,aux86)}),w-literal(aux95,1),w-literal(aux96,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux102,1)}),watched-and({modulo(aux169,13,0),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux96,1),w-literal(aux66,1)}),watched-and({watched-or({modulo(aux170,13,0),gaceq(aux16,aux85)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux67,1),w-literal(aux88,1),w-literal(aux102,1)}),watched-and({watched-or({modulo(aux171,13,0),gaceq(aux85,aux18)}),w-literal(aux94,1),w-literal(aux96,1),w-literal(aux66,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux172,13,0),gaceq(aux85,aux17)}),w-literal(aux94,1),w-literal(aux67,1),w-literal(aux88,1),w-literal(aux102,1)}),watched-and({watched-or({modulo(aux173,13,0),gaceq(aux17,aux86)}),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux88,1),w-literal(aux102,1)}),watched-and({watched-or({modulo(aux174,13,0),gaceq(aux86,aux18)}),w-literal(aux94,1),w-literal(aux95,1),w-literal(aux96,1),w-literal(aux102,1)})})
watched-or({watched-and({watched-or({gaceq(aux47,aux50),modulo(aux175,13,0)}),w-literal(aux38,1),w-literal(aux37,1),w-literal(aux36,1)}),watched-and({watched-or({gaceq(aux49,aux48),modulo(aux176,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux68,1),w-literal(aux36,1)}),watched-and({watched-or({gaceq(aux49,aux50),modulo(aux177,13,0)}),w-literal(aux37,1),w-literal(aux69,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux48,aux47),modulo(aux178,13,0)}),w-literal(aux38,1),w-literal(aux68,1),w-literal(aux36,1)}),watched-and({w-literal(aux38,1),w-literal(aux37,1),w-literal(aux69,1),modulo(aux179,13,0)})})
watched-or({watched-and({watched-or({modulo(aux180,13,0),div(M_00009_00001, 13, aux107)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux28,1)}),watched-and({watched-or({modulo(aux181,13,0),div(M_00009_00003, 13, aux107)}),w-literal(aux27,1),w-literal(aux28,1)}),watched-and({modulo(aux182,13,0),w-literal(aux27,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux114),modulo(aux183,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux184,13,0)})})
sumleq([M_00002_00007,-4],aux115)
sumgeq([M_00002_00007,-4],aux115)
sumleq([M_00002_00006,-38],aux116)
sumgeq([M_00002_00006,-38],aux116)
weightedsumleq([-1,1],[M_00002_00009,10],aux117)
weightedsumgeq([-1,1],[M_00002_00009,10],aux117)
weightedsumleq([-1,1],[M_00002_00003,4],aux118)
weightedsumgeq([-1,1],[M_00002_00003,4],aux118)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux119)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux119)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux120)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux120)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux121)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux121)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux122)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux122)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux123)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux123)
sumleq([M_00002_00008,-38],aux124)
sumgeq([M_00002_00008,-38],aux124)
sumleq([M_00003_00005,-49],aux125)
sumgeq([M_00003_00005,-49],aux125)
sumleq([M_00003_00004,-28],aux126)
sumgeq([M_00003_00004,-28],aux126)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux127)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux127)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux128)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux128)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux129)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux129)
weightedsumleq([-1,1],[M_00003_00008,10],aux130)
weightedsumgeq([-1,1],[M_00003_00008,10],aux130)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux131)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux131)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux132)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux132)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux133)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux133)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux134)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux134)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux135)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux135)
weightedsumleq([-1,1],[M_00004_00005,10],aux136)
weightedsumgeq([-1,1],[M_00004_00005,10],aux136)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux137)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux137)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux138)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux138)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux139)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux139)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux140)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux140)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux141)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux141)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux142)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux142)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux143)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux143)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux144)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux144)
weightedsumleq([-1,1],[M_00004_00007,10],aux145)
weightedsumgeq([-1,1],[M_00004_00007,10],aux145)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux146)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux146)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux147)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux147)
weightedsumleq([1,-1],[-1,M_00005_00007],aux148)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux148)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux149)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux149)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux150)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux150)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux151)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux151)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux152)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux152)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux153)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux153)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux154)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux154)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux155)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux155)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux156)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux156)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux157)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux157)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux158)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux158)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux159)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux159)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux160)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux160)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux161)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux161)
weightedsumleq([1,-1],[-1,M_00006_00006],aux162)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux162)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux163)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux163)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux164)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux164)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux165)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux165)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux166)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux166)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux167)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux167)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux168)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux168)
weightedsumleq([-1,1],[M_00007_00005,-1],aux169)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux169)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux170)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux170)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux171)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux171)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux172)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux172)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux173)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux173)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux174)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux174)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux175)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux175)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux176)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux176)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux177)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux177)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux178)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux178)
weightedsumleq([-1,1],[M_00008_00004,-1],aux179)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux179)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux180)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux180)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux181)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux181)
weightedsumleq([1,-1],[-1,M_00009_00003],aux182)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux182)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux183)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux183)
weightedsumleq([-1,1],[M_00010_00002,-1],aux184)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux184)
**EOF**
