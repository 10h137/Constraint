MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 140
# CSE_active_eliminated_expressions = 674
# CSE_active_total_size = 420
**VARIABLES**
DISCRETE M_00002_00003 #
{17..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,22,22])
**VARIABLES**
DISCRETE M_00002_00006 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [17,17,22,22,25,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00007 #
{16..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [16,17,22,22,25,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00008 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00002_00009 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00002_00010 #
{25..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [25,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00002_00011 #
{11..25}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [11,11,16,17,22,22,25,25])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,11,11,16,17,22,22])
**VARIABLES**
DISCRETE M_00003_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [17,17,22,22,25,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00003_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00007 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00008 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00009 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00010 #
{11..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [11,11,16,17,22,22,25,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00004_00001 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [28,28,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{46..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [46,46,48,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00005 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00007 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00008 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00001 #
{28..48}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00005_00002 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00005 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00006 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00007 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00008 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00001 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00005 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00006 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00007 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00005 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00006 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00005 #
{11..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00012_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [4,4,11,11,16,17,22,22,25,25,28,28,38,38,46,46,48,50])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..3}
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
DISCRETE aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00010/13)
{1..3}
BOOL aux17 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux20 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux21 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux24 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux25 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux26 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..3}
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux32 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux33 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00011/13)
BOOL aux39 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux40 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux42 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux43 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux44 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux45 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux46 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux47 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux48 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
DISCRETE aux50 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00010/13)
{0..3}
DISCRETE aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{2..3}
BOOL aux53 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux54 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux59 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux61 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux64 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux66 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux67 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux70 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux71 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux72 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux73 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux76 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux78 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux82 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{1..3}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
DISCRETE aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
BOOL aux87 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux88 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
DISCRETE aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux93 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux94 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{1..3}
DISCRETE aux95 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux96 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux98 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux99 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux101 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux102 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux103 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux104 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux105 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux106 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux107 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux108 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux109 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux110 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux111 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux112 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux114 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux115 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..3}
DISCRETE aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{1..3}
BOOL aux118 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux119 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux120 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux121 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux122 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux123 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux127 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux128 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux129 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux130 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux131 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
DISCRETE aux132 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..3}
DISCRETE aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
DISCRETE aux136 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux137 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux138 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux139 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux140 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux141 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux144 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux145 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..3}
BOOL aux147 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux148 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux149 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux150 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux151 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux152 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux153 #
{0..3}
DISCRETE aux154 #( - M_00002_00006 + M_00002_00007)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux154, [-32,-29,-26,-26,-24,-20,-18,-18,-16,-16,-13,-8,-6,-5,-3,0,2,3,5,6,8,8,10,11,13,13,16,16,18,18,20,21,23,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux155 #( - M_00002_00006 + M_00002_00009)
{-6..33}
**CONSTRAINTS**
w-inintervalset(aux155, [-6,-5,-3,6,8,8,10,13,16,16,18,18,20,29,31,33])
**VARIABLES**
DISCRETE aux156 #( - M_00002_00003 + 4)
{-18..-13}
**CONSTRAINTS**
w-inintervalset(aux156, [-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux157 #( - M_00002_00003 + M_00002_00006)
{-5..31}
**CONSTRAINTS**
w-inintervalset(aux157, [-5,-5,0,0,3,3,5,6,8,8,11,11,16,16,21,21,24,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux158 #(M_00002_00008 + -38)
{-22..12}
**CONSTRAINTS**
w-inintervalset(aux158, [-22,-21,-16,-16,-13,-13,-10,-10,0,0,8,8,10,12])
**VARIABLES**
DISCRETE aux159 #(M_00002_00007 + -4)
{12..44}
**CONSTRAINTS**
w-inintervalset(aux159, [12,13,18,18,21,21,24,24,34,34,42,42,44,44])
**VARIABLES**
DISCRETE aux160 #(M_00002_00006 + -38)
{-21..10}
**CONSTRAINTS**
w-inintervalset(aux160, [-21,-21,-16,-16,-13,-13,-10,-10,0,0,8,8,10,10])
**VARIABLES**
DISCRETE aux161 #( - M_00002_00008 + M_00002_00009)
{-5..34}
**CONSTRAINTS**
w-inintervalset(aux161, [-5,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00009 + M_00002_00010)
{-25..35}
**CONSTRAINTS**
w-inintervalset(aux162, [-25,-20,-18,-18,-13,-10,-8,-8,-4,-2,0,0,3,3,6,6,8,14,16,18,21,22,24,24,27,27,29,30,35,35])
**VARIABLES**
DISCRETE aux163 #( - M_00002_00008 + M_00002_00011)
{-39..9}
**CONSTRAINTS**
w-inintervalset(aux163, [-39,-37,-35,-21,-17,-16,-14,-11,-9,-8,-6,-5,-3,-3,-1,1,3,3,5,6,8,9])
**VARIABLES**
DISCRETE aux164 #( - M_00002_00010 + M_00002_00011)
{-35..-14}
**CONSTRAINTS**
w-inintervalset(aux164, [-35,-35,-30,-29,-27,-27,-24,-24,-22,-21,-17,-16,-14,-14])
**VARIABLES**
DISCRETE aux165 #( - M_00002_00007 + M_00002_00008)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux165, [-32,-29,-26,-26,-24,-20,-18,-18,-16,-16,-13,-8,-6,-5,-3,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux166 #( - M_00002_00007 + M_00002_00010)
{-23..9}
**CONSTRAINTS**
w-inintervalset(aux166, [-23,-23,-21,-20,-18,-18,-13,-13,-10,-10,-8,-8,-3,-2,0,0,3,3,6,6,8,9])
**VARIABLES**
DISCRETE aux167 #( - M_00002_00011 + -1)
{-26..-12}
**CONSTRAINTS**
w-inintervalset(aux167, [-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux168 #( - M_00003_00007 + M_00003_00010)
{-39..30}
**CONSTRAINTS**
w-inintervalset(aux168, [-39,-37,-35,-20,-18,-16,-14,-8,-6,1,3,3,5,6,8,13,16,16,18,18,21,22,24,24,29,30])
**VARIABLES**
DISCRETE aux169 #( - M_00003_00005 + M_00003_00008)
{-37..33}
**CONSTRAINTS**
w-inintervalset(aux169, [-37,-37,-35,-35,-32,-29,-27,-26,-24,-20,-18,-16,-14,-8,-6,-5,-3,6,8,8,10,13,16,16,18,18,20,29,31,33])
**VARIABLES**
DISCRETE aux170 #( - M_00003_00006 + M_00003_00007)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux170, [-32,-20,-18,-18,-16,-16,-13,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux171 #( - M_00003_00004 + M_00003_00005)
{0..44}
**CONSTRAINTS**
w-inintervalset(aux171, [0,1,3,3,5,6,8,14,16,18,20,24,26,27,29,32,34,35,37,37,42,42,44,44])
**VARIABLES**
DISCRETE aux172 #( - M_00003_00009 + M_00003_00010)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux172, [-39,-37,-35,-20,-18,-16,-14,-8,-6,1,3,3,5,6,8,14,16,18,21,22,24,24,27,27,29,30,35,35])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00003 + M_00003_00006)
{-6..32}
**CONSTRAINTS**
w-inintervalset(aux173, [-6,-5,-1,1,3,3,5,6,8,9,11,14,16,18,21,22,24,24,26,32])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00006 + M_00003_00009)
{-37..33}
**CONSTRAINTS**
w-inintervalset(aux174, [-37,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,33])
**VARIABLES**
DISCRETE aux175 #( - M_00003_00005 + M_00003_00006)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux175, [-32,-29,-26,-26,-24,-20,-18,-18,-16,-16,-13,-8,-6,-5,-3,6,8,8,10,13,16,16,18,18,20,29,31,31])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00003 + M_00003_00004)
{-18..34}
**CONSTRAINTS**
w-inintervalset(aux176, [-18,-18,-13,-11,-7,-5,-1,1,3,3,5,9,11,14,16,18,21,22,24,24,27,27,34,34])
**VARIABLES**
DISCRETE aux177 #(M_00003_00004 + -28)
{-24..10}
**CONSTRAINTS**
w-inintervalset(aux177, [-24,-24,-17,-17,-12,-11,-6,-6,-3,-3,0,0,10,10])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00010 + -1)
{-47..-12}
**CONSTRAINTS**
w-inintervalset(aux178, [-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00004 + M_00003_00007)
{-22..46}
**CONSTRAINTS**
w-inintervalset(aux179, [-22,-21,-16,-16,-13,-8,-6,-5,-3,-3,-1,1,3,3,5,6,8,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux180 #(M_00003_00005 + -49)
{-32..-1}
**CONSTRAINTS**
w-inintervalset(aux180, [-32,-32,-27,-27,-24,-24,-21,-21,-11,-11,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux181 #( - M_00003_00007 + M_00003_00008)
{-39..34}
**CONSTRAINTS**
w-inintervalset(aux181, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux182 #( - M_00003_00008 + M_00003_00009)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux182, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35])
**VARIABLES**
DISCRETE aux183 #( - M_00004_00007 + M_00004_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux183, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux184 #( - M_00004_00008 + M_00004_00009)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux184, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux185 #( - M_00004_00006 + M_00004_00007)
{-39..34}
**CONSTRAINTS**
w-inintervalset(aux185, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux186 #( - M_00004_00006 + M_00004_00009)
{-39..34}
**CONSTRAINTS**
w-inintervalset(aux186, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux187 #( - M_00004_00005 + M_00004_00006)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux187, [-34,-20,-18,-18,-16,-16,-13,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00005 + M_00004_00008)
{-39..34}
**CONSTRAINTS**
w-inintervalset(aux188, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00001 + M_00004_00002)
{11..21}
**CONSTRAINTS**
w-inintervalset(aux189, [11,11,18,18,20,21])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00002 + M_00004_00003)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux190, [-45,-44,-42,-42,-38,-37,-35,-35,-33,-29,-27,-26,-24,-23,-21,-20,-18,-18,-11,-10,-8,-8,-3,-1])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00004 + M_00004_00005)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux191, [-32,-29,-26,-26,-24,-20,-18,-18,-16,-16,-13,-8,-6,-5,-3,6,8,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00004 + M_00004_00007)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux192, [-37,-37,-35,-35,-32,-29,-27,-26,-24,-20,-18,-16,-14,-8,-6,-5,-3,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00009 + -1)
{-51..-12}
**CONSTRAINTS**
w-inintervalset(aux193, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00003 + M_00004_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux194, [-44,-44,-42,-42,-37,-37,-35,-34,-32,-29,-27,-26,-24,-20,-18,-16,-14,-5,-3,3,5,14,16,18,20,24,26,27,29,32,34,35,37,37,42,42,44,44])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00001 + M_00004_00004)
{-24..20}
**CONSTRAINTS**
w-inintervalset(aux195, [-24,-24,-22,-21,-17,-16,-13,-10,-6,-6,-3,-3,0,0,8,8,10,10,18,18,20,20])
**VARIABLES**
DISCRETE aux196 #( - M_00004_00002 + M_00004_00005)
{-33..2}
**CONSTRAINTS**
w-inintervalset(aux196, [-33,-29,-27,-26,-24,-23,-21,-20,-18,-18,-11,-10,-8,-8,-3,2])
**VARIABLES**
DISCRETE aux197 #( - M_00004_00003 + M_00004_00006)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux197, [-32,-29,-26,-26,-24,-20,-18,-18,-16,-16,-13,-8,-6,-5,-3,6,8,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux198 #( - M_00005_00002 + M_00005_00003)
{-46..32}
**CONSTRAINTS**
w-inintervalset(aux198, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,32])
**VARIABLES**
DISCRETE aux199 #( - M_00005_00001 + M_00005_00004)
{-34..22}
**CONSTRAINTS**
w-inintervalset(aux199, [-34,-34,-32,-29,-27,-26,-24,-20,-18,-16,-13,-10,-8,-8,-6,-6,-3,-2,0,4,8,8,10,12,18,18,20,22])
**VARIABLES**
DISCRETE aux200 #( - M_00005_00002 + M_00005_00005)
{-38..34}
**CONSTRAINTS**
w-inintervalset(aux200, [-38,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux201 #(-1 - M_00005_00008)
{-51..-12}
**CONSTRAINTS**
w-inintervalset(aux201, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00005 + M_00005_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux202, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux203 #( - M_00005_00006 + M_00005_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux203, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux204 #( - M_00005_00005 + M_00005_00008)
{-39..35}
**CONSTRAINTS**
w-inintervalset(aux204, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00007 + M_00005_00008)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux205, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00004 + M_00005_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux206, [-37,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux207 #( - M_00005_00004 + M_00005_00007)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux207, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00001 + M_00005_00002)
{-22..22}
**CONSTRAINTS**
w-inintervalset(aux208, [-22,-20,-18,-18,-16,-16,-13,-10,-8,-8,-6,-6,-3,-2,0,4,8,8,10,12,18,18,20,22])
**VARIABLES**
DISCRETE aux209 #( - M_00005_00003 + M_00005_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux209, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux210 #( - M_00005_00003 + M_00005_00006)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux210, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux211 #( - M_00006_00001 + M_00006_00004)
{-44..34}
**CONSTRAINTS**
w-inintervalset(aux211, [-44,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux212 #( - M_00006_00004 + M_00006_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux212, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux213 #(-1 - M_00006_00007)
{-51..-12}
**CONSTRAINTS**
w-inintervalset(aux213, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux214 #( - M_00006_00005 + M_00006_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux214, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux215 #( - M_00006_00004 + M_00006_00007)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux215, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux216 #( - M_00006_00006 + M_00006_00007)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux216, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00003 + M_00006_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux217, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00003 + M_00006_00006)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux218, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux219 #( - M_00006_00002 + M_00006_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux219, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux220 #( - M_00006_00002 + M_00006_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux220, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux221 #( - M_00006_00001 + M_00006_00002)
{-45..34}
**CONSTRAINTS**
w-inintervalset(aux221, [-45,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,13,16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux222 #( - M_00007_00004 + M_00007_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux222, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux223 #( - M_00007_00001 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux223, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux224 #( - M_00007_00005 + M_00007_00006)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux224, [-39,-37,-35,-20,-18,-16,-14,-8,-6,6,8,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux225 #( - M_00007_00002 + M_00007_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux225, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux226 #( - M_00007_00003 + M_00007_00006)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux226, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux227 #( - M_00007_00001 + M_00007_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux227, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux228 #( - M_00007_00002 + M_00007_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux228, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux229 #( - M_00007_00006 + -1)
{-51..-12}
**CONSTRAINTS**
w-inintervalset(aux229, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux230 #( - M_00007_00003 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux230, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux231 #( - M_00008_00001 + M_00008_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux231, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux232 #( - M_00008_00002 + M_00008_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux232, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux233 #( - M_00008_00002 + M_00008_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux233, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux234 #( - M_00008_00003 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux234, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux235 #( - M_00008_00005 + -1)
{-51..-12}
**CONSTRAINTS**
w-inintervalset(aux235, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12])
**VARIABLES**
DISCRETE aux236 #( - M_00008_00004 + M_00008_00005)
{-39..46}
**CONSTRAINTS**
w-inintervalset(aux236, [-39,-37,-35,-20,-18,-16,-14,-8,-6,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux237 #( - M_00008_00001 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux237, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux238 #( - M_00009_00003 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux238, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux239 #( - M_00009_00001 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux239, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux240 #( - M_00009_00002 + M_00009_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux240, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux241 #(-1 - M_00009_00004)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux241, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12,-5,-5])
**VARIABLES**
DISCRETE aux242 #( - M_00009_00001 + M_00009_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux242, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux243 #( - M_00010_00001 + M_00010_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux243, [-46,-44,-42,-42,-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39,42,42,44,46])
**VARIABLES**
DISCRETE aux244 #( - M_00010_00002 + M_00010_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux244, [-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux245 #( - M_00010_00003 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux245, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12,-5,-5])
**VARIABLES**
DISCRETE aux246 #( - M_00011_00001 + M_00011_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux246, [-39,-37,-35,-20,-18,-16,-14,14,16,18,20,35,37,39])
**VARIABLES**
DISCRETE aux247 #( - M_00011_00002 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux247, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-26,-23,-23,-18,-17,-12,-12,-5,-5])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[28, 49, 22, 4, 38, 17, 48, 16, 50, 46, 25, 11]
**SEARCH**
PRINT[[M_00002_00003],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux153)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00007, 13, aux15)
div(M_00002_00010, 13, aux16)
reify(gaceq(M_00007_00002,M_00008_00002), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00006, 13, aux19)
reify(gaceq(M_00007_00003,M_00006_00003), aux20)
reify(gaceq(M_00005_00002,M_00006_00002), aux21)
div(M_00010_00002, 13, aux22)
reify(gaceq(M_00008_00002,M_00009_00002), aux23)
reify(gaceq(M_00008_00003,M_00009_00003), aux24)
reify(gaceq(M_00003_00003,M_00004_00003), aux25)
reify(gaceq(M_00005_00007,M_00006_00006), aux26)
div(M_00002_00006, 13, aux27)
div(M_00002_00008, 13, aux28)
reify(gaceq(M_00004_00005,M_00005_00004), aux29)
reify(gaceq(M_00010_00003,M_00009_00003), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
reify(gaceq(M_00004_00006,M_00005_00005), aux32)
reify(gaceq(M_00004_00001,M_00005_00001), aux33)
div(M_00004_00008, 13, aux34)
div(M_00004_00003, 13, aux35)
div(M_00004_00007, 13, aux36)
reify(gaceq(M_00004_00006,M_00005_00006), aux37)
div(M_00002_00011, 13, aux38)
reify(gaceq(M_00002_00003,M_00003_00003), aux39)
reify(gaceq(M_00007_00006,M_00008_00005), aux40)
reify(gaceq(M_00008_00004,M_00009_00003), aux41)
reify(gaceq(M_00003_00006,M_00004_00005), aux42)
reify(gaceq(M_00003_00007,M_00004_00007), aux43)
reify(gaceq(M_00005_00001,M_00006_00001), aux44)
reify(gaceq(M_00005_00006,M_00006_00006), aux45)
reify(gaceq(M_00007_00001,M_00008_00001), aux46)
reify(gaceq(M_00004_00004,M_00005_00004), aux47)
reify(gaceq(M_00004_00005,M_00005_00005), aux48)
div(M_00003_00003, 13, aux49)
div(M_00003_00010, 13, aux50)
div(M_00005_00008, 13, aux51)
div(M_00005_00001, 13, aux52)
reify(gaceq(M_00005_00003,M_00006_00003), aux53)
reify(gaceq(M_00003_00010,M_00004_00009), aux54)
div(M_00008_00003, 13, aux55)
div(M_00008_00001, 13, aux56)
div(M_00008_00005, 13, aux57)
div(M_00006_00006, 13, aux58)
div(M_00006_00005, 13, aux59)
div(M_00006_00003, 13, aux60)
div(M_00006_00002, 13, aux61)
reify(gaceq(M_00010_00003,M_00011_00002), aux62)
reify(gaceq(M_00010_00001,M_00011_00001), aux63)
reify(gaceq(M_00003_00007,M_00004_00006), aux64)
reify(gaceq(M_00004_00004,M_00005_00003), aux65)
reify(gaceq(M_00005_00004,M_00006_00004), aux66)
reify(gaceq(M_00002_00006,M_00003_00005), aux67)
reify(gaceq(M_00002_00010,M_00003_00010), aux68)
reify(gaceq(M_00002_00008,M_00003_00008), aux69)
reify(gaceq(M_00002_00007,M_00003_00006), aux70)
reify(gaceq(M_00002_00009,M_00003_00009), aux71)
reify(gaceq(M_00004_00007,M_00005_00006), aux72)
reify(gaceq(M_00007_00006,M_00006_00007), aux73)
reify(gaceq(M_00007_00005,M_00008_00005), aux74)
reify(gaceq(M_00007_00003,M_00008_00002), aux75)
reify(gaceq(M_00008_00003,M_00009_00002), aux76)
reify(gaceq(M_00008_00004,M_00009_00004), aux77)
reify(gaceq(M_00005_00008,M_00006_00007), aux78)
reify(gaceq(M_00010_00001,M_00009_00001), aux79)
reify(gaceq(M_00010_00002,M_00009_00002), aux80)
reify(gaceq(M_00010_00003,M_00009_00004), aux81)
div(M_00006_00004, 13, aux82)
div(M_00006_00001, 13, aux83)
div(M_00006_00007, 13, aux84)
div(M_00003_00008, 13, aux85)
div(M_00003_00009, 13, aux86)
reify(gaceq(M_00005_00005,M_00006_00004), aux87)
reify(gaceq(M_00005_00005,M_00006_00005), aux88)
reify(gaceq(M_00003_00009,M_00004_00009), aux89)
reify(gaceq(M_00005_00003,M_00006_00002), aux90)
reify(gaceq(M_00005_00007,M_00006_00007), aux91)
div(M_00005_00007, 13, aux92)
div(M_00005_00006, 13, aux93)
div(M_00005_00002, 13, aux94)
div(M_00005_00003, 13, aux95)
reify(gaceq(M_00004_00008,M_00005_00008), aux96)
reify(gaceq(M_00004_00003,M_00005_00002), aux97)
reify(gaceq(M_00003_00008,M_00004_00007), aux98)
reify(gaceq(M_00004_00008,M_00005_00007), aux99)
div(M_00007_00002, 13, aux100)
div(M_00007_00004, 13, aux101)
div(M_00007_00003, 13, aux102)
div(M_00007_00005, 13, aux103)
reify(gaceq(M_00007_00002,M_00006_00002), aux104)
reify(gaceq(M_00004_00009,M_00005_00008), aux105)
reify(gaceq(M_00007_00001,M_00006_00001), aux106)
reify(gaceq(M_00008_00005,M_00009_00004), aux107)
reify(gaceq(M_00008_00001,M_00009_00001), aux108)
reify(gaceq(M_00002_00011,M_00003_00010), aux109)
reify(gaceq(M_00003_00009,M_00004_00008), aux110)
reify(gaceq(M_00003_00005,M_00004_00004), aux111)
reify(gaceq(M_00007_00004,M_00008_00003), aux112)
reify(gaceq(M_00005_00004,M_00006_00003), aux113)
reify(gaceq(M_00003_00008,M_00004_00008), aux114)
div(M_00004_00004, 13, aux115)
div(M_00004_00005, 13, aux116)
div(M_00004_00006, 13, aux117)
reify(gaceq(M_00003_00005,M_00004_00005), aux118)
reify(gaceq(M_00007_00003,M_00006_00004), aux119)
reify(gaceq(M_00003_00006,M_00004_00006), aux120)
reify(gaceq(M_00004_00002,M_00005_00002), aux121)
reify(gaceq(M_00002_00006,M_00003_00006), aux122)
reify(gaceq(M_00002_00008,M_00003_00007), aux123)
div(M_00008_00004, 13, aux124)
div(M_00008_00002, 13, aux125)
reify(gaceq(M_00007_00004,M_00008_00004), aux126)
reify(gaceq(M_00007_00006,M_00006_00006), aux127)
reify(gaceq(M_00007_00002,M_00006_00003), aux128)
reify(gaceq(M_00005_00006,M_00006_00005), aux129)
reify(gaceq(M_00007_00003,M_00008_00003), aux130)
div(M_00003_00007, 13, aux131)
div(M_00003_00004, 13, aux132)
div(M_00003_00006, 13, aux133)
div(M_00003_00005, 13, aux134)
reify(gaceq(M_00007_00005,M_00008_00004), aux135)
div(M_00005_00004, 13, aux136)
div(M_00005_00005, 13, aux137)
reify(gaceq(M_00004_00003,M_00005_00003), aux138)
reify(gaceq(M_00007_00005,M_00006_00006), aux139)
reify(gaceq(M_00002_00010,M_00003_00009), aux140)
div(M_00009_00003, 13, aux141)
div(M_00009_00004, 13, aux142)
div(M_00009_00001, 13, aux143)
div(M_00009_00002, 13, aux144)
div(M_00004_00009, 13, aux145)
div(M_00004_00002, 13, 3)
reify(gaceq(M_00004_00007,M_00005_00007), aux147)
reify(gaceq(M_00007_00004,M_00006_00004), aux148)
reify(gaceq(M_00002_00009,M_00003_00008), aux149)
reify(gaceq(M_00007_00004,M_00006_00005), aux150)
reify(gaceq(M_00002_00007,M_00003_00007), aux151)
reify(gaceq(M_00003_00004,M_00004_00004), aux152)
gccweak([M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00007,46),w-literal(M_00002_00008,16),w-literal(M_00002_00009,50),w-literal(M_00002_00010,25),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,11),w-literal(M_00002_00010,46),w-literal(M_00002_00011,25)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,46),w-literal(M_00002_00010,25),w-literal(M_00002_00011,11)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00007,48),w-literal(M_00002_00008,25),w-literal(M_00002_00009,50),w-literal(M_00002_00011,11),w-literal(M_00002_00010,46)}),watched-and({w-literal(M_00002_00003,17),w-literal(M_00002_00007,16),w-literal(M_00002_00006,48),w-literal(M_00002_00008,50),w-literal(M_00002_00009,46),w-literal(M_00002_00010,25),w-literal(M_00002_00011,11)})})
watched-or({watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux154,13,0),gaceq(aux27,aux15)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux151,1),w-literal(aux69,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux155,13,0),gaceq(aux27,aux14)})}),watched-and({w-literal(M_00003_00003,4),w-literal(M_00003_00004,38),modulo(aux156,13,0),w-literal(aux67,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),gaceq(M_00002_00006,M_00003_00003),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux157,13,0),div(M_00002_00003, 13, aux27)})}),watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux28,2),modulo(aux158,13,0)}),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1)}),watched-and({w-literal(M_00003_00005,38),modulo(aux159,13,0),w-literal(aux39,1),w-literal(aux122,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1)}),watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux27,2),modulo(aux160,13,0)}),w-literal(aux39,1),w-literal(aux67,1),w-literal(aux70,1),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux161,13,0),gaceq(aux28,aux14)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),w-literal(aux69,1),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux162,13,0),gaceq(aux14,aux16)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),w-literal(aux71,1),w-literal(aux68,1),gaceq(M_00002_00011,M_00003_00008),watched-or({modulo(aux163,13,0),gaceq(aux28,aux38)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),w-literal(aux69,1),w-literal(aux71,1),w-literal(aux109,1),watched-or({modulo(aux164,13,0),gaceq(aux16,aux38)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux123,1),w-literal(aux149,1),w-literal(aux140,1),w-literal(aux109,1),watched-or({modulo(aux165,13,0),gaceq(aux15,aux28)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux69,1),w-literal(aux71,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux109,1),watched-or({modulo(aux166,13,0),gaceq(aux15,aux16)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),modulo(aux167,13,0),w-literal(aux39,1),w-literal(aux122,1),w-literal(aux151,1),w-literal(aux69,1),w-literal(aux71,1),w-literal(aux68,1)})})
watched-or({watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux114,1),w-literal(aux89,1),gaceq(M_00003_00010,M_00004_00007),watched-or({modulo(aux168,13,0),gaceq(aux131,aux50)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux120,1),w-literal(aux43,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux169,13,0),gaceq(aux134,aux85)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux170,13,0),gaceq(aux133,aux131)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux111,1),w-literal(aux42,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux171,13,0),gaceq(aux132,aux134)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux43,1),w-literal(aux114,1),w-literal(aux54,1),watched-or({modulo(aux172,13,0),gaceq(aux86,aux50)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux152,1),w-literal(aux118,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux173,13,0),gaceq(aux49,aux133)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux43,1),w-literal(aux114,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux54,1),watched-or({modulo(aux174,13,0),gaceq(aux133,aux86)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux42,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux175,13,0),gaceq(aux134,aux133)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux111,1),w-literal(aux42,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux176,13,0),gaceq(aux49,aux132)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({watched-or({modulo(aux177,13,0),w-literal(aux132,2)}),w-literal(aux25,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux111,1),w-literal(aux42,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux43,1),w-literal(aux114,1),w-literal(aux89,1),modulo(aux178,13,0),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux118,1),w-literal(aux120,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux179,13,0),gaceq(aux132,aux131)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({watched-or({modulo(aux180,13,0),w-literal(aux134,3)}),w-literal(aux25,1),w-literal(aux152,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux42,1),w-literal(aux64,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),w-literal(M_00004_00001,28)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux98,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux181,13,0),gaceq(aux131,aux85)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux25,1),w-literal(aux152,1),w-literal(aux118,1),w-literal(aux120,1),w-literal(aux43,1),w-literal(aux110,1),w-literal(aux54,1),watched-or({modulo(aux182,13,0),gaceq(aux85,aux86)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)})})
watched-or({watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux37,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux36,aux34),modulo(aux183,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux37,1),w-literal(aux147,1),w-literal(aux105,1),watched-or({gaceq(aux34,aux145),modulo(aux184,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux117,aux36),modulo(aux185,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux147,1),w-literal(aux96,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux117,aux145),modulo(aux186,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux116,aux117),modulo(aux187,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux37,1),w-literal(aux147,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux105,1),watched-or({gaceq(aux116,aux34),modulo(aux188,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux97,1),w-literal(aux65,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),modulo(aux189,13,0)}),watched-and({w-literal(aux33,1),w-literal(aux97,1),w-literal(aux65,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({w-literal(aux35,3),modulo(aux190,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux115,aux116),modulo(aux191,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux48,1),w-literal(aux37,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux115,aux36),modulo(aux192,13,0)})}),watched-and({modulo(aux193,13,0),w-literal(aux33,1),w-literal(aux121,1),w-literal(aux138,1),w-literal(aux47,1),w-literal(aux48,1),w-literal(aux37,1),w-literal(aux147,1),w-literal(aux96,1)}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux65,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux35,aux115),modulo(aux194,13,0)})}),watched-and({w-literal(aux121,1),w-literal(aux138,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({div(M_00004_00001, 13, aux115),modulo(aux195,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux138,1),w-literal(aux47,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux32,1),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({w-literal(aux116,3),modulo(aux196,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux121,1),w-literal(aux47,1),w-literal(aux48,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux72,1),w-literal(aux99,1),w-literal(aux105,1),watched-or({gaceq(aux35,aux117),modulo(aux197,13,0)})})})
watched-or({watched-and({w-literal(aux44,1),w-literal(aux90,1),w-literal(aux113,1),w-literal(aux87,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux198,13,0),gaceq(aux94,aux95)})}),watched-and({w-literal(aux21,1),w-literal(aux53,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux87,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux199,13,0),gaceq(aux52,aux136)})}),watched-and({w-literal(aux44,1),w-literal(aux53,1),w-literal(aux66,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux200,13,0),gaceq(aux94,aux137)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux66,1),w-literal(aux88,1),w-literal(aux45,1),w-literal(aux91,1),modulo(aux201,13,0)}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux66,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux202,13,0),gaceq(aux137,aux93)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux66,1),w-literal(aux88,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux203,13,0),gaceq(aux93,aux92)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux66,1),w-literal(aux45,1),w-literal(aux91,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux204,13,0),gaceq(aux137,aux51)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux66,1),w-literal(aux88,1),w-literal(aux45,1),w-literal(aux78,1),watched-or({modulo(aux205,13,0),gaceq(aux92,aux51)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux87,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux206,13,0),gaceq(aux136,aux137)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux53,1),w-literal(aux88,1),w-literal(aux45,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux78,1),watched-or({modulo(aux207,13,0),gaceq(aux136,aux92)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux90,1),w-literal(aux113,1),w-literal(aux87,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux208,13,0),gaceq(aux52,aux94)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux113,1),w-literal(aux87,1),w-literal(aux129,1),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux209,13,0),gaceq(aux95,aux136)})}),watched-and({w-literal(aux44,1),w-literal(aux21,1),w-literal(aux66,1),w-literal(aux88,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux26,1),w-literal(aux78,1),watched-or({modulo(aux210,13,0),gaceq(aux95,aux93)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux104,1),w-literal(aux20,1),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux83,aux82),modulo(aux211,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux20,1),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux82,aux59),modulo(aux212,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux20,1),w-literal(aux148,1),w-literal(aux13,1),w-literal(aux127,1),modulo(aux213,13,0)}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux20,1),w-literal(aux148,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux59,aux58),modulo(aux214,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux20,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux127,1),watched-or({gaceq(aux82,aux84),modulo(aux215,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux20,1),w-literal(aux148,1),w-literal(aux13,1),w-literal(aux73,1),watched-or({gaceq(aux58,aux84),modulo(aux216,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),w-literal(aux119,1),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux60,aux82),modulo(aux217,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux104,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux148,1),w-literal(aux13,1),w-literal(aux73,1),watched-or({gaceq(aux60,aux58),modulo(aux218,13,0)})}),watched-and({w-literal(aux106,1),w-literal(aux128,1),w-literal(aux119,1),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux61,aux60),modulo(aux219,13,0)})}),watched-and({w-literal(aux106,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux20,1),w-literal(aux148,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux61,aux59),modulo(aux220,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux128,1),w-literal(aux119,1),w-literal(aux150,1),w-literal(aux139,1),w-literal(aux73,1),watched-or({gaceq(aux83,aux61),modulo(aux221,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux222,13,0),gaceq(aux101,aux103)}),w-literal(aux46,1),w-literal(aux17,1),w-literal(aux130,1),w-literal(aux135,1),w-literal(aux40,1)}),watched-and({watched-or({modulo(aux223,13,0),gaceq(aux18,aux101)}),w-literal(aux17,1),w-literal(aux130,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux135,1),w-literal(aux40,1)}),watched-and({watched-or({modulo(aux224,13,0),gaceq(aux103,aux19)}),w-literal(aux46,1),w-literal(aux17,1),w-literal(aux130,1),w-literal(aux126,1),w-literal(aux40,1)}),watched-and({watched-or({modulo(aux225,13,0),gaceq(aux100,aux103)}),w-literal(aux46,1),w-literal(aux130,1),w-literal(aux126,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux40,1)}),watched-and({watched-or({modulo(aux226,13,0),gaceq(aux102,aux19)}),w-literal(aux46,1),w-literal(aux17,1),w-literal(aux126,1),w-literal(aux74,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux227,13,0),gaceq(aux18,aux100)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux75,1),w-literal(aux112,1),w-literal(aux135,1),w-literal(aux40,1)}),watched-and({watched-or({modulo(aux228,13,0),gaceq(aux100,aux102)}),w-literal(aux46,1),w-literal(aux75,1),w-literal(aux112,1),w-literal(aux135,1),w-literal(aux40,1)}),watched-and({modulo(aux229,13,0),w-literal(aux46,1),w-literal(aux17,1),w-literal(aux130,1),w-literal(aux126,1),w-literal(aux74,1)}),watched-and({watched-or({modulo(aux230,13,0),gaceq(aux102,aux101)}),w-literal(aux46,1),w-literal(aux17,1),w-literal(aux112,1),w-literal(aux135,1),w-literal(aux40,1)})})
watched-or({watched-and({watched-or({gaceq(aux56,aux125),modulo(aux231,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux76,1),w-literal(aux41,1),w-literal(aux107,1)}),watched-and({watched-or({gaceq(aux125,aux57),modulo(aux232,13,0)}),w-literal(aux108,1),w-literal(aux24,1),w-literal(aux77,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux125,aux55),modulo(aux233,13,0)}),w-literal(aux108,1),w-literal(aux76,1),w-literal(aux41,1),w-literal(aux107,1)}),watched-and({watched-or({gaceq(aux55,aux124),modulo(aux234,13,0)}),w-literal(aux108,1),w-literal(aux23,1),w-literal(aux41,1),w-literal(aux107,1)}),watched-and({w-literal(aux108,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux77,1),modulo(aux235,13,0)}),watched-and({watched-or({gaceq(aux124,aux57),modulo(aux236,13,0)}),w-literal(aux108,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux107,1)}),watched-and({watched-or({gaceq(aux56,aux124),modulo(aux237,13,0)}),w-literal(aux23,1),w-literal(aux24,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux107,1)})})
watched-or({watched-and({watched-or({modulo(aux238,13,0),gaceq(aux141,aux142)}),w-literal(aux79,1),w-literal(aux80,1),w-literal(aux81,1)}),watched-and({watched-or({modulo(aux239,13,0),gaceq(aux143,aux142)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux80,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux240,13,0),gaceq(aux144,aux141)}),w-literal(aux79,1),w-literal(aux31,1),w-literal(aux81,1)}),watched-and({modulo(aux241,13,0),w-literal(aux79,1),w-literal(aux80,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux242,13,0),gaceq(aux143,aux144)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1),w-literal(aux81,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux62,1),watched-or({div(M_00010_00001, 13, aux22),modulo(aux243,13,0)})}),watched-and({w-literal(aux63,1),w-literal(aux62,1),watched-or({div(M_00010_00003, 13, aux22),modulo(aux244,13,0)})}),watched-and({w-literal(aux63,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux245,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux153),modulo(aux246,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux247,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux154)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux155)
weightedsumleq([-1,1],[M_00002_00003,4],aux156)
weightedsumgeq([-1,1],[M_00002_00003,4],aux156)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux157)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux157)
sumleq([M_00002_00008,-38],aux158)
sumgeq([M_00002_00008,-38],aux158)
sumleq([M_00002_00007,-4],aux159)
sumgeq([M_00002_00007,-4],aux159)
sumleq([M_00002_00006,-38],aux160)
sumgeq([M_00002_00006,-38],aux160)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux161)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux161)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux162)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux162)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux163)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux163)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux164)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux164)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux165)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux165)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux166)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux166)
weightedsumleq([-1,1],[M_00002_00011,-1],aux167)
weightedsumgeq([-1,1],[M_00002_00011,-1],aux167)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux168)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux168)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux169)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux169)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux170)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux170)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux171)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux171)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux172)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux172)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux173)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux173)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux174)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux174)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux175)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux175)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux176)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux176)
sumleq([M_00003_00004,-28],aux177)
sumgeq([M_00003_00004,-28],aux177)
weightedsumleq([-1,1],[M_00003_00010,-1],aux178)
weightedsumgeq([-1,1],[M_00003_00010,-1],aux178)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux179)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux179)
sumleq([M_00003_00005,-49],aux180)
sumgeq([M_00003_00005,-49],aux180)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux181)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux181)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux182)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux182)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux183)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux183)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux184)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux184)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux185)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux185)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux186)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux186)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux187)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux187)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux188)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux188)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux189)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux189)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux190)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux190)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux191)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux191)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux192)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux192)
weightedsumleq([-1,1],[M_00004_00009,-1],aux193)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux193)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux194)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux194)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux195)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux195)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux196)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux196)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux197)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux197)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux198)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux198)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux199)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux199)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux200)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux200)
weightedsumleq([1,-1],[-1,M_00005_00008],aux201)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux201)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux202)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux202)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux203)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux203)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux204)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux204)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux205)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux205)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux206)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux206)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux207)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux207)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux208)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux208)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux209)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux209)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux210)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux210)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux211)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux211)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux212)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux212)
weightedsumleq([1,-1],[-1,M_00006_00007],aux213)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux213)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux214)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux214)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux215)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux215)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux216)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux216)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux217)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux217)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux218)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux218)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux219)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux219)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux220)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux220)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux221)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux221)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux222)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux222)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux223)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux223)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux224)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux224)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux225)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux225)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux226)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux226)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux227)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux227)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux228)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux228)
weightedsumleq([-1,1],[M_00007_00006,-1],aux229)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux229)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux230)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux230)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux231)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux231)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux232)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux232)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux233)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux233)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux234)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux234)
weightedsumleq([-1,1],[M_00008_00005,-1],aux235)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux235)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux236)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux236)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux237)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux237)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux238)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux238)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux239)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux239)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux240)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux240)
weightedsumleq([1,-1],[-1,M_00009_00004],aux241)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux241)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux242)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux242)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux243)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux243)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux244)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux244)
weightedsumleq([-1,1],[M_00010_00003,-1],aux245)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux245)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux246)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux246)
weightedsumleq([-1,1],[M_00011_00002,-1],aux247)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux247)
**EOF**
