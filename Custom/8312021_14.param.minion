MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 210
# CSE_active_eliminated_expressions = 1209
# CSE_active_total_size = 630
**VARIABLES**
DISCRETE M_00002_00003 #
{17..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [17,17,22,22])
**VARIABLES**
DISCRETE M_00002_00006 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [17,17,22,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00007 #
{16..48}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [16,17,22,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00002_00008 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00002_00009 #
{24..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [24,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00002_00010 #
{25..46}
**CONSTRAINTS**
w-inintervalset(M_00002_00010, [25,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00002_00011 #
{13..25}
**CONSTRAINTS**
w-inintervalset(M_00002_00011, [13,13,16,17,22,25])
**VARIABLES**
DISCRETE M_00002_00012 #
{23..24}
DISCRETE M_00002_00013 #
{13..23}
**CONSTRAINTS**
w-inintervalset(M_00002_00013, [13,13,16,17,22,23])
**VARIABLES**
DISCRETE M_00003_00003 #
{4..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [4,4,13,13,16,17,22,22])
**VARIABLES**
DISCRETE M_00003_00004 #
{4..38}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [4,4,13,13,16,17,22,25,28,28,38,38])
**VARIABLES**
DISCRETE M_00003_00005 #
{17..48}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [17,17,22,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00003_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00007 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00008 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00009 #
{23..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [23,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00003_00010 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00003_00010, [13,13,16,17,22,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00003_00011 #
{13..25}
**CONSTRAINTS**
w-inintervalset(M_00003_00011, [13,13,16,17,22,25])
**VARIABLES**
DISCRETE M_00003_00012 #
{13..23}
**CONSTRAINTS**
w-inintervalset(M_00003_00012, [13,13,16,17,22,23])
**VARIABLES**
DISCRETE M_00004_00001 #
{28..38}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [28,28,38,38])
**VARIABLES**
DISCRETE M_00004_00002 #
{23..49}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [23,25,28,28,38,38,46,46,48,49])
**VARIABLES**
DISCRETE M_00004_00003 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00004 #
{4..48}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00004_00005 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00006 #
{16..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00007 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00008 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00009 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00004_00010 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00004_00010, [13,13,16,17,22,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00004_00011 #
{13..25}
**CONSTRAINTS**
w-inintervalset(M_00004_00011, [13,13,16,17,22,25])
**VARIABLES**
DISCRETE M_00005_00001 #
{23..48}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [23,25,28,28,38,38,46,46,48,48])
**VARIABLES**
DISCRETE M_00005_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00006 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00007 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00008 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00009 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00009, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00005_00010 #
{13..46}
**CONSTRAINTS**
w-inintervalset(M_00005_00010, [13,13,16,17,22,25,28,28,38,38,46,46])
**VARIABLES**
DISCRETE M_00006_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00006 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00007 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00008 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00008, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00006_00009 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00009, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00006 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00007 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00007, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00007_00008 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00008, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00006 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00006, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00008_00007 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00007, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00009_00006 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00006, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00010_00005 #
{13..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00005, [13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00011_00004 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00011_00004, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00012_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00012_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00012_00003 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00012_00003, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00013_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00013_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00013_00002 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00013_00002, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
DISCRETE M_00014_00001 #
{4..50}
**CONSTRAINTS**
w-inintervalset(M_00014_00001, [4,4,13,13,16,17,22,25,28,28,38,38,46,46,48,50])
**VARIABLES**
BOOL aux13 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux14 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00007)
DISCRETE aux15 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
BOOL aux18 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00009)
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008/13)
{1..3}
BOOL aux21 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005/13)
{1..3}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001/13)
{0..3}
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003/13)
{0..3}
BOOL aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00005)
DISCRETE aux26 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00002/13)
{0..3}
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00010/13)
{1..3}
BOOL aux28 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
DISCRETE aux30 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..3}
DISCRETE aux31 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00009/13)
{1..3}
BOOL aux32 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00005=M_00011_00004)
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux34 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux35 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux36 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux37 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00005)
BOOL aux38 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00005)
BOOL aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux41 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux42 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux43 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00009/13)
{1..3}
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{1..3}
DISCRETE aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00010/13)
{1..3}
BOOL aux48 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00010)
BOOL aux49 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00007=M_00006_00008)
BOOL aux50 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux51 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux52 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux53 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux54 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00009)
BOOL aux56 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00002)
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003=M_00012_00003)
BOOL aux59 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux60 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux61 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00009)
BOOL aux62 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00009)
BOOL aux63 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux64 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00011)
BOOL aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00002=M_00012_00002)
BOOL aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00001=M_00012_00001)
BOOL aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00011_00004=M_00012_00003)
BOOL aux68 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00008)
DISCRETE aux69 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00003)
BOOL aux72 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003/13)
BOOL aux73 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00010)
DISCRETE aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{1..3}
DISCRETE aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00010/13)
{1..3}
BOOL aux76 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00009)
BOOL aux77 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux78 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
DISCRETE aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00007/13)
{1..3}
BOOL aux81 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
DISCRETE aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00008/13)
{1..3}
DISCRETE aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00007/13)
{1..3}
DISCRETE aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux86 #Active-CSE: 14 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux87 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00008)
BOOL aux88 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00004=M_00011_00004)
BOOL aux90 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00005_00010=M_00006_00009)
BOOL aux91 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux92 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00002=M_00011_00002)
BOOL aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00003)
BOOL aux94 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00012=M_00004_00011)
BOOL aux95 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00010_00004=M_00009_00004)
BOOL aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux97 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux98 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00012=M_00003_00012)
BOOL aux99 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux100 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00011)
BOOL aux101 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux102 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux103 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00005/13)
{1..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
BOOL aux108 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux109 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00007)
DISCRETE aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00001/13)
{0..3}
DISCRETE aux112 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00002/13)
{0..3}
DISCRETE aux113 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00003/13)
{0..3}
DISCRETE aux114 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00011_00004/13)
{0..3}
BOOL aux115 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00006)
BOOL aux116 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux117 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux118 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux119 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux120 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00005/13)
{1..3}
DISCRETE aux121 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00006/13)
{1..3}
DISCRETE aux122 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux123 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00009/13)
{1..3}
BOOL aux124 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00010/13)
{1..3}
BOOL aux127 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux128 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux129 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00011=M_00004_00011)
BOOL aux131 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux133 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00009=M_00006_00009)
DISCRETE aux134 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00004/13)
{0..3}
DISCRETE aux135 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux136 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux137 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
DISCRETE aux138 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00009/13)
{1..3}
DISCRETE aux139 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00008/13)
{1..3}
DISCRETE aux140 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
DISCRETE aux141 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux142 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00010=M_00005_00010)
BOOL aux143 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux144 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux145 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux146 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux147 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
BOOL aux148 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00013=M_00003_00012)
BOOL aux149 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux150 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux151 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux152 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00006/13)
{1..3}
DISCRETE aux153 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00007/13)
{1..3}
BOOL aux154 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux155 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux157 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00010=M_00004_00010)
DISCRETE aux158 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux159 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005/13)
{1..3}
BOOL aux160 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00004_00011=M_00005_00010)
BOOL aux161 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00011=M_00003_00010)
BOOL aux162 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
BOOL aux163 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux164 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux165 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux166 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00010_00005=M_00009_00006)
BOOL aux167 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux168 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
DISCRETE aux169 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007/13)
{1..3}
DISCRETE aux170 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00008/13)
{1..3}
DISCRETE aux171 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux172 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{1..3}
DISCRETE aux173 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{1..3}
BOOL aux174 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux175 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux176 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00008_00006=M_00009_00005)
BOOL aux177 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux178 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux179 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux180 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux181 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux182 #Active-CSE: 16 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux183 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux184 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00005/13)
{1..3}
DISCRETE aux185 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00006/13)
{1..3}
DISCRETE aux186 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux187 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux188 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00008=M_00006_00008)
BOOL aux189 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux190 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00006)
BOOL aux191 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux192 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00009/13)
{1..3}
DISCRETE aux193 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{1..3}
DISCRETE aux194 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00008/13)
{1..3}
DISCRETE aux195 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux196 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..3}
DISCRETE aux197 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{1..3}
BOOL aux198 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00007=M_00008_00006)
BOOL aux199 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux200 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux201 #Active-CSE: 15 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux202 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux203 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux204 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00001=M_00013_00001)
BOOL aux205 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00012_00003=M_00013_00002)
DISCRETE aux206 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux207 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{1..3}
DISCRETE aux208 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006/13)
{1..3}
DISCRETE aux209 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00007/13)
{1..3}
BOOL aux210 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00007_00008=M_00008_00007)
BOOL aux211 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
BOOL aux212 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00010=M_00003_00009)
DISCRETE aux213 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00006/13)
{1..3}
DISCRETE aux214 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
BOOL aux215 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00008_00007=M_00009_00006)
BOOL aux218 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00009)
BOOL aux219 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux220 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux221 #Active-CSE: 17 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux222 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
DISCRETE aux223 #
{0..3}
DISCRETE aux224 #(M_00002_00008 + -38)
{-22..12}
**CONSTRAINTS**
w-inintervalset(aux224, [-22,-21,-16,-13,-10,-10,0,0,8,8,10,12])
**VARIABLES**
DISCRETE aux225 #( - M_00002_00006 + M_00002_00007)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux225, [-32,-29,-26,-20,-18,-18,-16,8,10,11,13,16,18,18,20,26,29,29,31,31])
**VARIABLES**
DISCRETE aux226 #( - M_00002_00008 + M_00002_00009)
{-4..34}
**CONSTRAINTS**
w-inintervalset(aux226, [-4,16,18,18,20,34])
**VARIABLES**
DISCRETE aux227 #( - M_00002_00008 + M_00002_00011)
{-26..9}
**CONSTRAINTS**
w-inintervalset(aux227, [-26,-21,-16,3,5,9])
**VARIABLES**
DISCRETE aux228 #( - M_00002_00013 + -1)
{-24..-14}
**CONSTRAINTS**
w-inintervalset(aux228, [-24,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux229 #(M_00002_00006 + -38)
{-21..10}
**CONSTRAINTS**
w-inintervalset(aux229, [-21,-21,-16,-13,-10,-10,0,0,8,8,10,10])
**VARIABLES**
DISCRETE aux230 #(M_00002_00007 + -4)
{12..44}
**CONSTRAINTS**
w-inintervalset(aux230, [12,13,18,21,24,24,34,34,42,42,44,44])
**VARIABLES**
DISCRETE aux231 #( - M_00002_00007 + M_00002_00008)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux231, [-32,-29,-26,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux232 #( - M_00002_00003 + 4)
{-18..-13}
**CONSTRAINTS**
w-inintervalset(aux232, [-18,-18,-13,-13])
**VARIABLES**
DISCRETE aux233 #( - M_00002_00006 + M_00002_00009)
{-2..33}
**CONSTRAINTS**
w-inintervalset(aux233, [-2,8,10,16,18,18,20,29,31,33])
**VARIABLES**
DISCRETE aux234 #( - M_00002_00007 + M_00002_00010)
{-23..9}
**CONSTRAINTS**
w-inintervalset(aux234, [-23,-23,-21,-20,-18,-18,-13,-13,-10,-10,-8,-8,-3,-2,0,6,8,9])
**VARIABLES**
DISCRETE aux235 #( - M_00002_00010 + M_00002_00011)
{-33..-1}
**CONSTRAINTS**
w-inintervalset(aux235, [-33,-33,-30,-29,-25,-21,-16,-11,-9,-8,-6,-1])
**VARIABLES**
DISCRETE aux236 #( - M_00002_00010 + M_00002_00013)
{-33..-12}
**CONSTRAINTS**
w-inintervalset(aux236, [-33,-33,-30,-29,-25,-21,-16,-15,-12,-12])
**VARIABLES**
DISCRETE aux237 #( - M_00002_00009 + M_00002_00010)
{-25..22}
**CONSTRAINTS**
w-inintervalset(aux237, [-25,-20,-18,-18,-13,-10,-8,-8,-4,-2,0,1,3,4,8,8,10,10,13,14,18,18,21,22])
**VARIABLES**
DISCRETE aux238 #( - M_00002_00009 + M_00002_00012)
{-27..-1}
**CONSTRAINTS**
w-inintervalset(aux238, [-27,-22,-15,-14,-5,-4,-2,-1])
**VARIABLES**
DISCRETE aux239 #( - M_00002_00003 + M_00002_00006)
{-5..31}
**CONSTRAINTS**
w-inintervalset(aux239, [-5,-5,0,3,5,8,11,11,16,16,21,21,24,24,26,26,29,29,31,31])
**VARIABLES**
DISCRETE aux240 #( - M_00003_00012 + -1)
{-24..-14}
**CONSTRAINTS**
w-inintervalset(aux240, [-24,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux241 #( - M_00003_00009 + M_00003_00010)
{-37..23}
**CONSTRAINTS**
w-inintervalset(aux241, [-37,-20,-18,-18,-16,5,8,8,10,10,13,15,18,18,21,23])
**VARIABLES**
DISCRETE aux242 #( - M_00003_00010 + M_00003_00011)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux242, [-33,-33,-30,-29,-25,-21,-16,11])
**VARIABLES**
DISCRETE aux243 #( - M_00003_00008 + M_00003_00009)
{-26..37}
**CONSTRAINTS**
w-inintervalset(aux243, [-26,-20,-18,-18,-15,-10,-8,-8,-5,16,18,18,20,37])
**VARIABLES**
DISCRETE aux244 #(M_00003_00004 + -28)
{-24..10}
**CONSTRAINTS**
w-inintervalset(aux244, [-24,-24,-15,-15,-12,-11,-6,-3,0,0,10,10])
**VARIABLES**
DISCRETE aux245 #( - M_00003_00003 + M_00003_00004)
{-18..34}
**CONSTRAINTS**
w-inintervalset(aux245, [-18,-18,-13,-12,-9,-9,-6,-3,-1,13,15,16,18,22,24,25,34,34])
**VARIABLES**
DISCRETE aux246 #(M_00003_00005 + -49)
{-32..-1}
**CONSTRAINTS**
w-inintervalset(aux246, [-32,-32,-27,-24,-21,-21,-11,-11,-3,-3,-1,-1])
**VARIABLES**
DISCRETE aux247 #( - M_00003_00006 + M_00003_00007)
{-32..34}
**CONSTRAINTS**
w-inintervalset(aux247, [-32,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux248 #( - M_00003_00009 + M_00003_00012)
{-37..-1}
**CONSTRAINTS**
w-inintervalset(aux248, [-37,-21,-16,-15,-12,-5,-3,-1])
**VARIABLES**
DISCRETE aux249 #( - M_00003_00007 + M_00003_00010)
{-37..30}
**CONSTRAINTS**
w-inintervalset(aux249, [-37,-20,-18,-18,-16,16,18,18,21,24,29,30])
**VARIABLES**
DISCRETE aux250 #( - M_00003_00005 + M_00003_00008)
{-25..33}
**CONSTRAINTS**
w-inintervalset(aux250, [-25,-20,-18,-18,-16,8,10,16,18,18,20,29,31,33])
**VARIABLES**
DISCRETE aux251 #( - M_00003_00004 + M_00003_00005)
{0..44}
**CONSTRAINTS**
w-inintervalset(aux251, [0,16,18,26,29,35,42,42,44,44])
**VARIABLES**
DISCRETE aux252 #( - M_00003_00007 + M_00003_00008)
{-35..34}
**CONSTRAINTS**
w-inintervalset(aux252, [-35,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux253 #( - M_00003_00005 + M_00003_00006)
{-32..31}
**CONSTRAINTS**
w-inintervalset(aux253, [-32,-29,-26,-20,-18,-18,-16,8,10,16,18,18,20,29,31,31])
**VARIABLES**
DISCRETE aux254 #( - M_00003_00008 + M_00003_00011)
{-37..11}
**CONSTRAINTS**
w-inintervalset(aux254, [-37,-21,-16,11])
**VARIABLES**
DISCRETE aux255 #( - M_00003_00004 + M_00003_00007)
{-22..46}
**CONSTRAINTS**
w-inintervalset(aux255, [-22,-21,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux256 #( - M_00003_00006 + M_00003_00009)
{-25..33}
**CONSTRAINTS**
w-inintervalset(aux256, [-25,-20,-18,-18,-15,-10,-8,-8,-5,16,18,18,20,33])
**VARIABLES**
DISCRETE aux257 #( - M_00003_00003 + M_00003_00006)
{-6..33}
**CONSTRAINTS**
w-inintervalset(aux257, [-6,-5,-1,13,15,16,18,22,24,33])
**VARIABLES**
DISCRETE aux258 #( - M_00004_00002 + M_00004_00005)
{-33..25}
**CONSTRAINTS**
w-inintervalset(aux258, [-33,-29,-27,-20,-18,-18,-16,5,8,8,10,15,18,18,20,25])
**VARIABLES**
DISCRETE aux259 #( - M_00004_00005 + M_00004_00006)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux259, [-34,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux260 #( - M_00004_00003 + M_00004_00006)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux260, [-32,-29,-26,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux261 #( - M_00004_00002 + M_00004_00003)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux261, [-45,-44,-42,-42,-36,-29,-27,-18,-16,-1])
**VARIABLES**
DISCRETE aux262 #( - M_00004_00001 + M_00004_00002)
{-5..21}
**CONSTRAINTS**
w-inintervalset(aux262, [-5,-3,0,0,8,8,10,11,18,18,20,21])
**VARIABLES**
DISCRETE aux263 #( - M_00004_00004 + M_00004_00007)
{-35..46}
**CONSTRAINTS**
w-inintervalset(aux263, [-35,-35,-33,-29,-26,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux264 #( - M_00004_00005 + M_00004_00008)
{-35..34}
**CONSTRAINTS**
w-inintervalset(aux264, [-35,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux265 #( - M_00004_00011 + -1)
{-26..-14}
**CONSTRAINTS**
w-inintervalset(aux265, [-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux266 #( - M_00004_00009 + M_00004_00010)
{-37..33}
**CONSTRAINTS**
w-inintervalset(aux266, [-37,-20,-18,-18,-16,16,18,18,21,25,29,30,33,33])
**VARIABLES**
DISCRETE aux267 #( - M_00004_00010 + M_00004_00011)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux267, [-33,-33,-30,-29,-25,-21,-16,11])
**VARIABLES**
DISCRETE aux268 #( - M_00004_00008 + M_00004_00009)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux268, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux269 #( - M_00004_00008 + M_00004_00011)
{-37..10}
**CONSTRAINTS**
w-inintervalset(aux269, [-37,-21,-16,10])
**VARIABLES**
DISCRETE aux270 #( - M_00004_00007 + M_00004_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux270, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux271 #( - M_00004_00007 + M_00004_00010)
{-37..30}
**CONSTRAINTS**
w-inintervalset(aux271, [-37,-20,-18,-18,-16,16,18,18,21,25,29,30])
**VARIABLES**
DISCRETE aux272 #( - M_00004_00001 + M_00004_00004)
{-24..20}
**CONSTRAINTS**
w-inintervalset(aux272, [-24,-24,-22,-21,-16,-10,-6,-3,0,0,8,8,10,10,18,18,20,20])
**VARIABLES**
DISCRETE aux273 #( - M_00004_00003 + M_00004_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux273, [-44,-44,-42,-42,-35,-29,-26,-18,-16,16,18,26,29,35,42,42,44,44])
**VARIABLES**
DISCRETE aux274 #( - M_00004_00004 + M_00004_00005)
{-32..46}
**CONSTRAINTS**
w-inintervalset(aux274, [-32,-29,-26,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux275 #( - M_00004_00006 + M_00004_00007)
{-37..34}
**CONSTRAINTS**
w-inintervalset(aux275, [-37,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux276 #( - M_00004_00006 + M_00004_00009)
{-37..34}
**CONSTRAINTS**
w-inintervalset(aux276, [-37,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux277 #( - M_00005_00003 + M_00005_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux277, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux278 #( - M_00005_00005 + M_00005_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux278, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux279 #( - M_00005_00005 + M_00005_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux279, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux280 #( - M_00005_00001 + M_00005_00004)
{-34..27}
**CONSTRAINTS**
w-inintervalset(aux280, [-34,-29,-26,-18,-16,5,8,8,10,15,18,18,20,27])
**VARIABLES**
DISCRETE aux281 #( - M_00005_00004 + M_00005_00005)
{-34..46}
**CONSTRAINTS**
w-inintervalset(aux281, [-34,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux282 #( - M_00005_00002 + M_00005_00005)
{-36..46}
**CONSTRAINTS**
w-inintervalset(aux282, [-36,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux283 #( - M_00005_00001 + M_00005_00002)
{-34..25}
**CONSTRAINTS**
w-inintervalset(aux283, [-34,-29,-26,-18,-16,5,8,8,10,15,18,18,20,25])
**VARIABLES**
DISCRETE aux284 #( - M_00005_00003 + M_00005_00006)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux284, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux285 #( - M_00005_00004 + M_00005_00007)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux285, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux286 #(-1 - M_00005_00010)
{-47..-14}
**CONSTRAINTS**
w-inintervalset(aux286, [-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux287 #( - M_00005_00007 + M_00005_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux287, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux288 #( - M_00005_00008 + M_00005_00009)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux288, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux289 #( - M_00005_00007 + M_00005_00010)
{-37..33}
**CONSTRAINTS**
w-inintervalset(aux289, [-37,-20,-18,-18,-16,16,18,18,21,25,29,30,33,33])
**VARIABLES**
DISCRETE aux290 #( - M_00005_00009 + M_00005_00010)
{-37..33}
**CONSTRAINTS**
w-inintervalset(aux290, [-37,-20,-18,-18,-16,16,18,18,21,25,29,30,33,33])
**VARIABLES**
DISCRETE aux291 #( - M_00005_00006 + M_00005_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux291, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux292 #( - M_00005_00006 + M_00005_00009)
{-37..34}
**CONSTRAINTS**
w-inintervalset(aux292, [-37,-20,-18,-18,-16,16,18,18,20,34])
**VARIABLES**
DISCRETE aux293 #( - M_00005_00002 + M_00005_00003)
{-46..44}
**CONSTRAINTS**
w-inintervalset(aux293, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,44])
**VARIABLES**
DISCRETE aux294 #( - M_00006_00002 + M_00006_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux294, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux295 #( - M_00006_00003 + M_00006_00006)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux295, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux296 #( - M_00006_00001 + M_00006_00004)
{-44..46}
**CONSTRAINTS**
w-inintervalset(aux296, [-44,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux297 #(-1 - M_00006_00009)
{-51..-14}
**CONSTRAINTS**
w-inintervalset(aux297, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux298 #( - M_00006_00006 + M_00006_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux298, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux299 #( - M_00006_00007 + M_00006_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux299, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux300 #( - M_00006_00006 + M_00006_00009)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux300, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux301 #( - M_00006_00008 + M_00006_00009)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux301, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux302 #( - M_00006_00005 + M_00006_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux302, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux303 #( - M_00006_00005 + M_00006_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux303, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux304 #( - M_00006_00004 + M_00006_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux304, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux305 #( - M_00006_00004 + M_00006_00007)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux305, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux306 #( - M_00006_00001 + M_00006_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux306, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux307 #( - M_00006_00003 + M_00006_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux307, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux308 #( - M_00006_00002 + M_00006_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux308, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux309 #( - M_00007_00007 + M_00007_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux309, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux310 #( - M_00007_00005 + M_00007_00008)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux310, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux311 #( - M_00007_00008 + -1)
{-51..-14}
**CONSTRAINTS**
w-inintervalset(aux311, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux312 #( - M_00007_00001 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux312, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux313 #( - M_00007_00003 + M_00007_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux313, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux314 #( - M_00007_00002 + M_00007_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux314, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux315 #( - M_00007_00004 + M_00007_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux315, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux316 #( - M_00007_00005 + M_00007_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux316, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux317 #( - M_00007_00003 + M_00007_00006)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux317, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux318 #( - M_00007_00001 + M_00007_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux318, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux319 #( - M_00007_00002 + M_00007_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux319, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux320 #( - M_00007_00006 + M_00007_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux320, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux321 #( - M_00007_00004 + M_00007_00007)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux321, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux322 #( - M_00008_00007 + -1)
{-51..-14}
**CONSTRAINTS**
w-inintervalset(aux322, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux323 #( - M_00008_00002 + M_00008_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux323, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux324 #( - M_00008_00003 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux324, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux325 #( - M_00008_00004 + M_00008_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux325, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux326 #( - M_00008_00001 + M_00008_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux326, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux327 #( - M_00008_00005 + M_00008_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux327, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux328 #( - M_00008_00006 + M_00008_00007)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux328, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux329 #( - M_00008_00002 + M_00008_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux329, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux330 #( - M_00008_00003 + M_00008_00006)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux330, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux331 #( - M_00008_00004 + M_00008_00007)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux331, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux332 #( - M_00008_00001 + M_00008_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux332, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux333 #( - M_00009_00004 + M_00009_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux333, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux334 #( - M_00009_00001 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux334, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux335 #( - M_00009_00005 + M_00009_00006)
{-37..37}
**CONSTRAINTS**
w-inintervalset(aux335, [-37,-20,-18,-18,-16,16,18,18,20,37])
**VARIABLES**
DISCRETE aux336 #( - M_00009_00002 + M_00009_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux336, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux337 #( - M_00009_00003 + M_00009_00006)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux337, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux338 #( - M_00009_00001 + M_00009_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux338, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux339 #(-1 - M_00009_00006)
{-51..-14}
**CONSTRAINTS**
w-inintervalset(aux339, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux340 #( - M_00009_00002 + M_00009_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux340, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux341 #( - M_00009_00003 + M_00009_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux341, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux342 #( - M_00010_00003 + M_00010_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux342, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux343 #( - M_00010_00004 + M_00010_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux343, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux344 #( - M_00010_00002 + M_00010_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux344, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux345 #( - M_00010_00002 + M_00010_00005)
{-37..46}
**CONSTRAINTS**
w-inintervalset(aux345, [-37,-20,-18,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux346 #( - M_00010_00001 + M_00010_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux346, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux347 #( - M_00010_00001 + M_00010_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux347, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux348 #( - M_00010_00005 + -1)
{-51..-14}
**CONSTRAINTS**
w-inintervalset(aux348, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14])
**VARIABLES**
DISCRETE aux349 #( - M_00011_00002 + M_00011_00003)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux349, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux350 #( - M_00011_00003 + M_00011_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux350, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux351 #( - M_00011_00004 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux351, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14,-5,-5])
**VARIABLES**
DISCRETE aux352 #( - M_00011_00001 + M_00011_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux352, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux353 #( - M_00011_00001 + M_00011_00004)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux353, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux354 #( - M_00012_00001 + M_00012_00002)
{-46..46}
**CONSTRAINTS**
w-inintervalset(aux354, [-46,-44,-42,-42,-37,-18,-16,16,18,37,42,42,44,46])
**VARIABLES**
DISCRETE aux355 #( - M_00012_00002 + M_00012_00003)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux355, [-34,-18,-16,16,18,34])
**VARIABLES**
DISCRETE aux356 #( - M_00012_00003 + -1)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux356, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14,-5,-5])
**VARIABLES**
DISCRETE aux357 #(-1 - M_00013_00002)
{-51..-5}
**CONSTRAINTS**
w-inintervalset(aux357, [-51,-49,-47,-47,-39,-39,-29,-29,-26,-23,-18,-17,-14,-14,-5,-5])
**VARIABLES**
DISCRETE aux358 #( - M_00013_00001 + M_00013_00002)
{-34..34}
**CONSTRAINTS**
w-inintervalset(aux358, [-34,-18,-16,16,18,34])
**VARIABLES**
**VARIABLES**
ALIAS cards[14]=[28, 49, 22, 4, 38, 17, 48, 16, 50, 46, 25, 24, 23, 13]
**SEARCH**
PRINT[[M_00002_00003],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00002_00010],[M_00002_00011],[M_00002_00012],[M_00002_00013],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00003_00010],[M_00003_00011],[M_00003_00012],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00004_00010],[M_00004_00011],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00005_00009],[M_00005_00010],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00006_00008],[M_00006_00009],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00007_00007],[M_00007_00008],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00008_00006],[M_00008_00007],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00009_00005],[M_00009_00006],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00010_00004],[M_00010_00005],[M_00011_00001],[M_00011_00002],[M_00011_00003],[M_00011_00004],[M_00012_00001],[M_00012_00002],[M_00012_00003],[M_00013_00001],[M_00013_00002],[M_00014_00001]]
VARORDER STATIC [M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006, M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005, M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004, M_00012_00001, M_00012_00002, M_00012_00003, M_00013_00001, M_00013_00002, M_00014_00001]
**CONSTRAINTS**
div(M_00013_00002, 13, aux223)
reify(gaceq(M_00004_00006,M_00005_00006), aux13)
reify(gaceq(M_00007_00007,M_00006_00007), aux14)
div(M_00002_00007, 13, aux15)
div(M_00002_00011, 13, 1)
div(M_00002_00012, 13, 1)
reify(gaceq(M_00007_00008,M_00006_00009), aux18)
div(M_00007_00001, 13, aux19)
div(M_00007_00008, 13, aux20)
reify(gaceq(M_00004_00007,M_00005_00007), aux21)
div(M_00010_00005, 13, aux22)
div(M_00010_00001, 13, aux23)
div(M_00010_00003, 13, aux24)
reify(gaceq(M_00008_00005,M_00009_00005), aux25)
div(M_00012_00002, 13, aux26)
div(M_00002_00010, 13, aux27)
reify(gaceq(M_00005_00007,M_00006_00006), aux28)
div(M_00002_00006, 13, aux29)
div(M_00002_00008, 13, aux30)
div(M_00002_00009, 13, aux31)
reify(gaceq(M_00010_00005,M_00011_00004), aux32)
reify(gaceq(M_00010_00003,M_00009_00003), aux33)
reify(gaceq(M_00007_00001,M_00008_00001), aux34)
reify(gaceq(M_00002_00008,M_00003_00008), aux35)
reify(gaceq(M_00004_00005,M_00005_00004), aux36)
reify(gaceq(M_00010_00004,M_00009_00005), aux37)
reify(gaceq(M_00005_00001,M_00006_00001), aux38)
reify(gaceq(M_00010_00005,M_00009_00005), aux39)
reify(gaceq(M_00010_00002,M_00009_00003), aux40)
reify(gaceq(M_00004_00006,M_00005_00005), aux41)
reify(gaceq(M_00010_00001,M_00009_00001), aux42)
reify(gaceq(M_00004_00001,M_00005_00001), aux43)
div(M_00004_00009, 13, aux44)
div(M_00004_00003, 13, aux45)
div(M_00004_00002, 13, aux46)
div(M_00004_00010, 13, aux47)
reify(gaceq(M_00003_00011,M_00004_00010), aux48)
reify(gaceq(M_00007_00007,M_00006_00008), aux49)
reify(gaceq(M_00007_00002,M_00008_00002), aux50)
reify(gaceq(M_00004_00002,M_00005_00002), aux51)
reify(gaceq(M_00010_00001,M_00011_00001), aux52)
reify(gaceq(M_00008_00002,M_00009_00002), aux53)
reify(gaceq(M_00004_00010,M_00005_00009), aux54)
div(M_00002_00013, 13, 1)
reify(gaceq(M_00004_00008,M_00005_00008), aux56)
reify(gaceq(M_00011_00003,M_00012_00002), aux57)
reify(gaceq(M_00011_00003,M_00012_00003), aux58)
reify(gaceq(M_00007_00006,M_00008_00005), aux59)
reify(gaceq(M_00008_00004,M_00009_00003), aux60)
reify(gaceq(M_00002_00009,M_00003_00009), aux61)
reify(gaceq(M_00003_00009,M_00004_00009), aux62)
reify(gaceq(M_00003_00006,M_00004_00005), aux63)
reify(gaceq(M_00002_00012,M_00003_00011), aux64)
reify(gaceq(M_00011_00002,M_00012_00002), aux65)
reify(gaceq(M_00011_00001,M_00012_00001), aux66)
reify(gaceq(M_00011_00004,M_00012_00003), aux67)
reify(gaceq(M_00005_00008,M_00006_00008), aux68)
div(M_00008_00004, 13, aux69)
reify(gaceq(M_00010_00004,M_00011_00003), aux70)
div(M_00003_00012, 13, 1)
div(M_00003_00003, 13, aux72)
reify(gaceq(M_00002_00010,M_00003_00010), aux73)
div(M_00005_00001, 13, aux74)
div(M_00005_00010, 13, aux75)
reify(gaceq(M_00003_00010,M_00004_00009), aux76)
reify(gaceq(M_00003_00004,M_00004_00004), aux77)
reify(gaceq(M_00007_00001,M_00006_00001), aux78)
div(M_00008_00001, 13, aux79)
div(M_00008_00007, 13, aux80)
reify(gaceq(M_00003_00008,M_00004_00008), aux81)
div(M_00006_00008, 13, aux82)
div(M_00006_00007, 13, aux83)
div(M_00006_00003, 13, aux84)
div(M_00006_00002, 13, aux85)
reify(gaceq(M_00005_00002,M_00006_00002), aux86)
reify(gaceq(M_00005_00009,M_00006_00008), aux87)
reify(gaceq(M_00010_00003,M_00011_00002), aux88)
reify(gaceq(M_00010_00004,M_00011_00004), aux89)
reify(gaceq(M_00005_00010,M_00006_00009), aux90)
reify(gaceq(M_00003_00007,M_00004_00006), aux91)
reify(gaceq(M_00010_00002,M_00011_00002), aux92)
reify(gaceq(M_00010_00003,M_00011_00003), aux93)
reify(gaceq(M_00003_00012,M_00004_00011), aux94)
reify(gaceq(M_00010_00004,M_00009_00004), aux95)
reify(gaceq(M_00004_00004,M_00005_00003), aux96)
reify(gaceq(M_00002_00006,M_00003_00005), aux97)
reify(gaceq(M_00002_00012,M_00003_00012), aux98)
reify(gaceq(M_00002_00007,M_00003_00006), aux99)
reify(gaceq(M_00002_00011,M_00003_00011), aux100)
reify(gaceq(M_00004_00007,M_00005_00006), aux101)
reify(gaceq(M_00007_00003,M_00006_00003), aux102)
reify(gaceq(M_00005_00003,M_00006_00003), aux103)
div(M_00009_00005, 13, aux104)
div(M_00009_00003, 13, aux105)
div(M_00009_00004, 13, aux106)
div(M_00009_00002, 13, aux107)
reify(gaceq(M_00007_00006,M_00006_00007), aux108)
reify(gaceq(M_00007_00003,M_00008_00002), aux109)
reify(gaceq(M_00007_00007,M_00008_00007), aux110)
div(M_00011_00001, 13, aux111)
div(M_00011_00002, 13, aux112)
div(M_00011_00003, 13, aux113)
div(M_00011_00004, 13, aux114)
reify(gaceq(M_00008_00006,M_00009_00006), aux115)
reify(gaceq(M_00008_00003,M_00009_00002), aux116)
reify(gaceq(M_00005_00008,M_00006_00007), aux117)
reify(gaceq(M_00010_00003,M_00009_00004), aux118)
div(M_00006_00004, 13, aux119)
div(M_00006_00005, 13, aux120)
div(M_00006_00006, 13, aux121)
div(M_00006_00001, 13, aux122)
div(M_00006_00009, 13, aux123)
reify(gaceq(M_00003_00007,M_00004_00007), aux124)
div(M_00003_00010, 13, aux125)
div(M_00003_00011, 13, 1)
reify(gaceq(M_00005_00005,M_00006_00004), aux127)
reify(gaceq(M_00003_00005,M_00004_00005), aux128)
reify(gaceq(M_00010_00002,M_00009_00002), aux129)
reify(gaceq(M_00003_00011,M_00004_00011), aux130)
reify(gaceq(M_00004_00005,M_00005_00005), aux131)
reify(gaceq(M_00005_00003,M_00006_00002), aux132)
reify(gaceq(M_00005_00009,M_00006_00009), aux133)
div(M_00010_00004, 13, aux134)
div(M_00010_00002, 13, aux135)
reify(gaceq(M_00005_00006,M_00006_00006), aux136)
reify(gaceq(M_00008_00003,M_00009_00003), aux137)
div(M_00005_00009, 13, aux138)
div(M_00005_00008, 13, aux139)
div(M_00005_00002, 13, aux140)
div(M_00005_00003, 13, aux141)
reify(gaceq(M_00004_00010,M_00005_00010), aux142)
reify(gaceq(M_00004_00003,M_00005_00002), aux143)
reify(gaceq(M_00005_00005,M_00006_00005), aux144)
reify(gaceq(M_00005_00007,M_00006_00007), aux145)
reify(gaceq(M_00003_00008,M_00004_00007), aux146)
reify(gaceq(M_00004_00008,M_00005_00007), aux147)
reify(gaceq(M_00002_00013,M_00003_00012), aux148)
reify(gaceq(M_00007_00003,M_00008_00003), aux149)
div(M_00007_00002, 13, aux150)
div(M_00007_00003, 13, aux151)
div(M_00007_00006, 13, aux152)
div(M_00007_00007, 13, aux153)
reify(gaceq(M_00004_00009,M_00005_00008), aux154)
reify(gaceq(M_00008_00004,M_00009_00004), aux155)
reify(gaceq(M_00008_00005,M_00009_00004), aux156)
reify(gaceq(M_00003_00010,M_00004_00010), aux157)
div(M_00007_00004, 13, aux158)
div(M_00007_00005, 13, aux159)
reify(gaceq(M_00004_00011,M_00005_00010), aux160)
reify(gaceq(M_00002_00011,M_00003_00010), aux161)
reify(gaceq(M_00003_00009,M_00004_00008), aux162)
reify(gaceq(M_00007_00004,M_00006_00004), aux163)
reify(gaceq(M_00003_00005,M_00004_00004), aux164)
reify(gaceq(M_00007_00004,M_00008_00003), aux165)
reify(gaceq(M_00010_00005,M_00009_00006), aux166)
reify(gaceq(M_00005_00004,M_00006_00003), aux167)
reify(gaceq(M_00002_00006,M_00003_00006), aux168)
div(M_00004_00007, 13, aux169)
div(M_00004_00008, 13, aux170)
div(M_00004_00004, 13, aux171)
div(M_00004_00005, 13, aux172)
div(M_00004_00006, 13, aux173)
reify(gaceq(M_00004_00004,M_00005_00004), aux174)
reify(gaceq(M_00005_00004,M_00006_00004), aux175)
reify(gaceq(M_00008_00006,M_00009_00005), aux176)
reify(gaceq(M_00007_00003,M_00006_00004), aux177)
reify(gaceq(M_00007_00004,M_00008_00004), aux178)
reify(gaceq(M_00007_00005,M_00006_00005), aux179)
reify(gaceq(M_00002_00007,M_00003_00007), aux180)
reify(gaceq(M_00002_00008,M_00003_00007), aux181)
reify(gaceq(M_00002_00003,M_00003_00003), aux182)
div(M_00008_00003, 13, aux183)
div(M_00008_00005, 13, aux184)
div(M_00008_00006, 13, aux185)
div(M_00008_00002, 13, aux186)
reify(gaceq(M_00007_00002,M_00006_00002), aux187)
reify(gaceq(M_00007_00008,M_00006_00008), aux188)
reify(gaceq(M_00007_00002,M_00006_00003), aux189)
reify(gaceq(M_00007_00006,M_00008_00006), aux190)
reify(gaceq(M_00005_00006,M_00006_00005), aux191)
div(M_00003_00009, 13, aux192)
div(M_00003_00007, 13, aux193)
div(M_00003_00008, 13, aux194)
div(M_00003_00004, 13, aux195)
div(M_00003_00006, 13, aux196)
div(M_00003_00005, 13, aux197)
reify(gaceq(M_00007_00007,M_00008_00006), aux198)
reify(gaceq(M_00008_00001,M_00009_00001), aux199)
reify(gaceq(M_00007_00006,M_00006_00006), aux200)
reify(gaceq(M_00004_00003,M_00005_00003), aux201)
reify(gaceq(M_00007_00005,M_00008_00004), aux202)
reify(gaceq(M_00007_00005,M_00008_00005), aux203)
reify(gaceq(M_00012_00001,M_00013_00001), aux204)
reify(gaceq(M_00012_00003,M_00013_00002), aux205)
div(M_00005_00004, 13, aux206)
div(M_00005_00005, 13, aux207)
div(M_00005_00006, 13, aux208)
div(M_00005_00007, 13, aux209)
reify(gaceq(M_00007_00008,M_00008_00007), aux210)
reify(gaceq(M_00007_00005,M_00006_00006), aux211)
reify(gaceq(M_00002_00010,M_00003_00009), aux212)
div(M_00009_00006, 13, aux213)
div(M_00009_00001, 13, aux214)
reify(gaceq(M_00008_00007,M_00009_00006), aux215)
div(M_00004_00001, 13, 2)
div(M_00004_00011, 13, 1)
reify(gaceq(M_00004_00009,M_00005_00009), aux218)
reify(gaceq(M_00002_00009,M_00003_00008), aux219)
reify(gaceq(M_00007_00004,M_00006_00005), aux220)
reify(gaceq(M_00003_00003,M_00004_00003), aux221)
reify(gaceq(M_00003_00006,M_00004_00006), aux222)
gccweak([M_00002_00003, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00002_00010, M_00002_00011, M_00002_00012, M_00002_00013],[-1],[0])
gccweak([M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00003_00010, M_00003_00011, M_00003_00012],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00004_00010, M_00004_00011],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00005_00009, M_00005_00010],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00006_00008, M_00006_00009],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00007_00007, M_00007_00008],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00008_00006, M_00008_00007],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00009_00005, M_00009_00006],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003, M_00010_00004, M_00010_00005],[-1],[0])
gccweak([M_00011_00001, M_00011_00002, M_00011_00003, M_00011_00004],[-1],[0])
gccweak([M_00012_00001, M_00012_00002, M_00012_00003],[-1],[0])
gccweak([M_00013_00001, M_00013_00002],[-1],[0])
gccweak([M_00014_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00007,48),w-literal(M_00002_00008,25),w-literal(M_00002_00009,50),w-literal(M_00002_00010,46),w-literal(M_00002_00011,24),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,17),w-literal(M_00002_00007,16),w-literal(M_00002_00006,48),w-literal(M_00002_00008,50),w-literal(M_00002_00009,46),w-literal(M_00002_00010,25),w-literal(M_00002_00011,24),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00007,46),w-literal(M_00002_00008,16),w-literal(M_00002_00009,50),w-literal(M_00002_00010,25),w-literal(M_00002_00011,24),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,24),w-literal(M_00002_00010,46),w-literal(M_00002_00011,25),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,46),w-literal(M_00002_00010,25),w-literal(M_00002_00011,24),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,50),w-literal(M_00002_00011,13),w-literal(M_00002_00010,46),w-literal(M_00002_00012,24),w-literal(M_00002_00013,23)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,50),w-literal(M_00002_00010,46),w-literal(M_00002_00011,24),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,50),w-literal(M_00002_00010,46),w-literal(M_00002_00011,25),w-literal(M_00002_00012,23),w-literal(M_00002_00013,13)}),watched-and({w-literal(M_00002_00003,22),w-literal(M_00002_00006,17),w-literal(M_00002_00008,16),w-literal(M_00002_00007,48),w-literal(M_00002_00009,50),w-literal(M_00002_00010,46),w-literal(M_00002_00011,25),w-literal(M_00002_00012,24),w-literal(M_00002_00013,13)})})
watched-or({watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux30,2),modulo(aux224,13,0)}),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux99,1),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux225,13,0),gaceq(aux29,aux15)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux226,13,0),gaceq(aux30,aux31)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux61,1),w-literal(aux73,1),gaceq(M_00002_00011,M_00003_00008),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux227,13,0),w-literal(aux30,1)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),modulo(aux228,13,0),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux98,1)}),watched-and({w-literal(M_00003_00004,4),watched-or({w-literal(aux29,2),modulo(aux229,13,0)}),w-literal(aux182,1),w-literal(aux97,1),w-literal(aux99,1),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00005,38),modulo(aux230,13,0),w-literal(aux182,1),w-literal(aux168,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux231,13,0),gaceq(aux15,aux30)})}),watched-and({w-literal(M_00003_00003,4),w-literal(M_00003_00004,38),modulo(aux232,13,0),w-literal(aux97,1),w-literal(aux99,1),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux180,1),w-literal(aux35,1),gaceq(M_00002_00009,M_00003_00006),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux233,13,0),gaceq(aux29,aux31)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux35,1),w-literal(aux61,1),gaceq(M_00002_00010,M_00003_00007),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux234,13,0),gaceq(aux15,aux27)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux235,13,0),w-literal(aux27,1)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux73,1),w-literal(aux64,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux100,1),w-literal(aux98,1),gaceq(M_00002_00013,M_00003_00010),watched-or({modulo(aux236,13,0),w-literal(aux27,1)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux61,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux148,1)}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux237,13,0),gaceq(aux31,aux27)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),w-literal(aux182,1),w-literal(aux168,1),w-literal(aux180,1),w-literal(aux35,1),w-literal(aux73,1),w-literal(aux100,1),gaceq(M_00002_00012,M_00003_00009),w-literal(aux148,1),watched-or({modulo(aux238,13,0),w-literal(aux31,1)})}),watched-and({w-literal(M_00003_00004,4),w-literal(M_00003_00005,38),gaceq(M_00002_00006,M_00003_00003),w-literal(aux99,1),w-literal(aux181,1),w-literal(aux219,1),w-literal(aux212,1),w-literal(aux161,1),w-literal(aux64,1),w-literal(aux148,1),watched-or({modulo(aux239,13,0),div(M_00002_00003, 13, aux29)})})})
watched-or({watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux81,1),w-literal(aux62,1),w-literal(aux157,1),w-literal(aux130,1),modulo(aux240,13,0),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux81,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux241,13,0),gaceq(aux192,aux125)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux81,1),w-literal(aux62,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux242,13,0),w-literal(aux125,1)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux243,13,0),gaceq(aux194,aux192)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({watched-or({modulo(aux244,13,0),w-literal(aux195,2)}),w-literal(aux221,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux164,1),w-literal(aux63,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),w-literal(M_00004_00002,49)}),watched-and({gaceq(M_00003_00004,M_00004_00003),w-literal(aux164,1),w-literal(aux63,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux245,13,0),gaceq(aux72,aux195)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({watched-or({modulo(aux246,13,0),w-literal(aux197,3)}),w-literal(aux221,1),w-literal(aux77,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux63,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),w-literal(M_00004_00001,28)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux247,13,0),gaceq(aux196,aux193)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux81,1),w-literal(aux157,1),w-literal(aux130,1),gaceq(M_00003_00012,M_00004_00009),watched-or({modulo(aux248,13,0),w-literal(aux192,1)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux81,1),w-literal(aux62,1),gaceq(M_00003_00010,M_00004_00007),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux249,13,0),gaceq(aux193,aux125)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux81,1),w-literal(aux62,1),w-literal(aux157,1),w-literal(aux94,1),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux222,1),w-literal(aux124,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux250,13,0),gaceq(aux197,aux194)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux164,1),w-literal(aux63,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux251,13,0),gaceq(aux195,aux197)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux252,13,0),gaceq(aux193,aux194)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux63,1),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux253,13,0),gaceq(aux197,aux196)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux222,1),w-literal(aux124,1),w-literal(aux62,1),w-literal(aux157,1),gaceq(M_00003_00011,M_00004_00008),w-literal(aux94,1),watched-or({modulo(aux254,13,0),w-literal(aux194,1)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux128,1),w-literal(aux222,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux255,13,0),gaceq(aux195,aux193)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux221,1),w-literal(aux77,1),w-literal(aux128,1),w-literal(aux124,1),w-literal(aux81,1),gaceq(M_00003_00009,M_00004_00006),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux256,13,0),gaceq(aux196,aux192)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)}),watched-and({w-literal(aux77,1),w-literal(aux128,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux91,1),w-literal(aux146,1),w-literal(aux162,1),w-literal(aux76,1),w-literal(aux48,1),w-literal(aux94,1),watched-or({modulo(aux257,13,0),gaceq(aux72,aux196)}),w-literal(M_00004_00001,28),w-literal(M_00004_00002,49)})})
watched-or({watched-and({w-literal(aux43,1),w-literal(aux201,1),w-literal(aux174,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux46,aux172),modulo(aux258,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux172,aux173),modulo(aux259,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux174,1),w-literal(aux131,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux45,aux173),modulo(aux260,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux143,1),w-literal(aux96,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux46,aux45),modulo(aux261,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux143,1),w-literal(aux96,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({w-literal(aux46,2),modulo(aux262,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux131,1),w-literal(aux13,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux171,aux169),modulo(aux263,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux13,1),w-literal(aux21,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux172,aux170),modulo(aux264,13,0)})}),watched-and({modulo(aux265,13,0),w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux218,1),w-literal(aux142,1)}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux44,aux47),modulo(aux266,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux21,1),w-literal(aux56,1),w-literal(aux218,1),w-literal(aux160,1),watched-or({w-literal(aux47,1),modulo(aux267,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux21,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux170,aux44),modulo(aux268,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux21,1),w-literal(aux218,1),w-literal(aux142,1),gaceq(M_00004_00011,M_00005_00008),watched-or({w-literal(aux170,1),modulo(aux269,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux169,aux170),modulo(aux270,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux13,1),w-literal(aux56,1),w-literal(aux218,1),gaceq(M_00004_00010,M_00005_00007),w-literal(aux160,1),watched-or({gaceq(aux169,aux47),modulo(aux271,13,0)})}),watched-and({w-literal(aux51,1),w-literal(aux201,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({w-literal(aux171,2),modulo(aux272,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux96,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux45,aux171),modulo(aux273,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux36,1),w-literal(aux41,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux171,aux172),modulo(aux274,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux101,1),w-literal(aux147,1),w-literal(aux154,1),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux173,aux169),modulo(aux275,13,0)})}),watched-and({w-literal(aux43,1),w-literal(aux51,1),w-literal(aux201,1),w-literal(aux174,1),w-literal(aux131,1),w-literal(aux21,1),w-literal(aux56,1),gaceq(M_00004_00009,M_00005_00006),w-literal(aux54,1),w-literal(aux160,1),watched-or({gaceq(aux173,aux44),modulo(aux276,13,0)})})})
watched-or({watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux167,1),w-literal(aux127,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux277,13,0),gaceq(aux141,aux206)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux278,13,0),gaceq(aux207,aux208)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux136,1),w-literal(aux145,1),gaceq(M_00005_00008,M_00006_00005),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux279,13,0),gaceq(aux207,aux139)})}),watched-and({w-literal(aux86,1),w-literal(aux103,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux127,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux280,13,0),gaceq(aux74,aux206)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux127,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux281,13,0),gaceq(aux206,aux207)})}),watched-and({w-literal(aux38,1),w-literal(aux103,1),w-literal(aux175,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux282,13,0),gaceq(aux140,aux207)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux132,1),w-literal(aux167,1),w-literal(aux127,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux283,13,0),gaceq(aux74,aux140)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux175,1),w-literal(aux144,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux284,13,0),gaceq(aux141,aux208)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux144,1),w-literal(aux136,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux285,13,0),gaceq(aux206,aux209)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux136,1),w-literal(aux145,1),w-literal(aux68,1),w-literal(aux133,1),modulo(aux286,13,0)}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux136,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux287,13,0),gaceq(aux209,aux139)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux136,1),w-literal(aux145,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux288,13,0),gaceq(aux139,aux138)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux136,1),w-literal(aux68,1),w-literal(aux133,1),gaceq(M_00005_00010,M_00006_00007),watched-or({modulo(aux289,13,0),gaceq(aux209,aux75)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux136,1),w-literal(aux145,1),w-literal(aux68,1),w-literal(aux90,1),watched-or({modulo(aux290,13,0),gaceq(aux138,aux75)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux291,13,0),gaceq(aux208,aux209)})}),watched-and({w-literal(aux38,1),w-literal(aux86,1),w-literal(aux103,1),w-literal(aux175,1),w-literal(aux144,1),w-literal(aux145,1),w-literal(aux68,1),gaceq(M_00005_00009,M_00006_00006),w-literal(aux90,1),watched-or({modulo(aux292,13,0),gaceq(aux208,aux138)})}),watched-and({w-literal(aux38,1),w-literal(aux132,1),w-literal(aux167,1),w-literal(aux127,1),w-literal(aux191,1),w-literal(aux28,1),w-literal(aux117,1),w-literal(aux87,1),w-literal(aux90,1),watched-or({modulo(aux293,13,0),gaceq(aux140,aux141)})})})
watched-or({watched-and({w-literal(aux78,1),w-literal(aux189,1),w-literal(aux177,1),w-literal(aux220,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux85,aux84),modulo(aux294,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux163,1),w-literal(aux179,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux84,aux121),modulo(aux295,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux220,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux122,aux119),modulo(aux296,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux179,1),w-literal(aux200,1),w-literal(aux14,1),w-literal(aux188,1),modulo(aux297,13,0)}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux179,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux121,aux83),modulo(aux298,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux179,1),w-literal(aux200,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux83,aux82),modulo(aux299,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux179,1),gaceq(M_00007_00006,M_00006_00009),w-literal(aux14,1),w-literal(aux188,1),watched-or({gaceq(aux121,aux123),modulo(aux300,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux179,1),w-literal(aux200,1),w-literal(aux14,1),w-literal(aux18,1),watched-or({gaceq(aux82,aux123),modulo(aux301,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux120,aux121),modulo(aux302,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux163,1),gaceq(M_00007_00005,M_00006_00008),w-literal(aux200,1),w-literal(aux14,1),w-literal(aux18,1),watched-or({gaceq(aux120,aux82),modulo(aux303,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),w-literal(aux220,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux119,aux120),modulo(aux304,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux102,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux179,1),w-literal(aux200,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux119,aux83),modulo(aux305,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux189,1),w-literal(aux177,1),w-literal(aux220,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux122,aux85),modulo(aux306,13,0)})}),watched-and({w-literal(aux78,1),w-literal(aux187,1),w-literal(aux177,1),w-literal(aux220,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux84,aux119),modulo(aux307,13,0)})}),watched-and({w-literal(aux78,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux102,1),w-literal(aux163,1),w-literal(aux211,1),w-literal(aux108,1),w-literal(aux49,1),w-literal(aux18,1),watched-or({gaceq(aux85,aux120),modulo(aux308,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux309,13,0),gaceq(aux153,aux20)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux178,1),w-literal(aux203,1),w-literal(aux190,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux310,13,0),gaceq(aux159,aux20)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux178,1),w-literal(aux190,1),w-literal(aux110,1),gaceq(M_00007_00008,M_00008_00005)}),watched-and({modulo(aux311,13,0),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux178,1),w-literal(aux203,1),w-literal(aux190,1),w-literal(aux110,1)}),watched-and({watched-or({modulo(aux312,13,0),gaceq(aux19,aux158)}),w-literal(aux50,1),w-literal(aux149,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux202,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux313,13,0),gaceq(aux151,aux158)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux165,1),w-literal(aux202,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux314,13,0),gaceq(aux150,aux151)}),w-literal(aux34,1),w-literal(aux109,1),w-literal(aux165,1),w-literal(aux202,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux315,13,0),gaceq(aux158,aux159)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux202,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux316,13,0),gaceq(aux159,aux152)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux178,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux317,13,0),gaceq(aux151,aux152)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux178,1),w-literal(aux203,1),gaceq(M_00007_00006,M_00008_00003),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux318,13,0),gaceq(aux19,aux150)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux109,1),w-literal(aux165,1),w-literal(aux202,1),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux319,13,0),gaceq(aux150,aux159)}),w-literal(aux34,1),w-literal(aux149,1),w-literal(aux178,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux59,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux320,13,0),gaceq(aux152,aux153)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux178,1),w-literal(aux203,1),w-literal(aux198,1),w-literal(aux210,1)}),watched-and({watched-or({modulo(aux321,13,0),gaceq(aux158,aux153)}),w-literal(aux34,1),w-literal(aux50,1),w-literal(aux149,1),w-literal(aux203,1),w-literal(aux190,1),gaceq(M_00007_00007,M_00008_00004),w-literal(aux210,1)})})
watched-or({watched-and({w-literal(aux199,1),w-literal(aux53,1),w-literal(aux137,1),w-literal(aux155,1),w-literal(aux25,1),w-literal(aux115,1),modulo(aux322,13,0)}),watched-and({watched-or({gaceq(aux186,aux183),modulo(aux323,13,0)}),w-literal(aux199,1),w-literal(aux116,1),w-literal(aux60,1),w-literal(aux156,1),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux183,aux69),modulo(aux324,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux60,1),w-literal(aux156,1),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux69,aux184),modulo(aux325,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux137,1),w-literal(aux156,1),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux79,aux186),modulo(aux326,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux116,1),w-literal(aux60,1),w-literal(aux156,1),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux184,aux185),modulo(aux327,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux137,1),w-literal(aux155,1),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux185,aux80),modulo(aux328,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux137,1),w-literal(aux155,1),w-literal(aux25,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux186,aux184),modulo(aux329,13,0)}),w-literal(aux199,1),w-literal(aux137,1),w-literal(aux155,1),gaceq(M_00008_00005,M_00009_00002),w-literal(aux176,1),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux183,aux185),modulo(aux330,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux155,1),w-literal(aux25,1),gaceq(M_00008_00006,M_00009_00003),w-literal(aux215,1)}),watched-and({watched-or({gaceq(aux69,aux80),modulo(aux331,13,0)}),w-literal(aux199,1),w-literal(aux53,1),w-literal(aux137,1),w-literal(aux25,1),w-literal(aux115,1),gaceq(M_00008_00007,M_00009_00004)}),watched-and({watched-or({gaceq(aux79,aux69),modulo(aux332,13,0)}),w-literal(aux53,1),w-literal(aux137,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux156,1),w-literal(aux176,1),w-literal(aux215,1)})})
watched-or({watched-and({watched-or({modulo(aux333,13,0),gaceq(aux106,aux104)}),w-literal(aux42,1),w-literal(aux129,1),w-literal(aux33,1),w-literal(aux37,1),w-literal(aux166,1)}),watched-and({watched-or({modulo(aux334,13,0),gaceq(aux214,aux106)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux129,1),w-literal(aux33,1),w-literal(aux37,1),w-literal(aux166,1)}),watched-and({watched-or({modulo(aux335,13,0),gaceq(aux104,aux213)}),w-literal(aux42,1),w-literal(aux129,1),w-literal(aux33,1),w-literal(aux95,1),w-literal(aux166,1)}),watched-and({watched-or({modulo(aux336,13,0),gaceq(aux107,aux104)}),w-literal(aux42,1),gaceq(M_00010_00002,M_00009_00005),w-literal(aux33,1),w-literal(aux95,1),w-literal(aux166,1)}),watched-and({watched-or({modulo(aux337,13,0),gaceq(aux105,aux213)}),w-literal(aux42,1),w-literal(aux129,1),gaceq(M_00010_00003,M_00009_00006),w-literal(aux95,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux338,13,0),gaceq(aux214,aux107)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux40,1),w-literal(aux118,1),w-literal(aux37,1),w-literal(aux166,1)}),watched-and({modulo(aux339,13,0),w-literal(aux42,1),w-literal(aux129,1),w-literal(aux33,1),w-literal(aux95,1),w-literal(aux39,1)}),watched-and({watched-or({modulo(aux340,13,0),gaceq(aux107,aux105)}),w-literal(aux42,1),w-literal(aux40,1),w-literal(aux118,1),w-literal(aux37,1),w-literal(aux166,1)}),watched-and({watched-or({modulo(aux341,13,0),gaceq(aux105,aux106)}),w-literal(aux42,1),w-literal(aux129,1),w-literal(aux118,1),w-literal(aux37,1),w-literal(aux166,1)})})
watched-or({watched-and({w-literal(aux52,1),w-literal(aux92,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux24,aux134),modulo(aux342,13,0)})}),watched-and({w-literal(aux52,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux32,1),watched-or({gaceq(aux134,aux22),modulo(aux343,13,0)})}),watched-and({w-literal(aux52,1),w-literal(aux88,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux135,aux24),modulo(aux344,13,0)})}),watched-and({w-literal(aux52,1),w-literal(aux93,1),w-literal(aux89,1),gaceq(M_00010_00005,M_00011_00002),watched-or({gaceq(aux135,aux22),modulo(aux345,13,0)})}),watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux88,1),w-literal(aux70,1),w-literal(aux32,1),watched-or({gaceq(aux23,aux135),modulo(aux346,13,0)})}),watched-and({w-literal(aux92,1),w-literal(aux93,1),gaceq(M_00010_00004,M_00011_00001),w-literal(aux32,1),watched-or({gaceq(aux23,aux134),modulo(aux347,13,0)})}),watched-and({w-literal(aux52,1),w-literal(aux92,1),w-literal(aux93,1),w-literal(aux89,1),modulo(aux348,13,0)})})
watched-or({watched-and({watched-or({gaceq(aux112,aux113),modulo(aux349,13,0)}),w-literal(aux66,1),w-literal(aux57,1),w-literal(aux67,1)}),watched-and({watched-or({gaceq(aux113,aux114),modulo(aux350,13,0)}),w-literal(aux66,1),w-literal(aux65,1),w-literal(aux67,1)}),watched-and({modulo(aux351,13,0),w-literal(aux66,1),w-literal(aux65,1),w-literal(aux58,1)}),watched-and({watched-or({gaceq(aux111,aux112),modulo(aux352,13,0)}),gaceq(M_00011_00002,M_00012_00001),w-literal(aux57,1),w-literal(aux67,1)}),watched-and({watched-or({gaceq(aux111,aux114),modulo(aux353,13,0)}),w-literal(aux65,1),w-literal(aux58,1),gaceq(M_00011_00004,M_00012_00001)})})
watched-or({watched-and({gaceq(M_00012_00002,M_00013_00001),w-literal(aux205,1),watched-or({div(M_00012_00001, 13, aux26),modulo(aux354,13,0)})}),watched-and({w-literal(aux204,1),w-literal(aux205,1),watched-or({div(M_00012_00003, 13, aux26),modulo(aux355,13,0)})}),watched-and({modulo(aux356,13,0),w-literal(aux204,1),gaceq(M_00012_00002,M_00013_00002)})})
watched-or({watched-and({gaceq(M_00013_00001,M_00014_00001),modulo(aux357,13,0)}),watched-and({gaceq(M_00013_00002,M_00014_00001),watched-or({div(M_00013_00001, 13, aux223),modulo(aux358,13,0)})})})
sumleq([M_00002_00008,-38],aux224)
sumgeq([M_00002_00008,-38],aux224)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux225)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux225)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux226)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux226)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00011],aux227)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00011],aux227)
weightedsumleq([-1,1],[M_00002_00013,-1],aux228)
weightedsumgeq([-1,1],[M_00002_00013,-1],aux228)
sumleq([M_00002_00006,-38],aux229)
sumgeq([M_00002_00006,-38],aux229)
sumleq([M_00002_00007,-4],aux230)
sumgeq([M_00002_00007,-4],aux230)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux231)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux231)
weightedsumleq([-1,1],[M_00002_00003,4],aux232)
weightedsumgeq([-1,1],[M_00002_00003,4],aux232)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux233)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux233)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00010],aux234)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00010],aux234)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00011],aux235)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00011],aux235)
weightedsumleq([-1,1],[M_00002_00010,M_00002_00013],aux236)
weightedsumgeq([-1,1],[M_00002_00010,M_00002_00013],aux236)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00010],aux237)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00010],aux237)
weightedsumleq([-1,1],[M_00002_00009,M_00002_00012],aux238)
weightedsumgeq([-1,1],[M_00002_00009,M_00002_00012],aux238)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux239)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux239)
weightedsumleq([-1,1],[M_00003_00012,-1],aux240)
weightedsumgeq([-1,1],[M_00003_00012,-1],aux240)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00010],aux241)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00010],aux241)
weightedsumleq([-1,1],[M_00003_00010,M_00003_00011],aux242)
weightedsumgeq([-1,1],[M_00003_00010,M_00003_00011],aux242)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux243)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux243)
sumleq([M_00003_00004,-28],aux244)
sumgeq([M_00003_00004,-28],aux244)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux245)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux245)
sumleq([M_00003_00005,-49],aux246)
sumgeq([M_00003_00005,-49],aux246)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux247)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux247)
weightedsumleq([-1,1],[M_00003_00009,M_00003_00012],aux248)
weightedsumgeq([-1,1],[M_00003_00009,M_00003_00012],aux248)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00010],aux249)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00010],aux249)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux250)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux250)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux251)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux251)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux252)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux252)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux253)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux253)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00011],aux254)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00011],aux254)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux255)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux255)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux256)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux256)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux257)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux257)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux258)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux258)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux259)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux259)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux260)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux260)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux261)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux261)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux262)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux262)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux263)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux263)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux264)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux264)
weightedsumleq([-1,1],[M_00004_00011,-1],aux265)
weightedsumgeq([-1,1],[M_00004_00011,-1],aux265)
weightedsumleq([-1,1],[M_00004_00009,M_00004_00010],aux266)
weightedsumgeq([-1,1],[M_00004_00009,M_00004_00010],aux266)
weightedsumleq([-1,1],[M_00004_00010,M_00004_00011],aux267)
weightedsumgeq([-1,1],[M_00004_00010,M_00004_00011],aux267)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux268)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux268)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00011],aux269)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00011],aux269)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux270)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux270)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00010],aux271)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00010],aux271)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux272)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux272)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux273)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux273)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux274)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux274)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux275)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux275)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux276)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux276)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux277)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux277)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux278)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux278)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux279)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux279)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux280)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux280)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux281)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux281)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux282)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux282)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux283)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux283)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux284)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux284)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux285)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux285)
weightedsumleq([1,-1],[-1,M_00005_00010],aux286)
weightedsumgeq([1,-1],[-1,M_00005_00010],aux286)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux287)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux287)
weightedsumleq([-1,1],[M_00005_00008,M_00005_00009],aux288)
weightedsumgeq([-1,1],[M_00005_00008,M_00005_00009],aux288)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00010],aux289)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00010],aux289)
weightedsumleq([-1,1],[M_00005_00009,M_00005_00010],aux290)
weightedsumgeq([-1,1],[M_00005_00009,M_00005_00010],aux290)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux291)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux291)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00009],aux292)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00009],aux292)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux293)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux293)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux294)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux294)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux295)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux295)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux296)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux296)
weightedsumleq([1,-1],[-1,M_00006_00009],aux297)
weightedsumgeq([1,-1],[-1,M_00006_00009],aux297)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux298)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux298)
weightedsumleq([-1,1],[M_00006_00007,M_00006_00008],aux299)
weightedsumgeq([-1,1],[M_00006_00007,M_00006_00008],aux299)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00009],aux300)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00009],aux300)
weightedsumleq([-1,1],[M_00006_00008,M_00006_00009],aux301)
weightedsumgeq([-1,1],[M_00006_00008,M_00006_00009],aux301)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux302)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux302)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00008],aux303)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00008],aux303)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux304)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux304)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux305)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux305)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux306)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux306)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux307)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux307)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux308)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux308)
weightedsumleq([-1,1],[M_00007_00007,M_00007_00008],aux309)
weightedsumgeq([-1,1],[M_00007_00007,M_00007_00008],aux309)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00008],aux310)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00008],aux310)
weightedsumleq([-1,1],[M_00007_00008,-1],aux311)
weightedsumgeq([-1,1],[M_00007_00008,-1],aux311)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux312)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux312)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux313)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux313)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux314)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux314)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux315)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux315)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux316)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux316)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux317)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux317)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux318)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux318)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux319)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux319)
weightedsumleq([-1,1],[M_00007_00006,M_00007_00007],aux320)
weightedsumgeq([-1,1],[M_00007_00006,M_00007_00007],aux320)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00007],aux321)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00007],aux321)
weightedsumleq([-1,1],[M_00008_00007,-1],aux322)
weightedsumgeq([-1,1],[M_00008_00007,-1],aux322)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux323)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux323)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux324)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux324)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux325)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux325)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux326)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux326)
weightedsumleq([-1,1],[M_00008_00005,M_00008_00006],aux327)
weightedsumgeq([-1,1],[M_00008_00005,M_00008_00006],aux327)
weightedsumleq([-1,1],[M_00008_00006,M_00008_00007],aux328)
weightedsumgeq([-1,1],[M_00008_00006,M_00008_00007],aux328)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux329)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux329)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00006],aux330)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00006],aux330)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00007],aux331)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00007],aux331)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux332)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux332)
weightedsumleq([-1,1],[M_00009_00004,M_00009_00005],aux333)
weightedsumgeq([-1,1],[M_00009_00004,M_00009_00005],aux333)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux334)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux334)
weightedsumleq([-1,1],[M_00009_00005,M_00009_00006],aux335)
weightedsumgeq([-1,1],[M_00009_00005,M_00009_00006],aux335)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00005],aux336)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00005],aux336)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00006],aux337)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00006],aux337)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux338)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux338)
weightedsumleq([1,-1],[-1,M_00009_00006],aux339)
weightedsumgeq([1,-1],[-1,M_00009_00006],aux339)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux340)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux340)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux341)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux341)
weightedsumleq([-1,1],[M_00010_00003,M_00010_00004],aux342)
weightedsumgeq([-1,1],[M_00010_00003,M_00010_00004],aux342)
weightedsumleq([-1,1],[M_00010_00004,M_00010_00005],aux343)
weightedsumgeq([-1,1],[M_00010_00004,M_00010_00005],aux343)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux344)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux344)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00005],aux345)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00005],aux345)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux346)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux346)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00004],aux347)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00004],aux347)
weightedsumleq([-1,1],[M_00010_00005,-1],aux348)
weightedsumgeq([-1,1],[M_00010_00005,-1],aux348)
weightedsumleq([-1,1],[M_00011_00002,M_00011_00003],aux349)
weightedsumgeq([-1,1],[M_00011_00002,M_00011_00003],aux349)
weightedsumleq([-1,1],[M_00011_00003,M_00011_00004],aux350)
weightedsumgeq([-1,1],[M_00011_00003,M_00011_00004],aux350)
weightedsumleq([-1,1],[M_00011_00004,-1],aux351)
weightedsumgeq([-1,1],[M_00011_00004,-1],aux351)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux352)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux352)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00004],aux353)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00004],aux353)
weightedsumleq([-1,1],[M_00012_00001,M_00012_00002],aux354)
weightedsumgeq([-1,1],[M_00012_00001,M_00012_00002],aux354)
weightedsumleq([-1,1],[M_00012_00002,M_00012_00003],aux355)
weightedsumgeq([-1,1],[M_00012_00002,M_00012_00003],aux355)
weightedsumleq([-1,1],[M_00012_00003,-1],aux356)
weightedsumgeq([-1,1],[M_00012_00003,-1],aux356)
weightedsumleq([1,-1],[-1,M_00013_00002],aux357)
weightedsumgeq([1,-1],[-1,M_00013_00002],aux357)
weightedsumleq([-1,1],[M_00013_00001,M_00013_00002],aux358)
weightedsumgeq([-1,1],[M_00013_00001,M_00013_00002],aux358)
**EOF**
