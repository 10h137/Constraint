MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 123
# CSE_active_eliminated_expressions = 564
# CSE_active_total_size = 369
**VARIABLES**
DISCRETE M_00002_00001 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00002_00003 #
{32..33}
DISCRETE M_00002_00004 #
{5..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [5,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00002_00005 #
{0..5}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [0,0,3,5])
**VARIABLES**
DISCRETE M_00002_00006 #
{0..4}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [0,0,3,4])
**VARIABLES**
DISCRETE M_00002_00007 #
{3..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [3,5,7,7,10,10,17,17,20,20])
**VARIABLES**
DISCRETE M_00002_00008 #
{20..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00002_00009 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00001 #
{5..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [5,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00003_00002 #
{17..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [17,17,20,20,32,32])
**VARIABLES**
DISCRETE M_00003_00003 #
{32..33}
DISCRETE M_00003_00004 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00003_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00006 #
{0..20}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [0,0,3,5,7,7,10,10,17,17,20,20])
**VARIABLES**
DISCRETE M_00003_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00008 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00009 #
{10..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00009, [10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00001 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00004_00003 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00004_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00008 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00002 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33])
**VARIABLES**
DISCRETE M_00005_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,3,5,7,7,10,10,17,17,20,20,32,33,44,44])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..3}
BOOL aux16 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00009=M_00004_00008)
DISCRETE aux17 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux20 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux21 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux22 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux23 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux24 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux25 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux26 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007/13)
BOOL aux27 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux28 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux32 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux37 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux38 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux39 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux40 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux41 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..3}
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001/13)
{0..2}
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux47 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux48 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux49 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux50 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux51 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux52 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux53 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux54 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00009/13)
{0..3}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{0..2}
BOOL aux58 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux69 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux70 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux72 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux73 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux74 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux75 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux76 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux77 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux78 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux79 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux80 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux81 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux82 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
BOOL aux85 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
DISCRETE aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
DISCRETE aux89 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
BOOL aux90 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux91 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux92 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux93 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux96 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux98 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
DISCRETE aux100 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux103 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux104 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux105 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
BOOL aux106 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux110 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
DISCRETE aux111 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux112 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
BOOL aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux114 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux115 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux116 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux117 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
BOOL aux118 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
BOOL aux119 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux120 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux121 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux122 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux123 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux124 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux126 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
DISCRETE aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
BOOL aux128 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
BOOL aux129 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux130 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux131 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux132 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux133 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux134 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux135 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
DISCRETE aux136 #
{0..3}
DISCRETE aux137 #(M_00002_00003 + -17)
{15..16}
DISCRETE aux138 #( - M_00002_00001 + M_00002_00004)
{-28..26}
**CONSTRAINTS**
w-inintervalset(aux138, [-28,-25,-23,-22,-16,-15,-13,-12,-10,-10,-7,-7,-5,-5,-3,1,3,3,7,7,10,10,12,13,15,16,22,23,25,26])
**VARIABLES**
DISCRETE aux139 #( - M_00002_00004 + M_00002_00005)
{-33..-5}
**CONSTRAINTS**
w-inintervalset(aux139, [-33,-32,-30,-27,-20,-20,-17,-12,-10,-10,-7,-5])
**VARIABLES**
DISCRETE aux140 #( - M_00002_00004 + M_00002_00007)
{-30..15}
**CONSTRAINTS**
w-inintervalset(aux140, [-30,-25,-23,-22,-17,-12,-10,-10,-7,0,2,3,5,5,7,7,10,10,12,13,15,15])
**VARIABLES**
DISCRETE aux141 #( - M_00002_00009 + 10)
{-34..7}
**CONSTRAINTS**
w-inintervalset(aux141, [-34,-34,-23,-22,-10,-10,-7,-7,0,0,3,3,5,7])
**VARIABLES**
DISCRETE aux142 #( - M_00002_00007 + 10)
{-10..7}
**CONSTRAINTS**
w-inintervalset(aux142, [-10,-10,-7,-7,0,0,3,3,5,7])
**VARIABLES**
DISCRETE aux143 #( - M_00002_00003 + M_00002_00004)
{-28..1}
**CONSTRAINTS**
w-inintervalset(aux143, [-28,-25,-23,-22,-16,-15,-13,-12,-1,1])
**VARIABLES**
DISCRETE aux144 #( - M_00002_00001 + 17)
{-16..10}
**CONSTRAINTS**
w-inintervalset(aux144, [-16,-15,-3,-3,0,0,7,7,10,10])
**VARIABLES**
DISCRETE aux145 #( - M_00002_00005 + M_00002_00008)
{15..44}
**CONSTRAINTS**
w-inintervalset(aux145, [15,17,20,20,27,30,32,33,39,41,44,44])
**VARIABLES**
DISCRETE aux146 #( - M_00002_00006 + M_00002_00007)
{3..16}
**CONSTRAINTS**
w-inintervalset(aux146, [3,7,10,10,13,14,16,16])
**VARIABLES**
DISCRETE aux147 #( - M_00002_00007 + M_00002_00008)
{16..24}
**CONSTRAINTS**
w-inintervalset(aux147, [16,17,22,24])
**VARIABLES**
DISCRETE aux148 #( - M_00002_00006 + M_00002_00009)
{-1..44}
**CONSTRAINTS**
w-inintervalset(aux148, [-1,7,10,10,13,14,16,17,20,20,28,30,32,33,40,41,44,44])
**VARIABLES**
DISCRETE aux149 #( - M_00002_00008 + M_00002_00009)
{-41..24}
**CONSTRAINTS**
w-inintervalset(aux149, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-15,-13,-10,-3,-3,-1,1,11,13,24,24])
**VARIABLES**
DISCRETE aux150 #( - M_00003_00003 + M_00003_00004)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux150, [-33,-32,-30,-25,-23,-22,-16,-15,-13,-12,-1,1])
**VARIABLES**
DISCRETE aux151 #( - M_00003_00001 + M_00003_00004)
{-33..26}
**CONSTRAINTS**
w-inintervalset(aux151, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,3,5,5,7,7,10,10,12,13,15,16,22,23,25,26])
**VARIABLES**
DISCRETE aux152 #( - M_00003_00003 + M_00003_00006)
{-33..-12}
**CONSTRAINTS**
w-inintervalset(aux152, [-33,-32,-30,-25,-23,-22,-16,-15,-13,-12])
**VARIABLES**
DISCRETE aux153 #( - M_00003_00002 + M_00003_00005)
{-32..27}
**CONSTRAINTS**
w-inintervalset(aux153, [-32,-32,-29,-27,-25,-25,-22,-22,-20,-20,-17,-12,-10,-10,-7,-7,-3,-3,0,1,3,3,12,13,15,16,24,24,27,27])
**VARIABLES**
DISCRETE aux154 #( - M_00003_00009 + -1)
{-45..-11}
**CONSTRAINTS**
w-inintervalset(aux154, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11])
**VARIABLES**
DISCRETE aux155 #( - M_00003_00006 + M_00003_00007)
{-1..44}
**CONSTRAINTS**
w-inintervalset(aux155, [-1,7,10,10,12,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux156 #( - M_00003_00007 + M_00003_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux156, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,22,30,34,34,37,37,39,41])
**VARIABLES**
DISCRETE aux157 #( - M_00003_00006 + M_00003_00009)
{-10..44}
**CONSTRAINTS**
w-inintervalset(aux157, [-10,-10,-7,-7,-3,-3,0,0,3,3,5,7,10,10,12,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux158 #( - M_00003_00008 + M_00003_00009)
{-34..24}
**CONSTRAINTS**
w-inintervalset(aux158, [-34,-34,-27,-27,-24,-22,-16,-15,-13,-10,-7,-7,-3,-3,-1,1,3,3,5,7,10,17,22,24])
**VARIABLES**
DISCRETE aux159 #( - M_00003_00005 + M_00003_00006)
{-40..20}
**CONSTRAINTS**
w-inintervalset(aux159, [-40,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-12,-10,-10,-7,7,10,10,12,17,20,20])
**VARIABLES**
DISCRETE aux160 #( - M_00003_00005 + M_00003_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux160, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux161 #( - M_00003_00001 + M_00003_00002)
{-16..15}
**CONSTRAINTS**
w-inintervalset(aux161, [-16,-15,-13,-12,-3,-3,-1,0,3,3,7,7,10,10,12,13,15,15])
**VARIABLES**
DISCRETE aux162 #( - M_00003_00002 + M_00003_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux162, [1,1,12,13,15,16])
**VARIABLES**
DISCRETE aux163 #( - M_00003_00004 + M_00003_00005)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux163, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,11])
**VARIABLES**
DISCRETE aux164 #( - M_00003_00004 + M_00003_00007)
{-30..44}
**CONSTRAINTS**
w-inintervalset(aux164, [-30,-25,-23,-22,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux165 #( - M_00004_00002 + M_00004_00003)
{-33..29}
**CONSTRAINTS**
w-inintervalset(aux165, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,3,5,7,10,10,12,13,15,16,22,23,25,29])
**VARIABLES**
DISCRETE aux166 #( - M_00004_00001 + M_00004_00004)
{-33..39}
**CONSTRAINTS**
w-inintervalset(aux166, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,39])
**VARIABLES**
DISCRETE aux167 #( - M_00004_00002 + M_00004_00005)
{-33..27}
**CONSTRAINTS**
w-inintervalset(aux167, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,3,5,7,10,13,15,16,22,27])
**VARIABLES**
DISCRETE aux168 #( - M_00004_00008 + -1)
{-45..-4}
**CONSTRAINTS**
w-inintervalset(aux168, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4])
**VARIABLES**
DISCRETE aux169 #( - M_00004_00006 + M_00004_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux169, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux170 #( - M_00004_00007 + M_00004_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux170, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,22,30,34,34,37,37,39,41])
**VARIABLES**
DISCRETE aux171 #( - M_00004_00005 + M_00004_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux171, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux172 #( - M_00004_00005 + M_00004_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux172, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux173 #( - M_00004_00004 + M_00004_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux173, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux174 #( - M_00004_00004 + M_00004_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux174, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux175 #( - M_00004_00001 + M_00004_00002)
{-29..28}
**CONSTRAINTS**
w-inintervalset(aux175, [-29,-25,-23,-22,-16,-15,-13,-12,-10,-10,-7,-5,-3,7,10,10,12,17,20,20,22,23,25,28])
**VARIABLES**
DISCRETE aux176 #( - M_00004_00003 + M_00004_00004)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux176, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux177 #( - M_00004_00003 + M_00004_00006)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux177, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux178 #(-1 - M_00005_00007)
{-45..-4}
**CONSTRAINTS**
w-inintervalset(aux178, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4])
**VARIABLES**
DISCRETE aux179 #( - M_00005_00004 + M_00005_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux179, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux180 #( - M_00005_00005 + M_00005_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux180, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux181 #( - M_00005_00004 + M_00005_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux181, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux182 #( - M_00005_00006 + M_00005_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux182, [-41,-39,-37,-37,-34,-34,-30,-22,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux183 #( - M_00005_00003 + M_00005_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux183, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux184 #( - M_00005_00003 + M_00005_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux184, [-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux185 #( - M_00005_00002 + M_00005_00003)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux185, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux186 #( - M_00005_00002 + M_00005_00005)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux186, [-33,-32,-30,-25,-23,-22,-20,-20,-17,-12,-10,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux187 #( - M_00005_00001 + M_00005_00002)
{-33..33}
**CONSTRAINTS**
w-inintervalset(aux187, [-33,-32,-30,-22,-20,-20,-17,-10,-7,7,10,10,12,17,20,20,22,23,25,30,32,33])
**VARIABLES**
DISCRETE aux188 #( - M_00005_00001 + M_00005_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux188, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux189 #( - M_00006_00003 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux189, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux190 #( - M_00006_00004 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux190, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux191 #( - M_00006_00003 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux191, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux192 #(-1 - M_00006_00006)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux192, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux193 #( - M_00006_00005 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux193, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux194 #( - M_00006_00002 + M_00006_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux194, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux195 #( - M_00006_00002 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux195, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux196 #( - M_00006_00001 + M_00006_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux196, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux197 #( - M_00006_00001 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux197, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux198 #( - M_00007_00001 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux198, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux199 #( - M_00007_00005 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux199, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux200 #( - M_00007_00001 + M_00007_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux200, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux201 #( - M_00007_00002 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux201, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux202 #( - M_00007_00002 + M_00007_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux202, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux203 #( - M_00007_00003 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux203, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux204 #( - M_00007_00004 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux204, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux205 #( - M_00008_00003 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux205, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux206 #( - M_00008_00001 + M_00008_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux206, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux207 #( - M_00008_00001 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux207, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux208 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux208, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux209 #( - M_00008_00004 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux209, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux210 #( - M_00009_00001 + M_00009_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux210, [-44,-44,-41,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux211 #( - M_00009_00002 + M_00009_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux211, [-39,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,39])
**VARIABLES**
DISCRETE aux212 #(-1 - M_00009_00003)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux212, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux213 #( - M_00010_00001 + M_00010_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux213, [-39,-39,-37,-37,-34,-32,-30,-22,-20,-20,-17,-10,-7,7,10,17,20,20,22,30,32,34,37,37,39,39])
**VARIABLES**
DISCRETE aux214 #( - M_00010_00002 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux214, [-45,-45,-34,-33,-21,-21,-18,-18,-11,-11,-8,-8,-6,-4,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[11]=[7, 17, 32, 33, 5, 0, 4, 20, 44, 3, 10]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00003_00009],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00010_00001],[M_00010_00002],[M_00011_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00009_00001, M_00009_00002, M_00009_00003, M_00010_00001, M_00010_00002, M_00011_00001]
**CONSTRAINTS**
div(M_00010_00002, 13, aux136)
reify(gaceq(M_00007_00004,M_00006_00004), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00006, 13, 0)
reify(gaceq(M_00003_00009,M_00004_00008), aux16)
div(M_00007_00001, 13, aux17)
div(M_00007_00003, 13, aux18)
div(M_00007_00005, 13, aux19)
reify(gaceq(M_00005_00002,M_00006_00002), aux20)
reify(gaceq(M_00007_00002,M_00006_00002), aux21)
reify(gaceq(M_00003_00002,M_00004_00002), aux22)
reify(gaceq(M_00005_00003,M_00006_00003), aux23)
reify(gaceq(M_00005_00007,M_00006_00006), aux24)
div(M_00002_00004, 13, aux25)
div(M_00002_00007, 13, aux26)
reify(gaceq(M_00002_00007,M_00003_00006), aux27)
reify(gaceq(M_00004_00005,M_00005_00005), aux28)
reify(gaceq(M_00004_00005,M_00005_00004), aux29)
reify(gaceq(M_00010_00001,M_00009_00001), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
reify(gaceq(M_00004_00006,M_00005_00005), aux32)
div(M_00004_00003, 13, aux33)
div(M_00004_00002, 13, aux34)
div(M_00004_00006, 13, aux35)
div(M_00004_00007, 13, aux36)
reify(gaceq(M_00002_00001,M_00003_00001), aux37)
reify(gaceq(M_00004_00003,M_00005_00003), aux38)
reify(gaceq(M_00005_00001,M_00006_00001), aux39)
reify(gaceq(M_00004_00002,M_00005_00002), aux40)
reify(gaceq(M_00003_00008,M_00004_00007), aux41)
div(M_00002_00008, 13, aux42)
div(M_00002_00001, 13, aux43)
div(M_00002_00005, 13, 0)
reify(gaceq(M_00008_00004,M_00009_00003), aux45)
reify(gaceq(M_00008_00002,M_00009_00002), aux46)
reify(gaceq(M_00008_00001,M_00009_00001), aux47)
reify(gaceq(M_00003_00007,M_00004_00006), aux48)
reify(gaceq(M_00003_00006,M_00004_00006), aux49)
reify(gaceq(M_00002_00006,M_00003_00005), aux50)
reify(gaceq(M_00002_00006,M_00003_00006), aux51)
reify(gaceq(M_00003_00005,M_00004_00004), aux52)
reify(gaceq(M_00005_00005,M_00006_00005), aux53)
reify(gaceq(M_00002_00008,M_00003_00007), aux54)
div(M_00003_00009, 13, aux55)
div(M_00003_00003, 13, 2)
div(M_00003_00001, 13, aux57)
reify(gaceq(M_00002_00004,M_00003_00004), aux58)
div(M_00005_00007, 13, aux59)
div(M_00005_00001, 13, aux60)
div(M_00008_00003, 13, aux61)
div(M_00008_00002, 13, aux62)
div(M_00008_00001, 13, aux63)
div(M_00008_00004, 13, aux64)
div(M_00006_00005, 13, aux65)
div(M_00006_00004, 13, aux66)
div(M_00006_00003, 13, aux67)
div(M_00006_00002, 13, aux68)
reify(gaceq(M_00002_00005,M_00003_00004), aux69)
reify(gaceq(M_00004_00004,M_00005_00003), aux70)
reify(gaceq(M_00002_00003,M_00003_00002), aux71)
reify(gaceq(M_00003_00004,M_00004_00004), aux72)
reify(gaceq(M_00002_00007,M_00003_00007), aux73)
reify(gaceq(M_00007_00001,M_00006_00001), aux74)
reify(gaceq(M_00004_00007,M_00005_00006), aux75)
reify(gaceq(M_00003_00003,M_00004_00003), aux76)
reify(gaceq(M_00007_00004,M_00008_00004), aux77)
reify(gaceq(M_00007_00003,M_00008_00002), aux78)
reify(gaceq(M_00003_00006,M_00004_00005), aux79)
reify(gaceq(M_00008_00003,M_00009_00002), aux80)
reify(gaceq(M_00008_00003,M_00009_00003), aux81)
reify(gaceq(M_00003_00001,M_00004_00001), aux82)
div(M_00006_00001, 13, aux83)
div(M_00006_00006, 13, aux84)
reify(gaceq(M_00004_00004,M_00005_00004), aux85)
div(M_00003_00006, 13, aux86)
div(M_00003_00007, 13, aux87)
div(M_00003_00008, 13, aux88)
div(M_00003_00002, 13, aux89)
reify(gaceq(M_00005_00005,M_00006_00004), aux90)
reify(gaceq(M_00003_00003,M_00004_00002), aux91)
reify(gaceq(M_00003_00008,M_00004_00008), aux92)
reify(gaceq(M_00005_00004,M_00006_00004), aux93)
reify(gaceq(M_00005_00003,M_00006_00002), aux94)
reify(gaceq(M_00005_00006,M_00006_00006), aux95)
reify(gaceq(M_00002_00009,M_00003_00008), aux96)
div(M_00005_00006, 13, aux97)
div(M_00005_00002, 13, aux98)
div(M_00005_00005, 13, aux99)
div(M_00005_00003, 13, aux100)
reify(gaceq(M_00004_00007,M_00005_00007), aux101)
reify(gaceq(M_00004_00003,M_00005_00002), aux102)
reify(gaceq(M_00004_00008,M_00005_00007), aux103)
div(M_00007_00002, 13, aux104)
div(M_00007_00004, 13, aux105)
reify(gaceq(M_00002_00005,M_00003_00005), aux106)
reify(gaceq(M_00003_00004,M_00004_00003), aux107)
reify(gaceq(M_00007_00004,M_00008_00003), aux108)
reify(gaceq(M_00005_00004,M_00006_00003), aux109)
reify(gaceq(M_00003_00007,M_00004_00007), aux110)
div(M_00004_00004, 13, aux111)
div(M_00004_00005, 13, aux112)
reify(gaceq(M_00007_00003,M_00006_00004), aux113)
reify(gaceq(M_00002_00003,M_00003_00003), aux114)
reify(gaceq(M_00007_00001,M_00008_00001), aux115)
reify(gaceq(M_00007_00002,M_00008_00002), aux116)
reify(gaceq(M_00007_00003,M_00008_00003), aux117)
reify(gaceq(M_00007_00005,M_00006_00005), aux118)
reify(gaceq(M_00007_00002,M_00006_00003), aux119)
reify(gaceq(M_00005_00006,M_00006_00005), aux120)
reify(gaceq(M_00003_00005,M_00004_00005), aux121)
div(M_00003_00004, 13, aux122)
div(M_00003_00005, 13, aux123)
reify(gaceq(M_00007_00005,M_00008_00004), aux124)
reify(gaceq(M_00002_00004,M_00003_00003), aux125)
reify(gaceq(M_00002_00008,M_00003_00008), aux126)
div(M_00005_00004, 13, aux127)
reify(gaceq(M_00004_00001,M_00005_00001), aux128)
reify(gaceq(M_00007_00005,M_00006_00006), aux129)
div(M_00009_00002, 13, aux130)
div(M_00004_00008, 13, aux131)
div(M_00004_00001, 13, aux132)
reify(gaceq(M_00004_00006,M_00005_00006), aux133)
reify(gaceq(M_00007_00004,M_00006_00005), aux134)
reify(gaceq(M_00007_00003,M_00006_00003), aux135)
gccweak([M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00003_00009],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003],[-1],[0])
gccweak([M_00010_00001, M_00010_00002],[-1],[0])
gccweak([M_00011_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,33),w-literal(M_00002_00004,5),w-literal(M_00002_00005,0),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,33),w-literal(M_00002_00003,32),w-literal(M_00002_00004,5),w-literal(M_00002_00005,0),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00005,0),w-literal(M_00002_00004,33),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00004,33),w-literal(M_00002_00005,5),w-literal(M_00002_00006,0),w-literal(M_00002_00007,3),w-literal(M_00002_00008,20),w-literal(M_00002_00009,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00004,33),w-literal(M_00002_00005,5),w-literal(M_00002_00006,0),w-literal(M_00002_00007,4),w-literal(M_00002_00008,20),w-literal(M_00002_00009,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00004,33),w-literal(M_00002_00005,5),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)})})
watched-or({watched-and({w-literal(M_00003_00009,10),modulo(aux137,13,0),w-literal(aux37,1),w-literal(aux71,1),w-literal(aux125,1),w-literal(aux69,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1)}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux114,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux69,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux138,13,0),gaceq(aux43,aux25)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux69,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux139,13,0),w-literal(aux25,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux106,1),w-literal(aux51,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux140,13,0),gaceq(aux25,aux26)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),watched-or({w-literal(aux14,0),modulo(aux141,13,0)}),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux51,1),w-literal(aux73,1),w-literal(aux126,1)}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00007,10),watched-or({w-literal(aux26,0),modulo(aux142,13,0)}),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux51,1),w-literal(aux126,1),gaceq(M_00002_00009,M_00003_00009)}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux125,1),w-literal(aux69,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux143,13,0),div(M_00002_00003, 13, aux25)})}),watched-and({w-literal(M_00003_00001,17),w-literal(M_00003_00009,10),watched-or({w-literal(aux43,1),modulo(aux144,13,0)}),w-literal(aux71,1),w-literal(aux125,1),w-literal(aux69,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1)}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux51,1),w-literal(aux73,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux96,1),modulo(aux145,13,0)}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux146,13,0),w-literal(aux26,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux51,1),w-literal(aux54,1),w-literal(aux96,1),watched-or({modulo(aux147,13,0),gaceq(aux26,aux42)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux73,1),w-literal(aux126,1),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux148,13,0),w-literal(aux14,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux106,1),w-literal(aux51,1),w-literal(aux73,1),w-literal(aux96,1),watched-or({modulo(aux149,13,0),gaceq(aux42,aux14)})}),watched-and({w-literal(M_00003_00002,17),w-literal(M_00003_00009,10),w-literal(aux37,1),w-literal(aux114,1),w-literal(aux58,1),w-literal(aux50,1),w-literal(aux27,1),w-literal(aux54,1),w-literal(aux96,1)})})
watched-or({watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux107,1),w-literal(aux52,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux150,13,0),w-literal(aux122,2)})}),watched-and({w-literal(aux22,1),w-literal(aux76,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux52,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux151,13,0),gaceq(aux57,aux122)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux72,1),w-literal(aux121,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),modulo(aux152,13,0)}),watched-and({w-literal(aux82,1),w-literal(aux76,1),w-literal(aux72,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux153,13,0),gaceq(aux89,aux123)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux121,1),w-literal(aux49,1),w-literal(aux110,1),w-literal(aux92,1),modulo(aux154,13,0)}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux121,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux155,13,0),gaceq(aux86,aux87)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux121,1),w-literal(aux49,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux156,13,0),gaceq(aux87,aux88)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux121,1),w-literal(aux110,1),w-literal(aux92,1),gaceq(M_00003_00009,M_00004_00006),watched-or({modulo(aux157,13,0),gaceq(aux86,aux55)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux121,1),w-literal(aux49,1),w-literal(aux110,1),w-literal(aux16,1),watched-or({modulo(aux158,13,0),gaceq(aux88,aux55)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux159,13,0),gaceq(aux123,aux86)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux49,1),w-literal(aux110,1),gaceq(M_00003_00008,M_00004_00005),w-literal(aux16,1),watched-or({modulo(aux160,13,0),gaceq(aux123,aux88)})}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux91,1),w-literal(aux107,1),w-literal(aux52,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux161,13,0),gaceq(aux57,aux89)})}),watched-and({w-literal(aux82,1),w-literal(aux91,1),w-literal(aux107,1),w-literal(aux52,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux162,13,0),w-literal(aux89,2)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux52,1),w-literal(aux79,1),w-literal(aux48,1),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux163,13,0),gaceq(aux122,aux123)})}),watched-and({w-literal(aux82,1),w-literal(aux22,1),w-literal(aux76,1),w-literal(aux121,1),w-literal(aux49,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux41,1),w-literal(aux16,1),watched-or({modulo(aux164,13,0),gaceq(aux122,aux87)})})})
watched-or({watched-and({w-literal(aux128,1),w-literal(aux102,1),w-literal(aux70,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux34,aux33),modulo(aux165,13,0)})}),watched-and({w-literal(aux40,1),w-literal(aux38,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux132,aux111),modulo(aux166,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux38,1),w-literal(aux85,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux34,aux112),modulo(aux167,13,0)})}),watched-and({modulo(aux168,13,0),w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux85,1),w-literal(aux28,1),w-literal(aux133,1),w-literal(aux101,1)}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux85,1),w-literal(aux28,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux35,aux36),modulo(aux169,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux85,1),w-literal(aux28,1),w-literal(aux133,1),w-literal(aux103,1),watched-or({gaceq(aux36,aux131),modulo(aux170,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux85,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux112,aux35),modulo(aux171,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux85,1),w-literal(aux133,1),w-literal(aux101,1),gaceq(M_00004_00008,M_00005_00005),watched-or({gaceq(aux112,aux131),modulo(aux172,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux111,aux112),modulo(aux173,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux38,1),w-literal(aux28,1),w-literal(aux133,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux103,1),watched-or({gaceq(aux111,aux36),modulo(aux174,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux102,1),w-literal(aux70,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux132,aux34),modulo(aux175,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux70,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux33,aux111),modulo(aux176,13,0)})}),watched-and({w-literal(aux128,1),w-literal(aux40,1),w-literal(aux85,1),w-literal(aux28,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux75,1),w-literal(aux103,1),watched-or({gaceq(aux33,aux35),modulo(aux177,13,0)})})})
watched-or({watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux23,1),w-literal(aux93,1),w-literal(aux53,1),w-literal(aux95,1),modulo(aux178,13,0)}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux23,1),w-literal(aux90,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux179,13,0),gaceq(aux127,aux99)})}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux23,1),w-literal(aux93,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux180,13,0),gaceq(aux99,aux97)})}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux23,1),w-literal(aux53,1),w-literal(aux95,1),gaceq(M_00005_00007,M_00006_00004),watched-or({modulo(aux181,13,0),gaceq(aux127,aux59)})}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux23,1),w-literal(aux93,1),w-literal(aux53,1),w-literal(aux24,1),watched-or({modulo(aux182,13,0),gaceq(aux97,aux59)})}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux109,1),w-literal(aux90,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux183,13,0),gaceq(aux100,aux127)})}),watched-and({w-literal(aux39,1),w-literal(aux20,1),w-literal(aux93,1),w-literal(aux53,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux24,1),watched-or({modulo(aux184,13,0),gaceq(aux100,aux97)})}),watched-and({w-literal(aux39,1),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux90,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux185,13,0),gaceq(aux98,aux100)})}),watched-and({w-literal(aux39,1),w-literal(aux23,1),w-literal(aux93,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux186,13,0),gaceq(aux98,aux99)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux94,1),w-literal(aux109,1),w-literal(aux90,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux187,13,0),gaceq(aux60,aux98)})}),watched-and({w-literal(aux20,1),w-literal(aux23,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux90,1),w-literal(aux120,1),w-literal(aux24,1),watched-or({modulo(aux188,13,0),gaceq(aux60,aux127)})})})
watched-or({watched-and({w-literal(aux74,1),w-literal(aux21,1),w-literal(aux113,1),w-literal(aux134,1),w-literal(aux129,1),watched-or({gaceq(aux67,aux66),modulo(aux189,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux21,1),w-literal(aux135,1),w-literal(aux134,1),w-literal(aux129,1),watched-or({gaceq(aux66,aux65),modulo(aux190,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux21,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux13,1),w-literal(aux118,1),watched-or({gaceq(aux67,aux84),modulo(aux191,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux21,1),w-literal(aux135,1),w-literal(aux13,1),w-literal(aux118,1),modulo(aux192,13,0)}),watched-and({w-literal(aux74,1),w-literal(aux21,1),w-literal(aux135,1),w-literal(aux13,1),w-literal(aux129,1),watched-or({gaceq(aux65,aux84),modulo(aux193,13,0)})}),watched-and({w-literal(aux74,1),w-literal(aux119,1),w-literal(aux113,1),w-literal(aux134,1),w-literal(aux129,1),watched-or({gaceq(aux68,aux67),modulo(aux194,13,0)})}),watched-and({w-literal(aux74,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux135,1),w-literal(aux13,1),w-literal(aux129,1),watched-or({gaceq(aux68,aux65),modulo(aux195,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux119,1),w-literal(aux113,1),w-literal(aux134,1),w-literal(aux129,1),watched-or({gaceq(aux83,aux68),modulo(aux196,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux21,1),w-literal(aux135,1),w-literal(aux134,1),w-literal(aux129,1),watched-or({gaceq(aux83,aux66),modulo(aux197,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux198,13,0),gaceq(aux17,aux105)}),w-literal(aux116,1),w-literal(aux117,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux124,1)}),watched-and({modulo(aux199,13,0),w-literal(aux115,1),w-literal(aux116,1),w-literal(aux117,1),w-literal(aux77,1)}),watched-and({watched-or({modulo(aux200,13,0),gaceq(aux17,aux104)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux78,1),w-literal(aux108,1),w-literal(aux124,1)}),watched-and({watched-or({modulo(aux201,13,0),gaceq(aux104,aux19)}),w-literal(aux115,1),w-literal(aux117,1),w-literal(aux77,1),gaceq(M_00007_00005,M_00008_00002)}),watched-and({watched-or({modulo(aux202,13,0),gaceq(aux104,aux18)}),w-literal(aux115,1),w-literal(aux78,1),w-literal(aux108,1),w-literal(aux124,1)}),watched-and({watched-or({modulo(aux203,13,0),gaceq(aux18,aux105)}),w-literal(aux115,1),w-literal(aux116,1),w-literal(aux108,1),w-literal(aux124,1)}),watched-and({watched-or({modulo(aux204,13,0),gaceq(aux105,aux19)}),w-literal(aux115,1),w-literal(aux116,1),w-literal(aux117,1),w-literal(aux124,1)})})
watched-or({watched-and({watched-or({gaceq(aux61,aux64),modulo(aux205,13,0)}),w-literal(aux47,1),w-literal(aux46,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux63,aux62),modulo(aux206,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux80,1),w-literal(aux45,1)}),watched-and({watched-or({gaceq(aux63,aux64),modulo(aux207,13,0)}),w-literal(aux46,1),w-literal(aux81,1),gaceq(M_00008_00004,M_00009_00001)}),watched-and({watched-or({gaceq(aux62,aux61),modulo(aux208,13,0)}),w-literal(aux47,1),w-literal(aux80,1),w-literal(aux45,1)}),watched-and({w-literal(aux47,1),w-literal(aux46,1),w-literal(aux81,1),modulo(aux209,13,0)})})
watched-or({watched-and({watched-or({modulo(aux210,13,0),div(M_00009_00001, 13, aux130)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1)}),watched-and({watched-or({modulo(aux211,13,0),div(M_00009_00003, 13, aux130)}),w-literal(aux30,1),w-literal(aux31,1)}),watched-and({modulo(aux212,13,0),w-literal(aux30,1),gaceq(M_00010_00002,M_00009_00002)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),watched-or({div(M_00010_00001, 13, aux136),modulo(aux213,13,0)})}),watched-and({gaceq(M_00010_00001,M_00011_00001),modulo(aux214,13,0)})})
sumleq([M_00002_00003,-17],aux137)
sumgeq([M_00002_00003,-17],aux137)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux138)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux138)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux139)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux139)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux140)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux140)
weightedsumleq([-1,1],[M_00002_00009,10],aux141)
weightedsumgeq([-1,1],[M_00002_00009,10],aux141)
weightedsumleq([-1,1],[M_00002_00007,10],aux142)
weightedsumgeq([-1,1],[M_00002_00007,10],aux142)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux143)
weightedsumleq([-1,1],[M_00002_00001,17],aux144)
weightedsumgeq([-1,1],[M_00002_00001,17],aux144)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux145)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux145)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux146)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux146)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux147)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux147)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux148)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux148)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux149)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux149)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux150)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux150)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux151)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux151)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux152)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux152)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux153)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux153)
weightedsumleq([-1,1],[M_00003_00009,-1],aux154)
weightedsumgeq([-1,1],[M_00003_00009,-1],aux154)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux155)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux155)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux156)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux156)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00009],aux157)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00009],aux157)
weightedsumleq([-1,1],[M_00003_00008,M_00003_00009],aux158)
weightedsumgeq([-1,1],[M_00003_00008,M_00003_00009],aux158)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux159)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux159)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux160)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux160)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux161)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux161)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux162)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux162)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux163)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux163)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux164)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux164)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux165)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux165)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux166)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux166)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux167)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux167)
weightedsumleq([-1,1],[M_00004_00008,-1],aux168)
weightedsumgeq([-1,1],[M_00004_00008,-1],aux168)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux169)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux169)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux170)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux170)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux171)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux171)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux172)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux172)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux173)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux173)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux174)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux174)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux175)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux175)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux176)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux176)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux177)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux177)
weightedsumleq([1,-1],[-1,M_00005_00007],aux178)
weightedsumgeq([1,-1],[-1,M_00005_00007],aux178)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux179)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux179)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux180)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux180)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux181)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux181)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux182)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux182)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux183)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux183)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux184)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux184)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux185)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux185)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux186)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux186)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux187)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux187)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux188)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux188)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux189)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux189)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux190)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux190)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux191)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux191)
weightedsumleq([1,-1],[-1,M_00006_00006],aux192)
weightedsumgeq([1,-1],[-1,M_00006_00006],aux192)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux193)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux193)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux194)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux194)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux195)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux195)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux196)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux196)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux197)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux197)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux198)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux198)
weightedsumleq([-1,1],[M_00007_00005,-1],aux199)
weightedsumgeq([-1,1],[M_00007_00005,-1],aux199)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux200)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux200)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux201)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux201)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux202)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux202)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux203)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux203)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux204)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux204)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux205)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux205)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux206)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux206)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux207)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux207)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux208)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux208)
weightedsumleq([-1,1],[M_00008_00004,-1],aux209)
weightedsumgeq([-1,1],[M_00008_00004,-1],aux209)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux210)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux210)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux211)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux211)
weightedsumleq([1,-1],[-1,M_00009_00003],aux212)
weightedsumgeq([1,-1],[-1,M_00009_00003],aux212)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux213)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux213)
weightedsumleq([-1,1],[M_00010_00002,-1],aux214)
weightedsumgeq([-1,1],[M_00010_00002,-1],aux214)
**EOF**
