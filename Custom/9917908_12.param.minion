MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 145
# CSE_active_eliminated_expressions = 682
# CSE_active_total_size = 435
**VARIABLES**
DISCRETE M_00002_00001 #
{7..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00002_00003 #
{32..33}
DISCRETE M_00002_00004 #
{5..33}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [5,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00002_00005 #
{0..5}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [0,0,3,5])
**VARIABLES**
DISCRETE M_00002_00006 #
{0..4}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [0,0,3,4])
**VARIABLES**
DISCRETE M_00002_00007 #
{3..20}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [3,5,7,7,11,11,17,17,20,20])
**VARIABLES**
DISCRETE M_00002_00008 #
{20..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00002_00009 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [3,5,7,7,11,11,17,17,20,20,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00001 #
{5..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [5,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00003_00002 #
{17..32}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [17,17,20,20,27,27,32,32])
**VARIABLES**
DISCRETE M_00003_00003 #
{32..33}
DISCRETE M_00003_00004 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00003_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00006 #
{0..20}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [0,0,3,5,7,7,11,11,17,17,20,20])
**VARIABLES**
DISCRETE M_00003_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00003_00008 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00001 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00004_00002 #
{4..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [4,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00004_00003 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00004_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00008 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00004_00008, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00004_00009 #
{11..27}
**CONSTRAINTS**
w-inintervalset(M_00004_00009, [11,11,17,17,20,20,27,27])
**VARIABLES**
DISCRETE M_00005_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00002 #
{0..33}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33])
**VARIABLES**
DISCRETE M_00005_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00007, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00005_00008 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00005_00008, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00006, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00006_00007 #
{3..44}
**CONSTRAINTS**
w-inintervalset(M_00006_00007, [3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00007_00006 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00007_00006, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00008_00005 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00008_00005, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00009_00004 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00009_00004, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00010_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00010_00003 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00010_00003, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00011_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00011_00002 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00011_00002, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
DISCRETE M_00012_00001 #
{0..44}
**CONSTRAINTS**
w-inintervalset(M_00012_00001, [0,0,3,5,7,7,11,11,17,17,20,20,27,27,32,33,44,44])
**VARIABLES**
BOOL aux13 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00005)
DISCRETE aux14 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00009/13)
{0..3}
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
BOOL aux17 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
DISCRETE aux18 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux19 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006/13)
{0..3}
BOOL aux20 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux21 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002/13)
{0..3}
BOOL aux23 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00002=M_00009_00002)
BOOL aux24 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00003)
BOOL aux25 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux26 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00006)
DISCRETE aux27 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..2}
BOOL aux28 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux30 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00003)
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00003)
BOOL aux32 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
BOOL aux33 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00008/13)
{0..3}
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
DISCRETE aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..2}
DISCRETE aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00006)
BOOL aux39 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008/13)
{1..3}
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00001/13)
{0..2}
BOOL aux43 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00006=M_00008_00005)
BOOL aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00003)
BOOL aux45 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux46 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux47 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux48 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux49 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux50 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00006)
BOOL aux51 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux52 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux53 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux54 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00006/13)
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
{0..2}
DISCRETE aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00008/13)
{0..3}
DISCRETE aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
BOOL aux60 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
DISCRETE aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003/13)
{0..3}
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00001/13)
{0..3}
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00005/13)
{0..3}
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00006/13)
{0..3}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00003=M_00011_00002)
BOOL aux69 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00011_00001)
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux72 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux73 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00008)
BOOL aux75 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux76 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
BOOL aux77 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux78 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux79 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux80 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux81 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux82 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00007)
BOOL aux83 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00005)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux85 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux86 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00003=M_00009_00002)
BOOL aux87 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00004=M_00009_00004)
BOOL aux88 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
BOOL aux89 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00005_00008=M_00006_00007)
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00001=M_00009_00001)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00002=M_00009_00002)
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00010_00003=M_00009_00004)
DISCRETE aux93 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
DISCRETE aux94 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00007/13)
{0..3}
DISCRETE aux96 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00008/13)
{0..3}
DISCRETE aux97 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{1..2}
BOOL aux98 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux99 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux100 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00005)
BOOL aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00008)
BOOL aux103 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux104 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00007=M_00006_00007)
BOOL aux105 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
DISCRETE aux106 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00007/13)
{0..3}
DISCRETE aux107 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
DISCRETE aux108 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux109 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
BOOL aux110 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00008)
BOOL aux111 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux112 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00008=M_00005_00007)
DISCRETE aux113 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
DISCRETE aux114 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
DISCRETE aux115 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
DISCRETE aux116 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00005/13)
{0..3}
BOOL aux117 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux118 #Active-CSE: 13 occurrences of this expression or equivalent: (M_00004_00009=M_00005_00008)
BOOL aux119 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux120 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00005=M_00009_00004)
BOOL aux121 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00008_00001=M_00009_00001)
BOOL aux122 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux123 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00007)
BOOL aux124 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux125 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
DISCRETE aux126 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
DISCRETE aux127 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
DISCRETE aux128 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
BOOL aux129 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux130 #Active-CSE: 12 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux131 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
DISCRETE aux132 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00004/13)
{0..3}
DISCRETE aux133 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
BOOL aux134 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00004)
BOOL aux135 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00006=M_00006_00006)
BOOL aux136 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux137 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
BOOL aux138 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux139 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00003)
DISCRETE aux140 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
DISCRETE aux141 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..2}
DISCRETE aux142 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
BOOL aux143 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00005=M_00008_00004)
BOOL aux144 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
DISCRETE aux145 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
DISCRETE aux146 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
BOOL aux147 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux148 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00007_00005=M_00006_00006)
DISCRETE aux149 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00003/13)
{0..3}
DISCRETE aux150 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00004/13)
{0..3}
DISCRETE aux151 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00001/13)
{0..3}
DISCRETE aux152 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00009_00002/13)
{0..3}
DISCRETE aux153 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00009/13)
{0..2}
DISCRETE aux154 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..2}
BOOL aux155 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00007)
BOOL aux156 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00004)
BOOL aux157 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux158 #
{0..3}
DISCRETE aux159 #( - M_00002_00005 + M_00002_00008)
{15..44}
**CONSTRAINTS**
w-inintervalset(aux159, [15,17,20,20,22,24,27,30,32,33,39,41,44,44])
**VARIABLES**
DISCRETE aux160 #( - M_00002_00006 + M_00002_00007)
{3..16}
**CONSTRAINTS**
w-inintervalset(aux160, [3,5,7,8,11,11,13,14,16,16])
**VARIABLES**
DISCRETE aux161 #( - M_00002_00007 + M_00002_00008)
{17..24}
**CONSTRAINTS**
w-inintervalset(aux161, [17,17,20,24])
**VARIABLES**
DISCRETE aux162 #( - M_00002_00006 + M_00002_00009)
{-1..44}
**CONSTRAINTS**
w-inintervalset(aux162, [-1,5,7,8,11,11,13,14,16,17,20,20,28,30,32,33,40,41,44,44])
**VARIABLES**
DISCRETE aux163 #( - M_00002_00008 + M_00002_00009)
{-41..24}
**CONSTRAINTS**
w-inintervalset(aux163, [-41,-39,-37,-37,-33,-33,-30,-20,-17,-15,-13,-9,-7,-7,-3,-3,-1,1,5,6,11,13,17,17,24,24])
**VARIABLES**
DISCRETE aux164 #( - M_00002_00009 + 27)
{-17..24}
**CONSTRAINTS**
w-inintervalset(aux164, [-17,-17,-6,-5,7,7,10,10,16,16,20,20,22,24])
**VARIABLES**
DISCRETE aux165 #( - M_00002_00001 + M_00002_00004)
{-28..26}
**CONSTRAINTS**
w-inintervalset(aux165, [-28,-25,-22,-20,-16,-15,-13,-12,-10,-9,-7,1,3,7,9,10,12,13,15,16,20,22,25,26])
**VARIABLES**
DISCRETE aux166 #( - M_00002_00004 + M_00002_00005)
{-33..-5}
**CONSTRAINTS**
w-inintervalset(aux166, [-33,-32,-30,-27,-24,-22,-20,-20,-17,-11,-8,-5])
**VARIABLES**
DISCRETE aux167 #( - M_00002_00004 + M_00002_00007)
{-30..15}
**CONSTRAINTS**
w-inintervalset(aux167, [-30,-20,-17,-12,-10,-6,-4,0,2,4,6,6,9,10,12,13,15,15])
**VARIABLES**
DISCRETE aux168 #( - M_00002_00001 + 17)
{-16..10}
**CONSTRAINTS**
w-inintervalset(aux168, [-16,-15,-10,-10,-3,-3,0,0,6,6,10,10])
**VARIABLES**
DISCRETE aux169 #(M_00002_00003 + -17)
{15..16}
DISCRETE aux170 #( - M_00002_00003 + M_00002_00004)
{-28..1}
**CONSTRAINTS**
w-inintervalset(aux170, [-28,-25,-22,-21,-16,-15,-13,-12,-6,-5,-1,1])
**VARIABLES**
DISCRETE aux171 #( - M_00003_00008 + 27)
{-17..24}
**CONSTRAINTS**
w-inintervalset(aux171, [-17,-17,-6,-5,0,0,7,7,10,10,16,16,20,20,22,24])
**VARIABLES**
DISCRETE aux172 #( - M_00003_00001 + M_00003_00004)
{-33..26}
**CONSTRAINTS**
w-inintervalset(aux172, [-33,-32,-30,-20,-17,7,9,10,12,13,15,16,20,22,25,26])
**VARIABLES**
DISCRETE aux173 #( - M_00003_00004 + M_00003_00007)
{-30..44}
**CONSTRAINTS**
w-inintervalset(aux173, [-30,-20,-17,-12,-10,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux174 #( - M_00003_00003 + M_00003_00004)
{-33..1}
**CONSTRAINTS**
w-inintervalset(aux174, [-33,-32,-30,-25,-22,-21,-16,-15,-13,-12,-6,-5,-1,1])
**VARIABLES**
DISCRETE aux175 #( - M_00003_00001 + M_00003_00002)
{-16..15}
**CONSTRAINTS**
w-inintervalset(aux175, [-16,-15,-13,-12,-10,-10,-7,-5,-3,-3,-1,0,3,3,5,7,9,10,12,13,15,15])
**VARIABLES**
DISCRETE aux176 #( - M_00003_00007 + 11)
{-33..8}
**CONSTRAINTS**
w-inintervalset(aux176, [-33,-33,-22,-21,-16,-16,-9,-9,-6,-6,0,0,4,4,6,8])
**VARIABLES**
DISCRETE aux177 #( - M_00003_00002 + M_00003_00005)
{-28..27}
**CONSTRAINTS**
w-inintervalset(aux177, [-28,-27,-25,-20,-17,-12,-10,-9,-7,-5,-3,-3,0,1,3,3,5,7,10,10,12,13,15,17,24,24,27,27])
**VARIABLES**
DISCRETE aux178 #( - M_00003_00003 + M_00003_00006)
{-33..-12}
**CONSTRAINTS**
w-inintervalset(aux178, [-33,-32,-30,-25,-22,-21,-16,-15,-13,-12])
**VARIABLES**
DISCRETE aux179 #( - M_00003_00005 + M_00003_00006)
{-40..20}
**CONSTRAINTS**
w-inintervalset(aux179, [-40,-39,-37,-37,-33,-32,-30,-20,-17,17,20,20])
**VARIABLES**
DISCRETE aux180 #( - M_00003_00006 + M_00003_00007)
{-1..44}
**CONSTRAINTS**
w-inintervalset(aux180, [-1,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux181 #( - M_00003_00005 + M_00003_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux181, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux182 #( - M_00003_00006 + 27)
{7..27}
**CONSTRAINTS**
w-inintervalset(aux182, [7,7,10,10,16,16,20,20,22,24,27,27])
**VARIABLES**
DISCRETE aux183 #( - M_00003_00004 + M_00003_00005)
{-33..11}
**CONSTRAINTS**
w-inintervalset(aux183, [-33,-32,-30,-20,-17,11])
**VARIABLES**
DISCRETE aux184 #( - M_00003_00007 + M_00003_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux184, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,33,33,37,37,39,41])
**VARIABLES**
DISCRETE aux185 #( - M_00003_00002 + M_00003_00003)
{1..16}
**CONSTRAINTS**
w-inintervalset(aux185, [1,1,5,6,12,13,15,16])
**VARIABLES**
DISCRETE aux186 #( - M_00004_00007 + M_00004_00008)
{-17..33}
**CONSTRAINTS**
w-inintervalset(aux186, [-17,17,20,30,33,33])
**VARIABLES**
DISCRETE aux187 #( - M_00004_00008 + M_00004_00009)
{-17..24}
**CONSTRAINTS**
w-inintervalset(aux187, [-17,-15,-13,-12,-10,-9,-7,-5,-3,-3,0,0,3,4,6,10,12,17,20,20,22,24])
**VARIABLES**
DISCRETE aux188 #( - M_00004_00006 + M_00004_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux188, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux189 #( - M_00004_00006 + M_00004_00009)
{-33..27}
**CONSTRAINTS**
w-inintervalset(aux189, [-33,-33,-27,-27,-24,-24,-22,-21,-17,-15,-13,-12,-10,-9,-7,-5,-3,-3,0,0,3,4,6,17,20,20,22,24,27,27])
**VARIABLES**
DISCRETE aux190 #( - M_00004_00005 + M_00004_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux190, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux191 #( - M_00004_00005 + M_00004_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux191, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux192 #( - M_00004_00001 + M_00004_00002)
{-29..28}
**CONSTRAINTS**
w-inintervalset(aux192, [-29,-25,-23,-20,-16,-15,-13,-12,-10,-9,-7,17,20,28])
**VARIABLES**
DISCRETE aux193 #( - M_00004_00002 + M_00004_00003)
{-33..29}
**CONSTRAINTS**
w-inintervalset(aux193, [-33,-32,-30,-20,-17,7,9,10,12,13,15,16,20,23,25,29])
**VARIABLES**
DISCRETE aux194 #( - M_00004_00004 + M_00004_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux194, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux195 #( - M_00004_00004 + M_00004_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux195, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux196 #( - M_00004_00009 + -1)
{-28..-12}
**CONSTRAINTS**
w-inintervalset(aux196, [-28,-28,-21,-21,-18,-18,-12,-12])
**VARIABLES**
DISCRETE aux197 #( - M_00004_00003 + M_00004_00004)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux197, [-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux198 #( - M_00004_00001 + M_00004_00004)
{-33..39}
**CONSTRAINTS**
w-inintervalset(aux198, [-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,39])
**VARIABLES**
DISCRETE aux199 #( - M_00004_00002 + M_00004_00005)
{-33..27}
**CONSTRAINTS**
w-inintervalset(aux199, [-33,-32,-30,-20,-17,7,9,13,15,17,20,27])
**VARIABLES**
DISCRETE aux200 #( - M_00004_00003 + M_00004_00006)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux200, [-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux201 #( - M_00005_00002 + M_00005_00003)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux201, [-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux202 #( - M_00005_00001 + M_00005_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux202, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux203 #( - M_00005_00002 + M_00005_00005)
{-33..44}
**CONSTRAINTS**
w-inintervalset(aux203, [-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux204 #(-1 - M_00005_00008)
{-45..-4}
**CONSTRAINTS**
w-inintervalset(aux204, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4])
**VARIABLES**
DISCRETE aux205 #( - M_00005_00005 + M_00005_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux205, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux206 #( - M_00005_00006 + M_00005_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux206, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux207 #( - M_00005_00005 + M_00005_00008)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux207, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux208 #( - M_00005_00007 + M_00005_00008)
{-41..41}
**CONSTRAINTS**
w-inintervalset(aux208, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,33,33,37,37,39,41])
**VARIABLES**
DISCRETE aux209 #( - M_00005_00004 + M_00005_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux209, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux210 #( - M_00005_00004 + M_00005_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux210, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux211 #( - M_00005_00001 + M_00005_00002)
{-33..33}
**CONSTRAINTS**
w-inintervalset(aux211, [-33,-32,-30,-20,-17,17,20,30,32,33])
**VARIABLES**
DISCRETE aux212 #( - M_00005_00003 + M_00005_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux212, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux213 #( - M_00005_00003 + M_00005_00006)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux213, [-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux214 #( - M_00006_00001 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux214, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux215 #( - M_00006_00004 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux215, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux216 #(-1 - M_00006_00007)
{-45..-4}
**CONSTRAINTS**
w-inintervalset(aux216, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4])
**VARIABLES**
DISCRETE aux217 #( - M_00006_00005 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux217, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux218 #( - M_00006_00004 + M_00006_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux218, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux219 #( - M_00006_00006 + M_00006_00007)
{-41..44}
**CONSTRAINTS**
w-inintervalset(aux219, [-41,-39,-37,-37,-33,-33,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux220 #( - M_00006_00003 + M_00006_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux220, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux221 #( - M_00006_00003 + M_00006_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux221, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux222 #( - M_00006_00002 + M_00006_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux222, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux223 #( - M_00006_00002 + M_00006_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux223, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux224 #( - M_00006_00001 + M_00006_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux224, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux225 #( - M_00007_00004 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux225, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux226 #( - M_00007_00001 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux226, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux227 #( - M_00007_00005 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux227, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux228 #( - M_00007_00002 + M_00007_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux228, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux229 #( - M_00007_00003 + M_00007_00006)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux229, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux230 #( - M_00007_00001 + M_00007_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux230, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux231 #( - M_00007_00002 + M_00007_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux231, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux232 #( - M_00007_00006 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux232, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux233 #( - M_00007_00003 + M_00007_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux233, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux234 #( - M_00008_00001 + M_00008_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux234, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux235 #( - M_00008_00002 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux235, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux236 #( - M_00008_00002 + M_00008_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux236, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux237 #( - M_00008_00003 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux237, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux238 #( - M_00008_00005 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux238, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux239 #( - M_00008_00004 + M_00008_00005)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux239, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux240 #( - M_00008_00001 + M_00008_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux240, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux241 #( - M_00009_00003 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux241, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux242 #( - M_00009_00001 + M_00009_00004)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux242, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux243 #( - M_00009_00002 + M_00009_00003)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux243, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux244 #(-1 - M_00009_00004)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux244, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux245 #( - M_00009_00001 + M_00009_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux245, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux246 #( - M_00010_00001 + M_00010_00002)
{-44..44}
**CONSTRAINTS**
w-inintervalset(aux246, [-44,-44,-41,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,41,44,44])
**VARIABLES**
DISCRETE aux247 #( - M_00010_00002 + M_00010_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux247, [-39,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,39])
**VARIABLES**
DISCRETE aux248 #( - M_00010_00003 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux248, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4,-1,-1])
**VARIABLES**
DISCRETE aux249 #( - M_00011_00001 + M_00011_00002)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux249, [-39,-39,-37,-37,-33,-32,-30,-20,-17,17,20,30,32,33,37,37,39,39])
**VARIABLES**
DISCRETE aux250 #( - M_00011_00002 + -1)
{-45..-1}
**CONSTRAINTS**
w-inintervalset(aux250, [-45,-45,-34,-33,-28,-28,-21,-21,-18,-18,-12,-12,-8,-8,-6,-4,-1,-1])
**VARIABLES**
**VARIABLES**
ALIAS cards[12]=[7, 17, 32, 33, 5, 0, 4, 20, 44, 3, 27, 11]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00004_00008],[M_00004_00009],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00005_00007],[M_00005_00008],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00006_00006],[M_00006_00007],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00007_00005],[M_00007_00006],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00008_00004],[M_00008_00005],[M_00009_00001],[M_00009_00002],[M_00009_00003],[M_00009_00004],[M_00010_00001],[M_00010_00002],[M_00010_00003],[M_00011_00001],[M_00011_00002],[M_00012_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006, M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005, M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004, M_00010_00001, M_00010_00002, M_00010_00003, M_00011_00001, M_00011_00002, M_00012_00001]
**CONSTRAINTS**
div(M_00011_00002, 13, aux158)
reify(gaceq(M_00007_00005,M_00006_00005), aux13)
div(M_00002_00009, 13, aux14)
div(M_00002_00006, 13, 0)
div(M_00002_00007, 13, aux16)
reify(gaceq(M_00007_00002,M_00008_00002), aux17)
div(M_00007_00001, 13, aux18)
div(M_00007_00006, 13, aux19)
reify(gaceq(M_00007_00003,M_00006_00003), aux20)
reify(gaceq(M_00005_00002,M_00006_00002), aux21)
div(M_00010_00002, 13, aux22)
reify(gaceq(M_00008_00002,M_00009_00002), aux23)
reify(gaceq(M_00008_00003,M_00009_00003), aux24)
reify(gaceq(M_00003_00002,M_00004_00002), aux25)
reify(gaceq(M_00005_00007,M_00006_00006), aux26)
div(M_00002_00004, 13, aux27)
reify(gaceq(M_00002_00007,M_00003_00006), aux28)
reify(gaceq(M_00004_00005,M_00005_00004), aux29)
reify(gaceq(M_00010_00003,M_00009_00003), aux30)
reify(gaceq(M_00010_00002,M_00009_00003), aux31)
reify(gaceq(M_00004_00006,M_00005_00005), aux32)
reify(gaceq(M_00004_00001,M_00005_00001), aux33)
div(M_00004_00008, 13, aux34)
div(M_00004_00003, 13, aux35)
div(M_00004_00002, 13, aux36)
div(M_00004_00007, 13, aux37)
reify(gaceq(M_00004_00006,M_00005_00006), aux38)
reify(gaceq(M_00003_00008,M_00004_00007), aux39)
div(M_00002_00008, 13, aux40)
div(M_00002_00001, 13, aux41)
div(M_00002_00005, 13, 0)
reify(gaceq(M_00007_00006,M_00008_00005), aux43)
reify(gaceq(M_00008_00004,M_00009_00003), aux44)
reify(gaceq(M_00003_00007,M_00004_00006), aux45)
reify(gaceq(M_00003_00006,M_00004_00006), aux46)
reify(gaceq(M_00002_00006,M_00003_00005), aux47)
reify(gaceq(M_00003_00005,M_00004_00004), aux48)
reify(gaceq(M_00005_00001,M_00006_00001), aux49)
reify(gaceq(M_00005_00006,M_00006_00006), aux50)
reify(gaceq(M_00007_00001,M_00008_00001), aux51)
reify(gaceq(M_00004_00004,M_00005_00004), aux52)
reify(gaceq(M_00004_00005,M_00005_00005), aux53)
reify(gaceq(M_00002_00008,M_00003_00007), aux54)
div(M_00003_00006, 13, aux55)
div(M_00003_00003, 13, 2)
div(M_00003_00001, 13, aux57)
div(M_00005_00008, 13, aux58)
div(M_00005_00001, 13, aux59)
reify(gaceq(M_00005_00003,M_00006_00003), aux60)
div(M_00008_00003, 13, aux61)
div(M_00008_00001, 13, aux62)
div(M_00008_00005, 13, aux63)
div(M_00006_00006, 13, aux64)
div(M_00006_00005, 13, aux65)
div(M_00006_00003, 13, aux66)
div(M_00006_00002, 13, aux67)
reify(gaceq(M_00010_00003,M_00011_00002), aux68)
reify(gaceq(M_00010_00001,M_00011_00001), aux69)
reify(gaceq(M_00002_00005,M_00003_00004), aux70)
reify(gaceq(M_00004_00004,M_00005_00003), aux71)
reify(gaceq(M_00002_00006,M_00003_00006), aux72)
reify(gaceq(M_00005_00004,M_00006_00004), aux73)
reify(gaceq(M_00002_00008,M_00003_00008), aux74)
reify(gaceq(M_00002_00003,M_00003_00002), aux75)
reify(gaceq(M_00002_00003,M_00003_00003), aux76)
reify(gaceq(M_00003_00004,M_00004_00004), aux77)
reify(gaceq(M_00002_00007,M_00003_00007), aux78)
reify(gaceq(M_00002_00004,M_00003_00004), aux79)
reify(gaceq(M_00004_00007,M_00005_00006), aux80)
reify(gaceq(M_00003_00003,M_00004_00003), aux81)
reify(gaceq(M_00007_00006,M_00006_00007), aux82)
reify(gaceq(M_00007_00005,M_00008_00005), aux83)
reify(gaceq(M_00007_00003,M_00008_00002), aux84)
reify(gaceq(M_00003_00006,M_00004_00005), aux85)
reify(gaceq(M_00008_00003,M_00009_00002), aux86)
reify(gaceq(M_00008_00004,M_00009_00004), aux87)
reify(gaceq(M_00003_00001,M_00004_00001), aux88)
reify(gaceq(M_00005_00008,M_00006_00007), aux89)
reify(gaceq(M_00010_00001,M_00009_00001), aux90)
reify(gaceq(M_00010_00002,M_00009_00002), aux91)
reify(gaceq(M_00010_00003,M_00009_00004), aux92)
div(M_00006_00004, 13, aux93)
div(M_00006_00001, 13, aux94)
div(M_00006_00007, 13, aux95)
div(M_00003_00008, 13, aux96)
div(M_00003_00002, 13, aux97)
reify(gaceq(M_00002_00005,M_00003_00005), aux98)
reify(gaceq(M_00005_00005,M_00006_00004), aux99)
reify(gaceq(M_00005_00005,M_00006_00005), aux100)
reify(gaceq(M_00003_00003,M_00004_00002), aux101)
reify(gaceq(M_00003_00008,M_00004_00008), aux102)
reify(gaceq(M_00005_00003,M_00006_00002), aux103)
reify(gaceq(M_00005_00007,M_00006_00007), aux104)
reify(gaceq(M_00002_00009,M_00003_00008), aux105)
div(M_00005_00007, 13, aux106)
div(M_00005_00006, 13, aux107)
div(M_00005_00002, 13, aux108)
div(M_00005_00003, 13, aux109)
reify(gaceq(M_00004_00008,M_00005_00008), aux110)
reify(gaceq(M_00004_00003,M_00005_00002), aux111)
reify(gaceq(M_00004_00008,M_00005_00007), aux112)
div(M_00007_00002, 13, aux113)
div(M_00007_00004, 13, aux114)
div(M_00007_00003, 13, aux115)
div(M_00007_00005, 13, aux116)
reify(gaceq(M_00007_00002,M_00006_00002), aux117)
reify(gaceq(M_00004_00009,M_00005_00008), aux118)
reify(gaceq(M_00007_00001,M_00006_00001), aux119)
reify(gaceq(M_00008_00005,M_00009_00004), aux120)
reify(gaceq(M_00008_00001,M_00009_00001), aux121)
reify(gaceq(M_00003_00004,M_00004_00003), aux122)
reify(gaceq(M_00003_00007,M_00004_00007), aux123)
reify(gaceq(M_00007_00004,M_00008_00003), aux124)
reify(gaceq(M_00005_00004,M_00006_00003), aux125)
div(M_00004_00004, 13, aux126)
div(M_00004_00005, 13, aux127)
div(M_00004_00006, 13, aux128)
reify(gaceq(M_00007_00003,M_00006_00004), aux129)
reify(gaceq(M_00004_00002,M_00005_00002), aux130)
reify(gaceq(M_00002_00001,M_00003_00001), aux131)
div(M_00008_00004, 13, aux132)
div(M_00008_00002, 13, aux133)
reify(gaceq(M_00007_00004,M_00008_00004), aux134)
reify(gaceq(M_00007_00006,M_00006_00006), aux135)
reify(gaceq(M_00007_00002,M_00006_00003), aux136)
reify(gaceq(M_00005_00006,M_00006_00005), aux137)
reify(gaceq(M_00003_00005,M_00004_00005), aux138)
reify(gaceq(M_00007_00003,M_00008_00003), aux139)
div(M_00003_00007, 13, aux140)
div(M_00003_00004, 13, aux141)
div(M_00003_00005, 13, aux142)
reify(gaceq(M_00007_00005,M_00008_00004), aux143)
reify(gaceq(M_00002_00004,M_00003_00003), aux144)
div(M_00005_00004, 13, aux145)
div(M_00005_00005, 13, aux146)
reify(gaceq(M_00004_00003,M_00005_00003), aux147)
reify(gaceq(M_00007_00005,M_00006_00006), aux148)
div(M_00009_00003, 13, aux149)
div(M_00009_00004, 13, aux150)
div(M_00009_00001, 13, aux151)
div(M_00009_00002, 13, aux152)
div(M_00004_00009, 13, aux153)
div(M_00004_00001, 13, aux154)
reify(gaceq(M_00004_00007,M_00005_00007), aux155)
reify(gaceq(M_00007_00004,M_00006_00004), aux156)
reify(gaceq(M_00007_00004,M_00006_00005), aux157)
gccweak([M_00002_00001, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00004_00008, M_00004_00009],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00005_00007, M_00005_00008],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00006_00006, M_00006_00007],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00007_00005, M_00007_00006],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003, M_00008_00004, M_00008_00005],[-1],[0])
gccweak([M_00009_00001, M_00009_00002, M_00009_00003, M_00009_00004],[-1],[0])
gccweak([M_00010_00001, M_00010_00002, M_00010_00003],[-1],[0])
gccweak([M_00011_00001, M_00011_00002],[-1],[0])
gccweak([M_00012_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,33),w-literal(M_00002_00004,5),w-literal(M_00002_00005,0),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,33),w-literal(M_00002_00003,32),w-literal(M_00002_00004,5),w-literal(M_00002_00005,0),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00005,0),w-literal(M_00002_00004,33),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00004,33),w-literal(M_00002_00005,5),w-literal(M_00002_00006,0),w-literal(M_00002_00007,3),w-literal(M_00002_00008,20),w-literal(M_00002_00009,44)}),watched-and({w-literal(M_00002_00001,7),w-literal(M_00002_00003,32),w-literal(M_00002_00004,33),w-literal(M_00002_00005,5),w-literal(M_00002_00006,4),w-literal(M_00002_00007,20),w-literal(M_00002_00009,3),w-literal(M_00002_00008,44)})})
watched-or({watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux72,1),w-literal(aux78,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux105,1),modulo(aux159,13,0)}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux98,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux160,13,0),w-literal(aux16,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux98,1),w-literal(aux72,1),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux161,13,0),gaceq(aux16,aux40)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux98,1),w-literal(aux78,1),w-literal(aux74,1),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux162,13,0),w-literal(aux14,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux98,1),w-literal(aux72,1),w-literal(aux78,1),w-literal(aux105,1),watched-or({modulo(aux163,13,0),gaceq(aux40,aux14)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1)}),watched-and({w-literal(M_00003_00002,17),watched-or({w-literal(aux14,2),modulo(aux164,13,0)}),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux79,1),w-literal(aux98,1),w-literal(aux72,1),w-literal(aux78,1),w-literal(aux74,1)}),watched-and({w-literal(M_00003_00002,17),w-literal(aux76,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux70,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux165,13,0),gaceq(aux41,aux27)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux70,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux166,13,0),w-literal(aux27,0)})}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux76,1),w-literal(aux98,1),w-literal(aux72,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux167,13,0),gaceq(aux27,aux16)})}),watched-and({w-literal(M_00003_00001,17),watched-or({w-literal(aux41,1),modulo(aux168,13,0)}),w-literal(aux75,1),w-literal(aux144,1),w-literal(aux70,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1)}),watched-and({modulo(aux169,13,0),w-literal(aux131,1),w-literal(aux75,1),w-literal(aux144,1),w-literal(aux70,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1)}),watched-and({w-literal(M_00003_00002,17),w-literal(aux131,1),w-literal(aux144,1),w-literal(aux70,1),w-literal(aux47,1),w-literal(aux28,1),w-literal(aux54,1),w-literal(aux105,1),watched-or({modulo(aux170,13,0),div(M_00002_00003, 13, aux27)})})})
watched-or({watched-and({watched-or({modulo(aux171,13,0),w-literal(aux96,2)}),w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux138,1),w-literal(aux46,1),w-literal(aux123,1),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux25,1),w-literal(aux81,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux48,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux172,13,0),gaceq(aux57,aux141)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux138,1),w-literal(aux46,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux39,1),watched-or({modulo(aux173,13,0),gaceq(aux141,aux140)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux122,1),w-literal(aux48,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux174,13,0),w-literal(aux141,2)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux101,1),w-literal(aux122,1),w-literal(aux48,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux175,13,0),gaceq(aux57,aux97)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({watched-or({modulo(aux176,13,0),w-literal(aux140,0)}),w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux138,1),w-literal(aux46,1),w-literal(aux102,1),w-literal(M_00004_00007,11),w-literal(M_00004_00009,27)}),watched-and({w-literal(aux88,1),w-literal(aux81,1),w-literal(aux77,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux177,13,0),gaceq(aux97,aux142)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux77,1),w-literal(aux138,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux45,1),w-literal(aux39,1),modulo(aux178,13,0),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux179,13,0),gaceq(aux142,aux55)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux138,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux180,13,0),gaceq(aux55,aux140)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux46,1),w-literal(aux123,1),gaceq(M_00003_00008,M_00004_00005),watched-or({modulo(aux181,13,0),gaceq(aux142,aux96)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux138,1),w-literal(aux123,1),w-literal(aux102,1),modulo(aux182,13,0),w-literal(M_00004_00006,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux48,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux183,13,0),gaceq(aux141,aux142)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux25,1),w-literal(aux81,1),w-literal(aux77,1),w-literal(aux138,1),w-literal(aux46,1),w-literal(aux39,1),watched-or({modulo(aux184,13,0),gaceq(aux140,aux96)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)}),watched-and({w-literal(aux88,1),w-literal(aux101,1),w-literal(aux122,1),w-literal(aux48,1),w-literal(aux85,1),w-literal(aux45,1),w-literal(aux39,1),watched-or({modulo(aux185,13,0),w-literal(aux97,2)}),w-literal(M_00004_00008,27),w-literal(M_00004_00009,11)})})
watched-or({watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux53,1),w-literal(aux38,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux37,aux34),modulo(aux186,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux53,1),w-literal(aux38,1),w-literal(aux155,1),w-literal(aux118,1),watched-or({gaceq(aux34,aux153),modulo(aux187,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux53,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux128,aux37),modulo(aux188,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux53,1),w-literal(aux155,1),w-literal(aux110,1),gaceq(M_00004_00009,M_00005_00006),watched-or({gaceq(aux128,aux153),modulo(aux189,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux127,aux128),modulo(aux190,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux38,1),w-literal(aux155,1),gaceq(M_00004_00008,M_00005_00005),w-literal(aux118,1),watched-or({gaceq(aux127,aux34),modulo(aux191,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux111,1),w-literal(aux71,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux154,aux36),modulo(aux192,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux111,1),w-literal(aux71,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux36,aux35),modulo(aux193,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux126,aux127),modulo(aux194,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux53,1),w-literal(aux38,1),gaceq(M_00004_00007,M_00005_00004),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux126,aux37),modulo(aux195,13,0)})}),watched-and({modulo(aux196,13,0),w-literal(aux33,1),w-literal(aux130,1),w-literal(aux147,1),w-literal(aux52,1),w-literal(aux53,1),w-literal(aux38,1),w-literal(aux155,1),w-literal(aux110,1)}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux71,1),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux35,aux126),modulo(aux197,13,0)})}),watched-and({w-literal(aux130,1),w-literal(aux147,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux29,1),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux154,aux126),modulo(aux198,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux147,1),w-literal(aux52,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux32,1),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux36,aux127),modulo(aux199,13,0)})}),watched-and({w-literal(aux33,1),w-literal(aux130,1),w-literal(aux52,1),w-literal(aux53,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux80,1),w-literal(aux112,1),w-literal(aux118,1),watched-or({gaceq(aux35,aux128),modulo(aux200,13,0)})})})
watched-or({watched-and({w-literal(aux49,1),w-literal(aux103,1),w-literal(aux125,1),w-literal(aux99,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux201,13,0),gaceq(aux108,aux109)})}),watched-and({w-literal(aux21,1),w-literal(aux60,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux99,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux202,13,0),gaceq(aux59,aux145)})}),watched-and({w-literal(aux49,1),w-literal(aux60,1),w-literal(aux73,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux203,13,0),gaceq(aux108,aux146)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux50,1),w-literal(aux104,1),modulo(aux204,13,0)}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux73,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux205,13,0),gaceq(aux146,aux107)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux206,13,0),gaceq(aux107,aux106)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux73,1),w-literal(aux50,1),w-literal(aux104,1),gaceq(M_00005_00008,M_00006_00005),watched-or({modulo(aux207,13,0),gaceq(aux146,aux58)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux73,1),w-literal(aux100,1),w-literal(aux50,1),w-literal(aux89,1),watched-or({modulo(aux208,13,0),gaceq(aux106,aux58)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux99,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux209,13,0),gaceq(aux145,aux146)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux100,1),w-literal(aux50,1),gaceq(M_00005_00007,M_00006_00004),w-literal(aux89,1),watched-or({modulo(aux210,13,0),gaceq(aux145,aux106)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux103,1),w-literal(aux125,1),w-literal(aux99,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux211,13,0),gaceq(aux59,aux108)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux125,1),w-literal(aux99,1),w-literal(aux137,1),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux212,13,0),gaceq(aux109,aux145)})}),watched-and({w-literal(aux49,1),w-literal(aux21,1),w-literal(aux73,1),w-literal(aux100,1),gaceq(M_00005_00006,M_00006_00003),w-literal(aux26,1),w-literal(aux89,1),watched-or({modulo(aux213,13,0),gaceq(aux109,aux107)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux117,1),w-literal(aux20,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux94,aux93),modulo(aux214,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux20,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux93,aux65),modulo(aux215,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux20,1),w-literal(aux156,1),w-literal(aux13,1),w-literal(aux135,1),modulo(aux216,13,0)}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux20,1),w-literal(aux156,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux65,aux64),modulo(aux217,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux20,1),gaceq(M_00007_00004,M_00006_00007),w-literal(aux13,1),w-literal(aux135,1),watched-or({gaceq(aux93,aux95),modulo(aux218,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux20,1),w-literal(aux156,1),w-literal(aux13,1),w-literal(aux82,1),watched-or({gaceq(aux64,aux95),modulo(aux219,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),w-literal(aux129,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux66,aux93),modulo(aux220,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux117,1),gaceq(M_00007_00003,M_00006_00006),w-literal(aux156,1),w-literal(aux13,1),w-literal(aux82,1),watched-or({gaceq(aux66,aux64),modulo(aux221,13,0)})}),watched-and({w-literal(aux119,1),w-literal(aux136,1),w-literal(aux129,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux67,aux66),modulo(aux222,13,0)})}),watched-and({w-literal(aux119,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux20,1),w-literal(aux156,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux67,aux65),modulo(aux223,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux136,1),w-literal(aux129,1),w-literal(aux157,1),w-literal(aux148,1),w-literal(aux82,1),watched-or({gaceq(aux94,aux67),modulo(aux224,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux225,13,0),gaceq(aux114,aux116)}),w-literal(aux51,1),w-literal(aux17,1),w-literal(aux139,1),w-literal(aux143,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux226,13,0),gaceq(aux18,aux114)}),w-literal(aux17,1),w-literal(aux139,1),gaceq(M_00007_00004,M_00008_00001),w-literal(aux143,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux227,13,0),gaceq(aux116,aux19)}),w-literal(aux51,1),w-literal(aux17,1),w-literal(aux139,1),w-literal(aux134,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux228,13,0),gaceq(aux113,aux116)}),w-literal(aux51,1),w-literal(aux139,1),w-literal(aux134,1),gaceq(M_00007_00005,M_00008_00002),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux229,13,0),gaceq(aux115,aux19)}),w-literal(aux51,1),w-literal(aux17,1),w-literal(aux134,1),w-literal(aux83,1),gaceq(M_00007_00006,M_00008_00003)}),watched-and({watched-or({modulo(aux230,13,0),gaceq(aux18,aux113)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux84,1),w-literal(aux124,1),w-literal(aux143,1),w-literal(aux43,1)}),watched-and({watched-or({modulo(aux231,13,0),gaceq(aux113,aux115)}),w-literal(aux51,1),w-literal(aux84,1),w-literal(aux124,1),w-literal(aux143,1),w-literal(aux43,1)}),watched-and({modulo(aux232,13,0),w-literal(aux51,1),w-literal(aux17,1),w-literal(aux139,1),w-literal(aux134,1),w-literal(aux83,1)}),watched-and({watched-or({modulo(aux233,13,0),gaceq(aux115,aux114)}),w-literal(aux51,1),w-literal(aux17,1),w-literal(aux124,1),w-literal(aux143,1),w-literal(aux43,1)})})
watched-or({watched-and({watched-or({gaceq(aux62,aux133),modulo(aux234,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux86,1),w-literal(aux44,1),w-literal(aux120,1)}),watched-and({watched-or({gaceq(aux133,aux63),modulo(aux235,13,0)}),w-literal(aux121,1),w-literal(aux24,1),w-literal(aux87,1),gaceq(M_00008_00005,M_00009_00002)}),watched-and({watched-or({gaceq(aux133,aux61),modulo(aux236,13,0)}),w-literal(aux121,1),w-literal(aux86,1),w-literal(aux44,1),w-literal(aux120,1)}),watched-and({watched-or({gaceq(aux61,aux132),modulo(aux237,13,0)}),w-literal(aux121,1),w-literal(aux23,1),w-literal(aux44,1),w-literal(aux120,1)}),watched-and({w-literal(aux121,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux87,1),modulo(aux238,13,0)}),watched-and({watched-or({gaceq(aux132,aux63),modulo(aux239,13,0)}),w-literal(aux121,1),w-literal(aux23,1),w-literal(aux24,1),w-literal(aux120,1)}),watched-and({watched-or({gaceq(aux62,aux132),modulo(aux240,13,0)}),w-literal(aux23,1),w-literal(aux24,1),gaceq(M_00008_00004,M_00009_00001),w-literal(aux120,1)})})
watched-or({watched-and({watched-or({modulo(aux241,13,0),gaceq(aux149,aux150)}),w-literal(aux90,1),w-literal(aux91,1),w-literal(aux92,1)}),watched-and({watched-or({modulo(aux242,13,0),gaceq(aux151,aux150)}),gaceq(M_00010_00001,M_00009_00004),w-literal(aux91,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux243,13,0),gaceq(aux152,aux149)}),w-literal(aux90,1),w-literal(aux31,1),w-literal(aux92,1)}),watched-and({modulo(aux244,13,0),w-literal(aux90,1),w-literal(aux91,1),w-literal(aux30,1)}),watched-and({watched-or({modulo(aux245,13,0),gaceq(aux151,aux152)}),gaceq(M_00010_00001,M_00009_00002),w-literal(aux31,1),w-literal(aux92,1)})})
watched-or({watched-and({gaceq(M_00010_00002,M_00011_00001),w-literal(aux68,1),watched-or({div(M_00010_00001, 13, aux22),modulo(aux246,13,0)})}),watched-and({w-literal(aux69,1),w-literal(aux68,1),watched-or({div(M_00010_00003, 13, aux22),modulo(aux247,13,0)})}),watched-and({w-literal(aux69,1),gaceq(M_00010_00002,M_00011_00002),modulo(aux248,13,0)})})
watched-or({watched-and({watched-or({div(M_00011_00001, 13, aux158),modulo(aux249,13,0)}),gaceq(M_00011_00002,M_00012_00001)}),watched-and({modulo(aux250,13,0),gaceq(M_00011_00001,M_00012_00001)})})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux159)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux159)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux160)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux160)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux161)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux161)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux162)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux162)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux163)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux163)
weightedsumleq([-1,1],[M_00002_00009,27],aux164)
weightedsumgeq([-1,1],[M_00002_00009,27],aux164)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux165)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux165)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux166)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux166)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux167)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux167)
weightedsumleq([-1,1],[M_00002_00001,17],aux168)
weightedsumgeq([-1,1],[M_00002_00001,17],aux168)
sumleq([M_00002_00003,-17],aux169)
sumgeq([M_00002_00003,-17],aux169)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux170)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux170)
weightedsumleq([-1,1],[M_00003_00008,27],aux171)
weightedsumgeq([-1,1],[M_00003_00008,27],aux171)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux172)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux172)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux173)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux173)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux174)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux174)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux175)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux175)
weightedsumleq([-1,1],[M_00003_00007,11],aux176)
weightedsumgeq([-1,1],[M_00003_00007,11],aux176)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux177)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux177)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux178)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux178)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux179)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux179)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux180)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux180)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux181)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux181)
weightedsumleq([-1,1],[M_00003_00006,27],aux182)
weightedsumgeq([-1,1],[M_00003_00006,27],aux182)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux183)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux183)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux184)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux184)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux185)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux185)
weightedsumleq([-1,1],[M_00004_00007,M_00004_00008],aux186)
weightedsumgeq([-1,1],[M_00004_00007,M_00004_00008],aux186)
weightedsumleq([-1,1],[M_00004_00008,M_00004_00009],aux187)
weightedsumgeq([-1,1],[M_00004_00008,M_00004_00009],aux187)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux188)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux188)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00009],aux189)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00009],aux189)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux190)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux190)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00008],aux191)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00008],aux191)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux192)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux192)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux193)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux193)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux194)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux194)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux195)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux195)
weightedsumleq([-1,1],[M_00004_00009,-1],aux196)
weightedsumgeq([-1,1],[M_00004_00009,-1],aux196)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux197)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux197)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux198)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux198)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux199)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux199)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux200)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux200)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux201)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux201)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux202)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux202)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux203)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux203)
weightedsumleq([1,-1],[-1,M_00005_00008],aux204)
weightedsumgeq([1,-1],[-1,M_00005_00008],aux204)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux205)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux205)
weightedsumleq([-1,1],[M_00005_00006,M_00005_00007],aux206)
weightedsumgeq([-1,1],[M_00005_00006,M_00005_00007],aux206)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00008],aux207)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00008],aux207)
weightedsumleq([-1,1],[M_00005_00007,M_00005_00008],aux208)
weightedsumgeq([-1,1],[M_00005_00007,M_00005_00008],aux208)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux209)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux209)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00007],aux210)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00007],aux210)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux211)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux211)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux212)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux212)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux213)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux213)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux214)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux214)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux215)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux215)
weightedsumleq([1,-1],[-1,M_00006_00007],aux216)
weightedsumgeq([1,-1],[-1,M_00006_00007],aux216)
weightedsumleq([-1,1],[M_00006_00005,M_00006_00006],aux217)
weightedsumgeq([-1,1],[M_00006_00005,M_00006_00006],aux217)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00007],aux218)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00007],aux218)
weightedsumleq([-1,1],[M_00006_00006,M_00006_00007],aux219)
weightedsumgeq([-1,1],[M_00006_00006,M_00006_00007],aux219)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux220)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux220)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00006],aux221)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00006],aux221)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux222)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux222)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux223)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux223)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux224)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux224)
weightedsumleq([-1,1],[M_00007_00004,M_00007_00005],aux225)
weightedsumgeq([-1,1],[M_00007_00004,M_00007_00005],aux225)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux226)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux226)
weightedsumleq([-1,1],[M_00007_00005,M_00007_00006],aux227)
weightedsumgeq([-1,1],[M_00007_00005,M_00007_00006],aux227)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00005],aux228)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00005],aux228)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00006],aux229)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00006],aux229)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux230)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux230)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux231)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux231)
weightedsumleq([-1,1],[M_00007_00006,-1],aux232)
weightedsumgeq([-1,1],[M_00007_00006,-1],aux232)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux233)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux233)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux234)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux234)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00005],aux235)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00005],aux235)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux236)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux236)
weightedsumleq([-1,1],[M_00008_00003,M_00008_00004],aux237)
weightedsumgeq([-1,1],[M_00008_00003,M_00008_00004],aux237)
weightedsumleq([-1,1],[M_00008_00005,-1],aux238)
weightedsumgeq([-1,1],[M_00008_00005,-1],aux238)
weightedsumleq([-1,1],[M_00008_00004,M_00008_00005],aux239)
weightedsumgeq([-1,1],[M_00008_00004,M_00008_00005],aux239)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00004],aux240)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00004],aux240)
weightedsumleq([-1,1],[M_00009_00003,M_00009_00004],aux241)
weightedsumgeq([-1,1],[M_00009_00003,M_00009_00004],aux241)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00004],aux242)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00004],aux242)
weightedsumleq([-1,1],[M_00009_00002,M_00009_00003],aux243)
weightedsumgeq([-1,1],[M_00009_00002,M_00009_00003],aux243)
weightedsumleq([1,-1],[-1,M_00009_00004],aux244)
weightedsumgeq([1,-1],[-1,M_00009_00004],aux244)
weightedsumleq([-1,1],[M_00009_00001,M_00009_00002],aux245)
weightedsumgeq([-1,1],[M_00009_00001,M_00009_00002],aux245)
weightedsumleq([-1,1],[M_00010_00001,M_00010_00002],aux246)
weightedsumgeq([-1,1],[M_00010_00001,M_00010_00002],aux246)
weightedsumleq([-1,1],[M_00010_00002,M_00010_00003],aux247)
weightedsumgeq([-1,1],[M_00010_00002,M_00010_00003],aux247)
weightedsumleq([-1,1],[M_00010_00003,-1],aux248)
weightedsumgeq([-1,1],[M_00010_00003,-1],aux248)
weightedsumleq([-1,1],[M_00011_00001,M_00011_00002],aux249)
weightedsumgeq([-1,1],[M_00011_00001,M_00011_00002],aux249)
weightedsumleq([-1,1],[M_00011_00002,-1],aux250)
weightedsumgeq([-1,1],[M_00011_00002,-1],aux250)
**EOF**
