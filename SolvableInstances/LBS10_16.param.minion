MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 79
# CSE_active_eliminated_expressions = 294
# CSE_active_total_size = 237
**VARIABLES**
DISCRETE M_00002_00004 #
{6..9}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [6,6,9,9])
**VARIABLES**
DISCRETE M_00002_00005 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00002_00006 #
{3..9}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [3,3,5,6,9,9])
**VARIABLES**
DISCRETE M_00002_00007 #
{1..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [1,1,3,3,5,6,9,9,12,12])
**VARIABLES**
DISCRETE M_00002_00008 #
{12..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [12,12,14,14])
**VARIABLES**
DISCRETE M_00002_00009 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00002_00009, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00003_00002 #
{3..5}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [3,3,5,5])
**VARIABLES**
DISCRETE M_00003_00004 #
{1..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [1,1,3,3,5,6,9,9,12,12])
**VARIABLES**
DISCRETE M_00003_00005 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00003_00006 #
{1..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [1,1,3,3,5,6,9,9,12,12])
**VARIABLES**
DISCRETE M_00003_00007 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00003_00008 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00003_00008, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00004_00001 #
{12..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,3,5,6,9,9,12,12])
**VARIABLES**
DISCRETE M_00004_00003 #
{1..27}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [1,1,3,3,5,6,9,9,12,12,14,14,27,27])
**VARIABLES**
DISCRETE M_00004_00004 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00004_00005 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00004_00006 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00004_00007 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00005_00001 #
{1..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00003 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00004 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00005 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00006 #
{1..14}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [1,1,3,3,5,6,9,9,12,12,14,14])
**VARIABLES**
DISCRETE M_00006_00001 #
{1..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00003 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00004 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00005 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00007_00001 #
{1..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00007_00003 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00007_00004 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00008_00001 #
{1..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00008_00002 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00008_00003 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
DISCRETE M_00009_00001 #
{1..51}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00010_00001 #
{1..29}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [1,1,3,3,5,6,9,9,12,12,14,14,27,27,29,29])
**VARIABLES**
BOOL aux15 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
BOOL aux19 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux20 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
DISCRETE aux21 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..2}
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..2}
DISCRETE aux24 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..2}
BOOL aux25 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux27 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..2}
BOOL aux29 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
DISCRETE aux30 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
BOOL aux31 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00009/13)
BOOL aux33 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux34 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00008/13)
BOOL aux38 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006/13)
DISCRETE aux39 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..2}
DISCRETE aux41 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
DISCRETE aux42 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
BOOL aux43 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux44 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux47 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux48 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux49 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux50 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux53 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux54 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux55 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
DISCRETE aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
DISCRETE aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..2}
BOOL aux58 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
BOOL aux59 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux60 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux61 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00008_00003)
DISCRETE aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..2}
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
BOOL aux68 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux69 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux70 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00008=M_00004_00007)
BOOL aux71 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux72 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux73 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux74 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux76 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux77 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
BOOL aux78 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux79 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux80 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux81 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux82 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux83 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux84 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux85 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux86 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
BOOL aux87 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux88 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
DISCRETE aux89 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
BOOL aux90 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007/13)
BOOL aux91 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux92 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00002_00009=M_00003_00008)
BOOL aux93 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
DISCRETE aux94 #
{0..2}
DISCRETE aux95 #( - M_00002_00007 + M_00002_00008)
{2..11}
**CONSTRAINTS**
w-inintervalset(aux95, [2,3,5,9,11,11])
**VARIABLES**
DISCRETE aux96 #( - M_00002_00006 + M_00002_00009)
{-8..11}
**CONSTRAINTS**
w-inintervalset(aux96, [-8,-8,-6,9,11,11])
**VARIABLES**
DISCRETE aux97 #( - M_00002_00008 + M_00002_00009)
{-13..2}
**CONSTRAINTS**
w-inintervalset(aux97, [-13,-13,-11,-11,-9,-5,-3,-2,0,0,2,2])
**VARIABLES**
DISCRETE aux98 #( - M_00002_00005 + M_00002_00006)
{-26..6}
**CONSTRAINTS**
w-inintervalset(aux98, [-26,-26,-24,-20,-18,-18,-11,-11,-9,4,6,6])
**VARIABLES**
DISCRETE aux99 #( - M_00002_00005 + M_00002_00008)
{-17..11}
**CONSTRAINTS**
w-inintervalset(aux99, [-17,-17,-15,-15,-13,-13,-2,-2,0,0,2,3,5,9,11,11])
**VARIABLES**
DISCRETE aux100 #( - M_00002_00004 + M_00002_00005)
{-3..23}
**CONSTRAINTS**
w-inintervalset(aux100, [-3,-3,-1,0,3,3,5,6,8,8,18,18,20,21,23,23])
**VARIABLES**
DISCRETE aux101 #(M_00002_00005 + -5)
{-2..24}
**CONSTRAINTS**
w-inintervalset(aux101, [-2,-2,0,1,4,4,7,7,9,9,22,22,24,24])
**VARIABLES**
DISCRETE aux102 #( - M_00003_00005 + M_00003_00006)
{-28..9}
**CONSTRAINTS**
w-inintervalset(aux102, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,4,6,7,9,9])
**VARIABLES**
DISCRETE aux103 #( - M_00003_00006 + M_00003_00007)
{-8..13}
**CONSTRAINTS**
w-inintervalset(aux103, [-8,9,11,11,13,13])
**VARIABLES**
DISCRETE aux104 #( - M_00003_00005 + M_00003_00008)
{-28..11}
**CONSTRAINTS**
w-inintervalset(aux104, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11])
**VARIABLES**
DISCRETE aux105 #(M_00003_00004 + -51)
{-50..-39}
**CONSTRAINTS**
w-inintervalset(aux105, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39])
**VARIABLES**
DISCRETE aux106 #( - M_00003_00004 + M_00003_00005)
{-9..28}
**CONSTRAINTS**
w-inintervalset(aux106, [-9,-9,-7,-6,-4,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux107 #( - M_00003_00007 + M_00003_00008)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux107, [-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux108 #( - M_00003_00002 + M_00003_00005)
{-2..24}
**CONSTRAINTS**
w-inintervalset(aux108, [-2,-2,0,4,6,7,9,9,11,11,22,22,24,24])
**VARIABLES**
DISCRETE aux109 #( - M_00003_00004 + M_00003_00007)
{-8..11}
**CONSTRAINTS**
w-inintervalset(aux109, [-8,9,11,11])
**VARIABLES**
DISCRETE aux110 #(M_00003_00004 + -27)
{-26..-15}
**CONSTRAINTS**
w-inintervalset(aux110, [-26,-26,-24,-24,-22,-21,-18,-18,-15,-15])
**VARIABLES**
DISCRETE aux111 #(M_00003_00006 + -27)
{-26..-15}
**CONSTRAINTS**
w-inintervalset(aux111, [-26,-26,-24,-24,-22,-21,-18,-18,-15,-15])
**VARIABLES**
DISCRETE aux112 #( - M_00004_00005 + M_00004_00006)
{-28..13}
**CONSTRAINTS**
w-inintervalset(aux112, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux113 #( - M_00004_00006 + M_00004_00007)
{-13..13}
**CONSTRAINTS**
w-inintervalset(aux113, [-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux114 #( - M_00004_00004 + M_00004_00005)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux114, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux115 #( - M_00004_00004 + M_00004_00007)
{-28..13}
**CONSTRAINTS**
w-inintervalset(aux115, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux116 #( - M_00004_00003 + M_00004_00004)
{-26..28}
**CONSTRAINTS**
w-inintervalset(aux116, [-26,-26,-24,-24,-22,-21,-18,-18,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux117 #( - M_00004_00003 + M_00004_00006)
{-26..13}
**CONSTRAINTS**
w-inintervalset(aux117, [-26,-26,-24,-24,-22,-21,-18,-18,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux118 #( - M_00004_00002 + M_00004_00003)
{-4..24}
**CONSTRAINTS**
w-inintervalset(aux118, [-4,9,11,11,15,15,18,18,21,22,24,24])
**VARIABLES**
DISCRETE aux119 #( - M_00004_00002 + M_00004_00005)
{-11..26}
**CONSTRAINTS**
w-inintervalset(aux119, [-11,-11,-9,9,11,11,15,15,17,18,20,24,26,26])
**VARIABLES**
DISCRETE aux120 #( - M_00004_00001 + M_00004_00002)
{-48..-7}
**CONSTRAINTS**
w-inintervalset(aux120, [-48,-48,-46,-45,-42,-42,-39,-39,-26,-26,-24,-20,-18,-17,-15,-15,-11,-11,-9,-7])
**VARIABLES**
DISCRETE aux121 #( - M_00004_00001 + M_00004_00004)
{-50..17}
**CONSTRAINTS**
w-inintervalset(aux121, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,-5,-3,-2,0,0,2,2,13,13,15,15,17,17])
**VARIABLES**
DISCRETE aux122 #( - M_00005_00003 + M_00005_00004)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux122, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux123 #( - M_00005_00004 + M_00005_00005)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux123, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux124 #( - M_00005_00003 + M_00005_00006)
{-28..13}
**CONSTRAINTS**
w-inintervalset(aux124, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux125 #( - M_00005_00005 + M_00005_00006)
{-28..13}
**CONSTRAINTS**
w-inintervalset(aux125, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13])
**VARIABLES**
DISCRETE aux126 #( - M_00005_00002 + M_00005_00003)
{-26..28}
**CONSTRAINTS**
w-inintervalset(aux126, [-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux127 #( - M_00005_00002 + M_00005_00005)
{-28..26}
**CONSTRAINTS**
w-inintervalset(aux127, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26])
**VARIABLES**
DISCRETE aux128 #( - M_00005_00001 + M_00005_00002)
{-50..24}
**CONSTRAINTS**
w-inintervalset(aux128, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24])
**VARIABLES**
DISCRETE aux129 #( - M_00005_00001 + M_00005_00004)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux129, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux130 #( - M_00006_00002 + M_00006_00003)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux130, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux131 #( - M_00006_00003 + M_00006_00004)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux131, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux132 #( - M_00006_00002 + M_00006_00005)
{-28..26}
**CONSTRAINTS**
w-inintervalset(aux132, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26])
**VARIABLES**
DISCRETE aux133 #( - M_00006_00004 + M_00006_00005)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux133, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux134 #( - M_00006_00001 + M_00006_00002)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux134, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux135 #( - M_00006_00001 + M_00006_00004)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux135, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux136 #( - M_00007_00001 + M_00007_00002)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux136, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux137 #( - M_00007_00003 + M_00007_00004)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux137, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux138 #( - M_00007_00001 + M_00007_00004)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux138, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux139 #( - M_00007_00002 + M_00007_00003)
{-28..28}
**CONSTRAINTS**
w-inintervalset(aux139, [-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux140 #( - M_00008_00001 + M_00008_00002)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux140, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
DISCRETE aux141 #( - M_00008_00002 + M_00008_00003)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux141, [-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26])
**VARIABLES**
DISCRETE aux142 #(M_00010_00001 - M_00009_00001)
{-50..28}
**CONSTRAINTS**
w-inintervalset(aux142, [-50,-50,-48,-48,-46,-45,-42,-42,-39,-39,-37,-37,-28,-28,-26,-26,-24,-20,-18,-17,-15,-15,-13,-13,-11,-11,-9,9,11,11,13,13,15,15,17,18,20,24,26,26,28,28])
**VARIABLES**
**VARIABLES**
ALIAS cards[10]=[51, 5, 27, 6, 29, 3, 9, 12, 14, 1]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00002_00009],[M_00003_00002],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00003_00008],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00009_00001],[M_00010_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009, M_00003_00002, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00008_00001, M_00008_00002, M_00008_00003, M_00009_00001, M_00010_00001]
**CONSTRAINTS**
div(M_00010_00001, 13, aux94)
reify(gaceq(M_00007_00001,M_00006_00001), aux15)
div(M_00002_00008, 13, aux16)
div(M_00002_00006, 13, 0)
div(M_00002_00007, 13, 0)
reify(gaceq(M_00003_00004,M_00004_00004), aux19)
div(M_00007_00002, 13, aux20)
div(M_00007_00001, 13, aux21)
div(M_00007_00003, 13, aux22)
div(M_00007_00004, 13, aux23)
div(M_00002_00005, 13, aux24)
reify(gaceq(M_00004_00005,M_00005_00004), aux25)
reify(gaceq(M_00004_00006,M_00005_00005), aux26)
div(M_00004_00003, 13, aux27)
div(M_00004_00002, 13, 0)
div(M_00004_00006, 13, aux29)
div(M_00004_00005, 13, aux30)
div(M_00002_00009, 13, aux31)
div(M_00002_00004, 13, 0)
reify(gaceq(M_00003_00006,M_00004_00005), aux33)
reify(gaceq(M_00005_00003,M_00006_00003), aux34)
div(M_00003_00008, 13, aux35)
div(M_00003_00006, 13, 0)
div(M_00003_00004, 13, 0)
div(M_00005_00006, 13, aux38)
div(M_00005_00001, 13, aux39)
div(M_00008_00002, 13, aux40)
div(M_00006_00004, 13, aux41)
div(M_00006_00002, 13, aux42)
reify(gaceq(M_00003_00007,M_00004_00006), aux43)
reify(gaceq(M_00002_00005,M_00003_00005), aux44)
reify(gaceq(M_00004_00004,M_00005_00003), aux45)
reify(gaceq(M_00004_00005,M_00005_00005), aux46)
reify(gaceq(M_00002_00007,M_00003_00006), aux47)
reify(gaceq(M_00002_00006,M_00003_00006), aux48)
reify(gaceq(M_00002_00004,M_00003_00004), aux49)
reify(gaceq(M_00004_00007,M_00005_00006), aux50)
reify(gaceq(M_00007_00003,M_00008_00002), aux51)
reify(gaceq(M_00007_00002,M_00008_00002), aux52)
reify(gaceq(M_00007_00001,M_00008_00001), aux53)
reify(gaceq(M_00004_00001,M_00005_00001), aux54)
div(M_00006_00001, 13, aux55)
div(M_00006_00003, 13, aux56)
div(M_00006_00005, 13, aux57)
div(M_00003_00007, 13, aux58)
reify(gaceq(M_00005_00001,M_00006_00001), aux59)
reify(gaceq(M_00005_00005,M_00006_00004), aux60)
reify(gaceq(M_00005_00002,M_00006_00002), aux61)
reify(gaceq(M_00005_00003,M_00006_00002), aux62)
reify(gaceq(M_00010_00001,M_00008_00003), aux63)
div(M_00005_00002, 13, aux64)
div(M_00005_00004, 13, aux65)
div(M_00005_00005, 13, aux66)
div(M_00005_00003, 13, aux67)
reify(gaceq(M_00004_00003,M_00005_00002), aux68)
reify(gaceq(M_00004_00003,M_00005_00003), aux69)
reify(gaceq(M_00003_00008,M_00004_00007), aux70)
reify(gaceq(M_00003_00005,M_00004_00004), aux71)
reify(gaceq(M_00003_00006,M_00004_00006), aux72)
reify(gaceq(M_00007_00004,M_00008_00003), aux73)
reify(gaceq(M_00005_00004,M_00006_00004), aux74)
reify(gaceq(M_00005_00004,M_00006_00003), aux75)
reify(gaceq(M_00003_00005,M_00004_00005), aux76)
div(M_00004_00004, 13, aux77)
reify(gaceq(M_00003_00002,M_00004_00002), aux78)
reify(gaceq(M_00007_00003,M_00006_00003), aux79)
reify(gaceq(M_00007_00003,M_00006_00004), aux80)
reify(gaceq(M_00007_00002,M_00006_00002), aux81)
reify(gaceq(M_00004_00002,M_00005_00002), aux82)
reify(gaceq(M_00002_00008,M_00003_00007), aux83)
reify(gaceq(M_00007_00002,M_00006_00003), aux84)
reify(gaceq(M_00005_00006,M_00006_00005), aux85)
div(M_00003_00005, 13, aux86)
reify(gaceq(M_00002_00006,M_00003_00005), aux87)
reify(gaceq(M_00002_00007,M_00003_00007), aux88)
div(M_00004_00001, 13, aux89)
div(M_00004_00007, 13, aux90)
reify(gaceq(M_00004_00004,M_00005_00004), aux91)
reify(gaceq(M_00002_00009,M_00003_00008), aux92)
reify(gaceq(M_00007_00004,M_00006_00005), aux93)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00002_00009],[-1],[0])
gccweak([M_00003_00002, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00003_00008],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003],[-1],[0])
gccweak([M_00010_00001, M_00009_00001],[-1],[0])
gccweak([M_00010_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,3),w-literal(M_00002_00006,9),w-literal(M_00002_00007,12),w-literal(M_00002_00008,14),w-literal(M_00002_00009,1)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,1),w-literal(M_00002_00008,12),w-literal(M_00002_00009,14)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,9),w-literal(M_00002_00008,12),w-literal(M_00002_00009,1)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,12),w-literal(M_00002_00008,14),w-literal(M_00002_00009,1)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,9),w-literal(M_00002_00007,12),w-literal(M_00002_00008,14),w-literal(M_00002_00009,1)}),watched-and({w-literal(M_00002_00004,9),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,12),w-literal(M_00002_00008,14),w-literal(M_00002_00009,1)})})
watched-or({watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux44,1),w-literal(aux47,1),w-literal(aux83,1),w-literal(aux92,1)}),watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux44,1),w-literal(aux48,1),w-literal(aux83,1),w-literal(aux92,1),watched-or({modulo(aux95,13,0),w-literal(aux16,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux44,1),w-literal(aux88,1),gaceq(M_00002_00008,M_00003_00008),gaceq(M_00002_00009,M_00003_00006),watched-or({modulo(aux96,13,0),w-literal(aux31,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux44,1),w-literal(aux48,1),w-literal(aux88,1),w-literal(aux92,1),watched-or({modulo(aux97,13,0),gaceq(aux16,aux31)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux87,1),w-literal(aux47,1),w-literal(aux83,1),w-literal(aux92,1),watched-or({modulo(aux98,13,0),w-literal(aux24,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux49,1),w-literal(aux48,1),w-literal(aux88,1),gaceq(M_00002_00008,M_00003_00005),w-literal(aux92,1),watched-or({modulo(aux99,13,0),gaceq(aux24,aux16)})}),watched-and({w-literal(M_00003_00002,5),gaceq(M_00002_00005,M_00003_00004),w-literal(aux87,1),w-literal(aux47,1),w-literal(aux83,1),w-literal(aux92,1),watched-or({modulo(aux100,13,0),w-literal(aux24,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux44,1),w-literal(aux48,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux83,1),w-literal(aux92,1)}),watched-and({watched-or({w-literal(aux24,0),modulo(aux101,13,0)}),w-literal(aux49,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux87,1),w-literal(aux47,1),w-literal(aux83,1),w-literal(aux92,1)})})
watched-or({watched-and({w-literal(aux78,1),w-literal(aux19,1),w-literal(aux33,1),w-literal(aux43,1),w-literal(aux70,1),watched-or({modulo(aux102,13,0),w-literal(aux86,0)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),w-literal(aux19,1),w-literal(aux76,1),w-literal(aux43,1),w-literal(aux70,1),watched-or({modulo(aux103,13,0),w-literal(aux58,0)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),w-literal(aux19,1),w-literal(aux72,1),gaceq(M_00003_00007,M_00004_00007),gaceq(M_00003_00008,M_00004_00005),watched-or({modulo(aux104,13,0),gaceq(aux86,aux35)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux71,1),w-literal(aux33,1),w-literal(aux43,1),w-literal(aux70,1),modulo(aux105,13,0),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),w-literal(aux71,1),w-literal(aux33,1),w-literal(aux43,1),w-literal(aux70,1),watched-or({modulo(aux106,13,0),w-literal(aux86,0)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),w-literal(aux19,1),w-literal(aux76,1),w-literal(aux72,1),w-literal(aux70,1),watched-or({modulo(aux107,13,0),gaceq(aux58,aux35)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux19,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux33,1),w-literal(aux43,1),w-literal(aux70,1),watched-or({modulo(aux108,13,0),div(M_00003_00002, 13, aux86)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),w-literal(aux76,1),w-literal(aux72,1),gaceq(M_00003_00007,M_00004_00004),w-literal(aux70,1),watched-or({modulo(aux109,13,0),w-literal(aux58,0)}),w-literal(M_00004_00001,51),w-literal(M_00004_00003,27)}),watched-and({w-literal(aux78,1),gaceq(M_00003_00004,M_00004_00003),w-literal(aux71,1),w-literal(aux33,1),w-literal(aux43,1),w-literal(aux70,1),modulo(aux110,13,0),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux78,1),w-literal(aux19,1),w-literal(aux76,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux43,1),w-literal(aux70,1),modulo(aux111,13,0),w-literal(M_00004_00001,51)})})
watched-or({watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux69,1),w-literal(aux91,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({gaceq(aux30,aux29),modulo(aux112,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux69,1),w-literal(aux91,1),w-literal(aux46,1),w-literal(aux50,1),watched-or({gaceq(aux29,aux90),modulo(aux113,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux69,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({gaceq(aux77,aux30),modulo(aux114,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux69,1),w-literal(aux46,1),gaceq(M_00004_00006,M_00005_00006),gaceq(M_00004_00007,M_00005_00004),watched-or({gaceq(aux77,aux90),modulo(aux115,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux45,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({gaceq(aux27,aux77),modulo(aux116,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux82,1),w-literal(aux91,1),w-literal(aux46,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux50,1),watched-or({gaceq(aux27,aux29),modulo(aux117,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux68,1),w-literal(aux45,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({w-literal(aux27,0),modulo(aux118,13,0)})}),watched-and({w-literal(aux54,1),w-literal(aux69,1),w-literal(aux91,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux26,1),w-literal(aux50,1),watched-or({w-literal(aux30,0),modulo(aux119,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux68,1),w-literal(aux45,1),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({w-literal(aux89,0),modulo(aux120,13,0)})}),watched-and({w-literal(aux82,1),w-literal(aux69,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux25,1),w-literal(aux26,1),w-literal(aux50,1),watched-or({gaceq(aux89,aux77),modulo(aux121,13,0)})})})
watched-or({watched-and({w-literal(aux59,1),w-literal(aux61,1),w-literal(aux75,1),w-literal(aux60,1),w-literal(aux85,1),watched-or({modulo(aux122,13,0),gaceq(aux67,aux65)})}),watched-and({w-literal(aux59,1),w-literal(aux61,1),w-literal(aux34,1),w-literal(aux60,1),w-literal(aux85,1),watched-or({modulo(aux123,13,0),gaceq(aux65,aux66)})}),watched-and({w-literal(aux59,1),w-literal(aux61,1),w-literal(aux74,1),gaceq(M_00005_00005,M_00006_00005),gaceq(M_00005_00006,M_00006_00003),watched-or({modulo(aux124,13,0),gaceq(aux67,aux38)})}),watched-and({w-literal(aux59,1),w-literal(aux61,1),w-literal(aux34,1),w-literal(aux74,1),w-literal(aux85,1),watched-or({modulo(aux125,13,0),gaceq(aux66,aux38)})}),watched-and({w-literal(aux59,1),w-literal(aux62,1),w-literal(aux75,1),w-literal(aux60,1),w-literal(aux85,1),watched-or({modulo(aux126,13,0),gaceq(aux64,aux67)})}),watched-and({w-literal(aux59,1),w-literal(aux34,1),w-literal(aux74,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux85,1),watched-or({modulo(aux127,13,0),gaceq(aux64,aux66)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux62,1),w-literal(aux75,1),w-literal(aux60,1),w-literal(aux85,1),watched-or({modulo(aux128,13,0),gaceq(aux39,aux64)})}),watched-and({w-literal(aux61,1),w-literal(aux34,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux60,1),w-literal(aux85,1),watched-or({modulo(aux129,13,0),gaceq(aux39,aux65)})})})
watched-or({watched-and({w-literal(aux15,1),w-literal(aux84,1),w-literal(aux80,1),w-literal(aux93,1),watched-or({gaceq(aux42,aux56),modulo(aux130,13,0)})}),watched-and({w-literal(aux15,1),w-literal(aux81,1),w-literal(aux80,1),w-literal(aux93,1),watched-or({gaceq(aux56,aux41),modulo(aux131,13,0)})}),watched-and({w-literal(aux15,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux79,1),gaceq(M_00007_00004,M_00006_00004),watched-or({gaceq(aux42,aux57),modulo(aux132,13,0)})}),watched-and({w-literal(aux15,1),w-literal(aux81,1),w-literal(aux79,1),w-literal(aux93,1),watched-or({gaceq(aux41,aux57),modulo(aux133,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux84,1),w-literal(aux80,1),w-literal(aux93,1),watched-or({gaceq(aux55,aux42),modulo(aux134,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux81,1),w-literal(aux79,1),w-literal(aux93,1),watched-or({gaceq(aux55,aux41),modulo(aux135,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux136,13,0),gaceq(aux21,aux20)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux51,1),w-literal(aux73,1)}),watched-and({watched-or({modulo(aux137,13,0),gaceq(aux22,aux23)}),w-literal(aux53,1),w-literal(aux52,1),w-literal(aux73,1)}),watched-and({watched-or({modulo(aux138,13,0),gaceq(aux21,aux23)}),w-literal(aux52,1),gaceq(M_00007_00003,M_00008_00003),gaceq(M_00007_00004,M_00008_00001)}),watched-and({watched-or({modulo(aux139,13,0),gaceq(aux20,aux22)}),w-literal(aux53,1),w-literal(aux51,1),w-literal(aux73,1)})})
watched-or({watched-and({watched-or({div(M_00008_00001, 13, aux40),modulo(aux140,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux63,1)}),watched-and({watched-or({div(M_00008_00003, 13, aux40),modulo(aux141,13,0)}),gaceq(M_00008_00001,M_00009_00001),w-literal(aux63,1)})})
watched-or({div(M_00009_00001, 13, aux94),modulo(aux142,13,0)})
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux95)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux95)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00009],aux96)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00009],aux96)
weightedsumleq([-1,1],[M_00002_00008,M_00002_00009],aux97)
weightedsumgeq([-1,1],[M_00002_00008,M_00002_00009],aux97)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux98)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux98)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux99)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux99)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux100)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux100)
sumleq([M_00002_00005,-5],aux101)
sumgeq([M_00002_00005,-5],aux101)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux102)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux102)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux103)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux103)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00008],aux104)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00008],aux104)
sumleq([M_00003_00004,-51],aux105)
sumgeq([M_00003_00004,-51],aux105)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux106)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux106)
weightedsumleq([-1,1],[M_00003_00007,M_00003_00008],aux107)
weightedsumgeq([-1,1],[M_00003_00007,M_00003_00008],aux107)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux108)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux108)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux109)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux109)
sumleq([M_00003_00004,-27],aux110)
sumgeq([M_00003_00004,-27],aux110)
sumleq([M_00003_00006,-27],aux111)
sumgeq([M_00003_00006,-27],aux111)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux112)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux112)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux113)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux113)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux114)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux114)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux115)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux115)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux116)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux116)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux117)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux117)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux118)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux118)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux119)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux119)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux120)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux120)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux121)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux121)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux122)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux122)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux123)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux123)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux124)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux124)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux125)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux125)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux126)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux126)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux127)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux127)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux128)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux128)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux129)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux129)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux130)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux130)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux131)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux131)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux132)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux132)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux133)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux133)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux134)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux134)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux135)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux135)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux136)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux136)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux137)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux137)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux138)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux138)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux139)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux139)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux140)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux140)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux141)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux141)
weightedsumleq([1,-1],[M_00010_00001,M_00009_00001],aux142)
weightedsumgeq([1,-1],[M_00010_00001,M_00009_00001],aux142)
**EOF**
