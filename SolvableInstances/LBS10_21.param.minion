MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 91
# CSE_active_eliminated_expressions = 376
# CSE_active_total_size = 273
**VARIABLES**
DISCRETE M_00002_00001 #
{19..22}
**CONSTRAINTS**
w-inintervalset(M_00002_00001, [19,19,22,22])
**VARIABLES**
DISCRETE M_00002_00002 #
{0..19}
**CONSTRAINTS**
w-inintervalset(M_00002_00002, [0,0,8,9,12,12,19,19])
**VARIABLES**
DISCRETE M_00002_00003 #
{0..39}
**CONSTRAINTS**
w-inintervalset(M_00002_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39])
**VARIABLES**
DISCRETE M_00002_00004 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00002_00005 #
{12..25}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [12,12,19,19,22,22,24,25])
**VARIABLES**
DISCRETE M_00002_00006 #
{25..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [25,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00002_00007 #
{24..50}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00002_00008 #
{9..24}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [9,9,12,12,19,19,22,22,24,24])
**VARIABLES**
DISCRETE M_00003_00001 #
{12..22}
**CONSTRAINTS**
w-inintervalset(M_00003_00001, [12,12,19,19,22,22])
**VARIABLES**
DISCRETE M_00003_00002 #
{0..39}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39])
**VARIABLES**
DISCRETE M_00003_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00003_00004 #
{12..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00003_00005 #
{9..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [9,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00003_00006 #
{24..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00003_00007 #
{9..50}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [9,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00001 #
{0..39}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39])
**VARIABLES**
DISCRETE M_00004_00002 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00004 #
{9..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [9,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00005 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00006 #
{9..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [9,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00004_00007 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00004_00007, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00002 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00004 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00005 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00005, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00005_00006 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00005_00006, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00006_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00006_00002 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00006_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00006_00004 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00006_00005 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00006_00005, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00007_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00007_00002 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00007_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00007_00004 #
{8..50}
**CONSTRAINTS**
w-inintervalset(M_00007_00004, [8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00008_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00008_00002 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00002, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00008_00003 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00008_00003, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00009_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00009_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
DISCRETE M_00010_00001 #
{0..50}
**CONSTRAINTS**
w-inintervalset(M_00010_00001, [0,0,8,9,12,12,19,19,22,22,24,25,39,39,50,50])
**VARIABLES**
BOOL aux15 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux16 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00008/13)
DISCRETE aux17 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006/13)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux17, [1,1,3,3])
**VARIABLES**
DISCRETE aux18 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00007/13)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux18, [1,1,3,3])
**VARIABLES**
BOOL aux19 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00002/13)
DISCRETE aux20 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux20, [0,1,3,3])
**VARIABLES**
BOOL aux21 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
DISCRETE aux22 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux22, [0,1,3,3])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux23, [0,1,3,3])
**VARIABLES**
DISCRETE aux24 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux24, [0,1,3,3])
**VARIABLES**
DISCRETE aux25 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux25, [0,1,3,3])
**VARIABLES**
BOOL aux26 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux27 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
DISCRETE aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux28, [0,1,3,3])
**VARIABLES**
BOOL aux29 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
BOOL aux30 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux31 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00006=M_00005_00005)
DISCRETE aux32 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux32, [0,1,3,3])
**VARIABLES**
DISCRETE aux33 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux33, [0,1,3,3])
**VARIABLES**
DISCRETE aux34 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00006/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux34, [0,1,3,3])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux35, [0,1,3,3])
**VARIABLES**
BOOL aux37 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux38 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux39 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux40 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00002_00002=M_00003_00002)
BOOL aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00001/13)
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00006/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux42, [0,1,3,3])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux43, [0,1,3,3])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00008_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux44, [0,1,3,3])
**VARIABLES**
DISCRETE aux45 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux45, [0,1,3,3])
**VARIABLES**
DISCRETE aux46 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux46, [0,1,3,3])
**VARIABLES**
BOOL aux47 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00004)
BOOL aux48 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
BOOL aux49 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00005)
BOOL aux51 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00002)
BOOL aux52 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00007)
BOOL aux53 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux54 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux55 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00004_00007=M_00005_00006)
BOOL aux56 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00003=M_00008_00002)
BOOL aux57 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00008_00002)
BOOL aux58 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001=M_00008_00001)
BOOL aux59 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00003)
BOOL aux60 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux61 #Active-CSE: 8 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux62 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux62, [0,1,3,3])
**VARIABLES**
DISCRETE aux63 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux63, [0,1,3,3])
**VARIABLES**
DISCRETE aux64 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00005/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux64, [0,1,3,3])
**VARIABLES**
DISCRETE aux65 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006/13)
{1..3}
**CONSTRAINTS**
w-inintervalset(aux65, [1,1,3,3])
**VARIABLES**
DISCRETE aux66 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00007/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux66, [0,1,3,3])
**VARIABLES**
DISCRETE aux67 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux67, [0,1,3,3])
**VARIABLES**
DISCRETE aux68 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux68, [0,1,3,3])
**VARIABLES**
BOOL aux69 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux70 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux71 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00003=M_00004_00002)
BOOL aux72 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux73 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
BOOL aux74 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00010_00001=M_00008_00003)
DISCRETE aux75 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux75, [0,1,3,3])
**VARIABLES**
DISCRETE aux76 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux76, [0,1,3,3])
**VARIABLES**
DISCRETE aux77 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00005/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux77, [0,1,3,3])
**VARIABLES**
DISCRETE aux78 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux78, [0,1,3,3])
**VARIABLES**
BOOL aux79 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00002)
BOOL aux80 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00003=M_00005_00003)
BOOL aux81 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
BOOL aux82 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00003)
BOOL aux83 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00006)
BOOL aux84 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00004=M_00008_00003)
BOOL aux85 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00004)
BOOL aux86 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux87 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
DISCRETE aux88 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux88, [0,1,3,3])
**VARIABLES**
BOOL aux89 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
BOOL aux90 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00003)
BOOL aux91 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux92 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux93 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux94 #Active-CSE: 11 occurrences of this expression or equivalent: (M_00002_00001=M_00003_00001)
BOOL aux95 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux96 #Active-CSE: 7 occurrences of this expression or equivalent: (M_00005_00006=M_00006_00005)
DISCRETE aux97 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00004/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux97, [0,1,3,3])
**VARIABLES**
DISCRETE aux98 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux98, [0,1,3,3])
**VARIABLES**
BOOL aux99 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00003)
BOOL aux100 #Active-CSE: 9 occurrences of this expression or equivalent: (M_00002_00003=M_00003_00003)
DISCRETE aux101 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux101, [0,1,3,3])
**VARIABLES**
DISCRETE aux102 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00007/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux102, [0,1,3,3])
**VARIABLES**
BOOL aux103 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux104 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00007_00004=M_00006_00005)
BOOL aux105 #Active-CSE: 10 occurrences of this expression or equivalent: (M_00003_00001=M_00004_00001)
DISCRETE aux106 #
{0..3}
**CONSTRAINTS**
w-inintervalset(aux106, [0,1,3,3])
**VARIABLES**
DISCRETE aux107 #( - M_00002_00008 + 8)
{-16..-1}
**CONSTRAINTS**
w-inintervalset(aux107, [-16,-16,-14,-14,-11,-11,-4,-4,-1,-1])
**VARIABLES**
DISCRETE aux108 #( - M_00002_00005 + M_00002_00006)
{13..25}
**CONSTRAINTS**
w-inintervalset(aux108, [13,15,17,17,20,20,25,25])
**VARIABLES**
DISCRETE aux109 #( - M_00002_00006 + M_00002_00007)
{-26..25}
**CONSTRAINTS**
w-inintervalset(aux109, [-26,-25,-15,-14,-11,-11,-1,0,11,11,14,14,25,25])
**VARIABLES**
DISCRETE aux110 #( - M_00002_00005 + M_00002_00008)
{-16..12}
**CONSTRAINTS**
w-inintervalset(aux110, [-16,-15,-13,-12,-10,-10,-7,-5,-3,0,2,3,5,5,7,7,10,10,12,12])
**VARIABLES**
DISCRETE aux111 #( - M_00002_00007 + M_00002_00008)
{-26..-15}
**CONSTRAINTS**
w-inintervalset(aux111, [-26,-26,-20,-20,-17,-15])
**VARIABLES**
DISCRETE aux112 #( - M_00002_00004 + M_00002_00005)
{-38..13}
**CONSTRAINTS**
w-inintervalset(aux112, [-38,-38,-31,-31,-28,-25,-20,-20,-17,-17,-15,-12,-10,-10,-7,-5,-3,3,5,7,10,10,12,13])
**VARIABLES**
DISCRETE aux113 #( - M_00002_00004 + M_00002_00007)
{-26..12}
**CONSTRAINTS**
w-inintervalset(aux113, [-26,-25,-15,-14,-11,-11,-1,3,5,6,11,12])
**VARIABLES**
DISCRETE aux114 #( - M_00002_00001 + M_00002_00002)
{-19..-3}
**CONSTRAINTS**
w-inintervalset(aux114, [-19,-19,-14,-13,-11,-10,-7,-7,-3,-3])
**VARIABLES**
DISCRETE aux115 #( - M_00002_00003 + M_00002_00004)
{-27..50}
**CONSTRAINTS**
w-inintervalset(aux115, [-27,-27,-20,-20,-17,-17,-15,-12,-10,-10,-7,-5,-3,7,10,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux116 #( - M_00002_00003 + M_00002_00006)
{11..50}
**CONSTRAINTS**
w-inintervalset(aux116, [11,11,13,17,20,20,25,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux117 #( - M_00002_00002 + M_00002_00003)
{-19..39}
**CONSTRAINTS**
w-inintervalset(aux117, [-19,-19,-12,-7,-4,-3,-1,1,3,17,19,20,22,22,24,25,27,27,30,31,39,39])
**VARIABLES**
DISCRETE aux118 #( - M_00002_00001 + M_00002_00004)
{-10..28}
**CONSTRAINTS**
w-inintervalset(aux118, [-10,-10,-7,-7,-3,-3,0,0,2,3,5,6,17,17,20,20,28,28])
**VARIABLES**
DISCRETE aux119 #( - M_00002_00002 + M_00002_00005)
{-7..25}
**CONSTRAINTS**
w-inintervalset(aux119, [-7,-7,0,0,3,7,10,17,19,19,22,22,24,25])
**VARIABLES**
DISCRETE aux120 #( - M_00003_00002 + M_00003_00003)
{-27..50}
**CONSTRAINTS**
w-inintervalset(aux120, [-27,-27,-25,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux121 #( - M_00003_00005 + 8)
{-42..-1}
**CONSTRAINTS**
w-inintervalset(aux121, [-42,-42,-31,-31,-17,-16,-14,-14,-11,-11,-4,-4,-1,-1])
**VARIABLES**
DISCRETE aux122 #( - M_00003_00001 + M_00003_00004)
{-10..31}
**CONSTRAINTS**
w-inintervalset(aux122, [-10,-10,-7,-7,-3,-3,0,0,2,3,5,7,10,10,12,13,17,17,20,20,27,28,31,31])
**VARIABLES**
DISCRETE aux123 #( - M_00003_00002 + M_00003_00005)
{-14..50}
**CONSTRAINTS**
w-inintervalset(aux123, [-14,-12,-10,-10,-7,-5,-3,7,9,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux124 #( - M_00003_00007 + 8)
{-42..-1}
**CONSTRAINTS**
w-inintervalset(aux124, [-42,-42,-31,-31,-17,-16,-14,-14,-11,-11,-4,-4,-1,-1])
**VARIABLES**
DISCRETE aux125 #( - M_00003_00004 + M_00003_00005)
{-41..38}
**CONSTRAINTS**
w-inintervalset(aux125, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,-5,-3,3,5,7,10,15,17,17,20,20,25,28,31,31,38,38])
**VARIABLES**
DISCRETE aux126 #( - M_00003_00005 + M_00003_00006)
{-26..38}
**CONSTRAINTS**
w-inintervalset(aux126, [-26,-25,-15,-14,-11,-11,-1,3,5,6,11,17,20,20,25,28,30,31,38,38])
**VARIABLES**
DISCRETE aux127 #( - M_00003_00004 + M_00003_00007)
{-41..38}
**CONSTRAINTS**
w-inintervalset(aux127, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,-5,-3,3,5,7,10,15,17,17,20,20,25,28,31,31,38,38])
**VARIABLES**
DISCRETE aux128 #( - M_00003_00006 + M_00003_00007)
{-41..25}
**CONSTRAINTS**
w-inintervalset(aux128, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-11,-6,-5,-3,1,11,11,14,15,25,25])
**VARIABLES**
DISCRETE aux129 #( - M_00003_00001 + M_00003_00002)
{-22..20}
**CONSTRAINTS**
w-inintervalset(aux129, [-22,-22,-19,-19,-14,-10,-7,-7,-4,-3,0,0,2,3,5,7,10,10,12,13,17,17,20,20])
**VARIABLES**
DISCRETE aux130 #( - M_00003_00003 + M_00003_00004)
{-38..50}
**CONSTRAINTS**
w-inintervalset(aux130, [-38,-38,-31,-31,-28,-25,-20,-20,-17,-17,-15,-10,-7,-5,-3,7,10,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux131 #( - M_00003_00003 + M_00003_00006)
{-26..50}
**CONSTRAINTS**
w-inintervalset(aux131, [-26,-25,-15,-14,-11,-11,-1,3,5,6,11,17,20,20,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux132 #( - M_00004_00005 + M_00004_00006)
{-41..42}
**CONSTRAINTS**
w-inintervalset(aux132, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,-5,-3,7,10,17,20,20,25,28,30,31,38,38,41,42])
**VARIABLES**
DISCRETE aux133 #( - M_00004_00006 + M_00004_00007)
{-42..25}
**CONSTRAINTS**
w-inintervalset(aux133, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,3,5,7,10,17,20,20,25,25])
**VARIABLES**
DISCRETE aux134 #( - M_00004_00004 + M_00004_00005)
{-42..41}
**CONSTRAINTS**
w-inintervalset(aux134, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,3,5,7,10,17,20,20,25,28,30,31,38,38,41,41])
**VARIABLES**
DISCRETE aux135 #( - M_00004_00004 + M_00004_00007)
{-42..38}
**CONSTRAINTS**
w-inintervalset(aux135, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,3,5,7,10,17,20,20,25,28,30,31,38,38])
**VARIABLES**
DISCRETE aux136 #( - M_00004_00003 + M_00004_00004)
{-41..50}
**CONSTRAINTS**
w-inintervalset(aux136, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,-5,-3,7,9,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux137 #( - M_00004_00003 + M_00004_00006)
{-41..50}
**CONSTRAINTS**
w-inintervalset(aux137, [-41,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,-5,-3,7,9,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux138 #( - M_00004_00002 + M_00004_00003)
{-39..50}
**CONSTRAINTS**
w-inintervalset(aux138, [-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux139 #( - M_00004_00002 + M_00004_00005)
{-31..50}
**CONSTRAINTS**
w-inintervalset(aux139, [-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux140 #( - M_00004_00001 + M_00004_00002)
{-39..50}
**CONSTRAINTS**
w-inintervalset(aux140, [-39,-39,-31,-30,-27,-27,-25,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux141 #( - M_00004_00001 + M_00004_00004)
{-30..50}
**CONSTRAINTS**
w-inintervalset(aux141, [-30,-30,-27,-27,-20,-20,-17,-12,-10,-10,-7,-5,-3,7,9,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux142 #( - M_00005_00003 + M_00005_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux142, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux143 #( - M_00005_00004 + M_00005_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux143, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,7,10,17,20,20,25,28,30,31,38,38,41,42])
**VARIABLES**
DISCRETE aux144 #( - M_00005_00003 + M_00005_00006)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux144, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux145 #( - M_00005_00005 + M_00005_00006)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux145, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,7,10,17,20,20,25,28,30,31,38,38,41,42])
**VARIABLES**
DISCRETE aux146 #( - M_00005_00002 + M_00005_00003)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux146, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux147 #( - M_00005_00002 + M_00005_00005)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux147, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux148 #( - M_00005_00001 + M_00005_00002)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux148, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux149 #( - M_00005_00001 + M_00005_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux149, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux150 #( - M_00006_00002 + M_00006_00003)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux150, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux151 #( - M_00006_00003 + M_00006_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux151, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux152 #( - M_00006_00002 + M_00006_00005)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux152, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux153 #( - M_00006_00004 + M_00006_00005)
{-42..42}
**CONSTRAINTS**
w-inintervalset(aux153, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,7,10,17,20,20,25,28,30,31,38,38,41,42])
**VARIABLES**
DISCRETE aux154 #( - M_00006_00001 + M_00006_00002)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux154, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux155 #( - M_00006_00001 + M_00006_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux155, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux156 #( - M_00007_00001 + M_00007_00002)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux156, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux157 #( - M_00007_00003 + M_00007_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux157, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux158 #( - M_00007_00001 + M_00007_00004)
{-42..50}
**CONSTRAINTS**
w-inintervalset(aux158, [-42,-41,-38,-38,-31,-30,-28,-25,-20,-20,-17,-10,-7,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux159 #( - M_00007_00002 + M_00007_00003)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux159, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux160 #( - M_00008_00001 + M_00008_00002)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux160, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
DISCRETE aux161 #( - M_00008_00002 + M_00008_00003)
{-39..39}
**CONSTRAINTS**
w-inintervalset(aux161, [-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39])
**VARIABLES**
DISCRETE aux162 #(M_00010_00001 - M_00009_00001)
{-50..50}
**CONSTRAINTS**
w-inintervalset(aux162, [-50,-50,-42,-41,-39,-38,-31,-30,-28,-24,-22,-22,-20,-19,-17,17,19,20,22,22,24,28,30,31,38,39,41,42,50,50])
**VARIABLES**
**VARIABLES**
ALIAS cards[10]=[22, 19, 0, 39, 12, 25, 50, 24, 9, 8]
**SEARCH**
PRINT[[M_00002_00001],[M_00002_00002],[M_00002_00003],[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00001],[M_00003_00002],[M_00003_00003],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00004_00001],[M_00004_00002],[M_00004_00003],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00004_00007],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00005_00005],[M_00005_00006],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00006_00005],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00007_00004],[M_00008_00001],[M_00008_00002],[M_00008_00003],[M_00009_00001],[M_00010_00001]]
VARORDER STATIC [M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005, M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004, M_00008_00001, M_00008_00002, M_00008_00003, M_00009_00001, M_00010_00001]
**CONSTRAINTS**
div(M_00009_00001, 13, aux106)
reify(gaceq(M_00007_00001,M_00006_00001), aux15)
div(M_00002_00008, 13, aux16)
div(M_00002_00006, 13, aux17)
div(M_00002_00007, 13, aux18)
div(M_00002_00002, 13, aux19)
div(M_00002_00003, 13, aux20)
reify(gaceq(M_00003_00004,M_00004_00004), aux21)
div(M_00007_00002, 13, aux22)
div(M_00007_00001, 13, aux23)
div(M_00007_00003, 13, aux24)
div(M_00007_00004, 13, aux25)
reify(gaceq(M_00002_00006,M_00003_00005), aux26)
reify(gaceq(M_00002_00008,M_00003_00007), aux27)
div(M_00002_00004, 13, aux28)
div(M_00002_00005, 13, aux29)
reify(gaceq(M_00004_00005,M_00005_00004), aux30)
reify(gaceq(M_00004_00006,M_00005_00005), aux31)
div(M_00004_00003, 13, aux32)
div(M_00004_00002, 13, aux33)
div(M_00004_00006, 13, aux34)
div(M_00004_00005, 13, aux35)
div(M_00002_00001, 13, 1)
reify(gaceq(M_00003_00007,M_00004_00006), aux37)
reify(gaceq(M_00003_00005,M_00004_00004), aux38)
reify(gaceq(M_00005_00003,M_00006_00003), aux39)
reify(gaceq(M_00002_00002,M_00003_00002), aux40)
div(M_00003_00001, 13, aux41)
div(M_00005_00006, 13, aux42)
div(M_00005_00001, 13, aux43)
div(M_00008_00002, 13, aux44)
div(M_00006_00004, 13, aux45)
div(M_00006_00002, 13, aux46)
reify(gaceq(M_00002_00005,M_00003_00004), aux47)
reify(gaceq(M_00002_00005,M_00003_00005), aux48)
reify(gaceq(M_00004_00004,M_00005_00003), aux49)
reify(gaceq(M_00004_00005,M_00005_00005), aux50)
reify(gaceq(M_00002_00003,M_00003_00002), aux51)
reify(gaceq(M_00002_00007,M_00003_00007), aux52)
reify(gaceq(M_00002_00006,M_00003_00006), aux53)
reify(gaceq(M_00002_00004,M_00003_00004), aux54)
reify(gaceq(M_00004_00007,M_00005_00006), aux55)
reify(gaceq(M_00007_00003,M_00008_00002), aux56)
reify(gaceq(M_00007_00002,M_00008_00002), aux57)
reify(gaceq(M_00007_00001,M_00008_00001), aux58)
reify(gaceq(M_00003_00003,M_00004_00003), aux59)
reify(gaceq(M_00003_00006,M_00004_00005), aux60)
reify(gaceq(M_00004_00001,M_00005_00001), aux61)
div(M_00006_00001, 13, aux62)
div(M_00006_00003, 13, aux63)
div(M_00006_00005, 13, aux64)
div(M_00003_00006, 13, aux65)
div(M_00003_00007, 13, aux66)
div(M_00003_00002, 13, aux67)
div(M_00003_00003, 13, aux68)
reify(gaceq(M_00005_00001,M_00006_00001), aux69)
reify(gaceq(M_00005_00005,M_00006_00004), aux70)
reify(gaceq(M_00003_00003,M_00004_00002), aux71)
reify(gaceq(M_00005_00002,M_00006_00002), aux72)
reify(gaceq(M_00005_00003,M_00006_00002), aux73)
reify(gaceq(M_00010_00001,M_00008_00003), aux74)
div(M_00005_00002, 13, aux75)
div(M_00005_00004, 13, aux76)
div(M_00005_00005, 13, aux77)
div(M_00005_00003, 13, aux78)
reify(gaceq(M_00004_00003,M_00005_00002), aux79)
reify(gaceq(M_00004_00003,M_00005_00003), aux80)
reify(gaceq(M_00002_00007,M_00003_00006), aux81)
reify(gaceq(M_00003_00004,M_00004_00003), aux82)
reify(gaceq(M_00003_00006,M_00004_00006), aux83)
reify(gaceq(M_00007_00004,M_00008_00003), aux84)
reify(gaceq(M_00005_00004,M_00006_00004), aux85)
reify(gaceq(M_00005_00004,M_00006_00003), aux86)
reify(gaceq(M_00003_00005,M_00004_00005), aux87)
div(M_00004_00004, 13, aux88)
reify(gaceq(M_00003_00002,M_00004_00002), aux89)
reify(gaceq(M_00007_00003,M_00006_00003), aux90)
reify(gaceq(M_00007_00003,M_00006_00004), aux91)
reify(gaceq(M_00007_00002,M_00006_00002), aux92)
reify(gaceq(M_00004_00002,M_00005_00002), aux93)
reify(gaceq(M_00002_00001,M_00003_00001), aux94)
reify(gaceq(M_00007_00002,M_00006_00003), aux95)
reify(gaceq(M_00005_00006,M_00006_00005), aux96)
div(M_00003_00004, 13, aux97)
div(M_00003_00005, 13, aux98)
reify(gaceq(M_00002_00004,M_00003_00003), aux99)
reify(gaceq(M_00002_00003,M_00003_00003), aux100)
div(M_00004_00001, 13, aux101)
div(M_00004_00007, 13, aux102)
reify(gaceq(M_00004_00004,M_00005_00004), aux103)
reify(gaceq(M_00007_00004,M_00006_00005), aux104)
reify(gaceq(M_00003_00001,M_00004_00001), aux105)
gccweak([M_00002_00001, M_00002_00002, M_00002_00003, M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00001, M_00003_00002, M_00003_00003, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00003, M_00004_00004, M_00004_00005, M_00004_00006, M_00004_00007],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00005_00005, M_00005_00006],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00006_00005],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003, M_00007_00004],[-1],[0])
gccweak([M_00008_00001, M_00008_00002, M_00008_00003],[-1],[0])
gccweak([M_00010_00001, M_00009_00001],[-1],[0])
gccweak([M_00010_00001],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00001,22),w-literal(M_00002_00002,19),w-literal(M_00002_00003,0),w-literal(M_00002_00004,39),w-literal(M_00002_00005,12),w-literal(M_00002_00006,25),w-literal(M_00002_00007,24),w-literal(M_00002_00008,9)}),watched-and({w-literal(M_00002_00001,22),w-literal(M_00002_00002,19),w-literal(M_00002_00003,0),w-literal(M_00002_00004,39),w-literal(M_00002_00005,12),w-literal(M_00002_00006,25),w-literal(M_00002_00007,50),w-literal(M_00002_00008,24)}),watched-and({w-literal(M_00002_00001,22),w-literal(M_00002_00002,19),w-literal(M_00002_00003,0),w-literal(M_00002_00004,39),w-literal(M_00002_00005,25),w-literal(M_00002_00006,50),w-literal(M_00002_00007,24),w-literal(M_00002_00008,9)}),watched-and({w-literal(M_00002_00001,22),w-literal(M_00002_00002,19),w-literal(M_00002_00003,0),w-literal(M_00002_00005,12),w-literal(M_00002_00004,50),w-literal(M_00002_00006,25),w-literal(M_00002_00007,24),w-literal(M_00002_00008,9)}),watched-and({w-literal(M_00002_00001,19),w-literal(M_00002_00002,0),w-literal(M_00002_00003,39),w-literal(M_00002_00004,12),w-literal(M_00002_00005,25),w-literal(M_00002_00006,50),w-literal(M_00002_00007,24),w-literal(M_00002_00008,9)}),watched-and({w-literal(M_00002_00001,22),w-literal(M_00002_00002,19),w-literal(M_00002_00003,39),w-literal(M_00002_00004,12),w-literal(M_00002_00005,25),w-literal(M_00002_00006,50),w-literal(M_00002_00007,24),w-literal(M_00002_00008,9)})})
watched-or({watched-and({watched-or({w-literal(aux16,0),modulo(aux107,13,0)}),w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux54,1),w-literal(aux48,1),w-literal(aux53,1),w-literal(aux52,1)}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux54,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux108,13,0),gaceq(aux29,aux17)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux54,1),w-literal(aux48,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux109,13,0),gaceq(aux17,aux18)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux54,1),w-literal(aux53,1),w-literal(aux52,1),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux110,13,0),gaceq(aux29,aux16)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux54,1),w-literal(aux48,1),w-literal(aux53,1),w-literal(aux27,1),watched-or({modulo(aux111,13,0),gaceq(aux18,aux16)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux47,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux112,13,0),gaceq(aux28,aux29)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux100,1),w-literal(aux48,1),w-literal(aux53,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux27,1),watched-or({modulo(aux113,13,0),gaceq(aux28,aux18)})}),watched-and({gaceq(M_00002_00002,M_00003_00001),w-literal(aux51,1),w-literal(aux99,1),w-literal(aux47,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux114,13,0),w-literal(aux19,1)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux99,1),w-literal(aux47,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux115,13,0),gaceq(aux20,aux28)})}),watched-and({w-literal(aux94,1),w-literal(aux40,1),w-literal(aux54,1),w-literal(aux48,1),gaceq(M_00002_00006,M_00003_00003),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux116,13,0),gaceq(aux20,aux17)})}),watched-and({w-literal(aux94,1),w-literal(aux51,1),w-literal(aux99,1),w-literal(aux47,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux117,13,0),gaceq(aux19,aux20)})}),watched-and({w-literal(aux40,1),w-literal(aux100,1),gaceq(M_00002_00004,M_00003_00001),w-literal(aux47,1),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux118,13,0),w-literal(aux28,1)})}),watched-and({w-literal(aux94,1),w-literal(aux100,1),w-literal(aux54,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux26,1),w-literal(aux81,1),w-literal(aux27,1),watched-or({modulo(aux119,13,0),gaceq(aux19,aux29)})})})
watched-or({watched-and({w-literal(aux105,1),w-literal(aux71,1),w-literal(aux82,1),w-literal(aux38,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux120,13,0),gaceq(aux67,aux68)}),w-literal(M_00004_00007,8)}),watched-and({watched-or({modulo(aux121,13,0),w-literal(aux98,0)}),w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux21,1),w-literal(aux83,1),gaceq(M_00003_00007,M_00004_00007),w-literal(M_00004_00005,8)}),watched-and({w-literal(aux89,1),w-literal(aux59,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux38,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux122,13,0),gaceq(aux41,aux97)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux59,1),w-literal(aux21,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux123,13,0),gaceq(aux67,aux98)}),w-literal(M_00004_00007,8)}),watched-and({watched-or({modulo(aux124,13,0),w-literal(aux66,0)}),w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux21,1),w-literal(aux87,1),w-literal(aux83,1),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux38,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux125,13,0),gaceq(aux97,aux98)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux21,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux126,13,0),gaceq(aux98,aux65)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux87,1),w-literal(aux83,1),gaceq(M_00003_00007,M_00004_00004),watched-or({modulo(aux127,13,0),gaceq(aux97,aux66)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux59,1),w-literal(aux21,1),w-literal(aux87,1),w-literal(aux37,1),watched-or({modulo(aux128,13,0),gaceq(aux65,aux66)}),w-literal(M_00004_00007,8)}),watched-and({gaceq(M_00003_00002,M_00004_00001),w-literal(aux71,1),w-literal(aux82,1),w-literal(aux38,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux129,13,0),gaceq(aux41,aux67)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux82,1),w-literal(aux38,1),w-literal(aux60,1),w-literal(aux37,1),watched-or({modulo(aux130,13,0),gaceq(aux68,aux97)}),w-literal(M_00004_00007,8)}),watched-and({w-literal(aux105,1),w-literal(aux89,1),w-literal(aux21,1),w-literal(aux87,1),gaceq(M_00003_00006,M_00004_00003),w-literal(aux37,1),watched-or({modulo(aux131,13,0),gaceq(aux68,aux65)}),w-literal(M_00004_00007,8)})})
watched-or({watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux80,1),w-literal(aux103,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux35,aux34),modulo(aux132,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux80,1),w-literal(aux103,1),w-literal(aux50,1),w-literal(aux55,1),watched-or({gaceq(aux34,aux102),modulo(aux133,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux80,1),w-literal(aux30,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux88,aux35),modulo(aux134,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux80,1),w-literal(aux50,1),gaceq(M_00004_00006,M_00005_00006),gaceq(M_00004_00007,M_00005_00004),watched-or({gaceq(aux88,aux102),modulo(aux135,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux49,1),w-literal(aux30,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux32,aux88),modulo(aux136,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux93,1),w-literal(aux103,1),w-literal(aux50,1),gaceq(M_00004_00006,M_00005_00003),w-literal(aux55,1),watched-or({gaceq(aux32,aux34),modulo(aux137,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux79,1),w-literal(aux49,1),w-literal(aux30,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux33,aux32),modulo(aux138,13,0)})}),watched-and({w-literal(aux61,1),w-literal(aux80,1),w-literal(aux103,1),gaceq(M_00004_00005,M_00005_00002),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux33,aux35),modulo(aux139,13,0)})}),watched-and({gaceq(M_00004_00002,M_00005_00001),w-literal(aux79,1),w-literal(aux49,1),w-literal(aux30,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux101,aux33),modulo(aux140,13,0)})}),watched-and({w-literal(aux93,1),w-literal(aux80,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux30,1),w-literal(aux31,1),w-literal(aux55,1),watched-or({gaceq(aux101,aux88),modulo(aux141,13,0)})})})
watched-or({watched-and({w-literal(aux69,1),w-literal(aux72,1),w-literal(aux86,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux142,13,0),gaceq(aux78,aux76)})}),watched-and({w-literal(aux69,1),w-literal(aux72,1),w-literal(aux39,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux143,13,0),gaceq(aux76,aux77)})}),watched-and({w-literal(aux69,1),w-literal(aux72,1),w-literal(aux85,1),gaceq(M_00005_00005,M_00006_00005),gaceq(M_00005_00006,M_00006_00003),watched-or({modulo(aux144,13,0),gaceq(aux78,aux42)})}),watched-and({w-literal(aux69,1),w-literal(aux72,1),w-literal(aux39,1),w-literal(aux85,1),w-literal(aux96,1),watched-or({modulo(aux145,13,0),gaceq(aux77,aux42)})}),watched-and({w-literal(aux69,1),w-literal(aux73,1),w-literal(aux86,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux146,13,0),gaceq(aux75,aux78)})}),watched-and({w-literal(aux69,1),w-literal(aux39,1),w-literal(aux85,1),gaceq(M_00005_00005,M_00006_00002),w-literal(aux96,1),watched-or({modulo(aux147,13,0),gaceq(aux75,aux77)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux73,1),w-literal(aux86,1),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux148,13,0),gaceq(aux43,aux75)})}),watched-and({w-literal(aux72,1),w-literal(aux39,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux70,1),w-literal(aux96,1),watched-or({modulo(aux149,13,0),gaceq(aux43,aux76)})})})
watched-or({watched-and({w-literal(aux15,1),w-literal(aux95,1),w-literal(aux91,1),w-literal(aux104,1),watched-or({gaceq(aux46,aux63),modulo(aux150,13,0)})}),watched-and({w-literal(aux15,1),w-literal(aux92,1),w-literal(aux91,1),w-literal(aux104,1),watched-or({gaceq(aux63,aux45),modulo(aux151,13,0)})}),watched-and({w-literal(aux15,1),gaceq(M_00007_00002,M_00006_00005),w-literal(aux90,1),gaceq(M_00007_00004,M_00006_00004),watched-or({gaceq(aux46,aux64),modulo(aux152,13,0)})}),watched-and({w-literal(aux15,1),w-literal(aux92,1),w-literal(aux90,1),w-literal(aux104,1),watched-or({gaceq(aux45,aux64),modulo(aux153,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux95,1),w-literal(aux91,1),w-literal(aux104,1),watched-or({gaceq(aux62,aux46),modulo(aux154,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux92,1),w-literal(aux90,1),w-literal(aux104,1),watched-or({gaceq(aux62,aux45),modulo(aux155,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux156,13,0),gaceq(aux23,aux22)}),gaceq(M_00007_00002,M_00008_00001),w-literal(aux56,1),w-literal(aux84,1)}),watched-and({watched-or({modulo(aux157,13,0),gaceq(aux24,aux25)}),w-literal(aux58,1),w-literal(aux57,1),w-literal(aux84,1)}),watched-and({watched-or({modulo(aux158,13,0),gaceq(aux23,aux25)}),w-literal(aux57,1),gaceq(M_00007_00003,M_00008_00003),gaceq(M_00007_00004,M_00008_00001)}),watched-and({watched-or({modulo(aux159,13,0),gaceq(aux22,aux24)}),w-literal(aux58,1),w-literal(aux56,1),w-literal(aux84,1)})})
watched-or({watched-and({watched-or({div(M_00008_00001, 13, aux44),modulo(aux160,13,0)}),gaceq(M_00008_00002,M_00009_00001),w-literal(aux74,1)}),watched-and({watched-or({div(M_00008_00003, 13, aux44),modulo(aux161,13,0)}),gaceq(M_00008_00001,M_00009_00001),w-literal(aux74,1)})})
watched-or({div(M_00010_00001, 13, aux106),modulo(aux162,13,0)})
weightedsumleq([-1,1],[M_00002_00008,8],aux107)
weightedsumgeq([-1,1],[M_00002_00008,8],aux107)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux108)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux108)
weightedsumleq([-1,1],[M_00002_00006,M_00002_00007],aux109)
weightedsumgeq([-1,1],[M_00002_00006,M_00002_00007],aux109)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux110)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux110)
weightedsumleq([-1,1],[M_00002_00007,M_00002_00008],aux111)
weightedsumgeq([-1,1],[M_00002_00007,M_00002_00008],aux111)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux112)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux112)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00007],aux113)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00007],aux113)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00002],aux114)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00002],aux114)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00004],aux115)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00004],aux115)
weightedsumleq([-1,1],[M_00002_00003,M_00002_00006],aux116)
weightedsumgeq([-1,1],[M_00002_00003,M_00002_00006],aux116)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00003],aux117)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00003],aux117)
weightedsumleq([-1,1],[M_00002_00001,M_00002_00004],aux118)
weightedsumgeq([-1,1],[M_00002_00001,M_00002_00004],aux118)
weightedsumleq([-1,1],[M_00002_00002,M_00002_00005],aux119)
weightedsumgeq([-1,1],[M_00002_00002,M_00002_00005],aux119)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00003],aux120)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00003],aux120)
weightedsumleq([-1,1],[M_00003_00005,8],aux121)
weightedsumgeq([-1,1],[M_00003_00005,8],aux121)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00004],aux122)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00004],aux122)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux123)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux123)
weightedsumleq([-1,1],[M_00003_00007,8],aux124)
weightedsumgeq([-1,1],[M_00003_00007,8],aux124)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux125)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux125)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux126)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux126)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00007],aux127)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00007],aux127)
weightedsumleq([-1,1],[M_00003_00006,M_00003_00007],aux128)
weightedsumgeq([-1,1],[M_00003_00006,M_00003_00007],aux128)
weightedsumleq([-1,1],[M_00003_00001,M_00003_00002],aux129)
weightedsumgeq([-1,1],[M_00003_00001,M_00003_00002],aux129)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00004],aux130)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00004],aux130)
weightedsumleq([-1,1],[M_00003_00003,M_00003_00006],aux131)
weightedsumgeq([-1,1],[M_00003_00003,M_00003_00006],aux131)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux132)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux132)
weightedsumleq([-1,1],[M_00004_00006,M_00004_00007],aux133)
weightedsumgeq([-1,1],[M_00004_00006,M_00004_00007],aux133)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux134)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux134)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00007],aux135)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00007],aux135)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00004],aux136)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00004],aux136)
weightedsumleq([-1,1],[M_00004_00003,M_00004_00006],aux137)
weightedsumgeq([-1,1],[M_00004_00003,M_00004_00006],aux137)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00003],aux138)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00003],aux138)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux139)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux139)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux140)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux140)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux141)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux141)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux142)
weightedsumleq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumgeq([-1,1],[M_00005_00004,M_00005_00005],aux143)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00006],aux144)
weightedsumleq([-1,1],[M_00005_00005,M_00005_00006],aux145)
weightedsumgeq([-1,1],[M_00005_00005,M_00005_00006],aux145)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux146)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux146)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00005],aux147)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00005],aux147)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux148)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux148)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux149)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux149)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux150)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux150)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux151)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux151)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00005],aux152)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00005],aux152)
weightedsumleq([-1,1],[M_00006_00004,M_00006_00005],aux153)
weightedsumgeq([-1,1],[M_00006_00004,M_00006_00005],aux153)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux154)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux154)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux155)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux155)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux156)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux156)
weightedsumleq([-1,1],[M_00007_00003,M_00007_00004],aux157)
weightedsumgeq([-1,1],[M_00007_00003,M_00007_00004],aux157)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00004],aux158)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00004],aux158)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux159)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux159)
weightedsumleq([-1,1],[M_00008_00001,M_00008_00002],aux160)
weightedsumgeq([-1,1],[M_00008_00001,M_00008_00002],aux160)
weightedsumleq([-1,1],[M_00008_00002,M_00008_00003],aux161)
weightedsumgeq([-1,1],[M_00008_00002,M_00008_00003],aux161)
weightedsumleq([1,-1],[M_00010_00001,M_00009_00001],aux162)
weightedsumgeq([1,-1],[M_00010_00001,M_00009_00001],aux162)
**EOF**
