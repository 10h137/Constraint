MINION 3
# CSETopLevel_number = 0
# CSETopLevel_eliminated_expressions = 0
# CSETopLevel_total_size = 0
# CSE_active_number = 52
# CSE_active_eliminated_expressions = 159
# CSE_active_total_size = 156
**VARIABLES**
DISCRETE M_00002_00004 #
{6..9}
**CONSTRAINTS**
w-inintervalset(M_00002_00004, [6,6,8,9])
**VARIABLES**
DISCRETE M_00002_00005 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00002_00005, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00002_00006 #
{3..9}
**CONSTRAINTS**
w-inintervalset(M_00002_00006, [3,3,5,6,8,9])
**VARIABLES**
DISCRETE M_00002_00007 #
{9..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00007, [9,9,12,12])
**VARIABLES**
DISCRETE M_00002_00008 #
{8..12}
**CONSTRAINTS**
w-inintervalset(M_00002_00008, [8,9,12,12])
**VARIABLES**
DISCRETE M_00003_00002 #
{3..5}
**CONSTRAINTS**
w-inintervalset(M_00003_00002, [3,3,5,5])
**VARIABLES**
DISCRETE M_00003_00004 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00004, [3,3,5,6,8,9,12,12])
**VARIABLES**
DISCRETE M_00003_00005 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00003_00005, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00003_00006 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00006, [3,3,5,6,8,9,12,12])
**VARIABLES**
DISCRETE M_00003_00007 #
{8..12}
**CONSTRAINTS**
w-inintervalset(M_00003_00007, [8,9,12,12])
**VARIABLES**
DISCRETE M_00004_00001 #
{12..51}
**CONSTRAINTS**
w-inintervalset(M_00004_00001, [12,12,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00004_00002 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00004_00002, [3,3,5,6,8,9,12,12])
**VARIABLES**
DISCRETE M_00004_00004 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00004, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00004_00005 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00004_00005, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00004_00006 #
{3..12}
**CONSTRAINTS**
w-inintervalset(M_00004_00006, [3,3,5,6,8,9,12,12])
**VARIABLES**
DISCRETE M_00005_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00005_00001, [3,3,5,6,8,9,12,12,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00005_00002 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00002, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00003 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00003, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00005_00004 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00005_00004, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00006_00001, [3,3,5,6,8,9,12,12,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00006_00002 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00002, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00003 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00003, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00006_00004 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00006_00004, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00007_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00007_00001, [3,3,5,6,8,9,12,12,27,27,29,29,51,51])
**VARIABLES**
DISCRETE M_00007_00002 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00007_00002, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00007_00003 #
{3..29}
**CONSTRAINTS**
w-inintervalset(M_00007_00003, [3,3,5,6,8,9,12,12,27,27,29,29])
**VARIABLES**
DISCRETE M_00008_00001 #
{3..51}
**CONSTRAINTS**
w-inintervalset(M_00008_00001, [3,3,5,6,8,9,12,12,27,27,29,29,51,51])
**VARIABLES**
DISCRETE aux16 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux16, [0,0,2,2])
**VARIABLES**
DISCRETE aux17 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00005/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux17, [0,0,2,2])
**VARIABLES**
BOOL aux18 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00002=M_00005_00002)
BOOL aux19 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00004_00005=M_00005_00004)
BOOL aux21 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00004_00001=M_00005_00001)
DISCRETE aux22 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux22, [0,0,2,2])
**VARIABLES**
DISCRETE aux23 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00005/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux23, [0,0,2,2])
**VARIABLES**
BOOL aux27 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00007=M_00004_00006)
BOOL aux28 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00005_00001=M_00006_00001)
BOOL aux29 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00003_00002=M_00004_00002)
DISCRETE aux34 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux34, [0,0,2,3])
**VARIABLES**
DISCRETE aux35 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux35, [0,0,2,2])
**VARIABLES**
BOOL aux36 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00004)
BOOL aux37 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00004_00004=M_00005_00003)
BOOL aux38 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00002_00007=M_00003_00006)
DISCRETE aux40 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux40, [0,0,2,3])
**VARIABLES**
DISCRETE aux41 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00002/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux41, [0,0,2,2])
**VARIABLES**
DISCRETE aux42 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00003/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux42, [0,0,2,2])
**VARIABLES**
DISCRETE aux43 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00006_00004/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux43, [0,0,2,2])
**VARIABLES**
DISCRETE aux44 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00005/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux44, [0,0,2,2])
**VARIABLES**
BOOL aux45 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00002_00004=M_00003_00004)
BOOL aux46 #Active-CSE: 5 occurrences of this expression or equivalent: (M_00005_00005=M_00006_00004)
BOOL aux47 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00005)
BOOL aux48 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00003_00005=M_00004_00004)
BOOL aux49 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00002)
DISCRETE aux50 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux50, [0,0,2,2])
**VARIABLES**
DISCRETE aux51 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004/13)
{0..2}
**CONSTRAINTS**
w-inintervalset(aux51, [0,0,2,2])
**VARIABLES**
BOOL aux52 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00003_00004=M_00004_00004)
BOOL aux53 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00002=M_00006_00002)
BOOL aux54 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00004=M_00006_00003)
BOOL aux55 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00005_00003=M_00006_00003)
BOOL aux56 #Active-CSE: 4 occurrences of this expression or equivalent: (M_00003_00006=M_00004_00005)
BOOL aux57 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00007_00003=M_00006_00004)
BOOL aux58 #Active-CSE: 6 occurrences of this expression or equivalent: (M_00002_00008=M_00003_00007)
BOOL aux59 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00001=M_00006_00001)
BOOL aux60 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00002)
BOOL aux61 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00007_00002=M_00006_00003)
BOOL aux62 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00005)
BOOL aux63 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00006=M_00003_00006)
BOOL aux64 #Active-CSE: 3 occurrences of this expression or equivalent: (M_00002_00005=M_00003_00005)
DISCRETE aux66 #Active-CSE: 2 occurrences of this expression or equivalent: (M_00004_00001/13)
{0..3}
**CONSTRAINTS**
w-inintervalset(aux66, [0,0,2,3])
**VARIABLES**
DISCRETE aux67 #
{0..2}
**CONSTRAINTS**
w-inintervalset(aux67, [0,0,2,2])
**VARIABLES**
DISCRETE aux68 #( - M_00002_00005 + M_00002_00006)
{-26..6}
**CONSTRAINTS**
w-inintervalset(aux68, [-26,-26,-24,-18,-9,-9,-7,6])
**VARIABLES**
DISCRETE aux69 #( - M_00002_00005 + M_00002_00008)
{-21..5}
**CONSTRAINTS**
w-inintervalset(aux69, [-21,-17,-15,-15,-4,-3,-1,5])
**VARIABLES**
DISCRETE aux70 #( - M_00002_00004 + M_00002_00005)
{-3..23}
**CONSTRAINTS**
w-inintervalset(aux70, [-3,4,6,6,18,21,23,23])
**VARIABLES**
DISCRETE aux71 #(M_00002_00005 + -5)
{-2..24}
**CONSTRAINTS**
w-inintervalset(aux71, [-2,-2,0,1,3,4,7,7,22,22,24,24])
**VARIABLES**
DISCRETE aux72 #( - M_00003_00004 + M_00003_00005)
{-9..23}
**CONSTRAINTS**
w-inintervalset(aux72, [-9,-9,-7,7,9,9,15,15,17,23])
**VARIABLES**
DISCRETE aux73 #( - M_00003_00005 + M_00003_00006)
{-26..9}
**CONSTRAINTS**
w-inintervalset(aux73, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9])
**VARIABLES**
DISCRETE aux74 #( - M_00003_00002 + M_00003_00005)
{-2..24}
**CONSTRAINTS**
w-inintervalset(aux74, [-2,-2,0,7,9,9,22,22,24,24])
**VARIABLES**
DISCRETE aux75 #(M_00003_00004 + -51)
{-48..-39}
**CONSTRAINTS**
w-inintervalset(aux75, [-48,-48,-46,-45,-43,-42,-39,-39])
**VARIABLES**
DISCRETE aux76 #(M_00004_00006 + -27)
{-24..-15}
**CONSTRAINTS**
w-inintervalset(aux76, [-24,-24,-22,-21,-19,-18,-15,-15])
**VARIABLES**
DISCRETE aux77 #( - M_00004_00004 + M_00004_00005)
{-26..21}
**CONSTRAINTS**
w-inintervalset(aux77, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,21])
**VARIABLES**
DISCRETE aux78 #( - M_00004_00005 + M_00004_00006)
{-26..9}
**CONSTRAINTS**
w-inintervalset(aux78, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9])
**VARIABLES**
DISCRETE aux79 #( - M_00004_00001 + M_00004_00002)
{-48..-7}
**CONSTRAINTS**
w-inintervalset(aux79, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,-7])
**VARIABLES**
DISCRETE aux80 #( - M_00004_00002 + M_00004_00005)
{-9..26}
**CONSTRAINTS**
w-inintervalset(aux80, [-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux81 #( - M_00004_00001 + M_00004_00004)
{-48..17}
**CONSTRAINTS**
w-inintervalset(aux81, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,-6,-4,-2,0,0,2,2,15,15,17,17])
**VARIABLES**
DISCRETE aux82 #( - M_00004_00002 + 27)
{15..24}
**CONSTRAINTS**
w-inintervalset(aux82, [15,15,18,19,21,22,24,24])
**VARIABLES**
DISCRETE aux83 #(M_00004_00004 + -27)
{-24..2}
**CONSTRAINTS**
w-inintervalset(aux83, [-24,-24,-22,-21,-19,-18,-15,-15,0,0,2,2])
**VARIABLES**
DISCRETE aux84 #( - M_00005_00002 + M_00005_00003)
{-24..26}
**CONSTRAINTS**
w-inintervalset(aux84, [-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux85 #( - M_00005_00003 + M_00005_00004)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux85, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux86 #(M_00004_00006 - M_00005_00002)
{-26..9}
**CONSTRAINTS**
w-inintervalset(aux86, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9])
**VARIABLES**
DISCRETE aux87 #(M_00004_00006 - M_00005_00004)
{-26..9}
**CONSTRAINTS**
w-inintervalset(aux87, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9])
**VARIABLES**
DISCRETE aux88 #( - M_00005_00001 + M_00005_00002)
{-48..24}
**CONSTRAINTS**
w-inintervalset(aux88, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24])
**VARIABLES**
DISCRETE aux89 #( - M_00005_00001 + M_00005_00004)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux89, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux90 #( - M_00006_00001 + M_00006_00002)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux90, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux91 #( - M_00006_00002 + M_00006_00003)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux91, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux92 #( - M_00006_00001 + M_00006_00004)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux92, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux93 #( - M_00006_00003 + M_00006_00004)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux93, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux94 #( - M_00007_00002 + M_00007_00003)
{-26..26}
**CONSTRAINTS**
w-inintervalset(aux94, [-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux95 #( - M_00007_00001 + M_00007_00002)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux95, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
DISCRETE aux96 #(M_00007_00003 - M_00008_00001)
{-48..26}
**CONSTRAINTS**
w-inintervalset(aux96, [-48,-48,-46,-45,-43,-42,-39,-39,-26,-26,-24,-17,-15,-15,-9,-9,-7,7,9,9,15,15,17,24,26,26])
**VARIABLES**
**VARIABLES**
ALIAS cards[9]=[51, 5, 27, 6, 29, 3, 9, 12, 8]
**SEARCH**
PRINT[[M_00002_00004],[M_00002_00005],[M_00002_00006],[M_00002_00007],[M_00002_00008],[M_00003_00002],[M_00003_00004],[M_00003_00005],[M_00003_00006],[M_00003_00007],[M_00004_00001],[M_00004_00002],[M_00004_00004],[M_00004_00005],[M_00004_00006],[M_00005_00001],[M_00005_00002],[M_00005_00003],[M_00005_00004],[M_00006_00001],[M_00006_00002],[M_00006_00003],[M_00006_00004],[M_00007_00001],[M_00007_00002],[M_00007_00003],[M_00008_00001]]
VARORDER STATIC [M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008, M_00003_00002, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007, M_00004_00001, M_00004_00002, M_00004_00004, M_00004_00005, M_00004_00006, M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004, M_00007_00001, M_00007_00002, M_00007_00003, M_00008_00001]
**CONSTRAINTS**
div(M_00007_00003, 13, aux67)
div(M_00002_00007, 13, 0)
div(M_00007_00002, 13, aux16)
div(M_00002_00005, 13, aux17)
reify(gaceq(M_00004_00002,M_00005_00002), aux18)
reify(gaceq(M_00004_00005,M_00005_00004), aux19)
reify(gaceq(M_00004_00001,M_00005_00001), aux21)
div(M_00004_00004, 13, aux22)
div(M_00004_00005, 13, aux23)
div(M_00002_00006, 13, 0)
div(M_00002_00008, 13, 0)
div(M_00002_00004, 13, 0)
reify(gaceq(M_00003_00007,M_00004_00006), aux27)
reify(gaceq(M_00005_00001,M_00006_00001), aux28)
reify(gaceq(M_00003_00002,M_00004_00002), aux29)
div(M_00003_00007, 13, 0)
div(M_00003_00006, 13, 0)
div(M_00003_00004, 13, 0)
div(M_00004_00006, 13, 0)
div(M_00005_00001, 13, aux34)
div(M_00005_00003, 13, aux35)
reify(gaceq(M_00004_00004,M_00005_00004), aux36)
reify(gaceq(M_00004_00004,M_00005_00003), aux37)
reify(gaceq(M_00002_00007,M_00003_00006), aux38)
div(M_00006_00001, 13, aux40)
div(M_00006_00002, 13, aux41)
div(M_00006_00003, 13, aux42)
div(M_00006_00004, 13, aux43)
div(M_00003_00005, 13, aux44)
reify(gaceq(M_00002_00004,M_00003_00004), aux45)
reify(gaceq(M_00004_00006,M_00006_00004), aux46)
reify(gaceq(M_00003_00005,M_00004_00005), aux47)
reify(gaceq(M_00003_00005,M_00004_00004), aux48)
reify(gaceq(M_00005_00003,M_00006_00002), aux49)
div(M_00005_00002, 13, aux50)
div(M_00005_00004, 13, aux51)
reify(gaceq(M_00003_00004,M_00004_00004), aux52)
reify(gaceq(M_00005_00002,M_00006_00002), aux53)
reify(gaceq(M_00005_00004,M_00006_00003), aux54)
reify(gaceq(M_00005_00003,M_00006_00003), aux55)
reify(gaceq(M_00003_00006,M_00004_00005), aux56)
reify(gaceq(M_00007_00003,M_00006_00004), aux57)
reify(gaceq(M_00002_00008,M_00003_00007), aux58)
reify(gaceq(M_00007_00001,M_00006_00001), aux59)
reify(gaceq(M_00007_00002,M_00006_00002), aux60)
reify(gaceq(M_00007_00002,M_00006_00003), aux61)
reify(gaceq(M_00002_00006,M_00003_00005), aux62)
reify(gaceq(M_00002_00006,M_00003_00006), aux63)
reify(gaceq(M_00002_00005,M_00003_00005), aux64)
div(M_00004_00002, 13, 0)
div(M_00004_00001, 13, aux66)
gccweak([M_00002_00004, M_00002_00005, M_00002_00006, M_00002_00007, M_00002_00008],[-1],[0])
gccweak([M_00003_00002, M_00003_00004, M_00003_00005, M_00003_00006, M_00003_00007],[-1],[0])
gccweak([M_00004_00001, M_00004_00002, M_00004_00004, M_00004_00005, M_00004_00006],[-1],[0])
gccweak([M_00005_00001, M_00005_00002, M_00005_00003, M_00005_00004, M_00004_00006],[-1],[0])
gccweak([M_00006_00001, M_00006_00002, M_00006_00003, M_00006_00004],[-1],[0])
gccweak([M_00007_00001, M_00007_00002, M_00007_00003],[-1],[0])
gccweak([M_00008_00001, M_00007_00003],[-1],[0])
gccweak([M_00007_00003],[-1],[0])
watched-or({watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,3),w-literal(M_00002_00006,9),w-literal(M_00002_00007,12),w-literal(M_00002_00008,8)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,9),w-literal(M_00002_00008,8)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,12),w-literal(M_00002_00008,8)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,8),w-literal(M_00002_00007,9),w-literal(M_00002_00008,12)}),watched-and({w-literal(M_00002_00004,6),w-literal(M_00002_00005,29),w-literal(M_00002_00006,9),w-literal(M_00002_00007,12),w-literal(M_00002_00008,8)}),watched-and({w-literal(M_00002_00004,9),w-literal(M_00002_00005,29),w-literal(M_00002_00006,3),w-literal(M_00002_00007,12),w-literal(M_00002_00008,8)})})
watched-or({watched-and({w-literal(M_00003_00002,5),w-literal(aux45,1),w-literal(aux62,1),w-literal(aux38,1),w-literal(aux58,1),watched-or({modulo(aux68,13,0),w-literal(aux17,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux45,1),w-literal(aux64,1),w-literal(aux38,1),w-literal(aux58,1)}),watched-and({w-literal(M_00003_00002,5),w-literal(aux45,1),w-literal(aux63,1),gaceq(M_00002_00007,M_00003_00007),gaceq(M_00002_00008,M_00003_00005),watched-or({modulo(aux69,13,0),w-literal(aux17,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux45,1),w-literal(aux64,1),w-literal(aux63,1),w-literal(aux58,1)}),watched-and({w-literal(M_00003_00002,5),gaceq(M_00002_00005,M_00003_00004),w-literal(aux62,1),w-literal(aux38,1),w-literal(aux58,1),watched-or({modulo(aux70,13,0),w-literal(aux17,0)})}),watched-and({w-literal(M_00003_00002,5),w-literal(aux64,1),w-literal(aux63,1),gaceq(M_00002_00007,M_00003_00004),w-literal(aux58,1)}),watched-and({watched-or({w-literal(aux17,0),modulo(aux71,13,0)}),w-literal(aux45,1),gaceq(M_00002_00005,M_00003_00002),w-literal(aux62,1),w-literal(aux38,1),w-literal(aux58,1)})})
watched-or({watched-and({w-literal(aux29,1),w-literal(aux48,1),w-literal(aux56,1),w-literal(aux27,1),watched-or({modulo(aux72,13,0),w-literal(aux44,0)}),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux29,1),w-literal(aux52,1),w-literal(aux56,1),w-literal(aux27,1),watched-or({modulo(aux73,13,0),w-literal(aux44,0)}),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux29,1),w-literal(aux47,1),gaceq(M_00003_00006,M_00004_00006),gaceq(M_00003_00007,M_00004_00004),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux29,1),w-literal(aux52,1),w-literal(aux47,1),w-literal(aux27,1),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux52,1),gaceq(M_00003_00005,M_00004_00002),w-literal(aux56,1),w-literal(aux27,1),watched-or({modulo(aux74,13,0),div(M_00003_00002, 13, aux44)}),w-literal(M_00004_00001,51)}),watched-and({w-literal(aux29,1),gaceq(M_00003_00004,M_00004_00001),w-literal(aux48,1),w-literal(aux56,1),w-literal(aux27,1),modulo(aux75,13,0)})})
watched-or({watched-and({modulo(aux76,13,0),w-literal(aux21,1),w-literal(aux18,1),w-literal(aux36,1),gaceq(M_00004_00005,M_00004_00006),gaceq(M_00004_00006,M_00005_00003)}),watched-and({w-literal(M_00005_00003,27),w-literal(aux21,1),w-literal(aux18,1),w-literal(aux19,1),watched-or({gaceq(aux22,aux23),modulo(aux77,13,0)})}),watched-and({w-literal(M_00005_00003,27),w-literal(aux21,1),w-literal(aux18,1),w-literal(aux36,1),watched-or({div(M_00004_00006, 13, aux23),modulo(aux78,13,0)})}),watched-and({w-literal(M_00005_00002,27),gaceq(M_00004_00002,M_00005_00001),w-literal(aux37,1),w-literal(aux19,1),watched-or({w-literal(aux66,0),modulo(aux79,13,0)})}),watched-and({w-literal(M_00005_00003,27),w-literal(aux21,1),w-literal(aux36,1),gaceq(M_00004_00005,M_00005_00002),watched-or({w-literal(aux23,0),modulo(aux80,13,0)})}),watched-and({w-literal(M_00005_00003,27),w-literal(aux18,1),gaceq(M_00004_00004,M_00005_00001),w-literal(aux19,1),watched-or({gaceq(aux66,aux22),modulo(aux81,13,0)})}),watched-and({w-literal(M_00005_00002,27),modulo(aux82,13,0),w-literal(aux21,1),w-literal(aux37,1),w-literal(aux19,1)}),watched-and({watched-or({modulo(aux83,13,0),w-literal(aux22,2)}),w-literal(aux21,1),w-literal(aux18,1),w-literal(aux37,1),w-literal(aux19,1)})})
watched-or({watched-and({w-literal(aux28,1),w-literal(aux49,1),w-literal(aux54,1),w-literal(aux46,1),watched-or({modulo(aux84,13,0),gaceq(aux50,aux35)})}),watched-and({w-literal(aux28,1),w-literal(aux53,1),w-literal(aux54,1),w-literal(aux46,1),watched-or({modulo(aux85,13,0),gaceq(aux35,aux51)})}),watched-and({w-literal(aux28,1),w-literal(aux55,1),gaceq(M_00005_00004,M_00006_00004),gaceq(M_00004_00006,M_00006_00002),watched-or({modulo(aux86,13,0),w-literal(aux50,0)})}),watched-and({w-literal(aux28,1),w-literal(aux53,1),w-literal(aux55,1),w-literal(aux46,1),watched-or({modulo(aux87,13,0),w-literal(aux51,0)})}),watched-and({gaceq(M_00005_00002,M_00006_00001),w-literal(aux49,1),w-literal(aux54,1),w-literal(aux46,1),watched-or({modulo(aux88,13,0),gaceq(aux34,aux50)})}),watched-and({w-literal(aux53,1),w-literal(aux55,1),gaceq(M_00005_00004,M_00006_00001),w-literal(aux46,1),watched-or({modulo(aux89,13,0),gaceq(aux34,aux51)})})})
watched-or({watched-and({gaceq(M_00007_00001,M_00006_00002),w-literal(aux61,1),w-literal(aux57,1),watched-or({gaceq(aux40,aux41),modulo(aux90,13,0)})}),watched-and({w-literal(aux59,1),w-literal(aux61,1),w-literal(aux57,1),watched-or({gaceq(aux41,aux42),modulo(aux91,13,0)})}),watched-and({gaceq(M_00007_00001,M_00006_00004),w-literal(aux60,1),gaceq(M_00007_00003,M_00006_00003),watched-or({gaceq(aux40,aux43),modulo(aux92,13,0)})}),watched-and({w-literal(aux59,1),w-literal(aux60,1),w-literal(aux57,1),watched-or({gaceq(aux42,aux43),modulo(aux93,13,0)})})})
watched-or({watched-and({watched-or({modulo(aux94,13,0),div(M_00007_00003, 13, aux16)}),gaceq(M_00007_00001,M_00008_00001)}),watched-and({watched-or({modulo(aux95,13,0),div(M_00007_00001, 13, aux16)}),gaceq(M_00007_00002,M_00008_00001)})})
watched-or({div(M_00008_00001, 13, aux67),modulo(aux96,13,0)})
weightedsumleq([-1,1],[M_00002_00005,M_00002_00006],aux68)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00006],aux68)
weightedsumleq([-1,1],[M_00002_00005,M_00002_00008],aux69)
weightedsumgeq([-1,1],[M_00002_00005,M_00002_00008],aux69)
weightedsumleq([-1,1],[M_00002_00004,M_00002_00005],aux70)
weightedsumgeq([-1,1],[M_00002_00004,M_00002_00005],aux70)
sumleq([M_00002_00005,-5],aux71)
sumgeq([M_00002_00005,-5],aux71)
weightedsumleq([-1,1],[M_00003_00004,M_00003_00005],aux72)
weightedsumgeq([-1,1],[M_00003_00004,M_00003_00005],aux72)
weightedsumleq([-1,1],[M_00003_00005,M_00003_00006],aux73)
weightedsumgeq([-1,1],[M_00003_00005,M_00003_00006],aux73)
weightedsumleq([-1,1],[M_00003_00002,M_00003_00005],aux74)
weightedsumgeq([-1,1],[M_00003_00002,M_00003_00005],aux74)
sumleq([M_00003_00004,-51],aux75)
sumgeq([M_00003_00004,-51],aux75)
sumleq([M_00004_00006,-27],aux76)
sumgeq([M_00004_00006,-27],aux76)
weightedsumleq([-1,1],[M_00004_00004,M_00004_00005],aux77)
weightedsumgeq([-1,1],[M_00004_00004,M_00004_00005],aux77)
weightedsumleq([-1,1],[M_00004_00005,M_00004_00006],aux78)
weightedsumgeq([-1,1],[M_00004_00005,M_00004_00006],aux78)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00002],aux79)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00002],aux79)
weightedsumleq([-1,1],[M_00004_00002,M_00004_00005],aux80)
weightedsumgeq([-1,1],[M_00004_00002,M_00004_00005],aux80)
weightedsumleq([-1,1],[M_00004_00001,M_00004_00004],aux81)
weightedsumgeq([-1,1],[M_00004_00001,M_00004_00004],aux81)
weightedsumleq([-1,1],[M_00004_00002,27],aux82)
weightedsumgeq([-1,1],[M_00004_00002,27],aux82)
sumleq([M_00004_00004,-27],aux83)
sumgeq([M_00004_00004,-27],aux83)
weightedsumleq([-1,1],[M_00005_00002,M_00005_00003],aux84)
weightedsumgeq([-1,1],[M_00005_00002,M_00005_00003],aux84)
weightedsumleq([-1,1],[M_00005_00003,M_00005_00004],aux85)
weightedsumgeq([-1,1],[M_00005_00003,M_00005_00004],aux85)
weightedsumleq([1,-1],[M_00004_00006,M_00005_00002],aux86)
weightedsumgeq([1,-1],[M_00004_00006,M_00005_00002],aux86)
weightedsumleq([1,-1],[M_00004_00006,M_00005_00004],aux87)
weightedsumgeq([1,-1],[M_00004_00006,M_00005_00004],aux87)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00002],aux88)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00002],aux88)
weightedsumleq([-1,1],[M_00005_00001,M_00005_00004],aux89)
weightedsumgeq([-1,1],[M_00005_00001,M_00005_00004],aux89)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00002],aux90)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00002],aux90)
weightedsumleq([-1,1],[M_00006_00002,M_00006_00003],aux91)
weightedsumgeq([-1,1],[M_00006_00002,M_00006_00003],aux91)
weightedsumleq([-1,1],[M_00006_00001,M_00006_00004],aux92)
weightedsumgeq([-1,1],[M_00006_00001,M_00006_00004],aux92)
weightedsumleq([-1,1],[M_00006_00003,M_00006_00004],aux93)
weightedsumgeq([-1,1],[M_00006_00003,M_00006_00004],aux93)
weightedsumleq([-1,1],[M_00007_00002,M_00007_00003],aux94)
weightedsumgeq([-1,1],[M_00007_00002,M_00007_00003],aux94)
weightedsumleq([-1,1],[M_00007_00001,M_00007_00002],aux95)
weightedsumgeq([-1,1],[M_00007_00001,M_00007_00002],aux95)
weightedsumleq([1,-1],[M_00007_00003,M_00008_00001],aux96)
weightedsumgeq([1,-1],[M_00007_00003,M_00008_00001],aux96)
**EOF**
